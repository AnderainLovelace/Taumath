SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:43  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\adj.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           adj.c     1    // Adjunct of a matrix
           adj.c     2    
           adj.c     3    #include "stdafx.h"
           adj.c     4    #include "defs.h"
           adj.c     5    
           adj.c     6    void
           adj.c     7    eval_adj(void)
P   00000000              _eval_adj:                       ; function: eval_adj
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
           adj.c     8    {
           adj.c     9            push(cadr(p1));
    00000004 DE32                   MOV.L       L1078+4,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1067
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1069
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1067:                            
    00000014 935A                   MOV.W       L1078,R3   ; H'0570
    00000016 D22F                   MOV.L       L1078+8,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1069:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1066
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1068
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1070
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1068:                            
    00000030 934C                   MOV.W       L1078,R3   ; H'0570
    00000032 D228                   MOV.L       L1078+8,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1070:                            
    00000038 A004                   BRA         L1071
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1066:                            
    0000003C 9346                   MOV.W       L1078,R3   ; H'0570
    0000003E D225                   MOV.L       L1078+8,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1071:                            
    00000044 D324                   MOV.L       L1078+12,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:43  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           adj.c    10            eval();
    0000004A D224                   MOV.L       L1078+16,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
           adj.c    11            adj();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
           adj.c    12    }
           adj.c    13    
           adj.c    14    void
           adj.c    15    adj(void)
    00000054              _adj:                            ; function: adj
                                                           ; frame size=40
    00000054 2FE6                   MOV.L       R14,@-R15
    00000056 2FD6                   MOV.L       R13,@-R15
    00000058 2FC6                   MOV.L       R12,@-R15
    0000005A 2FB6                   MOV.L       R11,@-R15
    0000005C 2FA6                   MOV.L       R10,@-R15
    0000005E 2F96                   MOV.L       R9,@-R15
    00000060 2F86                   MOV.L       R8,@-R15
    00000062 4F22                   STS.L       PR,@-R15
    00000064 4F12                   STS.L       MACL,@-R15
           adj.c    16    {
           adj.c    17            int i, j, n;
           adj.c    18    
           adj.c    19            save();
    00000066 D31E                   MOV.L       L1078+20,R3; _save
    00000068 430B                   JSR         @R3
    0000006A 0009                   NOP
           adj.c    20    
           adj.c    21            p1 = pop();
    0000006C D81D                   MOV.L       L1078+24,R8; _pop
    0000006E DB18                   MOV.L       L1078+4,R11; _p1
    00000070 480B                   JSR         @R8
    00000072 0009                   NOP
    00000074 2B02                   MOV.L       R0,@R11
           adj.c    22    
           adj.c    23            if (istensor(p1) && p1->u.tensor->ndim == 2 && p1->u.tensor->dim[0] == p1->u.tensor->dim[1])
    00000076 8408                   MOV.B       @(8,R0),R0
    00000078 600C                   EXTU.B      R0,R0
    0000007A 8804                   CMP/EQ      #4,R0
    0000007C 8B0C                   BF          L1072
    0000007E 60B2                   MOV.L       @R11,R0
    00000080 6002                   MOV.L       @R0,R0
    00000082 6002                   MOV.L       @R0,R0
    00000084 8802                   CMP/EQ      #2,R0
    00000086 8B07                   BF          L1072
    00000088 62B2                   MOV.L       @R11,R2
    0000008A 6322                   MOV.L       @R2,R3
    0000008C 6123                   MOV         R2,R1
    0000008E 6212                   MOV.L       @R1,R2
    00000090 5331                   MOV.L       @(4,R3),R3
    00000092 5022                   MOV.L       @(8,R2),R0
    00000094 3300                   CMP/EQ      R0,R3
    00000096 8903                   BT          L1073
    00000098              L1072:                            
           adj.c    24                    ;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:43  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           adj.c    25            else
           adj.c    26                    stop("adj: square matrix expected");
    00000098 D413                   MOV.L       L1078+28,R4; L1063
    0000009A D314                   MOV.L       L1078+32,R3; _stop
    0000009C 430B                   JSR         @R3
    0000009E 0009                   NOP
    000000A0              L1073:                            
           adj.c    27    
           adj.c    28            n = p1->u.tensor->dim[0];
    000000A0 6EB2                   MOV.L       @R11,R14
    000000A2 6EE2                   MOV.L       @R14,R14
           adj.c    29    
           adj.c    30            p2 = alloc_tensor(n * n);
    000000A4 DA12                   MOV.L       L1078+36,R10; _p2
    000000A6 5EE1                   MOV.L       @(4,R14),R14
    000000A8 D312                   MOV.L       L1078+40,R3; _alloc_tensor
    000000AA 0EE7                   MUL.L       R14,R14
    000000AC 430B                   JSR         @R3
    000000AE 041A                   STS         MACL,R4
    000000B0 2A02                   MOV.L       R0,@R10
           adj.c    31    
           adj.c    32            p2->u.tensor->ndim = 2;
    000000B2 6203                   MOV         R0,R2
    000000B4 6322                   MOV.L       @R2,R3
    000000B6 E102                   MOV         #2,R1
    000000B8 2312                   MOV.L       R1,@R3
           adj.c    33            p2->u.tensor->dim[0] = n;
           adj.c    34            p2->u.tensor->dim[1] = n;
           adj.c    35    
           adj.c    36            for (i = 0; i < n; i++)
    000000BA E900                   MOV         #0,R9
    000000BC 63A2                   MOV.L       @R10,R3
    000000BE 6232                   MOV.L       @R3,R2
    000000C0 12E1                   MOV.L       R14,@(4,R2)
    000000C2 63A2                   MOV.L       @R10,R3
    000000C4 6232                   MOV.L       @R3,R2
    000000C6 12E2                   MOV.L       R14,@(8,R2)
    000000C8 A02F                   BRA         L1074
    000000CA 6C93                   MOV         R9,R12
    000000CC              L1078:                            
    000000CC 0570                   .DATA.W     H'0570
    000000CE 0000                   .DATA.W     0
    000000D0 <00000000>             .DATA.L     _p1
    000000D4 <00000000>             .DATA.L     _symtab
    000000D8 <00000000>             .DATA.L     _push
    000000DC <00000000>             .DATA.L     _eval
    000000E0 <00000000>             .DATA.L     _save
    000000E4 <00000000>             .DATA.L     _pop
    000000E8 <00000000>             .DATA.L     L1063
    000000EC <00000000>             .DATA.L     _stop
    000000F0 <00000000>             .DATA.L     _p2
    000000F4 <00000000>             .DATA.L     _alloc_tensor
    000000F8              L1075:                            
           adj.c    37                    for (j = 0; j < n; j++) {
    000000F8 4E15                   CMP/PL      R14
    000000FA 8F15                   BF/S        L1076
    000000FC 6D93                   MOV         R9,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:43  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000FE              L1077:                            
           adj.c    38                            cofactor(p1, n, i, j);
    000000FE 67D3                   MOV         R13,R7
    00000100 D312                   MOV.L       L1079+2,R3 ; _cofactor
    00000102 66C3                   MOV         R12,R6
    00000104 65E3                   MOV         R14,R5
    00000106 430B                   JSR         @R3
    00000108 64B2                   MOV.L       @R11,R4
           adj.c    39                            p2->u.tensor->elem[n * j + i] = pop(); /* transpose */
    0000010A 62A2                   MOV.L       @R10,R2
    0000010C 0DE7                   MUL.L       R14,R13
    0000010E 6322                   MOV.L       @R2,R3
    00000110 011A                   STS         MACL,R1
    00000112 31CC                   ADD         R12,R1
    00000114 4108                   SHLL2       R1
    00000116 7368                   ADD         #104,R3
    00000118 313C                   ADD         R3,R1
    0000011A 480B                   JSR         @R8
    0000011C 2F16                   MOV.L       R1,@-R15
    0000011E 7D01                   ADD         #1,R13
    00000120 62F6                   MOV.L       @R15+,R2
    00000122 3DE3                   CMP/GE      R14,R13
    00000124 8FEB                   BF/S        L1077
    00000126 2202                   MOV.L       R0,@R2
    00000128              L1076:                            
    00000128 7C01                   ADD         #1,R12
    0000012A              L1074:                            
    0000012A 3CE3                   CMP/GE      R14,R12
    0000012C 8BE4                   BF          L1075
           adj.c    40                    }
           adj.c    41    
           adj.c    42            push(p2);
    0000012E D308                   MOV.L       L1079+6,R3 ; _push
    00000130 430B                   JSR         @R3
    00000132 64A2                   MOV.L       @R10,R4
           adj.c    43    
           adj.c    44            restore();
    00000134 4F16                   LDS.L       @R15+,MACL
    00000136 4F26                   LDS.L       @R15+,PR
    00000138 D206                   MOV.L       L1079+10,R2; _restore
    0000013A 68F6                   MOV.L       @R15+,R8
    0000013C 69F6                   MOV.L       @R15+,R9
    0000013E 6AF6                   MOV.L       @R15+,R10
    00000140 6BF6                   MOV.L       @R15+,R11
    00000142 6CF6                   MOV.L       @R15+,R12
    00000144 6DF6                   MOV.L       @R15+,R13
    00000146 422B                   JMP         @R2
    00000148 6EF6                   MOV.L       @R15+,R14
    0000014A              L1079:                            
    0000014A 0000                   .DATA.W     0
    0000014C <00000000>             .DATA.L     _cofactor
    00000150 <00000000>             .DATA.L     _push
    00000154 <00000000>             .DATA.L     _restore
           adj.c    45    }
C   00000000              L1063:
    00000000 61646A3A20             .SDATA      "adj: square matrix expected"
             7371756172   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:43  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             65206D6174   
             7269782065   
             7870656374   
             6564         
    0000001B 00                     .DATA.B     H'00
























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:43  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       45



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000158 Byte(s)
CONSTANT SECTION (C):                               0000001C Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000174 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           11
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            28






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk28B8.tmp 

