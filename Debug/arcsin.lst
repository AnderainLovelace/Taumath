SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\arcsin.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        arcsin.c     1    #include "stdafx.h"
        arcsin.c     2    #include "defs.h"
        arcsin.c     3    
        arcsin.c     4    void
        arcsin.c     5    eval_arcsin(void)
P   00000000              _eval_arcsin:                    ; function: eval_arcsin
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
        arcsin.c     6    {
        arcsin.c     7            push(cadr(p1));
    00000004 DE35                   MOV.L       L1144+4,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1119
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1121
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1119:                            
    00000014 9360                   MOV.W       L1144,R3   ; H'0570
    00000016 D232                   MOV.L       L1144+8,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1121:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1118
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1120
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1122
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1120:                            
    00000030 9352                   MOV.W       L1144,R3   ; H'0570
    00000032 D22B                   MOV.L       L1144+8,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1122:                            
    00000038 A004                   BRA         L1123
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1118:                            
    0000003C 934C                   MOV.W       L1144,R3   ; H'0570
    0000003E D228                   MOV.L       L1144+8,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1123:                            
    00000044 D327                   MOV.L       L1144+12,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
        arcsin.c     8            eval();
    0000004A D227                   MOV.L       L1144+16,R2; _eval




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
        arcsin.c     9            arcsin();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
        arcsin.c    10    }
        arcsin.c    11    
        arcsin.c    12    void
        arcsin.c    13    arcsin(void)
    00000054              _arcsin:                         ; function: arcsin
                                                           ; frame size=44
    00000054 2FE6                   MOV.L       R14,@-R15
    00000056 2FD6                   MOV.L       R13,@-R15
    00000058 2FC6                   MOV.L       R12,@-R15
    0000005A 2FB6                   MOV.L       R11,@-R15
    0000005C 2FA6                   MOV.L       R10,@-R15
    0000005E 4F22                   STS.L       PR,@-R15
        arcsin.c    14    {
        arcsin.c    15            int n;
        arcsin.c    16            double d;
        arcsin.c    17    
        arcsin.c    18            save();
    00000060 D322                   MOV.L       L1144+20,R3; _save
    00000062 7FF8                   ADD         #-8,R15
    00000064 430B                   JSR         @R3
    00000066 0009                   NOP
        arcsin.c    19    
        arcsin.c    20            p1 = pop();
    00000068 DE1C                   MOV.L       L1144+4,R14; _p1
    0000006A D221                   MOV.L       L1144+24,R2; _pop
    0000006C 420B                   JSR         @R2
    0000006E 0009                   NOP
    00000070 2E02                   MOV.L       R0,@R14
    00000072 6403                   MOV         R0,R4
    00000074 DC1B                   MOV.L       L1144+12,R12; _push
    00000076 8448                   MOV.B       @(8,R4),R0
    00000078 2008                   TST         R0,R0
    0000007A 8B02                   BF          L1125
    0000007C 62E2                   MOV.L       @R14,R2
    0000007E A004                   BRA         L1126
    00000080 6322                   MOV.L       @R2,R3
    00000082              L1125:                            
    00000082 9229                   MOV.W       L1144,R2   ; H'0570
    00000084 D116                   MOV.L       L1144+8,R1 ; _symtab
    00000086 6312                   MOV.L       @R1,R3
    00000088 332C                   ADD         R2,R3
    0000008A              L1126:                            
    0000008A 9226                   MOV.W       L1144+2,R2 ; H'0498
    0000008C D114                   MOV.L       L1144+8,R1 ; _symtab
    0000008E 6012                   MOV.L       @R1,R0
    00000090 302C                   ADD         R2,R0
    00000092 3300                   CMP/EQ      R0,R3
    00000094 8B2E                   BF          L1124
        arcsin.c    21    
        arcsin.c    22            if (car(p1) == symbol(SIN)) {
        arcsin.c    23                    push(cadr(p1));
    00000096 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000098 8448                   MOV.B       @(8,R4),R0
    0000009A 2008                   TST         R0,R0
    0000009C 8B02                   BF          L1128
    0000009E 64E2                   MOV.L       @R14,R4
    000000A0 A004                   BRA         L1130
    000000A2 5441                   MOV.L       @(4,R4),R4
    000000A4              L1128:                            
    000000A4 9318                   MOV.W       L1144,R3   ; H'0570
    000000A6 D10E                   MOV.L       L1144+8,R1 ; _symtab
    000000A8 6412                   MOV.L       @R1,R4
    000000AA 343C                   ADD         R3,R4
    000000AC              L1130:                            
    000000AC 8448                   MOV.B       @(8,R4),R0
    000000AE 2008                   TST         R0,R0
    000000B0 8B0C                   BF          L1127
    000000B2 64E2                   MOV.L       @R14,R4
    000000B4 8448                   MOV.B       @(8,R4),R0
    000000B6 2008                   TST         R0,R0
    000000B8 8B02                   BF          L1129
    000000BA 64E2                   MOV.L       @R14,R4
    000000BC A004                   BRA         L1131
    000000BE 5441                   MOV.L       @(4,R4),R4
    000000C0              L1129:                            
    000000C0 930A                   MOV.W       L1144,R3   ; H'0570
    000000C2 D207                   MOV.L       L1144+8,R2 ; _symtab
    000000C4 6422                   MOV.L       @R2,R4
    000000C6 343C                   ADD         R3,R4
    000000C8              L1131:                            
    000000C8 A07A                   BRA         L1142
    000000CA 6442                   MOV.L       @R4,R4
    000000CC              L1127:                            
    000000CC 9304                   MOV.W       L1144,R3   ; H'0570
    000000CE D204                   MOV.L       L1144+8,R2 ; _symtab
    000000D0 6422                   MOV.L       @R2,R4
    000000D2 343C                   ADD         R3,R4
    000000D4 A074                   BRA         L1142
    000000D6 0009                   NOP
    000000D8              L1144:                            
    000000D8 0570                   .DATA.W     H'0570
    000000DA 0498                   .DATA.W     H'0498
    000000DC <00000000>             .DATA.L     _p1
    000000E0 <00000000>             .DATA.L     _symtab
    000000E4 <00000000>             .DATA.L     _push
    000000E8 <00000000>             .DATA.L     _eval
    000000EC <00000000>             .DATA.L     _save
    000000F0 <00000000>             .DATA.L     _pop
    000000F4              L1124:                            
        arcsin.c    24                    restore();
        arcsin.c    25                    return;
        arcsin.c    26            }
        arcsin.c    27    
        arcsin.c    28            if (isdouble(p1)) {
    000000F4 8448                   MOV.B       @(8,R4),R0
    000000F6 600C                   EXTU.B      R0,R0
    000000F8 8802                   CMP/EQ      #2,R0
    000000FA 8B1D                   BF          L1134
        arcsin.c    29                    errno = 0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000FC D341                   MOV.L       L1145,R3   ; __errno
    000000FE E200                   MOV         #0,R2
    00000100 2322                   MOV.L       R2,@R3
        arcsin.c    30                    d = asin(p1->u.d);
    00000102 61E2                   MOV.L       @R14,R1
    00000104 5211                   MOV.L       @(4,R1),R2
    00000106 2F26                   MOV.L       R2,@-R15
    00000108 6212                   MOV.L       @R1,R2
    0000010A 2F26                   MOV.L       R2,@-R15
    0000010C D23E                   MOV.L       L1145+4,R2 ; _asin
    0000010E 60F3                   MOV         R15,R0
    00000110 7008                   ADD         #8,R0
    00000112 420B                   JSR         @R2
    00000114 2F06                   MOV.L       R0,@-R15
        arcsin.c    31                    if (errno)
    00000116 D03B                   MOV.L       L1145,R0   ; __errno
    00000118 6302                   MOV.L       @R0,R3
    0000011A 2338                   TST         R3,R3
    0000011C 8D04                   BT/S        L1135
    0000011E 7F0C                   ADD         #12,R15
        arcsin.c    32                            stop("arcsin function argument is not in the interval [-1,1]");
    00000120 D43A                   MOV.L       L1145+8,R4 ; L1064
    00000122 D33B                   MOV.L       L1145+12,R3; _stop
    00000124 430B                   JSR         @R3
    00000126 0009                   NOP
    00000128              L1135:                            
        arcsin.c    33                    push_double(d);
    00000128 52F1                   MOV.L       @(4,R15),R2
    0000012A 2F26                   MOV.L       R2,@-R15
    0000012C 52F1                   MOV.L       @(4,R15),R2
    0000012E D339                   MOV.L       L1145+16,R3; _push_double
    00000130 430B                   JSR         @R3
    00000132 2F26                   MOV.L       R2,@-R15
    00000134 A05D                   BRA         L1079
    00000136 7F08                   ADD         #8,R15
    00000138              L1134:                            
        arcsin.c    34                    restore();
        arcsin.c    35                    return;
        arcsin.c    36            }
        arcsin.c    37    
        arcsin.c    38            // if p1 == 1/sqrt(2) then return 1/4*pi (45 degrees)
        arcsin.c    39    
        arcsin.c    40            if (isoneoversqrttwo(p1)) {
    00000138 DA37                   MOV.L       L1145+20,R10; _multiply
    0000013A DB38                   MOV.L       L1145+24,R11; _push_symbol
    0000013C DD38                   MOV.L       L1145+28,R13; _push_rational
    0000013E D239                   MOV.L       L1145+32,R2; _isoneoversqrttwo
    00000140 420B                   JSR         @R2
    00000142 0009                   NOP
    00000144 2008                   TST         R0,R0
    00000146 8902                   BT          L1136
        arcsin.c    41                    push_rational(1, 4);
    00000148 E504                   MOV         #4,R5
    0000014A A007                   BRA         L1140
    0000014C E401                   MOV         #1,R4
    0000014E              L1136:                            
        arcsin.c    42                    push_symbol(PI);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        arcsin.c    43                    multiply();
        arcsin.c    44                    restore();
        arcsin.c    45                    return;
        arcsin.c    46            }
        arcsin.c    47    
        arcsin.c    48            // if p1 == -1/sqrt(2) then return -1/4*pi (-45 degrees)
        arcsin.c    49    
        arcsin.c    50            if (isminusoneoversqrttwo(p1)) {
    0000014E D336                   MOV.L       L1145+36,R3; _isminusoneoversqrttwo
    00000150 430B                   JSR         @R3
    00000152 64E2                   MOV.L       @R14,R4
    00000154 2008                   TST         R0,R0
    00000156 8905                   BT          L1137
        arcsin.c    51                    push_rational(-1, 4);
    00000158 E504                   MOV         #4,R5
    0000015A E4FF                   MOV         #-1,R4
    0000015C              L1140:                            
    0000015C 4D0B                   JSR         @R13
    0000015E 0009                   NOP
    00000160 A03A                   BRA         L1143
    00000162 0009                   NOP
    00000164              L1137:                            
    00000164 64E2                   MOV.L       @R14,R4
    00000166 8448                   MOV.B       @(8,R4),R0
    00000168 600C                   EXTU.B      R0,R0
    0000016A 8801                   CMP/EQ      #1,R0
    0000016C 8908                   BT          L1138
        arcsin.c    52                    push_symbol(PI);
        arcsin.c    53                    multiply();
        arcsin.c    54                    restore();
        arcsin.c    55                    return;
        arcsin.c    56            }
        arcsin.c    57    
        arcsin.c    58            if (!isrational(p1)) {
        arcsin.c    59                    push_symbol(ARCSIN);
    0000016E 4B0B                   JSR         @R11
    00000170 E406                   MOV         #6,R4
        arcsin.c    60                    push(p1);
    00000172 4C0B                   JSR         @R12
    00000174 64E2                   MOV.L       @R14,R4
        arcsin.c    61                    list(2);
    00000176 D22D                   MOV.L       L1145+40,R2; _list
    00000178 420B                   JSR         @R2
    0000017A E402                   MOV         #2,R4
    0000017C A039                   BRA         L1079
    0000017E 0009                   NOP
    00000180              L1138:                            
        arcsin.c    62                    restore();
        arcsin.c    63                    return;
        arcsin.c    64            }
        arcsin.c    65    
        arcsin.c    66            push(p1);
    00000180 4C0B                   JSR         @R12
    00000182 0009                   NOP
        arcsin.c    67            push_integer(2);
    00000184 D22A                   MOV.L       L1145+44,R2; _push_integer
    00000186 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000188 E402                   MOV         #2,R4
        arcsin.c    68            multiply();
    0000018A 4A0B                   JSR         @R10
    0000018C 0009                   NOP
        arcsin.c    69            n = pop_integer();
    0000018E D329                   MOV.L       L1145+48,R3; _pop_integer
    00000190 430B                   JSR         @R3
    00000192 0009                   NOP
        arcsin.c    70    
        arcsin.c    71            switch (n) {
    00000194 88FE                   CMP/EQ      #-2,R0
    00000196 8D0A                   BT/S        L1091
    00000198 6403                   MOV         R0,R4
    0000019A 88FF                   CMP/EQ      #-1,R0
    0000019C 8909                   BT          L1092
    0000019E 8800                   CMP/EQ      #0,R0
    000001A0 890C                   BT          L1093
    000001A2 8801                   CMP/EQ      #1,R0
    000001A4 8910                   BT          L1094
    000001A6 8802                   CMP/EQ      #2,R0
    000001A8 8913                   BT          L1095
    000001AA A01B                   BRA         L1096
    000001AC 0009                   NOP
    000001AE              L1091:                           ; case label 
    000001AE A001                   BRA         L1141
        arcsin.c    72    
        arcsin.c    73            case -2:
        arcsin.c    74                    push_rational(-1, 2);
    000001B0 E502                   MOV         #2,R5
    000001B2              L1092:                           ; case label 
        arcsin.c    75                    push_symbol(PI);
        arcsin.c    76                    multiply();
        arcsin.c    77                    break;
        arcsin.c    78    
        arcsin.c    79            case -1:
        arcsin.c    80                    push_rational(-1, 6);
    000001B2 E506                   MOV         #6,R5
    000001B4              L1141:                            
    000001B4 4D0B                   JSR         @R13
    000001B6 E4FF                   MOV         #-1,R4
    000001B8 A00E                   BRA         L1143
    000001BA 0009                   NOP
    000001BC              L1093:                           ; case label 
        arcsin.c    81                    push_symbol(PI);
        arcsin.c    82                    multiply();
        arcsin.c    83                    break;
        arcsin.c    84    
        arcsin.c    85            case 0:
        arcsin.c    86                    push(zero);
    000001BC D31E                   MOV.L       L1145+52,R3; _zero
    000001BE 6432                   MOV.L       @R3,R4
        arcsin.c    87                    break;
    000001C0              L1142:                            
    000001C0 4C0B                   JSR         @R12
    000001C2 0009                   NOP
    000001C4 A015                   BRA         L1079
    000001C6 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C8              L1094:                           ; case label 
        arcsin.c    88    
        arcsin.c    89            case 1:
        arcsin.c    90                    push_rational(1, 6);
    000001C8 E506                   MOV         #6,R5
    000001CA 4D0B                   JSR         @R13
    000001CC E401                   MOV         #1,R4
    000001CE A003                   BRA         L1143
    000001D0 0009                   NOP
    000001D2              L1095:                           ; case label 
        arcsin.c    91                    push_symbol(PI);
        arcsin.c    92                    multiply();
        arcsin.c    93                    break;
        arcsin.c    94    
        arcsin.c    95            case 2:
        arcsin.c    96                    push_rational(1, 2);
    000001D2 E502                   MOV         #2,R5
    000001D4 4D0B                   JSR         @R13
    000001D6 E401                   MOV         #1,R4
    000001D8              L1143:                            
        arcsin.c    97                    push_symbol(PI);
    000001D8 4B0B                   JSR         @R11
    000001DA E47F                   MOV         #127,R4
        arcsin.c    98                    multiply();
    000001DC 4A0B                   JSR         @R10
    000001DE 0009                   NOP
        arcsin.c    99                    break;
    000001E0 A007                   BRA         L1079
    000001E2 0009                   NOP
    000001E4              L1096:                           ; default label 
        arcsin.c   100    
        arcsin.c   101            default:
        arcsin.c   102                    push_symbol(ARCSIN);
    000001E4 4B0B                   JSR         @R11
    000001E6 E406                   MOV         #6,R4
        arcsin.c   103                    push(p1);
    000001E8 4C0B                   JSR         @R12
    000001EA 64E2                   MOV.L       @R14,R4
        arcsin.c   104                    list(2);
    000001EC D20F                   MOV.L       L1145+40,R2; _list
    000001EE 420B                   JSR         @R2
    000001F0 E402                   MOV         #2,R4
    000001F2              L1079:
        arcsin.c   105                    break;
        arcsin.c   106            }
        arcsin.c   107    
        arcsin.c   108            restore();
    000001F2 7F08                   ADD         #8,R15
    000001F4 D211                   MOV.L       L1145+56,R2; _restore
    000001F6 4F26                   LDS.L       @R15+,PR
    000001F8 6AF6                   MOV.L       @R15+,R10
    000001FA 6BF6                   MOV.L       @R15+,R11
    000001FC 6CF6                   MOV.L       @R15+,R12
    000001FE 6DF6                   MOV.L       @R15+,R13
    00000200 422B                   JMP         @R2
    00000202 6EF6                   MOV.L       @R15+,R14
    00000204              L1145:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000204 <00000000>             .DATA.L     __errno
    00000208 <00000000>             .DATA.L     _asin
    0000020C <00000000>             .DATA.L     L1064
    00000210 <00000000>             .DATA.L     _stop
    00000214 <00000000>             .DATA.L     _push_double
    00000218 <00000000>             .DATA.L     _multiply
    0000021C <00000000>             .DATA.L     _push_symbol
    00000220 <00000000>             .DATA.L     _push_rational
    00000224 <00000000>             .DATA.L     _isoneoversqrttwo
    00000228 <00000000>             .DATA.L     _isminusoneoversqrttwo
    0000022C <00000000>             .DATA.L     _list
    00000230 <00000000>             .DATA.L     _push_integer
    00000234 <00000000>             .DATA.L     _pop_integer
    00000238 <00000000>             .DATA.L     _zero
    0000023C <00000000>             .DATA.L     _restore
        arcsin.c   109    }
        arcsin.c   110    
C   00000000              L1064:
    00000000 6172637369             .SDATA      "arcsin function argument is not in the interval [-1,1]"
             6E2066756E   
             6374696F6E   
             2061726775   
             6D656E7420   
             6973206E6F   
             7420696E20   
             7468652069   
             6E74657276   
             616C205B2D   
             312C315D     
    00000036 00                     .DATA.B     H'00































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:45  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      110



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000240 Byte(s)
CONSTANT SECTION (C):                               00000037 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000277 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           20
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            55






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk2EA6.tmp 

