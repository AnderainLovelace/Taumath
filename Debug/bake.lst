SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\bake.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          bake.c     1    // pretty print
          bake.c     2    
          bake.c     3    #include "stdafx.h"
          bake.c     4    #include "defs.h"
          bake.c     5    
          bake.c     6    void
          bake.c     7    bake(void)
P   00000000              _bake:                           ; function: bake
                                                           ; frame size=36
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A 2F96                   MOV.L       R9,@-R15
    0000000C 2F86                   MOV.L       R8,@-R15
    0000000E 4F22                   STS.L       PR,@-R15
          bake.c     8    {
          bake.c     9            int h, s, t, x, y, z;
          bake.c    10    
          bake.c    11            expanding++;
    00000010 D32F                   MOV.L       L1189+10,R3; _expanding
    00000012 7FFC                   ADD         #-4,R15
    00000014 6232                   MOV.L       @R3,R2
    00000016 7201                   ADD         #1,R2
    00000018 2322                   MOV.L       R2,@R3
          bake.c    12    
          bake.c    13            save();
    0000001A D32E                   MOV.L       L1189+14,R3; _save
    0000001C 430B                   JSR         @R3
    0000001E 0009                   NOP
          bake.c    14    
          bake.c    15            p1 = pop();
    00000020 DE2D                   MOV.L       L1189+18,R14; _p1
    00000022 D22E                   MOV.L       L1189+22,R2; _pop
    00000024 420B                   JSR         @R2
    00000026 0009                   NOP
    00000028 2E02                   MOV.L       R0,@R14
          bake.c    16    
          bake.c    17            s = ispoly(p1, symbol(SYMBOL_S));
    0000002A D82D                   MOV.L       L1189+26,R8; _ispoly
    0000002C DA2D                   MOV.L       L1189+30,R10; _symtab
    0000002E 934A                   MOV.W       L1189,R3   ; H'0660
    00000030 65A2                   MOV.L       @R10,R5
    00000032 353C                   ADD         R3,R5
    00000034 480B                   JSR         @R8
    00000036 6403                   MOV         R0,R4
          bake.c    18            t = ispoly(p1, symbol(SYMBOL_T));
    00000038 9346                   MOV.W       L1189+2,R3 ; H'066C
    0000003A 6D03                   MOV         R0,R13
    0000003C 65A2                   MOV.L       @R10,R5
    0000003E 353C                   ADD         R3,R5
    00000040 480B                   JSR         @R8
    00000042 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          bake.c    19            x = ispoly(p1, symbol(SYMBOL_X));
    00000044 9341                   MOV.W       L1189+4,R3 ; H'0678
    00000046 6903                   MOV         R0,R9
    00000048 65A2                   MOV.L       @R10,R5
    0000004A 353C                   ADD         R3,R5
    0000004C 480B                   JSR         @R8
    0000004E 64E2                   MOV.L       @R14,R4
          bake.c    20            y = ispoly(p1, symbol(SYMBOL_Y));
    00000050 933C                   MOV.W       L1189+6,R3 ; H'0684
    00000052 6C03                   MOV         R0,R12
    00000054 65A2                   MOV.L       @R10,R5
    00000056 353C                   ADD         R3,R5
    00000058 480B                   JSR         @R8
    0000005A 64E2                   MOV.L       @R14,R4
          bake.c    21            z = ispoly(p1, symbol(SYMBOL_Z));
    0000005C 9337                   MOV.W       L1189+8,R3 ; H'0690
    0000005E 6B03                   MOV         R0,R11
    00000060 65A2                   MOV.L       @R10,R5
    00000062 353C                   ADD         R3,R5
    00000064 480B                   JSR         @R8
    00000066 64E2                   MOV.L       @R14,R4
    00000068 D61F                   MOV.L       L1189+34,R6; _p2
    0000006A 6403                   MOV         R0,R4
    0000006C 60D3                   MOV         R13,R0
    0000006E 8801                   CMP/EQ      #1,R0
    00000070 8F0B                   BF/S        L1115
    00000072 65A2                   MOV.L       @R10,R5
    00000074 2998                   TST         R9,R9
    00000076 8B08                   BF          L1115
    00000078 2CC8                   TST         R12,R12
    0000007A 8B06                   BF          L1115
    0000007C 2BB8                   TST         R11,R11
    0000007E 8B04                   BF          L1115
    00000080 2448                   TST         R4,R4
    00000082 8B02                   BF          L1115
          bake.c    22    
          bake.c    23            if (s == 1 && t == 0 && x == 0 && y == 0 && z == 0) {
          bake.c    24                    p2 = symbol(SYMBOL_S);
    00000084 931F                   MOV.W       L1189,R3   ; H'0660
    00000086 A00D                   BRA         L1185
    00000088 353C                   ADD         R3,R5
    0000008A              L1115:                            
          bake.c    25                    bake_poly();
          bake.c    26            } else if (s == 0 && t == 1 && x == 0 && y == 0 && z == 0) {
    0000008A 2DD8                   TST         R13,R13
    0000008C 8B4F                   BF          L1123
    0000008E 6093                   MOV         R9,R0
    00000090 8801                   CMP/EQ      #1,R0
    00000092 8B09                   BF          L1117
    00000094 2CC8                   TST         R12,R12
    00000096 8B07                   BF          L1117
    00000098 2BB8                   TST         R11,R11
    0000009A 8B05                   BF          L1117
    0000009C 2448                   TST         R4,R4
    0000009E 8B03                   BF          L1117
          bake.c    27                    p2 = symbol(SYMBOL_T);
    000000A0 9212                   MOV.W       L1189+2,R2 ; H'066C




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000A2 352C                   ADD         R2,R5
    000000A4              L1185:                            
    000000A4 A03F                   BRA         L1104
    000000A6 2652                   MOV.L       R5,@R6
    000000A8              L1117:                            
          bake.c    28                    bake_poly();
          bake.c    29            } else if (s == 0 && t == 0 && x == 1 && y == 0 && z == 0) {
    000000A8 2DD8                   TST         R13,R13
    000000AA 8B40                   BF          L1123
    000000AC 2998                   TST         R9,R9
    000000AE 8B3E                   BF          L1123
    000000B0 60C3                   MOV         R12,R0
    000000B2 8801                   CMP/EQ      #1,R0
    000000B4 8B1A                   BF          L1119
    000000B6 2BB8                   TST         R11,R11
    000000B8 8B18                   BF          L1119
    000000BA 2448                   TST         R4,R4
    000000BC 8B16                   BF          L1119
          bake.c    30                    p2 = symbol(SYMBOL_X);
    000000BE 9204                   MOV.W       L1189+4,R2 ; H'0678
    000000C0 352C                   ADD         R2,R5
    000000C2 A030                   BRA         L1104
    000000C4 2652                   MOV.L       R5,@R6
    000000C6              L1189:                            
    000000C6 0660                   .DATA.W     H'0660
    000000C8 066C                   .DATA.W     H'066C
    000000CA 0678                   .DATA.W     H'0678
    000000CC 0684                   .DATA.W     H'0684
    000000CE 0690                   .DATA.W     H'0690
    000000D0 <00000000>             .DATA.L     _expanding
    000000D4 <00000000>             .DATA.L     _save
    000000D8 <00000000>             .DATA.L     _p1
    000000DC <00000000>             .DATA.L     _pop
    000000E0 <00000000>             .DATA.L     _ispoly
    000000E4 <00000000>             .DATA.L     _symtab
    000000E8 <00000000>             .DATA.L     _p2
    000000EC              L1119:                            
          bake.c    31                    bake_poly();
          bake.c    32            } else if (s == 0 && t == 0 && x == 0 && y == 1 && z == 0) {
    000000EC 2DD8                   TST         R13,R13
    000000EE 8B1E                   BF          L1123
    000000F0 2998                   TST         R9,R9
    000000F2 8B1C                   BF          L1123
    000000F4 2CC8                   TST         R12,R12
    000000F6 8B1A                   BF          L1123
    000000F8 60B3                   MOV         R11,R0
    000000FA 8801                   CMP/EQ      #1,R0
    000000FC 8B05                   BF          L1121
    000000FE 2448                   TST         R4,R4
    00000100 8B03                   BF          L1121
          bake.c    33                    p2 = symbol(SYMBOL_Y);
    00000102 934C                   MOV.W       L1190,R3   ; H'0684
    00000104 353C                   ADD         R3,R5
    00000106 A00E                   BRA         L1104
    00000108 2652                   MOV.L       R5,@R6
    0000010A              L1121:                            
          bake.c    34                    bake_poly();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          bake.c    35            } else if (s == 0 && t == 0 && x == 0 && y == 0 && z == 1) {
    0000010A 2DD8                   TST         R13,R13
    0000010C 8B0F                   BF          L1123
    0000010E 2998                   TST         R9,R9
    00000110 8B0D                   BF          L1123
    00000112 2CC8                   TST         R12,R12
    00000114 8B0B                   BF          L1123
    00000116 2BB8                   TST         R11,R11
    00000118 8B09                   BF          L1123
    0000011A 6043                   MOV         R4,R0
    0000011C 8801                   CMP/EQ      #1,R0
    0000011E 8B06                   BF          L1123
          bake.c    36                    p2 = symbol(SYMBOL_Z);
    00000120 933E                   MOV.W       L1190+2,R3 ; H'0690
    00000122 353C                   ADD         R3,R5
    00000124 2652                   MOV.L       R5,@R6
    00000126              L1104:
          bake.c    37                    bake_poly();
    00000126 B0ED                   BSR         _bake_poly
    00000128 0009                   NOP
    0000012A A054                   BRA         L1116
    0000012C 0009                   NOP
    0000012E              L1123:                            
    0000012E DD1D                   MOV.L       L1190+6,R13; _push
    00000130 64E2                   MOV.L       @R14,R4
    00000132 8448                   MOV.B       @(8,R4),R0
    00000134 2008                   TST         R0,R0
    00000136 8B4C                   BF          L1125
          bake.c    38            } else if (iscons(p1)) {
          bake.c    39                    h = tos;
    00000138 D31B                   MOV.L       L1190+10,R3; _tos
    0000013A 6232                   MOV.L       @R3,R2
    0000013C 2F22                   MOV.L       R2,@R15
          bake.c    40                    push(car(p1));
    0000013E 64E2                   MOV.L       @R14,R4
    00000140 8448                   MOV.B       @(8,R4),R0
    00000142 2008                   TST         R0,R0
    00000144 8B02                   BF          L1126
    00000146 64E2                   MOV.L       @R14,R4
    00000148 A004                   BRA         L1127
    0000014A 6442                   MOV.L       @R4,R4
    0000014C              L1126:                            
    0000014C 9229                   MOV.W       L1190+4,R2 ; H'0570
    0000014E D117                   MOV.L       L1190+14,R1; _symtab
    00000150 6412                   MOV.L       @R1,R4
    00000152 342C                   ADD         R2,R4
    00000154              L1127:                            
    00000154 4D0B                   JSR         @R13
    00000156 0009                   NOP
          bake.c    41                    p1 = cdr(p1);
    00000158 63E2                   MOV.L       @R14,R3
    0000015A 8438                   MOV.B       @(8,R3),R0
    0000015C 2008                   TST         R0,R0
    0000015E 8B02                   BF          L1128
    00000160 62E2                   MOV.L       @R14,R2
    00000162 A029                   BRA         L1186
    00000164 5221                   MOV.L       @(4,R2),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000166              L1128:                            
    00000166 931C                   MOV.W       L1190+4,R3 ; H'0570
    00000168 D110                   MOV.L       L1190+14,R1; _symtab
    0000016A 6212                   MOV.L       @R1,R2
    0000016C 323C                   ADD         R3,R2
          bake.c    42                    while (iscons(p1)) {
    0000016E A023                   BRA         L1186
    00000170 0009                   NOP
    00000172              L1131:                            
          bake.c    43                            push(car(p1));
    00000172 64E2                   MOV.L       @R14,R4
    00000174 8448                   MOV.B       @(8,R4),R0
    00000176 2008                   TST         R0,R0
    00000178 8B02                   BF          L1132
    0000017A 64E2                   MOV.L       @R14,R4
    0000017C A004                   BRA         L1133
    0000017E 6442                   MOV.L       @R4,R4
    00000180              L1132:                            
    00000180 930F                   MOV.W       L1190+4,R3 ; H'0570
    00000182 D20A                   MOV.L       L1190+14,R2; _symtab
    00000184 6422                   MOV.L       @R2,R4
    00000186 343C                   ADD         R3,R4
    00000188              L1133:                            
    00000188 4D0B                   JSR         @R13
    0000018A 0009                   NOP
          bake.c    44                            bake();
    0000018C BF38                   BSR         _bake
    0000018E 0009                   NOP
          bake.c    45                            p1 = cdr(p1);
    00000190 63E2                   MOV.L       @R14,R3
    00000192 8438                   MOV.B       @(8,R3),R0
    00000194 2008                   TST         R0,R0
    00000196 8B0B                   BF          L1134
    00000198 62E2                   MOV.L       @R14,R2
    0000019A A00D                   BRA         L1186
    0000019C 5221                   MOV.L       @(4,R2),R2
    0000019E              L1190:                            
    0000019E 0684                   .DATA.W     H'0684
    000001A0 0690                   .DATA.W     H'0690
    000001A2 0570                   .DATA.W     H'0570
    000001A4 <00000000>             .DATA.L     _push
    000001A8 <00000000>             .DATA.L     _tos
    000001AC <00000000>             .DATA.L     _symtab
    000001B0              L1134:                            
    000001B0 9377                   MOV.W       L1191,R3   ; H'0570
    000001B2 D13C                   MOV.L       L1191+2,R1 ; _symtab
    000001B4 6212                   MOV.L       @R1,R2
    000001B6 323C                   ADD         R3,R2
    000001B8              L1186:                            
    000001B8 2E22                   MOV.L       R2,@R14
    000001BA 6323                   MOV         R2,R3
    000001BC 8438                   MOV.B       @(8,R3),R0
    000001BE 2008                   TST         R0,R0
    000001C0 89D7                   BT          L1131
          bake.c    46                    }
          bake.c    47                    list(tos - h);
    000001C2 63F2                   MOV.L       @R15,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C4 D238                   MOV.L       L1191+6,R2 ; _tos
    000001C6 6422                   MOV.L       @R2,R4
    000001C8 D138                   MOV.L       L1191+10,R1; _list
    000001CA 410B                   JSR         @R1
    000001CC 3438                   SUB         R3,R4
    000001CE A002                   BRA         L1116
    000001D0 0009                   NOP
    000001D2              L1125:                            
          bake.c    48            } else
          bake.c    49                    push(p1);
    000001D2 4D0B                   JSR         @R13
    000001D4 0009                   NOP
    000001D6              L1116:                            
          bake.c    50    
          bake.c    51            restore();
    000001D6 D236                   MOV.L       L1191+14,R2; _restore
    000001D8 420B                   JSR         @R2
    000001DA 0009                   NOP
          bake.c    52    
          bake.c    53            expanding--;
    000001DC D335                   MOV.L       L1191+18,R3; _expanding
    000001DE 6232                   MOV.L       @R3,R2
    000001E0 72FF                   ADD         #-1,R2
    000001E2 2322                   MOV.L       R2,@R3
          bake.c    54    }
    000001E4 7F04                   ADD         #4,R15
    000001E6 4F26                   LDS.L       @R15+,PR
    000001E8 68F6                   MOV.L       @R15+,R8
    000001EA 69F6                   MOV.L       @R15+,R9
    000001EC 6AF6                   MOV.L       @R15+,R10
    000001EE 6BF6                   MOV.L       @R15+,R11
    000001F0 6CF6                   MOV.L       @R15+,R12
    000001F2 6DF6                   MOV.L       @R15+,R13
    000001F4 000B                   RTS
    000001F6 6EF6                   MOV.L       @R15+,R14
          bake.c    55    
          bake.c    56    void
          bake.c    57    polyform(void)
    000001F8              _polyform:                       ; function: polyform
                                                           ; frame size=20
    000001F8 2FE6                   MOV.L       R14,@-R15
    000001FA 2FD6                   MOV.L       R13,@-R15
    000001FC 2FC6                   MOV.L       R12,@-R15
    000001FE 4F22                   STS.L       PR,@-R15
          bake.c    58    {
          bake.c    59            int h;
          bake.c    60    
          bake.c    61            save();
    00000200 D32D                   MOV.L       L1191+22,R3; _save
    00000202 7FFC                   ADD         #-4,R15
    00000204 430B                   JSR         @R3
    00000206 0009                   NOP
          bake.c    62    
          bake.c    63            p2 = pop();
    00000208 DC2C                   MOV.L       L1191+26,R12; _p2
    0000020A D22D                   MOV.L       L1191+30,R2; _pop
    0000020C 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000020E 0009                   NOP
          bake.c    64            p1 = pop();
    00000210 DE2C                   MOV.L       L1191+34,R14; _p1
    00000212 D32B                   MOV.L       L1191+30,R3; _pop
    00000214 430B                   JSR         @R3
    00000216 2C02                   MOV.L       R0,@R12
    00000218 2E02                   MOV.L       R0,@R14
          bake.c    65    
          bake.c    66            if (ispoly(p1, p2))
    0000021A 65C2                   MOV.L       @R12,R5
    0000021C D22A                   MOV.L       L1191+38,R2; _ispoly
    0000021E 420B                   JSR         @R2
    00000220 6403                   MOV         R0,R4
    00000222 2008                   TST         R0,R0
    00000224 8903                   BT          L1137
          bake.c    67                    bake_poly();
    00000226 B06D                   BSR         _bake_poly
    00000228 0009                   NOP
    0000022A A064                   BRA         L1138
    0000022C 0009                   NOP
    0000022E              L1137:                            
    0000022E DD27                   MOV.L       L1191+42,R13; _push
    00000230 64E2                   MOV.L       @R14,R4
    00000232 8448                   MOV.B       @(8,R4),R0
    00000234 2008                   TST         R0,R0
    00000236 8B5C                   BF          L1139
          bake.c    68            else if (iscons(p1)) {
          bake.c    69                    h = tos;
    00000238 D31B                   MOV.L       L1191+6,R3 ; _tos
    0000023A 6232                   MOV.L       @R3,R2
    0000023C 2F22                   MOV.L       R2,@R15
          bake.c    70                    push(car(p1));
    0000023E 64E2                   MOV.L       @R14,R4
    00000240 8448                   MOV.B       @(8,R4),R0
    00000242 2008                   TST         R0,R0
    00000244 8B02                   BF          L1140
    00000246 64E2                   MOV.L       @R14,R4
    00000248 A004                   BRA         L1141
    0000024A 6442                   MOV.L       @R4,R4
    0000024C              L1140:                            
    0000024C 9229                   MOV.W       L1191,R2   ; H'0570
    0000024E D115                   MOV.L       L1191+2,R1 ; _symtab
    00000250 6412                   MOV.L       @R1,R4
    00000252 342C                   ADD         R2,R4
    00000254              L1141:                            
    00000254 4D0B                   JSR         @R13
    00000256 0009                   NOP
          bake.c    71                    p1 = cdr(p1);
    00000258 63E2                   MOV.L       @R14,R3
    0000025A 8438                   MOV.B       @(8,R3),R0
    0000025C 2008                   TST         R0,R0
    0000025E 8B02                   BF          L1142
    00000260 62E2                   MOV.L       @R14,R2
    00000262 A039                   BRA         L1187
    00000264 5221                   MOV.L       @(4,R2),R2
    00000266              L1142:                            
    00000266 931C                   MOV.W       L1191,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000268 D10E                   MOV.L       L1191+2,R1 ; _symtab
    0000026A 6212                   MOV.L       @R1,R2
    0000026C 323C                   ADD         R3,R2
          bake.c    72                    while (iscons(p1)) {
    0000026E A033                   BRA         L1187
    00000270 0009                   NOP
    00000272              L1145:                            
          bake.c    73                            push(car(p1));
    00000272 64E2                   MOV.L       @R14,R4
    00000274 8448                   MOV.B       @(8,R4),R0
    00000276 2008                   TST         R0,R0
    00000278 8B02                   BF          L1146
    0000027A 64E2                   MOV.L       @R14,R4
    0000027C A004                   BRA         L1147
    0000027E 6442                   MOV.L       @R4,R4
    00000280              L1146:                            
    00000280 930F                   MOV.W       L1191,R3   ; H'0570
    00000282 D208                   MOV.L       L1191+2,R2 ; _symtab
    00000284 6422                   MOV.L       @R2,R4
    00000286 343C                   ADD         R3,R4
    00000288              L1147:                            
    00000288 4D0B                   JSR         @R13
    0000028A 0009                   NOP
          bake.c    74                            push(p2);
    0000028C 4D0B                   JSR         @R13
    0000028E 64C2                   MOV.L       @R12,R4
          bake.c    75                            polyform();
    00000290 BFB2                   BSR         _polyform
    00000292 0009                   NOP
          bake.c    76                            p1 = cdr(p1);
    00000294 63E2                   MOV.L       @R14,R3
    00000296 8438                   MOV.B       @(8,R3),R0
    00000298 2008                   TST         R0,R0
    0000029A 8B19                   BF          L1148
    0000029C 62E2                   MOV.L       @R14,R2
    0000029E A01B                   BRA         L1187
    000002A0 5221                   MOV.L       @(4,R2),R2
    000002A2              L1191:                            
    000002A2 0570                   .DATA.W     H'0570
    000002A4 <00000000>             .DATA.L     _symtab
    000002A8 <00000000>             .DATA.L     _tos
    000002AC <00000000>             .DATA.L     _list
    000002B0 <00000000>             .DATA.L     _restore
    000002B4 <00000000>             .DATA.L     _expanding
    000002B8 <00000000>             .DATA.L     _save
    000002BC <00000000>             .DATA.L     _p2
    000002C0 <00000000>             .DATA.L     _pop
    000002C4 <00000000>             .DATA.L     _p1
    000002C8 <00000000>             .DATA.L     _ispoly
    000002CC <00000000>             .DATA.L     _push
    000002D0              L1148:                            
    000002D0 9380                   MOV.W       L1192,R3   ; H'0570
    000002D2 D141                   MOV.L       L1192+4,R1 ; _symtab
    000002D4 6212                   MOV.L       @R1,R2
    000002D6 323C                   ADD         R3,R2
    000002D8              L1187:                            
    000002D8 2E22                   MOV.L       R2,@R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002DA 6323                   MOV         R2,R3
    000002DC 8438                   MOV.B       @(8,R3),R0
    000002DE 2008                   TST         R0,R0
    000002E0 89C7                   BT          L1145
          bake.c    77                    }
          bake.c    78                    list(tos - h);
    000002E2 63F2                   MOV.L       @R15,R3
    000002E4 D23D                   MOV.L       L1192+8,R2 ; _tos
    000002E6 6422                   MOV.L       @R2,R4
    000002E8 D13D                   MOV.L       L1192+12,R1; _list
    000002EA 410B                   JSR         @R1
    000002EC 3438                   SUB         R3,R4
    000002EE A002                   BRA         L1138
    000002F0 0009                   NOP
    000002F2              L1139:                            
          bake.c    79            } else
          bake.c    80                    push(p1);
    000002F2 4D0B                   JSR         @R13
    000002F4 0009                   NOP
    000002F6              L1138:                            
          bake.c    81    
          bake.c    82            restore();
    000002F6 7F04                   ADD         #4,R15
    000002F8 D23A                   MOV.L       L1192+16,R2; _restore
    000002FA 4F26                   LDS.L       @R15+,PR
    000002FC 6CF6                   MOV.L       @R15+,R12
    000002FE 6DF6                   MOV.L       @R15+,R13
    00000300 422B                   JMP         @R2
    00000302 6EF6                   MOV.L       @R15+,R14
          bake.c    83    }
          bake.c    84    
          bake.c    85    void
          bake.c    86    bake_poly()
    00000304              _bake_poly:                      ; function: bake_poly
                                                           ; frame size=32
    00000304 2FE6                   MOV.L       R14,@-R15
    00000306 2FD6                   MOV.L       R13,@-R15
    00000308 2FC6                   MOV.L       R12,@-R15
    0000030A 2FB6                   MOV.L       R11,@-R15
    0000030C 2FA6                   MOV.L       R10,@-R15
    0000030E 2F96                   MOV.L       R9,@-R15
    00000310 4F22                   STS.L       PR,@-R15
    00000312 7FFC                   ADD         #-4,R15
          bake.c    87    {
          bake.c    88            int h, i, k, n;
          bake.c    89            U **a;
          bake.c    90            a = stack + tos;
    00000314 DC31                   MOV.L       L1192+8,R12; _tos
    00000316 69C2                   MOV.L       @R12,R9
    00000318 D233                   MOV.L       L1192+20,R2; _stack
    0000031A 4908                   SHLL2       R9
          bake.c    91            push(p1);               // p(x)
    0000031C DB33                   MOV.L       L1192+24,R11; _push
    0000031E 6322                   MOV.L       @R2,R3
    00000320 DD33                   MOV.L       L1192+28,R13; _p1
    00000322 393C                   ADD         R3,R9
    00000324 4B0B                   JSR         @R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000326 64D2                   MOV.L       @R13,R4
          bake.c    92            push(p2);               // x
    00000328 D332                   MOV.L       L1192+32,R3; _p2
    0000032A 4B0B                   JSR         @R11
    0000032C 6432                   MOV.L       @R3,R4
          bake.c    93            k = coeff();
    0000032E D232                   MOV.L       L1192+36,R2; _coeff
    00000330 420B                   JSR         @R2
    00000332 0009                   NOP
          bake.c    94            h = tos;
    00000334 63C2                   MOV.L       @R12,R3
    00000336 6A03                   MOV         R0,R10
    00000338 2F32                   MOV.L       R3,@R15
          bake.c    95            for (i = k - 1; i >= 0; i--) {
    0000033A 6EA3                   MOV         R10,R14
    0000033C 7EFF                   ADD         #-1,R14
    0000033E 4E11                   CMP/PZ      R14
    00000340 8B08                   BF          L1151
    00000342              L1152:                            
          bake.c    96                    p1 = a[i];
    00000342 60E3                   MOV         R14,R0
    00000344 4008                   SHLL2       R0
    00000346 039E                   MOV.L       @(R0,R9),R3
    00000348 2D32                   MOV.L       R3,@R13
          bake.c    97                    bake_poly_term(i);
    0000034A B028                   BSR         _bake_poly_term
    0000034C 64E3                   MOV         R14,R4
    0000034E 7EFF                   ADD         #-1,R14
    00000350 4E11                   CMP/PZ      R14
    00000352 89F6                   BT          L1152
    00000354              L1151:                            
          bake.c    98            }
          bake.c    99            n = tos - h;
    00000354 63F2                   MOV.L       @R15,R3
          bake.c   100            if (n > 1) {
    00000356 E201                   MOV         #1,R2
    00000358 64C2                   MOV.L       @R12,R4
    0000035A 3438                   SUB         R3,R4
    0000035C 3427                   CMP/GT      R2,R4
    0000035E 8B0C                   BF          L1153
          bake.c   101                    list(n);
    00000360 D11F                   MOV.L       L1192+12,R1; _list
    00000362 410B                   JSR         @R1
    00000364 0009                   NOP
          bake.c   102                    push(symbol(ADD));
    00000366 D31C                   MOV.L       L1192+4,R3 ; _symtab
    00000368 6432                   MOV.L       @R3,R4
    0000036A 4B0B                   JSR         @R11
    0000036C 740C                   ADD         #12,R4
          bake.c   103                    swap();
    0000036E D223                   MOV.L       L1192+40,R2; _swap
    00000370 420B                   JSR         @R2
    00000372 0009                   NOP
          bake.c   104                    cons();
    00000374 D322                   MOV.L       L1192+44,R3; _cons
    00000376 430B                   JSR         @R3
    00000378 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000037A              L1153:                            
          bake.c   105            }
          bake.c   106            p1 = pop();
    0000037A D222                   MOV.L       L1192+48,R2; _pop
    0000037C 420B                   JSR         @R2
    0000037E 0009                   NOP
    00000380 2D02                   MOV.L       R0,@R13
          bake.c   107            tos -= k;
    00000382 63C2                   MOV.L       @R12,R3
    00000384 33A8                   SUB         R10,R3
    00000386 2C32                   MOV.L       R3,@R12
          bake.c   108            push(p1);
    00000388 4B0B                   JSR         @R11
    0000038A 64D2                   MOV.L       @R13,R4
          bake.c   109    }
    0000038C 7F04                   ADD         #4,R15
    0000038E 4F26                   LDS.L       @R15+,PR
    00000390 69F6                   MOV.L       @R15+,R9
    00000392 6AF6                   MOV.L       @R15+,R10
    00000394 6BF6                   MOV.L       @R15+,R11
    00000396 6CF6                   MOV.L       @R15+,R12
    00000398 6DF6                   MOV.L       @R15+,R13
    0000039A 000B                   RTS
    0000039C 6EF6                   MOV.L       @R15+,R14
          bake.c   110    
          bake.c   111    // p1 points to coefficient of p2 ^ k
          bake.c   112    
          bake.c   113    void
          bake.c   114    bake_poly_term(int k)
    0000039E              _bake_poly_term:                 ; function: bake_poly_term
                                                           ; frame size=24
    0000039E 2FE6                   MOV.L       R14,@-R15
    000003A0 2FD6                   MOV.L       R13,@-R15
    000003A2 2FC6                   MOV.L       R12,@-R15
    000003A4 2FB6                   MOV.L       R11,@-R15
    000003A6 6B43                   MOV         R4,R11
          bake.c   115    {
          bake.c   116            int h, n;
          bake.c   117    
          bake.c   118            if (iszero(p1))
    000003A8 DE11                   MOV.L       L1192+28,R14; _p1
    000003AA 4F22                   STS.L       PR,@-R15
    000003AC D316                   MOV.L       L1192+52,R3; _iszero
    000003AE 7FFC                   ADD         #-4,R15
    000003B0 430B                   JSR         @R3
    000003B2 64E2                   MOV.L       @R14,R4
    000003B4 2008                   TST         R0,R0
    000003B6 8901                   BT          L1193
    000003B8 A0D4                   BRA         L1155
    000003BA 0009                   NOP
    000003BC              L1193:                            
    000003BC DC06                   MOV.L       L1192+4,R12; _symtab
    000003BE 2BB8                   TST         R11,R11
    000003C0 DD0A                   MOV.L       L1192+24,R13; _push
    000003C2 64E2                   MOV.L       @R14,R4
    000003C4 8F58                   BF/S        L1156
    000003C6 65C2                   MOV.L       @R12,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          bake.c   119                    return;
          bake.c   120    
          bake.c   121            // constant term?
          bake.c   122    
          bake.c   123            if (k == 0) {
          bake.c   124                    if (car(p1) == symbol(ADD)) {
    000003C8 8448                   MOV.B       @(8,R4),R0
    000003CA 2008                   TST         R0,R0
    000003CC 8F1E                   BF/S        L1158
    000003CE 750C                   ADD         #12,R5
    000003D0 A020                   BRA         L1159
    000003D2 6242                   MOV.L       @R4,R2
    000003D4              L1192:                            
    000003D4 0570                   .DATA.W     H'0570
    000003D6 0000                   .DATA.W     0
    000003D8 <00000000>             .DATA.L     _symtab
    000003DC <00000000>             .DATA.L     _tos
    000003E0 <00000000>             .DATA.L     _list
    000003E4 <00000000>             .DATA.L     _restore
    000003E8 <00000000>             .DATA.L     _stack
    000003EC <00000000>             .DATA.L     _push
    000003F0 <00000000>             .DATA.L     _p1
    000003F4 <00000000>             .DATA.L     _p2
    000003F8 <00000000>             .DATA.L     _coeff
    000003FC <00000000>             .DATA.L     _swap
    00000400 <00000000>             .DATA.L     _cons
    00000404 <00000000>             .DATA.L     _pop
    00000408 <00000000>             .DATA.L     _iszero
    0000040C              L1158:                            
    0000040C 9363                   MOV.W       L1194,R3   ; H'0570
    0000040E D133                   MOV.L       L1194+6,R1 ; _symtab
    00000410 6212                   MOV.L       @R1,R2
    00000412 323C                   ADD         R3,R2
    00000414              L1159:                            
    00000414 3250                   CMP/EQ      R5,R2
    00000416 8B2B                   BF          L1157
          bake.c   125                            p1 = cdr(p1);
    00000418 63E2                   MOV.L       @R14,R3
    0000041A 8438                   MOV.B       @(8,R3),R0
    0000041C 2008                   TST         R0,R0
    0000041E 8B02                   BF          L1160
    00000420 62E2                   MOV.L       @R14,R2
    00000422 A004                   BRA         L1161
    00000424 5221                   MOV.L       @(4,R2),R2
    00000426              L1160:                            
    00000426 9356                   MOV.W       L1194,R3   ; H'0570
    00000428 D12C                   MOV.L       L1194+6,R1 ; _symtab
    0000042A 6212                   MOV.L       @R1,R2
    0000042C 323C                   ADD         R3,R2
    0000042E              L1161:                            
          bake.c   126                            while (iscons(p1)) {
    0000042E A019                   BRA         L1162
    00000430 2E22                   MOV.L       R2,@R14
    00000432              L1163:                            
          bake.c   127                                    push(car(p1));
    00000432 64E2                   MOV.L       @R14,R4
    00000434 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000436 2008                   TST         R0,R0
    00000438 8B02                   BF          L1164
    0000043A 64E2                   MOV.L       @R14,R4
    0000043C A004                   BRA         L1165
    0000043E 6442                   MOV.L       @R4,R4
    00000440              L1164:                            
    00000440 9349                   MOV.W       L1194,R3   ; H'0570
    00000442 D226                   MOV.L       L1194+6,R2 ; _symtab
    00000444 6422                   MOV.L       @R2,R4
    00000446 343C                   ADD         R3,R4
    00000448              L1165:                            
    00000448 4D0B                   JSR         @R13
    0000044A 0009                   NOP
          bake.c   128                                    p1 = cdr(p1);
    0000044C 62E2                   MOV.L       @R14,R2
    0000044E 8428                   MOV.B       @(8,R2),R0
    00000450 2008                   TST         R0,R0
    00000452 8B02                   BF          L1166
    00000454 62E2                   MOV.L       @R14,R2
    00000456 A004                   BRA         L1167
    00000458 5321                   MOV.L       @(4,R2),R3
    0000045A              L1166:                            
    0000045A 923C                   MOV.W       L1194,R2   ; H'0570
    0000045C D11F                   MOV.L       L1194+6,R1 ; _symtab
    0000045E 6312                   MOV.L       @R1,R3
    00000460 332C                   ADD         R2,R3
    00000462              L1167:                            
    00000462 2E32                   MOV.L       R3,@R14
    00000464              L1162:                            
    00000464 62E2                   MOV.L       @R14,R2
    00000466 8428                   MOV.B       @(8,R2),R0
    00000468 2008                   TST         R0,R0
    0000046A 89E2                   BT          L1163
    0000046C A07A                   BRA         L1155
    0000046E 0009                   NOP
    00000470              L1157:                            
          bake.c   129                            }
          bake.c   130                    } else
          bake.c   131                            push(p1);
    00000470 4D0B                   JSR         @R13
    00000472 0009                   NOP
          bake.c   132                    return;
    00000474 A076                   BRA         L1155
    00000476 0009                   NOP
    00000478              L1156:                            
          bake.c   133            }
          bake.c   134    
          bake.c   135            h = tos;
    00000478 D219                   MOV.L       L1194+10,R2; _tos
    0000047A 6322                   MOV.L       @R2,R3
    0000047C 2F32                   MOV.L       R3,@R15
          bake.c   136    
          bake.c   137            // coefficient
          bake.c   138    
          bake.c   139            if (car(p1) == symbol(MULTIPLY)) {
    0000047E 8448                   MOV.B       @(8,R4),R0
    00000480 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000482 8B01                   BF          L1170
    00000484 A002                   BRA         L1171
    00000486 6142                   MOV.L       @R4,R1
    00000488              L1170:                            
    00000488 9125                   MOV.W       L1194,R1   ; H'0570
    0000048A 315C                   ADD         R5,R1
    0000048C              L1171:                            
    0000048C 9324                   MOV.W       L1194+2,R3 ; H'0384
    0000048E 335C                   ADD         R5,R3
    00000490 3130                   CMP/EQ      R3,R1
    00000492 8B32                   BF          L1169
          bake.c   140                    p1 = cdr(p1);
    00000494 62E2                   MOV.L       @R14,R2
    00000496 8428                   MOV.B       @(8,R2),R0
    00000498 2008                   TST         R0,R0
    0000049A 8B02                   BF          L1172
    0000049C 62E2                   MOV.L       @R14,R2
    0000049E A025                   BRA         L1188
    000004A0 5321                   MOV.L       @(4,R2),R3
    000004A2              L1172:                            
    000004A2 9218                   MOV.W       L1194,R2   ; H'0570
    000004A4 D10D                   MOV.L       L1194+6,R1 ; _symtab
    000004A6 6312                   MOV.L       @R1,R3
    000004A8 332C                   ADD         R2,R3
          bake.c   141                    while (iscons(p1)) {
    000004AA A01F                   BRA         L1188
    000004AC 0009                   NOP
    000004AE              L1175:                            
          bake.c   142                            push(car(p1));
    000004AE 64E2                   MOV.L       @R14,R4
    000004B0 8448                   MOV.B       @(8,R4),R0
    000004B2 2008                   TST         R0,R0
    000004B4 8B02                   BF          L1176
    000004B6 64E2                   MOV.L       @R14,R4
    000004B8 A004                   BRA         L1177
    000004BA 6442                   MOV.L       @R4,R4
    000004BC              L1176:                            
    000004BC 930B                   MOV.W       L1194,R3   ; H'0570
    000004BE D207                   MOV.L       L1194+6,R2 ; _symtab
    000004C0 6422                   MOV.L       @R2,R4
    000004C2 343C                   ADD         R3,R4
    000004C4              L1177:                            
    000004C4 4D0B                   JSR         @R13
    000004C6 0009                   NOP
          bake.c   143                            p1 = cdr(p1);
    000004C8 62E2                   MOV.L       @R14,R2
    000004CA 8428                   MOV.B       @(8,R2),R0
    000004CC 2008                   TST         R0,R0
    000004CE 8B09                   BF          L1178
    000004D0 62E2                   MOV.L       @R14,R2
    000004D2 A00B                   BRA         L1188
    000004D4 5321                   MOV.L       @(4,R2),R3
    000004D6              L1194:                            
    000004D6 0570                   .DATA.W     H'0570
    000004D8 0384                   .DATA.W     H'0384
    000004DA 0000                   .DATA.W     0
    000004DC <00000000>             .DATA.L     _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004E0 <00000000>             .DATA.L     _tos
    000004E4              L1178:                            
    000004E4 9245                   MOV.W       L1195,R2   ; H'0570
    000004E6 D124                   MOV.L       L1195+6,R1 ; _symtab
    000004E8 6312                   MOV.L       @R1,R3
    000004EA 332C                   ADD         R2,R3
    000004EC              L1188:                            
    000004EC 2E32                   MOV.L       R3,@R14
    000004EE 6233                   MOV         R3,R2
    000004F0 8428                   MOV.B       @(8,R2),R0
    000004F2 2008                   TST         R0,R0
    000004F4 89DB                   BT          L1175
    000004F6 A007                   BRA         L1180
    000004F8 0009                   NOP
    000004FA              L1169:                            
          bake.c   144                    }
          bake.c   145            } else if (!equaln(p1, 1))
    000004FA D320                   MOV.L       L1195+10,R3; _equaln
    000004FC 430B                   JSR         @R3
    000004FE E501                   MOV         #1,R5
    00000500 2008                   TST         R0,R0
    00000502 8B01                   BF          L1180
          bake.c   146                    push(p1);
    00000504 4D0B                   JSR         @R13
    00000506 64E2                   MOV.L       @R14,R4
    00000508              L1180:                            
          bake.c   147    
          bake.c   148            // x ^ k
          bake.c   149    
          bake.c   150            if (k == 1)
    00000508 60B3                   MOV         R11,R0
    0000050A 8801                   CMP/EQ      #1,R0
    0000050C 8B04                   BF          L1182
          bake.c   151                    push(p2);
    0000050E D21C                   MOV.L       L1195+14,R2; _p2
    00000510 4D0B                   JSR         @R13
    00000512 6422                   MOV.L       @R2,R4
    00000514 A00D                   BRA         L1183
    00000516 0009                   NOP
    00000518              L1182:                            
          bake.c   152            else {
          bake.c   153                    push(symbol(POWER));
    00000518 932C                   MOV.W       L1195+2,R3 ; H'03F0
    0000051A 64C2                   MOV.L       @R12,R4
    0000051C 4D0B                   JSR         @R13
    0000051E 343C                   ADD         R3,R4
          bake.c   154                    push(p2);
    00000520 D217                   MOV.L       L1195+14,R2; _p2
    00000522 4D0B                   JSR         @R13
    00000524 6422                   MOV.L       @R2,R4
          bake.c   155                    push_integer(k);
    00000526 D317                   MOV.L       L1195+18,R3; _push_integer
    00000528 430B                   JSR         @R3
    0000052A 64B3                   MOV         R11,R4
          bake.c   156                    list(3);
    0000052C D216                   MOV.L       L1195+22,R2; _list
    0000052E 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000530 E403                   MOV         #3,R4
    00000532              L1183:                            
          bake.c   157            }
          bake.c   158    
          bake.c   159            n = tos - h;
          bake.c   160    
          bake.c   161            if (n > 1) {
    00000532 E101                   MOV         #1,R1
    00000534 63F2                   MOV.L       @R15,R3
    00000536 D215                   MOV.L       L1195+26,R2; _tos
    00000538 6422                   MOV.L       @R2,R4
    0000053A 3438                   SUB         R3,R4
    0000053C 3417                   CMP/GT      R1,R4
    0000053E 8B11                   BF          L1155
          bake.c   162                    list(n);
    00000540 D211                   MOV.L       L1195+22,R2; _list
    00000542 420B                   JSR         @R2
    00000544 0009                   NOP
          bake.c   163                    push(symbol(MULTIPLY));
    00000546 9316                   MOV.W       L1195+4,R3 ; H'0384
    00000548 64C2                   MOV.L       @R12,R4
    0000054A 4D0B                   JSR         @R13
    0000054C 343C                   ADD         R3,R4
          bake.c   164                    swap();
    0000054E D210                   MOV.L       L1195+30,R2; _swap
    00000550 420B                   JSR         @R2
    00000552 0009                   NOP
          bake.c   165                    cons();
    00000554 D30F                   MOV.L       L1195+34,R3; _cons
    00000556 7F04                   ADD         #4,R15
    00000558 4F26                   LDS.L       @R15+,PR
    0000055A 6BF6                   MOV.L       @R15+,R11
    0000055C 6CF6                   MOV.L       @R15+,R12
    0000055E 6DF6                   MOV.L       @R15+,R13
    00000560 432B                   JMP         @R3
    00000562 6EF6                   MOV.L       @R15+,R14
    00000564              L1155:                            
          bake.c   166            }
          bake.c   167    }
    00000564 7F04                   ADD         #4,R15
    00000566 4F26                   LDS.L       @R15+,PR
    00000568 6BF6                   MOV.L       @R15+,R11
    0000056A 6CF6                   MOV.L       @R15+,R12
    0000056C 6DF6                   MOV.L       @R15+,R13
    0000056E 000B                   RTS
    00000570 6EF6                   MOV.L       @R15+,R14
    00000572              L1195:                            
    00000572 0570                   .DATA.W     H'0570
    00000574 03F0                   .DATA.W     H'03F0
    00000576 0384                   .DATA.W     H'0384
    00000578 <00000000>             .DATA.L     _symtab
    0000057C <00000000>             .DATA.L     _equaln
    00000580 <00000000>             .DATA.L     _p2
    00000584 <00000000>             .DATA.L     _push_integer
    00000588 <00000000>             .DATA.L     _list
    0000058C <00000000>             .DATA.L     _tos
    00000590 <00000000>             .DATA.L     _swap




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000594 <00000000>             .DATA.L     _cons




























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:46  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      167



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000598 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000598 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           18
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           4
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            85






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk34C3.tmp 

