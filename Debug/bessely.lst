SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2013 13:19:44  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fxTaumath\bessely.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       bessely.c     1    //-----------------------------------------------------------------------------
       bessely.c     2    //
       bessely.c     3    //      Bessel Y function
       bessely.c     4    //
       bessely.c     5    //      Input:          tos-2           x       (can be a symbol or expr)
       bessely.c     6    //
       bessely.c     7    //                      tos-1           n
       bessely.c     8    //
       bessely.c     9    //      Output:         Result on stack
       bessely.c    10    //
       bessely.c    11    //-----------------------------------------------------------------------------
       bessely.c    12    
       bessely.c    13    #include "stdafx.h"
       bessely.c    14    #include "defs.h"
       bessely.c    15    
       bessely.c    16    void
       bessely.c    17    eval_bessely(void)
P   00000000              _eval_bessely:                   ; function: eval_bessely
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
       bessely.c    18    {
       bessely.c    19            push(cadr(p1));
    00000004 DE34                   MOV.L       L1088+2,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1066
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1068
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1066:                            
    00000014 935F                   MOV.W       L1088,R3   ; H'0594
    00000016 D231                   MOV.L       L1088+6,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1068:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1065
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1067
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1069
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1067:                            
    00000030 9351                   MOV.W       L1088,R3   ; H'0594
    00000032 D22A                   MOV.L       L1088+6,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1069:                            
    00000038 A004                   BRA         L1070




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2013 13:19:44  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1065:                            
    0000003C 934B                   MOV.W       L1088,R3   ; H'0594
    0000003E D227                   MOV.L       L1088+6,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1070:                            
    00000044 D326                   MOV.L       L1088+10,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
       bessely.c    20            eval();
    0000004A D226                   MOV.L       L1088+14,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
       bessely.c    21            push(caddr(p1));
    00000050 64E2                   MOV.L       @R14,R4
    00000052 8448                   MOV.B       @(8,R4),R0
    00000054 2008                   TST         R0,R0
    00000056 8B02                   BF          L1073
    00000058 64E2                   MOV.L       @R14,R4
    0000005A A004                   BRA         L1078
    0000005C 5441                   MOV.L       @(4,R4),R4
    0000005E              L1073:                            
    0000005E 933A                   MOV.W       L1088,R3   ; H'0594
    00000060 D21E                   MOV.L       L1088+6,R2 ; _symtab
    00000062 6422                   MOV.L       @R2,R4
    00000064 343C                   ADD         R3,R4
    00000066              L1078:                            
    00000066 8448                   MOV.B       @(8,R4),R0
    00000068 2008                   TST         R0,R0
    0000006A 8B0C                   BF          L1072
    0000006C 64E2                   MOV.L       @R14,R4
    0000006E 8448                   MOV.B       @(8,R4),R0
    00000070 2008                   TST         R0,R0
    00000072 8B02                   BF          L1074
    00000074 64E2                   MOV.L       @R14,R4
    00000076 A004                   BRA         L1079
    00000078 5441                   MOV.L       @(4,R4),R4
    0000007A              L1074:                            
    0000007A 932C                   MOV.W       L1088,R3   ; H'0594
    0000007C D217                   MOV.L       L1088+6,R2 ; _symtab
    0000007E 6422                   MOV.L       @R2,R4
    00000080 343C                   ADD         R3,R4
    00000082              L1079:                            
    00000082 A004                   BRA         L1080
    00000084 5441                   MOV.L       @(4,R4),R4
    00000086              L1072:                            
    00000086 9326                   MOV.W       L1088,R3   ; H'0594
    00000088 D214                   MOV.L       L1088+6,R2 ; _symtab
    0000008A 6422                   MOV.L       @R2,R4
    0000008C 343C                   ADD         R3,R4
    0000008E              L1080:                            
    0000008E 8448                   MOV.B       @(8,R4),R0
    00000090 2008                   TST         R0,R0
    00000092 8B29                   BF          L1071
    00000094 64E2                   MOV.L       @R14,R4
    00000096 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2013 13:19:44  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000098 2008                   TST         R0,R0
    0000009A 8B02                   BF          L1076
    0000009C 64E2                   MOV.L       @R14,R4
    0000009E A004                   BRA         L1081
    000000A0 5441                   MOV.L       @(4,R4),R4
    000000A2              L1076:                            
    000000A2 9318                   MOV.W       L1088,R3   ; H'0594
    000000A4 D20D                   MOV.L       L1088+6,R2 ; _symtab
    000000A6 6422                   MOV.L       @R2,R4
    000000A8 343C                   ADD         R3,R4
    000000AA              L1081:                            
    000000AA 8448                   MOV.B       @(8,R4),R0
    000000AC 2008                   TST         R0,R0
    000000AE 8B0C                   BF          L1075
    000000B0 64E2                   MOV.L       @R14,R4
    000000B2 8448                   MOV.B       @(8,R4),R0
    000000B4 2008                   TST         R0,R0
    000000B6 8B02                   BF          L1077
    000000B8 64E2                   MOV.L       @R14,R4
    000000BA A004                   BRA         L1082
    000000BC 5441                   MOV.L       @(4,R4),R4
    000000BE              L1077:                            
    000000BE 930A                   MOV.W       L1088,R3   ; H'0594
    000000C0 D206                   MOV.L       L1088+6,R2 ; _symtab
    000000C2 6422                   MOV.L       @R2,R4
    000000C4 343C                   ADD         R3,R4
    000000C6              L1082:                            
    000000C6 A004                   BRA         L1083
    000000C8 5441                   MOV.L       @(4,R4),R4
    000000CA              L1075:                            
    000000CA 9304                   MOV.W       L1088,R3   ; H'0594
    000000CC D203                   MOV.L       L1088+6,R2 ; _symtab
    000000CE 6422                   MOV.L       @R2,R4
    000000D0 343C                   ADD         R3,R4
    000000D2              L1083:                            
    000000D2 A00D                   BRA         L1084
    000000D4 6442                   MOV.L       @R4,R4
    000000D6              L1088:                            
    000000D6 0594                   .DATA.W     H'0594
    000000D8 <00000000>             .DATA.L     _p1
    000000DC <00000000>             .DATA.L     _symtab
    000000E0 <00000000>             .DATA.L     _push
    000000E4 <00000000>             .DATA.L     _eval
    000000E8              L1071:                            
    000000E8 936E                   MOV.W       L1089,R3   ; H'0594
    000000EA D238                   MOV.L       L1089+4,R2 ; _symtab
    000000EC 6422                   MOV.L       @R2,R4
    000000EE 343C                   ADD         R3,R4
    000000F0              L1084:                            
    000000F0 D337                   MOV.L       L1089+8,R3 ; _push
    000000F2 430B                   JSR         @R3
    000000F4 0009                   NOP
       bessely.c    22            eval();
    000000F6 D237                   MOV.L       L1089+12,R2; _eval
    000000F8 420B                   JSR         @R2
    000000FA 0009                   NOP
       bessely.c    23            bessely();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2013 13:19:44  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000FC 4F26                   LDS.L       @R15+,PR
    000000FE 6EF6                   MOV.L       @R15+,R14
       bessely.c    24    }
       bessely.c    25    
       bessely.c    26    void
       bessely.c    27    bessely(void)
    00000100              _bessely:                        ; function: bessely
                                                           ; frame size=4
    00000100 4F22                   STS.L       PR,@-R15
       bessely.c    28    {
       bessely.c    29            save();
    00000102 D335                   MOV.L       L1089+16,R3; _save
    00000104 430B                   JSR         @R3
    00000106 0009                   NOP
       bessely.c    30            yybessely();
    00000108 B003                   BSR         _yybessely
    0000010A 0009                   NOP
       bessely.c    31            restore();
    0000010C D333                   MOV.L       L1089+20,R3; _restore
    0000010E 432B                   JMP         @R3
    00000110 4F26                   LDS.L       @R15+,PR
       bessely.c    32    }
       bessely.c    33    
       bessely.c    34    #define X p1
       bessely.c    35    #define N p2
       bessely.c    36    
       bessely.c    37    void
       bessely.c    38    yybessely(void)
    00000112              _yybessely:                      ; function: yybessely
                                                           ; frame size=32
    00000112 2FE6                   MOV.L       R14,@-R15
    00000114 2FD6                   MOV.L       R13,@-R15
    00000116 2FC6                   MOV.L       R12,@-R15
    00000118 4F22                   STS.L       PR,@-R15
    0000011A 7FF8                   ADD         #-8,R15
       bessely.c    39    {
       bessely.c    40            double d;
       bessely.c    41            int n;
       bessely.c    42    
       bessely.c    43            N = pop();
    0000011C DD30                   MOV.L       L1089+24,R13; _p2
    0000011E D331                   MOV.L       L1089+28,R3; _pop
    00000120 430B                   JSR         @R3
    00000122 0009                   NOP
       bessely.c    44            X = pop();
    00000124 DC30                   MOV.L       L1089+32,R12; _p1
    00000126 D22F                   MOV.L       L1089+28,R2; _pop
    00000128 420B                   JSR         @R2
    0000012A 2D02                   MOV.L       R0,@R13
    0000012C 2C02                   MOV.L       R0,@R12
       bessely.c    45    
       bessely.c    46            push(N);
    0000012E DE28                   MOV.L       L1089+8,R14; _push
    00000130 4E0B                   JSR         @R14
    00000132 64D2                   MOV.L       @R13,R4
       bessely.c    47            n = pop_integer();
    00000134 D32D                   MOV.L       L1089+36,R3; _pop_integer




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2013 13:19:44  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000136 430B                   JSR         @R3
    00000138 0009                   NOP
    0000013A 6403                   MOV         R0,R4
       bessely.c    48    
       bessely.c    49            if (isdouble(X) && n != (int) 0x80000000) {
    0000013C 60C2                   MOV.L       @R12,R0
    0000013E 8408                   MOV.B       @(8,R0),R0
    00000140 600C                   EXTU.B      R0,R0
    00000142 8802                   CMP/EQ      #2,R0
    00000144 8B0A                   BF          L1085
    00000146 D22A                   MOV.L       L1089+40,R2; H'80000000
    00000148 3420                   CMP/EQ      R2,R4
    0000014A 8907                   BT          L1085
       bessely.c    50                    //d = yn(n, X->u.d);
       bessely.c    51                    push_double(d);
    0000014C 51F1                   MOV.L       @(4,R15),R1
    0000014E 2F16                   MOV.L       R1,@-R15
    00000150 51F1                   MOV.L       @(4,R15),R1
    00000152 D328                   MOV.L       L1089+44,R3; _push_double
    00000154 430B                   JSR         @R3
    00000156 2F16                   MOV.L       R1,@-R15
       bessely.c    52                    return;
    00000158 A030                   BRA         L1086
    0000015A 7F08                   ADD         #8,R15
    0000015C              L1085:                            
       bessely.c    53            }
       bessely.c    54            
       bessely.c    55            if (isnegativeterm(N)) {
    0000015C D226                   MOV.L       L1089+48,R2; _isnegativeterm
    0000015E 420B                   JSR         @R2
    00000160 64D2                   MOV.L       @R13,R4
    00000162 2008                   TST         R0,R0
    00000164 891B                   BT          L1087
       bessely.c    56                    push_integer(-1);
    00000166 D225                   MOV.L       L1089+52,R2; _push_integer
    00000168 420B                   JSR         @R2
    0000016A E4FF                   MOV         #-1,R4
       bessely.c    57                    push(N);
    0000016C 4E0B                   JSR         @R14
    0000016E 64D2                   MOV.L       @R13,R4
       bessely.c    58                    power();
    00000170 D323                   MOV.L       L1089+56,R3; _power
    00000172 430B                   JSR         @R3
    00000174 0009                   NOP
       bessely.c    59                    push_symbol(BESSELY);
    00000176 D223                   MOV.L       L1089+60,R2; _push_symbol
    00000178 420B                   JSR         @R2
    0000017A E40C                   MOV         #12,R4
       bessely.c    60                    push(X);
    0000017C 4E0B                   JSR         @R14
    0000017E 64C2                   MOV.L       @R12,R4
       bessely.c    61                    push(N);
    00000180 4E0B                   JSR         @R14
    00000182 64D2                   MOV.L       @R13,R4
       bessely.c    62                    negate();
    00000184 D320                   MOV.L       L1089+64,R3; _negate
    00000186 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2013 13:19:44  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000188 0009                   NOP
       bessely.c    63                    list(3);
    0000018A D220                   MOV.L       L1089+68,R2; _list
    0000018C 420B                   JSR         @R2
    0000018E E403                   MOV         #3,R4
       bessely.c    64                    multiply();
    00000190 D31F                   MOV.L       L1089+72,R3; _multiply
    00000192 7F08                   ADD         #8,R15
    00000194 4F26                   LDS.L       @R15+,PR
    00000196 6CF6                   MOV.L       @R15+,R12
    00000198 6DF6                   MOV.L       @R15+,R13
    0000019A 432B                   JMP         @R3
    0000019C 6EF6                   MOV.L       @R15+,R14
    0000019E              L1087:                            
       bessely.c    65                    return;
       bessely.c    66            }
       bessely.c    67    
       bessely.c    68            push_symbol(BESSELY);
    0000019E D219                   MOV.L       L1089+60,R2; _push_symbol
    000001A0 420B                   JSR         @R2
    000001A2 E40C                   MOV         #12,R4
       bessely.c    69            push(X);
    000001A4 4E0B                   JSR         @R14
    000001A6 64C2                   MOV.L       @R12,R4
       bessely.c    70            push(N);
    000001A8 4E0B                   JSR         @R14
    000001AA 64D2                   MOV.L       @R13,R4
       bessely.c    71            list(3);
    000001AC D317                   MOV.L       L1089+68,R3; _list
    000001AE E403                   MOV         #3,R4
    000001B0 7F08                   ADD         #8,R15
    000001B2 4F26                   LDS.L       @R15+,PR
    000001B4 6CF6                   MOV.L       @R15+,R12
    000001B6 6DF6                   MOV.L       @R15+,R13
    000001B8 432B                   JMP         @R3
    000001BA 6EF6                   MOV.L       @R15+,R14
    000001BC              L1086:                            
       bessely.c    72            return;
       bessely.c    73    }
    000001BC 7F08                   ADD         #8,R15
    000001BE 4F26                   LDS.L       @R15+,PR
    000001C0 6CF6                   MOV.L       @R15+,R12
    000001C2 6DF6                   MOV.L       @R15+,R13
    000001C4 000B                   RTS
    000001C6 6EF6                   MOV.L       @R15+,R14
    000001C8              L1089:                            
    000001C8 0594                   .DATA.W     H'0594
    000001CA 0000                   .DATA.W     0
    000001CC <00000000>             .DATA.L     _symtab
    000001D0 <00000000>             .DATA.L     _push
    000001D4 <00000000>             .DATA.L     _eval
    000001D8 <00000000>             .DATA.L     _save
    000001DC <00000000>             .DATA.L     _restore
    000001E0 <00000000>             .DATA.L     _p2
    000001E4 <00000000>             .DATA.L     _pop
    000001E8 <00000000>             .DATA.L     _p1
    000001EC <00000000>             .DATA.L     _pop_integer




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2013 13:19:44  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001F0 80000000               .DATA.L     H'80000000
    000001F4 <00000000>             .DATA.L     _push_double
    000001F8 <00000000>             .DATA.L     _isnegativeterm
    000001FC <00000000>             .DATA.L     _push_integer
    00000200 <00000000>             .DATA.L     _power
    00000204 <00000000>             .DATA.L     _push_symbol
    00000208 <00000000>             .DATA.L     _negate
    0000020C <00000000>             .DATA.L     _list
    00000210 <00000000>             .DATA.L     _multiply




















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2013 13:19:44  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       73



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000214 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000214 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           17
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            45






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkF6CC.tmp 

