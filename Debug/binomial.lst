SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\binomial.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      binomial.c     1    //      Binomial coefficient
      binomial.c     2    //
      binomial.c     3    //      Input:          tos-2           n
      binomial.c     4    //
      binomial.c     5    //                      tos-1           k
      binomial.c     6    //
      binomial.c     7    //      Output:         Binomial coefficient on stack
      binomial.c     8    //
      binomial.c     9    //      binomial(n, k) = n! / k! / (n - k)!
      binomial.c    10    //
      binomial.c    11    //      The binomial coefficient vanishes for k < 0 or k > n. (A=B, p. 19)
      binomial.c    12    
      binomial.c    13    #include "stdafx.h"
      binomial.c    14    #include "defs.h"
      binomial.c    15    static void ybinomial(void);
      binomial.c    16    static int check_args(void);
      binomial.c    17    
      binomial.c    18    void
      binomial.c    19    eval_binomial(void)
P   00000000              _eval_binomial:                  ; function: eval_binomial
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
      binomial.c    20    {
      binomial.c    21            push(cadr(p1));
    00000004 DE34                   MOV.L       L1106+2,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1074
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1076
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1074:                            
    00000014 935F                   MOV.W       L1106,R3   ; H'0570
    00000016 D231                   MOV.L       L1106+6,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1076:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1073
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1075
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1077
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1075:                            
    00000030 9351                   MOV.W       L1106,R3   ; H'0570
    00000032 D22A                   MOV.L       L1106+6,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000038              L1077:                            
    00000038 A004                   BRA         L1078
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1073:                            
    0000003C 934B                   MOV.W       L1106,R3   ; H'0570
    0000003E D227                   MOV.L       L1106+6,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1078:                            
    00000044 D326                   MOV.L       L1106+10,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
      binomial.c    22            eval();
    0000004A D226                   MOV.L       L1106+14,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
      binomial.c    23            push(caddr(p1));
    00000050 64E2                   MOV.L       @R14,R4
    00000052 8448                   MOV.B       @(8,R4),R0
    00000054 2008                   TST         R0,R0
    00000056 8B02                   BF          L1081
    00000058 64E2                   MOV.L       @R14,R4
    0000005A A004                   BRA         L1086
    0000005C 5441                   MOV.L       @(4,R4),R4
    0000005E              L1081:                            
    0000005E 933A                   MOV.W       L1106,R3   ; H'0570
    00000060 D21E                   MOV.L       L1106+6,R2 ; _symtab
    00000062 6422                   MOV.L       @R2,R4
    00000064 343C                   ADD         R3,R4
    00000066              L1086:                            
    00000066 8448                   MOV.B       @(8,R4),R0
    00000068 2008                   TST         R0,R0
    0000006A 8B0C                   BF          L1080
    0000006C 64E2                   MOV.L       @R14,R4
    0000006E 8448                   MOV.B       @(8,R4),R0
    00000070 2008                   TST         R0,R0
    00000072 8B02                   BF          L1082
    00000074 64E2                   MOV.L       @R14,R4
    00000076 A004                   BRA         L1087
    00000078 5441                   MOV.L       @(4,R4),R4
    0000007A              L1082:                            
    0000007A 932C                   MOV.W       L1106,R3   ; H'0570
    0000007C D217                   MOV.L       L1106+6,R2 ; _symtab
    0000007E 6422                   MOV.L       @R2,R4
    00000080 343C                   ADD         R3,R4
    00000082              L1087:                            
    00000082 A004                   BRA         L1088
    00000084 5441                   MOV.L       @(4,R4),R4
    00000086              L1080:                            
    00000086 9326                   MOV.W       L1106,R3   ; H'0570
    00000088 D214                   MOV.L       L1106+6,R2 ; _symtab
    0000008A 6422                   MOV.L       @R2,R4
    0000008C 343C                   ADD         R3,R4
    0000008E              L1088:                            
    0000008E 8448                   MOV.B       @(8,R4),R0
    00000090 2008                   TST         R0,R0
    00000092 8B29                   BF          L1079




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000094 64E2                   MOV.L       @R14,R4
    00000096 8448                   MOV.B       @(8,R4),R0
    00000098 2008                   TST         R0,R0
    0000009A 8B02                   BF          L1084
    0000009C 64E2                   MOV.L       @R14,R4
    0000009E A004                   BRA         L1089
    000000A0 5441                   MOV.L       @(4,R4),R4
    000000A2              L1084:                            
    000000A2 9318                   MOV.W       L1106,R3   ; H'0570
    000000A4 D20D                   MOV.L       L1106+6,R2 ; _symtab
    000000A6 6422                   MOV.L       @R2,R4
    000000A8 343C                   ADD         R3,R4
    000000AA              L1089:                            
    000000AA 8448                   MOV.B       @(8,R4),R0
    000000AC 2008                   TST         R0,R0
    000000AE 8B0C                   BF          L1083
    000000B0 64E2                   MOV.L       @R14,R4
    000000B2 8448                   MOV.B       @(8,R4),R0
    000000B4 2008                   TST         R0,R0
    000000B6 8B02                   BF          L1085
    000000B8 64E2                   MOV.L       @R14,R4
    000000BA A004                   BRA         L1090
    000000BC 5441                   MOV.L       @(4,R4),R4
    000000BE              L1085:                            
    000000BE 930A                   MOV.W       L1106,R3   ; H'0570
    000000C0 D206                   MOV.L       L1106+6,R2 ; _symtab
    000000C2 6422                   MOV.L       @R2,R4
    000000C4 343C                   ADD         R3,R4
    000000C6              L1090:                            
    000000C6 A004                   BRA         L1091
    000000C8 5441                   MOV.L       @(4,R4),R4
    000000CA              L1083:                            
    000000CA 9304                   MOV.W       L1106,R3   ; H'0570
    000000CC D203                   MOV.L       L1106+6,R2 ; _symtab
    000000CE 6422                   MOV.L       @R2,R4
    000000D0 343C                   ADD         R3,R4
    000000D2              L1091:                            
    000000D2 A00D                   BRA         L1092
    000000D4 6442                   MOV.L       @R4,R4
    000000D6              L1106:                            
    000000D6 0570                   .DATA.W     H'0570
    000000D8 <00000000>             .DATA.L     _p1
    000000DC <00000000>             .DATA.L     _symtab
    000000E0 <00000000>             .DATA.L     _push
    000000E4 <00000000>             .DATA.L     _eval
    000000E8              L1079:                            
    000000E8 934C                   MOV.W       L1107,R3   ; H'0570
    000000EA D227                   MOV.L       L1107+4,R2 ; _symtab
    000000EC 6422                   MOV.L       @R2,R4
    000000EE 343C                   ADD         R3,R4
    000000F0              L1092:                            
    000000F0 D326                   MOV.L       L1107+8,R3 ; _push
    000000F2 430B                   JSR         @R3
    000000F4 0009                   NOP
      binomial.c    24            eval();
    000000F6 D226                   MOV.L       L1107+12,R2; _eval
    000000F8 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000FA 0009                   NOP
      binomial.c    25            binomial();
    000000FC 4F26                   LDS.L       @R15+,PR
    000000FE 6EF6                   MOV.L       @R15+,R14
      binomial.c    26    }
      binomial.c    27    
      binomial.c    28    
      binomial.c    29    void
      binomial.c    30    binomial(void)
    00000100              _binomial:                       ; function: binomial
                                                           ; frame size=4
    00000100 4F22                   STS.L       PR,@-R15
      binomial.c    31    {
      binomial.c    32            save();
    00000102 D324                   MOV.L       L1107+16,R3; _save
    00000104 430B                   JSR         @R3
    00000106 0009                   NOP
      binomial.c    33            ybinomial();
    00000108 B003                   BSR         __$ybinomial
    0000010A 0009                   NOP
      binomial.c    34            restore();
    0000010C D322                   MOV.L       L1107+20,R3; _restore
    0000010E 432B                   JMP         @R3
    00000110 4F26                   LDS.L       @R15+,PR
      binomial.c    35    }
      binomial.c    36    
      binomial.c    37    #define N p1
      binomial.c    38    #define K p2
      binomial.c    39    
      binomial.c    40    static void
      binomial.c    41    ybinomial(void)
    00000112              __$ybinomial:                    ; function: ybinomial
                                                           ; frame size=20
    00000112 2FE6                   MOV.L       R14,@-R15
    00000114 2FD6                   MOV.L       R13,@-R15
    00000116 2FC6                   MOV.L       R12,@-R15
    00000118 2FB6                   MOV.L       R11,@-R15
    0000011A 4F22                   STS.L       PR,@-R15
      binomial.c    42    {
      binomial.c    43            K = pop();
    0000011C DD1F                   MOV.L       L1107+24,R13; _p2
    0000011E D320                   MOV.L       L1107+28,R3; _pop
    00000120 430B                   JSR         @R3
    00000122 0009                   NOP
      binomial.c    44            N = pop();
    00000124 DC1F                   MOV.L       L1107+32,R12; _p1
    00000126 D21E                   MOV.L       L1107+28,R2; _pop
    00000128 420B                   JSR         @R2
    0000012A 2D02                   MOV.L       R0,@R13
      binomial.c    45    
      binomial.c    46            if (check_args() == 0) {
    0000012C DE17                   MOV.L       L1107+8,R14; _push
    0000012E B043                   BSR         __$check_args
    00000130 2C02                   MOV.L       R0,@R12
    00000132 2008                   TST         R0,R0
    00000134 8B04                   BF          L1093
      binomial.c    47                    push(zero);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000136 D31C                   MOV.L       L1107+36,R3; _zero
    00000138 4E0B                   JSR         @R14
    0000013A 6432                   MOV.L       @R3,R4
      binomial.c    48                    return;
    0000013C A01C                   BRA         L1094
    0000013E 0009                   NOP
    00000140              L1093:                            
      binomial.c    49            }
      binomial.c    50    
      binomial.c    51            push(N);
    00000140 4E0B                   JSR         @R14
    00000142 64C2                   MOV.L       @R12,R4
      binomial.c    52            factorial();
    00000144 DB19                   MOV.L       L1107+40,R11; _factorial
    00000146 4B0B                   JSR         @R11
    00000148 0009                   NOP
      binomial.c    53    
      binomial.c    54            push(K);
    0000014A 4E0B                   JSR         @R14
    0000014C 64D2                   MOV.L       @R13,R4
      binomial.c    55            factorial();
    0000014E 4B0B                   JSR         @R11
    00000150 0009                   NOP
      binomial.c    56    
      binomial.c    57            divide();
    00000152 D217                   MOV.L       L1107+44,R2; _divide
    00000154 420B                   JSR         @R2
    00000156 0009                   NOP
      binomial.c    58    
      binomial.c    59            push(N);
    00000158 4E0B                   JSR         @R14
    0000015A 64C2                   MOV.L       @R12,R4
      binomial.c    60            push(K);
    0000015C 4E0B                   JSR         @R14
    0000015E 64D2                   MOV.L       @R13,R4
      binomial.c    61            subtract();
    00000160 D314                   MOV.L       L1107+48,R3; _subtract
    00000162 430B                   JSR         @R3
    00000164 0009                   NOP
      binomial.c    62            factorial();
    00000166 4B0B                   JSR         @R11
    00000168 0009                   NOP
      binomial.c    63    
      binomial.c    64            divide();
    0000016A 4F26                   LDS.L       @R15+,PR
    0000016C D210                   MOV.L       L1107+44,R2; _divide
    0000016E 6BF6                   MOV.L       @R15+,R11
    00000170 6CF6                   MOV.L       @R15+,R12
    00000172 6DF6                   MOV.L       @R15+,R13
    00000174 422B                   JMP         @R2
    00000176 6EF6                   MOV.L       @R15+,R14
    00000178              L1094:                            
      binomial.c    65    }
    00000178 4F26                   LDS.L       @R15+,PR
    0000017A 6BF6                   MOV.L       @R15+,R11
    0000017C 6CF6                   MOV.L       @R15+,R12
    0000017E 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000180 000B                   RTS
    00000182 6EF6                   MOV.L       @R15+,R14
    00000184              L1107:                            
    00000184 0570                   .DATA.W     H'0570
    00000186 0000                   .DATA.W     0
    00000188 <00000000>             .DATA.L     _symtab
    0000018C <00000000>             .DATA.L     _push
    00000190 <00000000>             .DATA.L     _eval
    00000194 <00000000>             .DATA.L     _save
    00000198 <00000000>             .DATA.L     _restore
    0000019C <00000000>             .DATA.L     _p2
    000001A0 <00000000>             .DATA.L     _pop
    000001A4 <00000000>             .DATA.L     _p1
    000001A8 <00000000>             .DATA.L     _zero
    000001AC <00000000>             .DATA.L     _factorial
    000001B0 <00000000>             .DATA.L     _divide
    000001B4 <00000000>             .DATA.L     _subtract
      binomial.c    66    
      binomial.c    67    static int
      binomial.c    68    check_args(void)
    000001B8              __$check_args:                   ; function: check_args
                                                           ; frame size=12
    000001B8 2FE6                   MOV.L       R14,@-R15
    000001BA 4F22                   STS.L       PR,@-R15
      binomial.c    69    {
      binomial.c    70            if (isnum(N) && lessp(N, zero))
    000001BC DE23                   MOV.L       L1108+2,R14; _p1
    000001BE 7FFC                   ADD         #-4,R15
    000001C0 60E2                   MOV.L       @R14,R0
    000001C2 8408                   MOV.B       @(8,R0),R0
    000001C4 600C                   EXTU.B      R0,R0
    000001C6 8801                   CMP/EQ      #1,R0
    000001C8 8D02                   BT/S        L1096
    000001CA 2F02                   MOV.L       R0,@R15
    000001CC 8802                   CMP/EQ      #2,R0
    000001CE 8B06                   BF          L1095
    000001D0              L1096:                            
    000001D0 D31F                   MOV.L       L1108+6,R3 ; _zero
    000001D2 6532                   MOV.L       @R3,R5
    000001D4 D21F                   MOV.L       L1108+10,R2; _lessp
    000001D6 420B                   JSR         @R2
    000001D8 64E2                   MOV.L       @R14,R4
    000001DA 2008                   TST         R0,R0
    000001DC 8B2B                   BF          L1067
    000001DE              L1095:                            
      binomial.c    71                    return 0;
      binomial.c    72            else if (isnum(K) && lessp(K, zero))
    000001DE D31E                   MOV.L       L1108+14,R3; _p2
    000001E0 6032                   MOV.L       @R3,R0
    000001E2 8408                   MOV.B       @(8,R0),R0
    000001E4 600C                   EXTU.B      R0,R0
    000001E6 8801                   CMP/EQ      #1,R0
    000001E8 8D02                   BT/S        L1100
    000001EA 2F02                   MOV.L       R0,@R15
    000001EC 8802                   CMP/EQ      #2,R0
    000001EE 8B07                   BF          L1099
    000001F0              L1100:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001F0 D317                   MOV.L       L1108+6,R3 ; _zero
    000001F2 6532                   MOV.L       @R3,R5
    000001F4 D218                   MOV.L       L1108+14,R2; _p2
    000001F6 D317                   MOV.L       L1108+10,R3; _lessp
    000001F8 430B                   JSR         @R3
    000001FA 6422                   MOV.L       @R2,R4
    000001FC 2008                   TST         R0,R0
    000001FE 8B1A                   BF          L1067
    00000200              L1099:                            
      binomial.c    73                    return 0;
      binomial.c    74            else if (isnum(N) && isnum(K) && lessp(N, K))
    00000200 60E2                   MOV.L       @R14,R0
    00000202 8408                   MOV.B       @(8,R0),R0
    00000204 600C                   EXTU.B      R0,R0
    00000206 8801                   CMP/EQ      #1,R0
    00000208 8D02                   BT/S        L1103
    0000020A 2F02                   MOV.L       R0,@R15
    0000020C 8802                   CMP/EQ      #2,R0
    0000020E 8B17                   BF          L1102
    00000210              L1103:                            
    00000210 D311                   MOV.L       L1108+14,R3; _p2
    00000212 6032                   MOV.L       @R3,R0
    00000214 8408                   MOV.B       @(8,R0),R0
    00000216 600C                   EXTU.B      R0,R0
    00000218 8801                   CMP/EQ      #1,R0
    0000021A 8905                   BT          L1104
    0000021C D30E                   MOV.L       L1108+14,R3; _p2
    0000021E 6032                   MOV.L       @R3,R0
    00000220 8408                   MOV.B       @(8,R0),R0
    00000222 600C                   EXTU.B      R0,R0
    00000224 8802                   CMP/EQ      #2,R0
    00000226 8B0B                   BF          L1102
    00000228              L1104:                            
    00000228 D20B                   MOV.L       L1108+14,R2; _p2
    0000022A 6522                   MOV.L       @R2,R5
    0000022C D309                   MOV.L       L1108+10,R3; _lessp
    0000022E 430B                   JSR         @R3
    00000230 64E2                   MOV.L       @R14,R4
    00000232 2008                   TST         R0,R0
    00000234 8904                   BT          L1102
    00000236              L1067:
      binomial.c    75                    return 0;
    00000236 E000                   MOV         #0,R0
    00000238 7F04                   ADD         #4,R15
    0000023A 4F26                   LDS.L       @R15+,PR
    0000023C 000B                   RTS
    0000023E 6EF6                   MOV.L       @R15+,R14
    00000240              L1102:                            
      binomial.c    76            else
      binomial.c    77                    return 1;
    00000240 E001                   MOV         #1,R0
      binomial.c    78    }
    00000242              L1097:                            
    00000242 7F04                   ADD         #4,R15
    00000244 4F26                   LDS.L       @R15+,PR
    00000246 000B                   RTS
    00000248 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000024A              L1108:                            
    0000024A 0000                   .DATA.W     0
    0000024C <00000000>             .DATA.L     _p1
    00000250 <00000000>             .DATA.L     _zero
    00000254 <00000000>             .DATA.L     _lessp
    00000258 <00000000>             .DATA.L     _p2























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:47  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       78



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000025C Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000025C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           13
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            49






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk3754.tmp 

