SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:48  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\choose.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        choose.c     1    // For example, the number of five card hands is choose(52,5)
        choose.c     2    //
        choose.c     3    //                          n!
        choose.c     4    //      choose(n,k) = -------------
        choose.c     5    //                     k! (n - k)!
        choose.c     6    
        choose.c     7    #include "stdafx.h"
        choose.c     8    #include "defs.h"
        choose.c     9    
        choose.c    10    void
        choose.c    11    eval_choose(void)
P   00000000              _eval_choose:                    ; function: eval_choose
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
        choose.c    12    {
        choose.c    13            push(cadr(p1));
    00000004 DE34                   MOV.L       L1103+2,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1071
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1073
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1071:                            
    00000014 935F                   MOV.W       L1103,R3   ; H'0570
    00000016 D231                   MOV.L       L1103+6,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1073:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1070
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1072
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1074
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1072:                            
    00000030 9351                   MOV.W       L1103,R3   ; H'0570
    00000032 D22A                   MOV.L       L1103+6,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1074:                            
    00000038 A004                   BRA         L1075
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1070:                            
    0000003C 934B                   MOV.W       L1103,R3   ; H'0570
    0000003E D227                   MOV.L       L1103+6,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:48  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000044              L1075:                            
    00000044 D326                   MOV.L       L1103+10,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
        choose.c    14            eval();
    0000004A D226                   MOV.L       L1103+14,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
        choose.c    15            push(caddr(p1));
    00000050 64E2                   MOV.L       @R14,R4
    00000052 8448                   MOV.B       @(8,R4),R0
    00000054 2008                   TST         R0,R0
    00000056 8B02                   BF          L1078
    00000058 64E2                   MOV.L       @R14,R4
    0000005A A004                   BRA         L1083
    0000005C 5441                   MOV.L       @(4,R4),R4
    0000005E              L1078:                            
    0000005E 933A                   MOV.W       L1103,R3   ; H'0570
    00000060 D21E                   MOV.L       L1103+6,R2 ; _symtab
    00000062 6422                   MOV.L       @R2,R4
    00000064 343C                   ADD         R3,R4
    00000066              L1083:                            
    00000066 8448                   MOV.B       @(8,R4),R0
    00000068 2008                   TST         R0,R0
    0000006A 8B0C                   BF          L1077
    0000006C 64E2                   MOV.L       @R14,R4
    0000006E 8448                   MOV.B       @(8,R4),R0
    00000070 2008                   TST         R0,R0
    00000072 8B02                   BF          L1079
    00000074 64E2                   MOV.L       @R14,R4
    00000076 A004                   BRA         L1084
    00000078 5441                   MOV.L       @(4,R4),R4
    0000007A              L1079:                            
    0000007A 932C                   MOV.W       L1103,R3   ; H'0570
    0000007C D217                   MOV.L       L1103+6,R2 ; _symtab
    0000007E 6422                   MOV.L       @R2,R4
    00000080 343C                   ADD         R3,R4
    00000082              L1084:                            
    00000082 A004                   BRA         L1085
    00000084 5441                   MOV.L       @(4,R4),R4
    00000086              L1077:                            
    00000086 9326                   MOV.W       L1103,R3   ; H'0570
    00000088 D214                   MOV.L       L1103+6,R2 ; _symtab
    0000008A 6422                   MOV.L       @R2,R4
    0000008C 343C                   ADD         R3,R4
    0000008E              L1085:                            
    0000008E 8448                   MOV.B       @(8,R4),R0
    00000090 2008                   TST         R0,R0
    00000092 8B29                   BF          L1076
    00000094 64E2                   MOV.L       @R14,R4
    00000096 8448                   MOV.B       @(8,R4),R0
    00000098 2008                   TST         R0,R0
    0000009A 8B02                   BF          L1081
    0000009C 64E2                   MOV.L       @R14,R4
    0000009E A004                   BRA         L1086
    000000A0 5441                   MOV.L       @(4,R4),R4
    000000A2              L1081:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:48  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000A2 9318                   MOV.W       L1103,R3   ; H'0570
    000000A4 D20D                   MOV.L       L1103+6,R2 ; _symtab
    000000A6 6422                   MOV.L       @R2,R4
    000000A8 343C                   ADD         R3,R4
    000000AA              L1086:                            
    000000AA 8448                   MOV.B       @(8,R4),R0
    000000AC 2008                   TST         R0,R0
    000000AE 8B0C                   BF          L1080
    000000B0 64E2                   MOV.L       @R14,R4
    000000B2 8448                   MOV.B       @(8,R4),R0
    000000B4 2008                   TST         R0,R0
    000000B6 8B02                   BF          L1082
    000000B8 64E2                   MOV.L       @R14,R4
    000000BA A004                   BRA         L1087
    000000BC 5441                   MOV.L       @(4,R4),R4
    000000BE              L1082:                            
    000000BE 930A                   MOV.W       L1103,R3   ; H'0570
    000000C0 D206                   MOV.L       L1103+6,R2 ; _symtab
    000000C2 6422                   MOV.L       @R2,R4
    000000C4 343C                   ADD         R3,R4
    000000C6              L1087:                            
    000000C6 A004                   BRA         L1088
    000000C8 5441                   MOV.L       @(4,R4),R4
    000000CA              L1080:                            
    000000CA 9304                   MOV.W       L1103,R3   ; H'0570
    000000CC D203                   MOV.L       L1103+6,R2 ; _symtab
    000000CE 6422                   MOV.L       @R2,R4
    000000D0 343C                   ADD         R3,R4
    000000D2              L1088:                            
    000000D2 A00D                   BRA         L1089
    000000D4 6442                   MOV.L       @R4,R4
    000000D6              L1103:                            
    000000D6 0570                   .DATA.W     H'0570
    000000D8 <00000000>             .DATA.L     _p1
    000000DC <00000000>             .DATA.L     _symtab
    000000E0 <00000000>             .DATA.L     _push
    000000E4 <00000000>             .DATA.L     _eval
    000000E8              L1076:                            
    000000E8 9343                   MOV.W       L1104,R3   ; H'0570
    000000EA D222                   MOV.L       L1104+2,R2 ; _symtab
    000000EC 6422                   MOV.L       @R2,R4
    000000EE 343C                   ADD         R3,R4
    000000F0              L1089:                            
    000000F0 D321                   MOV.L       L1104+6,R3 ; _push
    000000F2 430B                   JSR         @R3
    000000F4 0009                   NOP
        choose.c    16            eval();
    000000F6 D221                   MOV.L       L1104+10,R2; _eval
    000000F8 420B                   JSR         @R2
    000000FA 0009                   NOP
        choose.c    17            choose();
    000000FC 4F26                   LDS.L       @R15+,PR
    000000FE 6EF6                   MOV.L       @R15+,R14
        choose.c    18    }
        choose.c    19    
        choose.c    20    // Result vanishes for k < 0 or k > n. (A=B, p. 19)
        choose.c    21    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:48  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        choose.c    22    #define N p1
        choose.c    23    #define K p2
        choose.c    24    
        choose.c    25    void
        choose.c    26    choose(void)
    00000100              _choose:                         ; function: choose
                                                           ; frame size=20
    00000100 2FE6                   MOV.L       R14,@-R15
    00000102 2FD6                   MOV.L       R13,@-R15
    00000104 2FC6                   MOV.L       R12,@-R15
    00000106 2FB6                   MOV.L       R11,@-R15
    00000108 4F22                   STS.L       PR,@-R15
        choose.c    27    {
        choose.c    28            save();
    0000010A D31D                   MOV.L       L1104+14,R3; _save
    0000010C 430B                   JSR         @R3
    0000010E 0009                   NOP
        choose.c    29    
        choose.c    30            K = pop();
    00000110 DD1C                   MOV.L       L1104+18,R13; _p2
    00000112 D21D                   MOV.L       L1104+22,R2; _pop
    00000114 420B                   JSR         @R2
    00000116 0009                   NOP
        choose.c    31            N = pop();
    00000118 DC1C                   MOV.L       L1104+26,R12; _p1
    0000011A D31B                   MOV.L       L1104+22,R3; _pop
    0000011C 430B                   JSR         @R3
    0000011E 2D02                   MOV.L       R0,@R13
        choose.c    32    
        choose.c    33            if (choose_check_args() == 0) {
    00000120 B040                   BSR         _choose_check_args
    00000122 2C02                   MOV.L       R0,@R12
    00000124 2008                   TST         R0,R0
    00000126 8B04                   BF          L1090
        choose.c    34                    push_integer(0);
    00000128 D219                   MOV.L       L1104+30,R2; _push_integer
    0000012A 420B                   JSR         @R2
    0000012C E400                   MOV         #0,R4
    0000012E A019                   BRA         L1062
    00000130 0009                   NOP
    00000132              L1090:                            
        choose.c    35                    restore();
        choose.c    36                    return;
        choose.c    37            }
        choose.c    38    
        choose.c    39            push(N);
    00000132 DE11                   MOV.L       L1104+6,R14; _push
    00000134 4E0B                   JSR         @R14
    00000136 64C2                   MOV.L       @R12,R4
        choose.c    40            factorial();
    00000138 DB16                   MOV.L       L1104+34,R11; _factorial
    0000013A 4B0B                   JSR         @R11
    0000013C 0009                   NOP
        choose.c    41    
        choose.c    42            push(K);
    0000013E 4E0B                   JSR         @R14
    00000140 64D2                   MOV.L       @R13,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:48  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        choose.c    43            factorial();
    00000142 4B0B                   JSR         @R11
    00000144 0009                   NOP
        choose.c    44    
        choose.c    45            divide();
    00000146 D214                   MOV.L       L1104+38,R2; _divide
    00000148 420B                   JSR         @R2
    0000014A 0009                   NOP
        choose.c    46    
        choose.c    47            push(N);
    0000014C 4E0B                   JSR         @R14
    0000014E 64C2                   MOV.L       @R12,R4
        choose.c    48            push(K);
    00000150 4E0B                   JSR         @R14
    00000152 64D2                   MOV.L       @R13,R4
        choose.c    49            subtract();
    00000154 D311                   MOV.L       L1104+42,R3; _subtract
    00000156 430B                   JSR         @R3
    00000158 0009                   NOP
        choose.c    50            factorial();
    0000015A 4B0B                   JSR         @R11
    0000015C 0009                   NOP
        choose.c    51    
        choose.c    52            divide();
    0000015E D20E                   MOV.L       L1104+38,R2; _divide
    00000160 420B                   JSR         @R2
    00000162 0009                   NOP
    00000164              L1062:
        choose.c    53    
        choose.c    54            restore();
    00000164 4F26                   LDS.L       @R15+,PR
    00000166 6BF6                   MOV.L       @R15+,R11
    00000168 D30D                   MOV.L       L1104+46,R3; _restore
    0000016A 6CF6                   MOV.L       @R15+,R12
    0000016C 6DF6                   MOV.L       @R15+,R13
    0000016E 432B                   JMP         @R3
    00000170 6EF6                   MOV.L       @R15+,R14
    00000172              L1104:                            
    00000172 0570                   .DATA.W     H'0570
    00000174 <00000000>             .DATA.L     _symtab
    00000178 <00000000>             .DATA.L     _push
    0000017C <00000000>             .DATA.L     _eval
    00000180 <00000000>             .DATA.L     _save
    00000184 <00000000>             .DATA.L     _p2
    00000188 <00000000>             .DATA.L     _pop
    0000018C <00000000>             .DATA.L     _p1
    00000190 <00000000>             .DATA.L     _push_integer
    00000194 <00000000>             .DATA.L     _factorial
    00000198 <00000000>             .DATA.L     _divide
    0000019C <00000000>             .DATA.L     _subtract
    000001A0 <00000000>             .DATA.L     _restore
        choose.c    55    }
        choose.c    56    
        choose.c    57    int
        choose.c    58    choose_check_args(void)
    000001A4              _choose_check_args:              ; function: choose_check_args
                                                           ; frame size=12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:48  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001A4 2FE6                   MOV.L       R14,@-R15
    000001A6 4F22                   STS.L       PR,@-R15
        choose.c    59    {
        choose.c    60            if (isnum(N) && lessp(N, zero))
    000001A8 DE23                   MOV.L       L1105+2,R14; _p1
    000001AA 7FFC                   ADD         #-4,R15
    000001AC 60E2                   MOV.L       @R14,R0
    000001AE 8408                   MOV.B       @(8,R0),R0
    000001B0 600C                   EXTU.B      R0,R0
    000001B2 8801                   CMP/EQ      #1,R0
    000001B4 8D02                   BT/S        L1093
    000001B6 2F02                   MOV.L       R0,@R15
    000001B8 8802                   CMP/EQ      #2,R0
    000001BA 8B06                   BF          L1092
    000001BC              L1093:                            
    000001BC D31F                   MOV.L       L1105+6,R3 ; _zero
    000001BE 6532                   MOV.L       @R3,R5
    000001C0 D21F                   MOV.L       L1105+10,R2; _lessp
    000001C2 420B                   JSR         @R2
    000001C4 64E2                   MOV.L       @R14,R4
    000001C6 2008                   TST         R0,R0
    000001C8 8B2B                   BF          L1065
    000001CA              L1092:                            
        choose.c    61                    return 0;
        choose.c    62            else if (isnum(K) && lessp(K, zero))
    000001CA D31E                   MOV.L       L1105+14,R3; _p2
    000001CC 6032                   MOV.L       @R3,R0
    000001CE 8408                   MOV.B       @(8,R0),R0
    000001D0 600C                   EXTU.B      R0,R0
    000001D2 8801                   CMP/EQ      #1,R0
    000001D4 8D02                   BT/S        L1097
    000001D6 2F02                   MOV.L       R0,@R15
    000001D8 8802                   CMP/EQ      #2,R0
    000001DA 8B07                   BF          L1096
    000001DC              L1097:                            
    000001DC D317                   MOV.L       L1105+6,R3 ; _zero
    000001DE 6532                   MOV.L       @R3,R5
    000001E0 D218                   MOV.L       L1105+14,R2; _p2
    000001E2 D317                   MOV.L       L1105+10,R3; _lessp
    000001E4 430B                   JSR         @R3
    000001E6 6422                   MOV.L       @R2,R4
    000001E8 2008                   TST         R0,R0
    000001EA 8B1A                   BF          L1065
    000001EC              L1096:                            
        choose.c    63                    return 0;
        choose.c    64            else if (isnum(N) && isnum(K) && lessp(N, K))
    000001EC 60E2                   MOV.L       @R14,R0
    000001EE 8408                   MOV.B       @(8,R0),R0
    000001F0 600C                   EXTU.B      R0,R0
    000001F2 8801                   CMP/EQ      #1,R0
    000001F4 8D02                   BT/S        L1100
    000001F6 2F02                   MOV.L       R0,@R15
    000001F8 8802                   CMP/EQ      #2,R0
    000001FA 8B17                   BF          L1099
    000001FC              L1100:                            
    000001FC D311                   MOV.L       L1105+14,R3; _p2
    000001FE 6032                   MOV.L       @R3,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:48  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000200 8408                   MOV.B       @(8,R0),R0
    00000202 600C                   EXTU.B      R0,R0
    00000204 8801                   CMP/EQ      #1,R0
    00000206 8905                   BT          L1101
    00000208 D30E                   MOV.L       L1105+14,R3; _p2
    0000020A 6032                   MOV.L       @R3,R0
    0000020C 8408                   MOV.B       @(8,R0),R0
    0000020E 600C                   EXTU.B      R0,R0
    00000210 8802                   CMP/EQ      #2,R0
    00000212 8B0B                   BF          L1099
    00000214              L1101:                            
    00000214 D20B                   MOV.L       L1105+14,R2; _p2
    00000216 6522                   MOV.L       @R2,R5
    00000218 D309                   MOV.L       L1105+10,R3; _lessp
    0000021A 430B                   JSR         @R3
    0000021C 64E2                   MOV.L       @R14,R4
    0000021E 2008                   TST         R0,R0
    00000220 8904                   BT          L1099
    00000222              L1065:
        choose.c    65                    return 0;
    00000222 E000                   MOV         #0,R0
    00000224 7F04                   ADD         #4,R15
    00000226 4F26                   LDS.L       @R15+,PR
    00000228 000B                   RTS
    0000022A 6EF6                   MOV.L       @R15+,R14
    0000022C              L1099:                            
        choose.c    66            else
        choose.c    67                    return 1;
    0000022C E001                   MOV         #1,R0
        choose.c    68    }
    0000022E              L1094:                            
    0000022E 7F04                   ADD         #4,R15
    00000230 4F26                   LDS.L       @R15+,PR
    00000232 000B                   RTS
    00000234 6EF6                   MOV.L       @R15+,R14
    00000236              L1105:                            
    00000236 0000                   .DATA.W     0
    00000238 <00000000>             .DATA.L     _p1
    0000023C <00000000>             .DATA.L     _zero
    00000240 <00000000>             .DATA.L     _lessp
    00000244 <00000000>             .DATA.L     _p2
        choose.c    69    



















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:48  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       69



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000248 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000248 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           14
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            51






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk3A34.tmp 

