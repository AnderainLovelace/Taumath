SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:50  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\condense.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      condense.c     1    // Condense an expression by factoring common terms.
      condense.c     2                                                                                    
      condense.c     3    #include "stdafx.h"
      condense.c     4    #include "defs.h"
      condense.c     5    
      condense.c     6    void
      condense.c     7    eval_condense(void)
P   00000000              _eval_condense:                  ; function: eval_condense
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
      condense.c     8    {
      condense.c     9            push(cadr(p1));
    00000004 DE39                   MOV.L       L1095+4,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1066
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1068
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1066:                            
    00000014 9368                   MOV.W       L1095,R3   ; H'0570
    00000016 D236                   MOV.L       L1095+8,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1068:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1065
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1067
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1069
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1067:                            
    00000030 935A                   MOV.W       L1095,R3   ; H'0570
    00000032 D22F                   MOV.L       L1095+8,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1069:                            
    00000038 A004                   BRA         L1070
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1065:                            
    0000003C 9354                   MOV.W       L1095,R3   ; H'0570
    0000003E D22C                   MOV.L       L1095+8,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1070:                            
    00000044 D32B                   MOV.L       L1095+12,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:50  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      condense.c    10            eval();
    0000004A D22B                   MOV.L       L1095+16,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
      condense.c    11            Condense();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
      condense.c    12    }
      condense.c    13    
      condense.c    14    void
      condense.c    15    Condense(void)
    00000054              _Condense:                       ; function: Condense
                                                           ; frame size=8
    00000054 4F22                   STS.L       PR,@-R15
    00000056 7FFC                   ADD         #-4,R15
      condense.c    16    {
      condense.c    17            int tmp;
      condense.c    18            tmp = expanding;
    00000058 D228                   MOV.L       L1095+20,R2; _expanding
    0000005A 6322                   MOV.L       @R2,R3
      condense.c    19            save();
    0000005C D128                   MOV.L       L1095+24,R1; _save
    0000005E 410B                   JSR         @R1
    00000060 2F32                   MOV.L       R3,@R15
      condense.c    20            yycondense();
    00000062 B00A                   BSR         _yycondense
    00000064 0009                   NOP
      condense.c    21            restore();
    00000066 D127                   MOV.L       L1095+28,R1; _restore
    00000068 410B                   JSR         @R1
    0000006A 0009                   NOP
      condense.c    22            expanding = tmp;
    0000006C 63F2                   MOV.L       @R15,R3
    0000006E D123                   MOV.L       L1095+20,R1; _expanding
    00000070 2132                   MOV.L       R3,@R1
      condense.c    23    }
    00000072 7F04                   ADD         #4,R15
    00000074 4F26                   LDS.L       @R15+,PR
    00000076 000B                   RTS
    00000078 0009                   NOP
      condense.c    24    
      condense.c    25    void
      condense.c    26    yycondense(void)
    0000007A              _yycondense:                     ; function: yycondense
                                                           ; frame size=24
      condense.c    27    {
      condense.c    28            expanding = 0;
    0000007A E200                   MOV         #0,R2
    0000007C D31F                   MOV.L       L1095+20,R3; _expanding
    0000007E 2FE6                   MOV.L       R14,@-R15
    00000080 2FD6                   MOV.L       R13,@-R15
    00000082 2FC6                   MOV.L       R12,@-R15
    00000084 2FB6                   MOV.L       R11,@-R15
    00000086 2FA6                   MOV.L       R10,@-R15
    00000088 4F22                   STS.L       PR,@-R15
    0000008A 2322                   MOV.L       R2,@R3
      condense.c    29    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:50  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      condense.c    30            p1 = pop();
    0000008C DC17                   MOV.L       L1095+4,R12; _p1
    0000008E D21E                   MOV.L       L1095+32,R2; _pop
    00000090 420B                   JSR         @R2
    00000092 0009                   NOP
    00000094 2C02                   MOV.L       R0,@R12
    00000096 6403                   MOV         R0,R4
    00000098 DD16                   MOV.L       L1095+12,R13; _push
    0000009A 8448                   MOV.B       @(8,R4),R0
    0000009C 2008                   TST         R0,R0
    0000009E 8B02                   BF          L1072
    000000A0 62C2                   MOV.L       @R12,R2
    000000A2 A004                   BRA         L1073
    000000A4 6322                   MOV.L       @R2,R3
    000000A6              L1072:                            
    000000A6 921F                   MOV.W       L1095,R2   ; H'0570
    000000A8 D111                   MOV.L       L1095+8,R1 ; _symtab
    000000AA 6312                   MOV.L       @R1,R3
    000000AC 332C                   ADD         R2,R3
    000000AE              L1073:                            
    000000AE D010                   MOV.L       L1095+8,R0 ; _symtab
    000000B0 6202                   MOV.L       @R0,R2
    000000B2 720C                   ADD         #12,R2
    000000B4 3320                   CMP/EQ      R2,R3
    000000B6 8903                   BT          L1071
      condense.c    31    
      condense.c    32            if (car(p1) != symbol(ADD)) {
      condense.c    33                    push(p1);
    000000B8 4D0B                   JSR         @R13
    000000BA 0009                   NOP
      condense.c    34                    return;
    000000BC A0B8                   BRA         L1074
    000000BE 0009                   NOP
    000000C0              L1071:                            
      condense.c    35            }
      condense.c    36    
      condense.c    37            // get gcd of all terms
      condense.c    38    
      condense.c    39            p3 = cdr(p1);
    000000C0 DE12                   MOV.L       L1095+36,R14; _p3
    000000C2 63C2                   MOV.L       @R12,R3
    000000C4 8438                   MOV.B       @(8,R3),R0
    000000C6 2008                   TST         R0,R0
    000000C8 8B02                   BF          L1075
    000000CA 62C2                   MOV.L       @R12,R2
    000000CC A004                   BRA         L1076
    000000CE 5221                   MOV.L       @(4,R2),R2
    000000D0              L1075:                            
    000000D0 930A                   MOV.W       L1095,R3   ; H'0570
    000000D2 D107                   MOV.L       L1095+8,R1 ; _symtab
    000000D4 6212                   MOV.L       @R1,R2
    000000D6 323C                   ADD         R3,R2
    000000D8              L1076:                            
    000000D8 2E22                   MOV.L       R2,@R14
      condense.c    40            push(car(p3));
    000000DA 6423                   MOV         R2,R4
    000000DC 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:50  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000DE 2008                   TST         R0,R0
    000000E0 8B16                   BF          L1077
    000000E2 64E2                   MOV.L       @R14,R4
    000000E4 A018                   BRA         L1078
    000000E6 6442                   MOV.L       @R4,R4
    000000E8              L1095:                            
    000000E8 0570                   .DATA.W     H'0570
    000000EA 0000                   .DATA.W     0
    000000EC <00000000>             .DATA.L     _p1
    000000F0 <00000000>             .DATA.L     _symtab
    000000F4 <00000000>             .DATA.L     _push
    000000F8 <00000000>             .DATA.L     _eval
    000000FC <00000000>             .DATA.L     _expanding
    00000100 <00000000>             .DATA.L     _save
    00000104 <00000000>             .DATA.L     _restore
    00000108 <00000000>             .DATA.L     _pop
    0000010C <00000000>             .DATA.L     _p3
    00000110              L1077:                            
    00000110 9367                   MOV.W       L1096,R3   ; H'0570
    00000112 D234                   MOV.L       L1096+2,R2 ; _symtab
    00000114 6422                   MOV.L       @R2,R4
    00000116 343C                   ADD         R3,R4
    00000118              L1078:                            
    00000118 4D0B                   JSR         @R13
    0000011A 0009                   NOP
      condense.c    41            p3 = cdr(p3);
    0000011C 62E2                   MOV.L       @R14,R2
    0000011E 8428                   MOV.B       @(8,R2),R0
    00000120 2008                   TST         R0,R0
    00000122 8B02                   BF          L1079
    00000124 62E2                   MOV.L       @R14,R2
    00000126 A004                   BRA         L1080
    00000128 5321                   MOV.L       @(4,R2),R3
    0000012A              L1079:                            
    0000012A 925A                   MOV.W       L1096,R2   ; H'0570
    0000012C D12D                   MOV.L       L1096+2,R1 ; _symtab
    0000012E 6312                   MOV.L       @R1,R3
    00000130 332C                   ADD         R2,R3
    00000132              L1080:                            
    00000132 2E32                   MOV.L       R3,@R14
    00000134 DB2C                   MOV.L       L1096+6,R11; _gcd
      condense.c    42            while (iscons(p3)) {
    00000136 A01B                   BRA         L1081
    00000138 0009                   NOP
    0000013A              L1082:                            
      condense.c    43                    push(car(p3));
    0000013A 64E2                   MOV.L       @R14,R4
    0000013C 8448                   MOV.B       @(8,R4),R0
    0000013E 2008                   TST         R0,R0
    00000140 8B02                   BF          L1083
    00000142 64E2                   MOV.L       @R14,R4
    00000144 A004                   BRA         L1084
    00000146 6442                   MOV.L       @R4,R4
    00000148              L1083:                            
    00000148 934B                   MOV.W       L1096,R3   ; H'0570
    0000014A D226                   MOV.L       L1096+2,R2 ; _symtab
    0000014C 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:50  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000014E 343C                   ADD         R3,R4
    00000150              L1084:                            
    00000150 4D0B                   JSR         @R13
    00000152 0009                   NOP
      condense.c    44                    gcd();
    00000154 4B0B                   JSR         @R11
    00000156 0009                   NOP
      condense.c    45                    p3 = cdr(p3);
    00000158 62E2                   MOV.L       @R14,R2
    0000015A 8428                   MOV.B       @(8,R2),R0
    0000015C 2008                   TST         R0,R0
    0000015E 8B02                   BF          L1085
    00000160 62E2                   MOV.L       @R14,R2
    00000162 A004                   BRA         L1086
    00000164 5321                   MOV.L       @(4,R2),R3
    00000166              L1085:                            
    00000166 923C                   MOV.W       L1096,R2   ; H'0570
    00000168 D11E                   MOV.L       L1096+2,R1 ; _symtab
    0000016A 6312                   MOV.L       @R1,R3
    0000016C 332C                   ADD         R2,R3
    0000016E              L1086:                            
    0000016E 2E32                   MOV.L       R3,@R14
    00000170              L1081:                            
    00000170 62E2                   MOV.L       @R14,R2
    00000172 8428                   MOV.B       @(8,R2),R0
    00000174 2008                   TST         R0,R0
    00000176 89E0                   BT          L1082
      condense.c    46            }
      condense.c    47    
      condense.c    48    //printf("condense: this is the gcd of all the terms:\n");
      condense.c    49    //print(stdout, stack[tos - 1]);
      condense.c    50    
      condense.c    51            // divide each term by gcd
      condense.c    52    
      condense.c    53            inverse();
    00000178 D21C                   MOV.L       L1096+10,R2; _inverse
    0000017A 420B                   JSR         @R2
    0000017C 0009                   NOP
      condense.c    54            p2 = pop();
    0000017E DB1C                   MOV.L       L1096+14,R11; _p2
    00000180 D31C                   MOV.L       L1096+18,R3; _pop
    00000182 430B                   JSR         @R3
    00000184 0009                   NOP
    00000186 2B02                   MOV.L       R0,@R11
      condense.c    55            push(zero);
    00000188 D21B                   MOV.L       L1096+22,R2; _zero
    0000018A 4D0B                   JSR         @R13
    0000018C 6422                   MOV.L       @R2,R4
      condense.c    56            p3 = cdr(p1);
    0000018E 61C2                   MOV.L       @R12,R1
    00000190 8418                   MOV.B       @(8,R1),R0
    00000192 2008                   TST         R0,R0
    00000194 8B02                   BF          L1087
    00000196 62C2                   MOV.L       @R12,R2
    00000198 A004                   BRA         L1088
    0000019A 5321                   MOV.L       @(4,R2),R3
    0000019C              L1087:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:50  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000019C 9221                   MOV.W       L1096,R2   ; H'0570
    0000019E D111                   MOV.L       L1096+2,R1 ; _symtab
    000001A0 6312                   MOV.L       @R1,R3
    000001A2 332C                   ADD         R2,R3
    000001A4              L1088:                            
    000001A4 2E32                   MOV.L       R3,@R14
    000001A6 DA15                   MOV.L       L1096+26,R10; _add
    000001A8 DC15                   MOV.L       L1096+30,R12; _multiply
      condense.c    57            while (iscons(p3)) {
    000001AA A030                   BRA         L1089
    000001AC 0009                   NOP
    000001AE              L1090:                            
      condense.c    58                    push(p2);
    000001AE 4D0B                   JSR         @R13
    000001B0 64B2                   MOV.L       @R11,R4
      condense.c    59                    push(car(p3));
    000001B2 64E2                   MOV.L       @R14,R4
    000001B4 8448                   MOV.B       @(8,R4),R0
    000001B6 2008                   TST         R0,R0
    000001B8 8B02                   BF          L1091
    000001BA 64E2                   MOV.L       @R14,R4
    000001BC A004                   BRA         L1092
    000001BE 6442                   MOV.L       @R4,R4
    000001C0              L1091:                            
    000001C0 930F                   MOV.W       L1096,R3   ; H'0570
    000001C2 D208                   MOV.L       L1096+2,R2 ; _symtab
    000001C4 6422                   MOV.L       @R2,R4
    000001C6 343C                   ADD         R3,R4
    000001C8              L1092:                            
    000001C8 4D0B                   JSR         @R13
    000001CA 0009                   NOP
      condense.c    60                    multiply();
    000001CC 4C0B                   JSR         @R12
    000001CE 0009                   NOP
      condense.c    61                    add();
    000001D0 4A0B                   JSR         @R10
    000001D2 0009                   NOP
      condense.c    62                    p3 = cdr(p3);
    000001D4 62E2                   MOV.L       @R14,R2
    000001D6 8428                   MOV.B       @(8,R2),R0
    000001D8 2008                   TST         R0,R0
    000001DA 8B13                   BF          L1093
    000001DC 62E2                   MOV.L       @R14,R2
    000001DE A015                   BRA         L1094
    000001E0 5321                   MOV.L       @(4,R2),R3
    000001E2              L1096:                            
    000001E2 0570                   .DATA.W     H'0570
    000001E4 <00000000>             .DATA.L     _symtab
    000001E8 <00000000>             .DATA.L     _gcd
    000001EC <00000000>             .DATA.L     _inverse
    000001F0 <00000000>             .DATA.L     _p2
    000001F4 <00000000>             .DATA.L     _pop
    000001F8 <00000000>             .DATA.L     _zero
    000001FC <00000000>             .DATA.L     _add
    00000200 <00000000>             .DATA.L     _multiply
    00000204              L1093:                            
    00000204 921B                   MOV.W       L1097,R2   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:50  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000206 D10E                   MOV.L       L1097+2,R1 ; _symtab
    00000208 6312                   MOV.L       @R1,R3
    0000020A 332C                   ADD         R2,R3
    0000020C              L1094:                            
    0000020C 2E32                   MOV.L       R3,@R14
    0000020E              L1089:                            
    0000020E 62E2                   MOV.L       @R14,R2
    00000210 8428                   MOV.B       @(8,R2),R0
    00000212 2008                   TST         R0,R0
    00000214 89CB                   BT          L1090
      condense.c    63            }
      condense.c    64    
      condense.c    65            // We multiplied above w/o expanding so sum factors cancelled.
      condense.c    66    
      condense.c    67            // Now we expand which which normalizes the result and, in some cases,
      condense.c    68            // simplifies it too (see test case H).
      condense.c    69    
      condense.c    70            yyexpand();
    00000216 D20B                   MOV.L       L1097+6,R2 ; _yyexpand
    00000218 420B                   JSR         @R2
    0000021A 0009                   NOP
      condense.c    71    
      condense.c    72            // multiply result by gcd
      condense.c    73    
      condense.c    74            push(p2);
    0000021C 4D0B                   JSR         @R13
    0000021E 64B2                   MOV.L       @R11,R4
      condense.c    75            divide();
    00000220 4F26                   LDS.L       @R15+,PR
    00000222 6AF6                   MOV.L       @R15+,R10
    00000224 D308                   MOV.L       L1097+10,R3; _divide
    00000226 6BF6                   MOV.L       @R15+,R11
    00000228 6CF6                   MOV.L       @R15+,R12
    0000022A 6DF6                   MOV.L       @R15+,R13
    0000022C 432B                   JMP         @R3
    0000022E 6EF6                   MOV.L       @R15+,R14
    00000230              L1074:                            
      condense.c    76    }
    00000230 4F26                   LDS.L       @R15+,PR
    00000232 6AF6                   MOV.L       @R15+,R10
    00000234 6BF6                   MOV.L       @R15+,R11
    00000236 6CF6                   MOV.L       @R15+,R12
    00000238 6DF6                   MOV.L       @R15+,R13
    0000023A 000B                   RTS
    0000023C 6EF6                   MOV.L       @R15+,R14
    0000023E              L1097:                            
    0000023E 0570                   .DATA.W     H'0570
    00000240 <00000000>             .DATA.L     _symtab
    00000244 <00000000>             .DATA.L     _yyexpand
    00000248 <00000000>             .DATA.L     _divide











SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:50  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       76



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000024C Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000024C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           17
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            53






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk418A.tmp 

