SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\derivative.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative     1    /* derivative */
      derivative     2    
      derivative     3    #include "stdafx.h"
      derivative     4    #include "defs.h"
      derivative     5    
      derivative     6    #define F p3
      derivative     7    #define X p4
      derivative     8    #define N p5
      derivative     9    
      derivative    10    void
      derivative    11    eval_derivative(void)
P   00000000              _eval_derivative:                ; function: eval_derivative
                                                           ; frame size=36
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A 2F96                   MOV.L       R9,@-R15
    0000000C 2F86                   MOV.L       R8,@-R15
    0000000E 4F22                   STS.L       PR,@-R15
    00000010 9867                   MOV.W       L1726,R8   ; H'0570
    00000012 7FFC                   ADD         #-4,R15
    00000014 DA33                   MOV.L       L1726+2,R10; _p4
    00000016 DB34                   MOV.L       L1726+6,R11; _pop
    00000018 DC34                   MOV.L       L1726+10,R12; _p5
    0000001A DD35                   MOV.L       L1726+14,R13; _push
    0000001C DE35                   MOV.L       L1726+18,R14; _p1
      derivative    12    {
      derivative    13            int i, n;
      derivative    14    
      derivative    15            // evaluate 1st arg to get function F
      derivative    16    
      derivative    17            p1 = cdr(p1);
    0000001E 62E2                   MOV.L       @R14,R2
    00000020 8428                   MOV.B       @(8,R2),R0
    00000022 2008                   TST         R0,R0
    00000024 8B02                   BF          L1145
    00000026 62E2                   MOV.L       @R14,R2
    00000028 A004                   BRA         L1146
    0000002A 5321                   MOV.L       @(4,R2),R3
    0000002C              L1145:                            
    0000002C 9259                   MOV.W       L1726,R2   ; H'0570
    0000002E D132                   MOV.L       L1726+22,R1; _symtab
    00000030 6312                   MOV.L       @R1,R3
    00000032 332C                   ADD         R2,R3
    00000034              L1146:                            
    00000034 2E32                   MOV.L       R3,@R14
      derivative    18            push(car(p1));
    00000036 6433                   MOV         R3,R4
    00000038 8448                   MOV.B       @(8,R4),R0
    0000003A 2008                   TST         R0,R0
    0000003C 8B02                   BF          L1147
    0000003E 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000040 A004                   BRA         L1148
    00000042 6442                   MOV.L       @R4,R4
    00000044              L1147:                            
    00000044 934D                   MOV.W       L1726,R3   ; H'0570
    00000046 D22C                   MOV.L       L1726+22,R2; _symtab
    00000048 6422                   MOV.L       @R2,R4
    0000004A 343C                   ADD         R3,R4
    0000004C              L1148:                            
    0000004C 4D0B                   JSR         @R13
    0000004E 0009                   NOP
      derivative    19            eval();
    00000050 D32A                   MOV.L       L1726+26,R3; _eval
    00000052 430B                   JSR         @R3
    00000054 0009                   NOP
      derivative    20    
      derivative    21            // evaluate 2nd arg and then...
      derivative    22    
      derivative    23            // example      result of 2nd arg       what to do
      derivative    24            //
      derivative    25            // d(f)         nil                     guess X, N = nil
      derivative    26            // d(f,2)       2                       guess X, N = 2
      derivative    27            // d(f,x)       x                       X = x, N = nil
      derivative    28            // d(f,x,2)     x                       X = x, N = 2
      derivative    29            // d(f,x,y)     x                       X = x, N = y
      derivative    30    
      derivative    31            p1 = cdr(p1);
    00000056 63E2                   MOV.L       @R14,R3
    00000058 8438                   MOV.B       @(8,R3),R0
    0000005A 2008                   TST         R0,R0
    0000005C 8B02                   BF          L1149
    0000005E 62E2                   MOV.L       @R14,R2
    00000060 A004                   BRA         L1150
    00000062 5221                   MOV.L       @(4,R2),R2
    00000064              L1149:                            
    00000064 933D                   MOV.W       L1726,R3   ; H'0570
    00000066 D124                   MOV.L       L1726+22,R1; _symtab
    00000068 6212                   MOV.L       @R1,R2
    0000006A 323C                   ADD         R3,R2
    0000006C              L1150:                            
    0000006C 2E22                   MOV.L       R2,@R14
      derivative    32            push(car(p1));
    0000006E 6423                   MOV         R2,R4
    00000070 8448                   MOV.B       @(8,R4),R0
    00000072 2008                   TST         R0,R0
    00000074 8B02                   BF          L1151
    00000076 64E2                   MOV.L       @R14,R4
    00000078 A004                   BRA         L1152
    0000007A 6442                   MOV.L       @R4,R4
    0000007C              L1151:                            
    0000007C 9331                   MOV.W       L1726,R3   ; H'0570
    0000007E D21E                   MOV.L       L1726+22,R2; _symtab
    00000080 6422                   MOV.L       @R2,R4
    00000082 343C                   ADD         R3,R4
    00000084              L1152:                            
    00000084 4D0B                   JSR         @R13
    00000086 0009                   NOP
      derivative    33            eval();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000088 D31C                   MOV.L       L1726+26,R3; _eval
    0000008A 430B                   JSR         @R3
    0000008C 0009                   NOP
      derivative    34    
      derivative    35            p2 = pop();
    0000008E D91C                   MOV.L       L1726+30,R9; _p2
    00000090 4B0B                   JSR         @R11
    00000092 0009                   NOP
    00000094 2902                   MOV.L       R0,@R9
    00000096 6403                   MOV         R0,R4
    00000098 D317                   MOV.L       L1726+22,R3; _symtab
    0000009A 6232                   MOV.L       @R3,R2
    0000009C 328C                   ADD         R8,R2
    0000009E 3420                   CMP/EQ      R2,R4
    000000A0 8B06                   BF          L1153
      derivative    36            if (p2 == symbol(NIL)) {
      derivative    37                    guess();
    000000A2 D118                   MOV.L       L1726+34,R1; _guess
    000000A4 410B                   JSR         @R1
    000000A6 0009                   NOP
      derivative    38                    push(symbol(NIL));
    000000A8 D313                   MOV.L       L1726+22,R3; _symtab
    000000AA 6432                   MOV.L       @R3,R4
    000000AC A00C                   BRA         L1723
    000000AE 348C                   ADD         R8,R4
    000000B0              L1153:                            
      derivative    39            } else if (isnum(p2)) {
    000000B0 8448                   MOV.B       @(8,R4),R0
    000000B2 600C                   EXTU.B      R0,R0
    000000B4 8801                   CMP/EQ      #1,R0
    000000B6 8D03                   BT/S        L1156
    000000B8 6503                   MOV         R0,R5
    000000BA 6053                   MOV         R5,R0
    000000BC 8802                   CMP/EQ      #2,R0
    000000BE 8B07                   BF          L1155
    000000C0              L1156:                            
      derivative    40                    guess();
    000000C0 D310                   MOV.L       L1726+34,R3; _guess
    000000C2 430B                   JSR         @R3
    000000C4 0009                   NOP
      derivative    41                    push(p2);
    000000C6 6492                   MOV.L       @R9,R4
    000000C8              L1723:                            
    000000C8 4D0B                   JSR         @R13
    000000CA 0009                   NOP
    000000CC A031                   BRA         L1154
    000000CE 0009                   NOP
    000000D0              L1155:                            
      derivative    42            } else {
      derivative    43                    push(p2);
    000000D0 4D0B                   JSR         @R13
    000000D2 0009                   NOP
      derivative    44                    p1 = cdr(p1);
    000000D4 62E2                   MOV.L       @R14,R2
    000000D6 8428                   MOV.B       @(8,R2),R0
    000000D8 2008                   TST         R0,R0
    000000DA 8B15                   BF          L1158




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000DC 62E2                   MOV.L       @R14,R2
    000000DE A017                   BRA         L1159
    000000E0 5321                   MOV.L       @(4,R2),R3
    000000E2              L1726:                            
    000000E2 0570                   .DATA.W     H'0570
    000000E4 <00000000>             .DATA.L     _p4
    000000E8 <00000000>             .DATA.L     _pop
    000000EC <00000000>             .DATA.L     _p5
    000000F0 <00000000>             .DATA.L     _push
    000000F4 <00000000>             .DATA.L     _p1
    000000F8 <00000000>             .DATA.L     _symtab
    000000FC <00000000>             .DATA.L     _eval
    00000100 <00000000>             .DATA.L     _p2
    00000104 <00000000>             .DATA.L     _guess
    00000108              L1158:                            
    00000108 9272                   MOV.W       L1727,R2   ; H'0570
    0000010A D13A                   MOV.L       L1727+4,R1 ; _symtab
    0000010C 6312                   MOV.L       @R1,R3
    0000010E 332C                   ADD         R2,R3
    00000110              L1159:                            
    00000110 2E32                   MOV.L       R3,@R14
      derivative    45                    push(car(p1));
    00000112 6433                   MOV         R3,R4
    00000114 8448                   MOV.B       @(8,R4),R0
    00000116 2008                   TST         R0,R0
    00000118 8B02                   BF          L1160
    0000011A 64E2                   MOV.L       @R14,R4
    0000011C A004                   BRA         L1161
    0000011E 6442                   MOV.L       @R4,R4
    00000120              L1160:                            
    00000120 9366                   MOV.W       L1727,R3   ; H'0570
    00000122 D234                   MOV.L       L1727+4,R2 ; _symtab
    00000124 6422                   MOV.L       @R2,R4
    00000126 343C                   ADD         R3,R4
    00000128              L1161:                            
    00000128 4D0B                   JSR         @R13
    0000012A 0009                   NOP
      derivative    46                    eval();
    0000012C D332                   MOV.L       L1727+8,R3 ; _eval
    0000012E 430B                   JSR         @R3
    00000130 0009                   NOP
    00000132              L1154:                            
      derivative    47            }
      derivative    48    
      derivative    49            N = pop();
    00000132 4B0B                   JSR         @R11
    00000134 0009                   NOP
      derivative    50            X = pop();
    00000136 4B0B                   JSR         @R11
    00000138 2C02                   MOV.L       R0,@R12
      derivative    51            F = pop();
    0000013A 4B0B                   JSR         @R11
    0000013C 2A02                   MOV.L       R0,@R10
    0000013E D22F                   MOV.L       L1727+12,R2; _p3
    00000140 2202                   MOV.L       R0,@R2
      derivative    52    
      derivative    53            while (1) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000142              L1163:                            
    00000142 64C2                   MOV.L       @R12,R4
    00000144 8448                   MOV.B       @(8,R4),R0
    00000146 600C                   EXTU.B      R0,R0
    00000148 8801                   CMP/EQ      #1,R0
    0000014A 8D03                   BT/S        L1165
    0000014C 6503                   MOV         R0,R5
    0000014E 6053                   MOV         R5,R0
    00000150 8802                   CMP/EQ      #2,R0
    00000152 8B0E                   BF          L1164
    00000154              L1165:                            
      derivative    54    
      derivative    55                    // N might be a symbol instead of a number
      derivative    56    
      derivative    57                    if (isnum(N)) {
      derivative    58                            push(N);
    00000154 4D0B                   JSR         @R13
    00000156 0009                   NOP
      derivative    59                            n = pop_integer();
    00000158 D929                   MOV.L       L1727+16,R9; _pop_integer
    0000015A 490B                   JSR         @R9
    0000015C 0009                   NOP
    0000015E 6903                   MOV         R0,R9
      derivative    60                            if (n == (int) 0x80000000)
    00000160 D428                   MOV.L       L1727+20,R4; H'80000000
    00000162 3940                   CMP/EQ      R4,R9
    00000164 8B07                   BF          L1167
      derivative    61                                    stop("nth derivative: check n");
    00000166 D428                   MOV.L       L1727+24,R4; L1066
    00000168 D228                   MOV.L       L1727+28,R2; _stop
    0000016A 420B                   JSR         @R2
    0000016C 0009                   NOP
    0000016E A002                   BRA         L1167
    00000170 0009                   NOP
    00000172              L1164:                            
      derivative    62                    } else
      derivative    63                            n = 1;
    00000172 E401                   MOV         #1,R4
    00000174 6943                   MOV         R4,R9
    00000176              L1167:                            
      derivative    64    
      derivative    65                    push(F);
    00000176 D221                   MOV.L       L1727+12,R2; _p3
    00000178 4D0B                   JSR         @R13
    0000017A 6422                   MOV.L       @R2,R4
      derivative    66    
      derivative    67                    if (n >= 0) {
    0000017C 4911                   CMP/PZ      R9
    0000017E 8F0E                   BF/S        L1168
    00000180 E400                   MOV         #0,R4
      derivative    68                            for (i = 0; i < n; i++) {
    00000182 4915                   CMP/PL      R9
    00000184 8F1A                   BF/S        L1171
    00000186 2F42                   MOV.L       R4,@R15
    00000188              L1170:                            
      derivative    69                                    push(X);
    00000188 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000018A 64A2                   MOV.L       @R10,R4
      derivative    70                                    derivative();
    0000018C B09C                   BSR         _derivative
    0000018E 0009                   NOP
    00000190 63F2                   MOV.L       @R15,R3
    00000192 7301                   ADD         #1,R3
    00000194 3393                   CMP/GE      R9,R3
    00000196 8FF7                   BF/S        L1170
    00000198 2F32                   MOV.L       R3,@R15
    0000019A A00F                   BRA         L1171
    0000019C 0009                   NOP
    0000019E              L1168:                            
      derivative    71                            }
      derivative    72                    } else {
      derivative    73                            n = -n;
    0000019E 699B                   NEG         R9,R9
    000001A0 2F92                   MOV.L       R9,@R15
      derivative    74                            for (i = 0; i < n; i++) {
    000001A2 63F2                   MOV.L       @R15,R3
    000001A4 4315                   CMP/PL      R3
    000001A6 8F09                   BF/S        L1171
    000001A8 6943                   MOV         R4,R9
    000001AA              L1173:                            
      derivative    75                                    push(X);
    000001AA 4D0B                   JSR         @R13
    000001AC 64A2                   MOV.L       @R10,R4
      derivative    76                                    integral();
    000001AE D318                   MOV.L       L1727+32,R3; _integral
    000001B0 430B                   JSR         @R3
    000001B2 0009                   NOP
    000001B4 62F2                   MOV.L       @R15,R2
    000001B6 7901                   ADD         #1,R9
    000001B8 3923                   CMP/GE      R2,R9
    000001BA 8BF6                   BF          L1173
    000001BC              L1171:                            
      derivative    77                            }
      derivative    78                    }
      derivative    79    
      derivative    80                    F = pop();
    000001BC 4B0B                   JSR         @R11
    000001BE 0009                   NOP
    000001C0 D10E                   MOV.L       L1727+12,R1; _p3
    000001C2 2102                   MOV.L       R0,@R1
      derivative    81    
      derivative    82                    // if N is nil then arglist is exhausted
      derivative    83    
      derivative    84                    if (N == symbol(NIL))
    000001C4 D20B                   MOV.L       L1727+4,R2 ; _symtab
    000001C6 6322                   MOV.L       @R2,R3
    000001C8 61C2                   MOV.L       @R12,R1
    000001CA 338C                   ADD         R8,R3
    000001CC 3130                   CMP/EQ      R3,R1
    000001CE 896E                   BT          L1175
      derivative    85                            break;
      derivative    86    
      derivative    87                    // otherwise...
      derivative    88    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative    89                    // N            arg1            what to do
      derivative    90                    //
      derivative    91                    // number       nil             break
      derivative    92                    // number       number          N = arg1, continue
      derivative    93                    // number       symbol          X = arg1, N = arg2, continue
      derivative    94                    //
      derivative    95                    // symbol       nil             X = N, N = nil, continue
      derivative    96                    // symbol       number          X = N, N = arg1, continue
      derivative    97                    // symbol       symbol          X = N, N = arg1, continue
      derivative    98    
      derivative    99                    if (isnum(N)) {
    000001D0 64C2                   MOV.L       @R12,R4
    000001D2 8448                   MOV.B       @(8,R4),R0
    000001D4 600C                   EXTU.B      R0,R0
    000001D6 8801                   CMP/EQ      #1,R0
    000001D8 8D03                   BT/S        L1177
    000001DA 6403                   MOV         R0,R4
    000001DC 6043                   MOV         R4,R0
    000001DE 8802                   CMP/EQ      #2,R0
    000001E0 8B43                   BF          L1141
    000001E2              L1177:                            
      derivative   100                            p1 = cdr(p1);
    000001E2 62E2                   MOV.L       @R14,R2
    000001E4 8428                   MOV.B       @(8,R2),R0
    000001E6 2008                   TST         R0,R0
    000001E8 8B14                   BF          L1178
    000001EA 62E2                   MOV.L       @R14,R2
    000001EC A016                   BRA         L1179
    000001EE 5321                   MOV.L       @(4,R2),R3
    000001F0              L1727:                            
    000001F0 0570                   .DATA.W     H'0570
    000001F2 0000                   .DATA.W     0
    000001F4 <00000000>             .DATA.L     _symtab
    000001F8 <00000000>             .DATA.L     _eval
    000001FC <00000000>             .DATA.L     _p3
    00000200 <00000000>             .DATA.L     _pop_integer
    00000204 80000000               .DATA.L     H'80000000
    00000208 <00000000>             .DATA.L     L1066
    0000020C <00000000>             .DATA.L     _stop
    00000210 <00000000>             .DATA.L     _integral
    00000214              L1178:                            
    00000214 9283                   MOV.W       L1728,R2   ; H'0570
    00000216 D142                   MOV.L       L1728+2,R1 ; _symtab
    00000218 6312                   MOV.L       @R1,R3
    0000021A 332C                   ADD         R2,R3
    0000021C              L1179:                            
    0000021C 2E32                   MOV.L       R3,@R14
      derivative   101                            push(car(p1));
    0000021E 6433                   MOV         R3,R4
    00000220 8448                   MOV.B       @(8,R4),R0
    00000222 2008                   TST         R0,R0
    00000224 8B02                   BF          L1180
    00000226 64E2                   MOV.L       @R14,R4
    00000228 A004                   BRA         L1181
    0000022A 6442                   MOV.L       @R4,R4
    0000022C              L1180:                            
    0000022C 9377                   MOV.W       L1728,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000022E D23C                   MOV.L       L1728+2,R2 ; _symtab
    00000230 6422                   MOV.L       @R2,R4
    00000232 343C                   ADD         R3,R4
    00000234              L1181:                            
    00000234 4D0B                   JSR         @R13
    00000236 0009                   NOP
      derivative   102                            eval();
    00000238 D33A                   MOV.L       L1728+6,R3 ; _eval
    0000023A 430B                   JSR         @R3
    0000023C 0009                   NOP
      derivative   103                            N = pop();
    0000023E 4B0B                   JSR         @R11
    00000240 0009                   NOP
      derivative   104                            if (N == symbol(NIL))
    00000242 6103                   MOV         R0,R1
    00000244 2C02                   MOV.L       R0,@R12
    00000246 D336                   MOV.L       L1728+2,R3 ; _symtab
    00000248 6232                   MOV.L       @R3,R2
    0000024A 328C                   ADD         R8,R2
    0000024C 3120                   CMP/EQ      R2,R1
    0000024E 892E                   BT          L1175
      derivative   105                                    break;          // arglist exhausted
      derivative   106                            if (isnum(N))
    00000250 64C2                   MOV.L       @R12,R4
    00000252 8448                   MOV.B       @(8,R4),R0
    00000254 600C                   EXTU.B      R0,R0
    00000256 8801                   CMP/EQ      #1,R0
    00000258 8F02                   BF/S        L1729
    0000025A 6403                   MOV         R0,R4
    0000025C AF71                   BRA         L1163
    0000025E 0009                   NOP
    00000260              L1729:                            
    00000260 6043                   MOV         R4,R0
    00000262 8802                   CMP/EQ      #2,R0
    00000264 8B01                   BF          L1730
    00000266 AF6C                   BRA         L1163
    00000268 0009                   NOP
    0000026A              L1730:                            
    0000026A              L1141:
      derivative   107                                    ;               // N = arg1
      derivative   108                            else {
      derivative   109                                    X = N;          // X = arg1
      derivative   110                                    p1 = cdr(p1);
      derivative   111                                    push(car(p1));
      derivative   112                                    eval();
      derivative   113                                    N = pop();      // N = arg2
      derivative   114                            }
      derivative   115                    } else {
      derivative   116                            X = N;                  // X = N
    0000026A 62C2                   MOV.L       @R12,R2
    0000026C 2A22                   MOV.L       R2,@R10
      derivative   117                            p1 = cdr(p1);
    0000026E 61E2                   MOV.L       @R14,R1
    00000270 8418                   MOV.B       @(8,R1),R0
    00000272 2008                   TST         R0,R0
    00000274 8B02                   BF          L1187
    00000276 62E2                   MOV.L       @R14,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000278 A004                   BRA         L1188
    0000027A 5321                   MOV.L       @(4,R2),R3
    0000027C              L1187:                            
    0000027C 924F                   MOV.W       L1728,R2   ; H'0570
    0000027E D128                   MOV.L       L1728+2,R1 ; _symtab
    00000280 6312                   MOV.L       @R1,R3
    00000282 332C                   ADD         R2,R3
    00000284              L1188:                            
    00000284 2E32                   MOV.L       R3,@R14
      derivative   118                            push(car(p1));
    00000286 6433                   MOV         R3,R4
    00000288 8448                   MOV.B       @(8,R4),R0
    0000028A 2008                   TST         R0,R0
    0000028C 8B02                   BF          L1189
    0000028E 64E2                   MOV.L       @R14,R4
    00000290 A004                   BRA         L1190
    00000292 6442                   MOV.L       @R4,R4
    00000294              L1189:                            
    00000294 9343                   MOV.W       L1728,R3   ; H'0570
    00000296 D222                   MOV.L       L1728+2,R2 ; _symtab
    00000298 6422                   MOV.L       @R2,R4
    0000029A 343C                   ADD         R3,R4
    0000029C              L1190:                            
    0000029C 4D0B                   JSR         @R13
    0000029E 0009                   NOP
      derivative   119                            eval();
    000002A0 D320                   MOV.L       L1728+6,R3 ; _eval
    000002A2 430B                   JSR         @R3
    000002A4 0009                   NOP
      derivative   120                            N = pop();              // N = arg1
    000002A6 4B0B                   JSR         @R11
    000002A8 0009                   NOP
    000002AA AF4A                   BRA         L1163
    000002AC 2C02                   MOV.L       R0,@R12
    000002AE              L1175:                            
      derivative   121                    }
      derivative   122            }
      derivative   123    
      derivative   124            push(F); // final result
    000002AE D31E                   MOV.L       L1728+10,R3; _p3
    000002B0 4D0B                   JSR         @R13
    000002B2 6432                   MOV.L       @R3,R4
      derivative   125    }
    000002B4 7F04                   ADD         #4,R15
    000002B6 4F26                   LDS.L       @R15+,PR
    000002B8 68F6                   MOV.L       @R15+,R8
    000002BA 69F6                   MOV.L       @R15+,R9
    000002BC 6AF6                   MOV.L       @R15+,R10
    000002BE 6BF6                   MOV.L       @R15+,R11
    000002C0 6CF6                   MOV.L       @R15+,R12
    000002C2 6DF6                   MOV.L       @R15+,R13
    000002C4 000B                   RTS
    000002C6 6EF6                   MOV.L       @R15+,R14
      derivative   126    
      derivative   127    void
      derivative   128    derivative(void)
    000002C8              _derivative:                     ; function: derivative




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=8
    000002C8 2FE6                   MOV.L       R14,@-R15
    000002CA 4F22                   STS.L       PR,@-R15
      derivative   129    {
      derivative   130            save();
    000002CC D217                   MOV.L       L1728+14,R2; _save
    000002CE 420B                   JSR         @R2
    000002D0 0009                   NOP
      derivative   131            p2 = pop();
    000002D2 DE17                   MOV.L       L1728+18,R14; _p2
    000002D4 D317                   MOV.L       L1728+22,R3; _pop
    000002D6 430B                   JSR         @R3
    000002D8 0009                   NOP
      derivative   132            p1 = pop();
    000002DA D216                   MOV.L       L1728+22,R2; _pop
    000002DC 420B                   JSR         @R2
    000002DE 2E02                   MOV.L       R0,@R14
    000002E0 D315                   MOV.L       L1728+26,R3; _p1
    000002E2 2302                   MOV.L       R0,@R3
      derivative   133            if (isnum(p2))
    000002E4 64E2                   MOV.L       @R14,R4
    000002E6 8448                   MOV.B       @(8,R4),R0
    000002E8 600C                   EXTU.B      R0,R0
    000002EA 8801                   CMP/EQ      #1,R0
    000002EC 8D03                   BT/S        L1192
    000002EE 6403                   MOV         R0,R4
    000002F0 6043                   MOV         R4,R0
    000002F2 8802                   CMP/EQ      #2,R0
    000002F4 8B03                   BF          L1191
    000002F6              L1192:                            
      derivative   134                    stop("undefined function");
    000002F6 D411                   MOV.L       L1728+30,R4; L1075
    000002F8 D311                   MOV.L       L1728+34,R3; _stop
    000002FA 430B                   JSR         @R3
    000002FC 0009                   NOP
    000002FE              L1191:                            
    000002FE D30E                   MOV.L       L1728+26,R3; _p1
    00000300 6032                   MOV.L       @R3,R0
    00000302 8408                   MOV.B       @(8,R0),R0
    00000304 600C                   EXTU.B      R0,R0
    00000306 8804                   CMP/EQ      #4,R0
    00000308 8F23                   BF/S        L1193
    0000030A 64E2                   MOV.L       @R14,R4
      derivative   135            if (istensor(p1))
      derivative   136                    if (istensor(p2))
    0000030C 8448                   MOV.B       @(8,R4),R0
    0000030E 600C                   EXTU.B      R0,R0
    00000310 8804                   CMP/EQ      #4,R0
    00000312 8B19                   BF          L1194
      derivative   137                            d_tensor_tensor();
    00000314 D10B                   MOV.L       L1728+38,R1; _d_tensor_tensor
    00000316 410B                   JSR         @R1
    00000318 0009                   NOP
    0000031A A025                   BRA         L1196
    0000031C 0009                   NOP
    0000031E              L1728:                            
    0000031E 0570                   .DATA.W     H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000320 <00000000>             .DATA.L     _symtab
    00000324 <00000000>             .DATA.L     _eval
    00000328 <00000000>             .DATA.L     _p3
    0000032C <00000000>             .DATA.L     _save
    00000330 <00000000>             .DATA.L     _p2
    00000334 <00000000>             .DATA.L     _pop
    00000338 <00000000>             .DATA.L     _p1
    0000033C <00000000>             .DATA.L     L1075
    00000340 <00000000>             .DATA.L     _stop
    00000344 <00000000>             .DATA.L     _d_tensor_tensor
    00000348              L1194:                            
      derivative   138                    else
      derivative   139                            d_tensor_scalar();
    00000348 D238                   MOV.L       L1731+4,R2 ; _d_tensor_scalar
    0000034A 420B                   JSR         @R2
    0000034C 0009                   NOP
    0000034E A00B                   BRA         L1196
    00000350 0009                   NOP
    00000352              L1193:                            
      derivative   140            else
      derivative   141                    if (istensor(p2))
    00000352 8448                   MOV.B       @(8,R4),R0
    00000354 600C                   EXTU.B      R0,R0
    00000356 8804                   CMP/EQ      #4,R0
    00000358 8B04                   BF          L1197
      derivative   142                            d_scalar_tensor();
    0000035A D135                   MOV.L       L1731+8,R1 ; _d_scalar_tensor
    0000035C 410B                   JSR         @R1
    0000035E 0009                   NOP
    00000360 A002                   BRA         L1196
    00000362 0009                   NOP
    00000364              L1197:                            
      derivative   143                    else
      derivative   144                            d_scalar_scalar();
    00000364 B004                   BSR         _d_scalar_scalar
    00000366 0009                   NOP
    00000368              L1196:                            
      derivative   145            restore();
    00000368 4F26                   LDS.L       @R15+,PR
    0000036A D332                   MOV.L       L1731+12,R3; _restore
    0000036C 432B                   JMP         @R3
    0000036E 6EF6                   MOV.L       @R15+,R14
      derivative   146    }
      derivative   147    
      derivative   148    void
      derivative   149    d_scalar_scalar(void)
    00000370              _d_scalar_scalar:                ; function: d_scalar_scalar
                                                           ; frame size=20
    00000370 2FE6                   MOV.L       R14,@-R15
    00000372 2FD6                   MOV.L       R13,@-R15
    00000374 2FC6                   MOV.L       R12,@-R15
    00000376 2FB6                   MOV.L       R11,@-R15
    00000378 4F22                   STS.L       PR,@-R15
      derivative   150    {
      derivative   151            if (issymbol(p2))
    0000037A DD2F                   MOV.L       L1731+16,R13; _p2
    0000037C 60D2                   MOV.L       @R13,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000037E 8408                   MOV.B       @(8,R0),R0
    00000380 600C                   EXTU.B      R0,R0
    00000382 8805                   CMP/EQ      #5,R0
    00000384 8B05                   BF          L1199
      derivative   152                    d_scalar_scalar_1();
    00000386 4F26                   LDS.L       @R15+,PR
    00000388 6BF6                   MOV.L       @R15+,R11
    0000038A 6CF6                   MOV.L       @R15+,R12
    0000038C 6DF6                   MOV.L       @R15+,R13
    0000038E A01F                   BRA         _d_scalar_scalar_1
    00000390 6EF6                   MOV.L       @R15+,R14
    00000392              L1199:                            
      derivative   153            else {
      derivative   154                    // Example: d(sin(cos(x)),cos(x))
      derivative   155                    // Replace cos(x) <- X, find derivative, then do X <- cos(x)
      derivative   156                    push(p1);               // sin(cos(x))
    00000392 DE2A                   MOV.L       L1731+20,R14; _push
    00000394 D22A                   MOV.L       L1731+24,R2; _p1
    00000396 4E0B                   JSR         @R14
    00000398 6422                   MOV.L       @R2,R4
      derivative   157                    push(p2);               // cos(x)
    0000039A 4E0B                   JSR         @R14
    0000039C 64D2                   MOV.L       @R13,R4
      derivative   158                    push(symbol(SECRETX));  // X
    0000039E 9B43                   MOV.W       L1731,R11  ; H'05E8
    000003A0 DC28                   MOV.L       L1731+28,R12; _symtab
    000003A2 64C2                   MOV.L       @R12,R4
    000003A4 4E0B                   JSR         @R14
    000003A6 34BC                   ADD         R11,R4
      derivative   159                    subst();                // sin(cos(x)) -> sin(X)
    000003A8 D327                   MOV.L       L1731+32,R3; _subst
    000003AA 430B                   JSR         @R3
    000003AC 0009                   NOP
      derivative   160                    push(symbol(SECRETX));  // X
    000003AE 64C2                   MOV.L       @R12,R4
    000003B0 4E0B                   JSR         @R14
    000003B2 34BC                   ADD         R11,R4
      derivative   161                    derivative();
    000003B4 BF88                   BSR         _derivative
    000003B6 0009                   NOP
      derivative   162                    push(symbol(SECRETX));  // X
    000003B8 64C2                   MOV.L       @R12,R4
    000003BA 4E0B                   JSR         @R14
    000003BC 34BC                   ADD         R11,R4
      derivative   163                    push(p2);               // cos(x)
    000003BE 4E0B                   JSR         @R14
    000003C0 64D2                   MOV.L       @R13,R4
      derivative   164                    subst();                // cos(X) -> cos(cos(x))
    000003C2 4F26                   LDS.L       @R15+,PR
    000003C4 D320                   MOV.L       L1731+32,R3; _subst
    000003C6 6BF6                   MOV.L       @R15+,R11
    000003C8 6CF6                   MOV.L       @R15+,R12
    000003CA 6DF6                   MOV.L       @R15+,R13
    000003CC 432B                   JMP         @R3
    000003CE 6EF6                   MOV.L       @R15+,R14
      derivative   165            }
      derivative   166    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   167    
      derivative   168    void
      derivative   169    d_scalar_scalar_1(void)
    000003D0              _d_scalar_scalar_1:              ; function: d_scalar_scalar_1
                                                           ; frame size=4
    000003D0 4F22                   STS.L       PR,@-R15
      derivative   170    {
      derivative   171            // d(x,x)?
      derivative   172    
      derivative   173            if (equal(p1, p2)) {
    000003D2 D319                   MOV.L       L1731+16,R3; _p2
    000003D4 D21A                   MOV.L       L1731+24,R2; _p1
    000003D6 6532                   MOV.L       @R3,R5
    000003D8 D11C                   MOV.L       L1731+36,R1; _equal
    000003DA 410B                   JSR         @R1
    000003DC 6422                   MOV.L       @R2,R4
    000003DE 2008                   TST         R0,R0
    000003E0 8903                   BT          L1201
      derivative   174                    push(one);
    000003E2 D11B                   MOV.L       L1731+40,R1; _one
    000003E4 6412                   MOV.L       @R1,R4
      derivative   175                    return;
    000003E6 A007                   BRA         L1724
    000003E8 0009                   NOP
    000003EA              L1201:                            
    000003EA D215                   MOV.L       L1731+24,R2; _p1
    000003EC 6422                   MOV.L       @R2,R4
    000003EE 8448                   MOV.B       @(8,R4),R0
    000003F0 2008                   TST         R0,R0
    000003F2 8904                   BT          L1203
      derivative   176            }
      derivative   177    
      derivative   178            // d(a,x)?
      derivative   179    
      derivative   180            if (!iscons(p1)) {
      derivative   181                    push(zero);
    000003F4 D117                   MOV.L       L1731+44,R1; _zero
    000003F6 6412                   MOV.L       @R1,R4
      derivative   182                    return;
    000003F8              L1724:                            
    000003F8 D310                   MOV.L       L1731+20,R3; _push
    000003FA 432B                   JMP         @R3
    000003FC 4F26                   LDS.L       @R15+,PR
    000003FE              L1203:                            
    000003FE D611                   MOV.L       L1731+28,R6; _symtab
    00000400 8448                   MOV.B       @(8,R4),R0
    00000402 2008                   TST         R0,R0
    00000404 8F02                   BF/S        L1205
    00000406 6562                   MOV.L       @R6,R5
    00000408 A003                   BRA         L1206
    0000040A 6242                   MOV.L       @R4,R2
    0000040C              L1205:                            
    0000040C 930D                   MOV.W       L1731+2,R3 ; H'0570
    0000040E 6262                   MOV.L       @R6,R2
    00000410 323C                   ADD         R3,R2
    00000412              L1206:                            
    00000412 6053                   MOV         R5,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000414 700C                   ADD         #12,R0
    00000416 3200                   CMP/EQ      R0,R2
    00000418 8B01                   BF          L1204
      derivative   183            }
      derivative   184    
      derivative   185            if (isadd(p1)) {
      derivative   186                    dsum();
    0000041A A1A6                   BRA         _dsum
    0000041C 4F26                   LDS.L       @R15+,PR
    0000041E              L1204:                            
      derivative   187                    return;
      derivative   188            }
      derivative   189    
      derivative   190            if (car(p1) == symbol(MULTIPLY)) {
    0000041E 8448                   MOV.B       @(8,R4),R0
    00000420 2008                   TST         R0,R0
    00000422 8B19                   BF          L1208
    00000424 A01A                   BRA         L1209
    00000426 6342                   MOV.L       @R4,R3
    00000428              L1731:                            
    00000428 05E8                   .DATA.W     H'05E8
    0000042A 0570                   .DATA.W     H'0570
    0000042C <00000000>             .DATA.L     _d_tensor_scalar
    00000430 <00000000>             .DATA.L     _d_scalar_tensor
    00000434 <00000000>             .DATA.L     _restore
    00000438 <00000000>             .DATA.L     _p2
    0000043C <00000000>             .DATA.L     _push
    00000440 <00000000>             .DATA.L     _p1
    00000444 <00000000>             .DATA.L     _symtab
    00000448 <00000000>             .DATA.L     _subst
    0000044C <00000000>             .DATA.L     _equal
    00000450 <00000000>             .DATA.L     _one
    00000454 <00000000>             .DATA.L     _zero
    00000458              L1208:                            
    00000458 935A                   MOV.W       L1732,R3   ; H'0570
    0000045A 335C                   ADD         R5,R3
    0000045C              L1209:                            
    0000045C 9159                   MOV.W       L1732+2,R1 ; H'0384
    0000045E 315C                   ADD         R5,R1
    00000460 3310                   CMP/EQ      R1,R3
    00000462 8B01                   BF          L1207
      derivative   191                    dproduct();
    00000464 A1D5                   BRA         _dproduct
    00000466 4F26                   LDS.L       @R15+,PR
    00000468              L1207:                            
      derivative   192                    return;
      derivative   193            }
      derivative   194    
      derivative   195            if (car(p1) == symbol(POWER)) {
    00000468 8448                   MOV.B       @(8,R4),R0
    0000046A 2008                   TST         R0,R0
    0000046C 8B01                   BF          L1211
    0000046E A002                   BRA         L1212
    00000470 6342                   MOV.L       @R4,R3
    00000472              L1211:                            
    00000472 934D                   MOV.W       L1732,R3   ; H'0570
    00000474 335C                   ADD         R5,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000476              L1212:                            
    00000476 914D                   MOV.W       L1732+4,R1 ; H'03F0
    00000478 315C                   ADD         R5,R1
    0000047A 3310                   CMP/EQ      R1,R3
    0000047C 8B01                   BF          L1210
      derivative   196                    dpower();
    0000047E A233                   BRA         _dpower
    00000480 4F26                   LDS.L       @R15+,PR
    00000482              L1210:                            
      derivative   197                    return;
      derivative   198            }
      derivative   199    
      derivative   200            if (car(p1) == symbol(DERIVATIVE)) {
    00000482 8448                   MOV.B       @(8,R4),R0
    00000484 2008                   TST         R0,R0
    00000486 8B01                   BF          L1214
    00000488 A002                   BRA         L1215
    0000048A 6342                   MOV.L       @R4,R3
    0000048C              L1214:                            
    0000048C 9340                   MOV.W       L1732,R3   ; H'0570
    0000048E 335C                   ADD         R5,R3
    00000490              L1215:                            
    00000490 9141                   MOV.W       L1732+6,R1 ; H'0168
    00000492 315C                   ADD         R5,R1
    00000494 3310                   CMP/EQ      R1,R3
    00000496 8B01                   BF          L1213
      derivative   201                    dd();
    00000498 A3B1                   BRA         _dd
    0000049A 4F26                   LDS.L       @R15+,PR
    0000049C              L1213:                            
      derivative   202                    return;
      derivative   203            }
      derivative   204    
      derivative   205            if (car(p1) == symbol(LOG)) {
    0000049C 8448                   MOV.B       @(8,R4),R0
    0000049E 2008                   TST         R0,R0
    000004A0 8B01                   BF          L1217
    000004A2 A002                   BRA         L1218
    000004A4 6342                   MOV.L       @R4,R3
    000004A6              L1217:                            
    000004A6 9333                   MOV.W       L1732,R3   ; H'0570
    000004A8 335C                   ADD         R5,R3
    000004AA              L1218:                            
    000004AA 9135                   MOV.W       L1732+8,R1 ; H'0360
    000004AC 315C                   ADD         R5,R1
    000004AE 3310                   CMP/EQ      R1,R3
    000004B0 8B01                   BF          L1216
      derivative   206                    dlog();
    000004B2 A348                   BRA         _dlog
    000004B4 4F26                   LDS.L       @R15+,PR
    000004B6              L1216:                            
      derivative   207                    return;
      derivative   208            }
      derivative   209    
      derivative   210            if (car(p1) == symbol(SIN)) {
    000004B6 8448                   MOV.B       @(8,R4),R0
    000004B8 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004BA 8B01                   BF          L1220
    000004BC A002                   BRA         L1221
    000004BE 6342                   MOV.L       @R4,R3
    000004C0              L1220:                            
    000004C0 9326                   MOV.W       L1732,R3   ; H'0570
    000004C2 335C                   ADD         R5,R3
    000004C4              L1221:                            
    000004C4 9129                   MOV.W       L1732+10,R1; H'0498
    000004C6 315C                   ADD         R5,R1
    000004C8 3310                   CMP/EQ      R1,R3
    000004CA 8B01                   BF          L1219
      derivative   211                    dsin();
    000004CC A683                   BRA         _dsin
    000004CE 4F26                   LDS.L       @R15+,PR
    000004D0              L1219:                            
      derivative   212                    return;
      derivative   213            }
      derivative   214    
      derivative   215            if (car(p1) == symbol(COS)) {
    000004D0 8448                   MOV.B       @(8,R4),R0
    000004D2 2008                   TST         R0,R0
    000004D4 8B01                   BF          L1223
    000004D6 A002                   BRA         L1224
    000004D8 6342                   MOV.L       @R4,R3
    000004DA              L1223:                            
    000004DA 9319                   MOV.W       L1732,R3   ; H'0570
    000004DC 335C                   ADD         R5,R3
    000004DE              L1224:                            
    000004DE 911D                   MOV.W       L1732+12,R1; H'0120
    000004E0 315C                   ADD         R5,R1
    000004E2 3310                   CMP/EQ      R1,R3
    000004E4 8B01                   BF          L1222
      derivative   216                    dcos();
    000004E6 A6DB                   BRA         _dcos
    000004E8 4F26                   LDS.L       @R15+,PR
    000004EA              L1222:                            
      derivative   217                    return;
      derivative   218            }
      derivative   219    
      derivative   220            if (car(p1) == symbol(TAN)) {
    000004EA 8448                   MOV.B       @(8,R4),R0
    000004EC 2008                   TST         R0,R0
    000004EE 8B01                   BF          L1226
    000004F0 A002                   BRA         L1227
    000004F2 6342                   MOV.L       @R4,R3
    000004F4              L1226:                            
    000004F4 930C                   MOV.W       L1732,R3   ; H'0570
    000004F6 335C                   ADD         R5,R3
    000004F8              L1227:                            
    000004F8 9111                   MOV.W       L1732+14,R1; H'04E0
    000004FA 315C                   ADD         R5,R1
    000004FC 3310                   CMP/EQ      R1,R3
    000004FE 8B01                   BF          L1225
      derivative   221                    dtan();
    00000500 A726                   BRA         _dtan
    00000502 4F26                   LDS.L       @R15+,PR
    00000504              L1225:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   222                    return;
      derivative   223            }
      derivative   224    
      derivative   225            if (car(p1) == symbol(ARCSIN)) {
    00000504 8448                   MOV.B       @(8,R4),R0
    00000506 2008                   TST         R0,R0
    00000508 8F0A                   BF/S        L1229
    0000050A 6153                   MOV         R5,R1
    0000050C A00A                   BRA         L1230
    0000050E 6342                   MOV.L       @R4,R3
    00000510              L1732:                            
    00000510 0570                   .DATA.W     H'0570
    00000512 0384                   .DATA.W     H'0384
    00000514 03F0                   .DATA.W     H'03F0
    00000516 0168                   .DATA.W     H'0168
    00000518 0360                   .DATA.W     H'0360
    0000051A 0498                   .DATA.W     H'0498
    0000051C 0120                   .DATA.W     H'0120
    0000051E 04E0                   .DATA.W     H'04E0
    00000520              L1229:                            
    00000520 935F                   MOV.W       L1733,R3   ; H'0570
    00000522 335C                   ADD         R5,R3
    00000524              L1230:                            
    00000524 7148                   ADD         #72,R1
    00000526 3310                   CMP/EQ      R1,R3
    00000528 8B01                   BF          L1228
      derivative   226                    darcsin();
    0000052A A780                   BRA         _darcsin
    0000052C 4F26                   LDS.L       @R15+,PR
    0000052E              L1228:                            
      derivative   227                    return;
      derivative   228            }
      derivative   229    
      derivative   230            if (car(p1) == symbol(ARCCOS)) {
    0000052E 8448                   MOV.B       @(8,R4),R0
    00000530 2008                   TST         R0,R0
    00000532 8F02                   BF/S        L1232
    00000534 6153                   MOV         R5,R1
    00000536 A002                   BRA         L1233
    00000538 6342                   MOV.L       @R4,R3
    0000053A              L1232:                            
    0000053A 9352                   MOV.W       L1733,R3   ; H'0570
    0000053C 335C                   ADD         R5,R3
    0000053E              L1233:                            
    0000053E 7130                   ADD         #48,R1
    00000540 3310                   CMP/EQ      R1,R3
    00000542 8B02                   BF          L1231
      derivative   231                    darccos();
    00000544 D229                   MOV.L       L1733+10,R2; _darccos
    00000546 422B                   JMP         @R2
    00000548 4F26                   LDS.L       @R15+,PR
    0000054A              L1231:                            
      derivative   232                    return;
      derivative   233            }
      derivative   234    
      derivative   235            if (car(p1) == symbol(ARCTAN)) {
    0000054A 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000054C 2008                   TST         R0,R0
    0000054E 8F02                   BF/S        L1235
    00000550 6153                   MOV         R5,R1
    00000552 A002                   BRA         L1236
    00000554 6342                   MOV.L       @R4,R3
    00000556              L1235:                            
    00000556 9344                   MOV.W       L1733,R3   ; H'0570
    00000558 335C                   ADD         R5,R3
    0000055A              L1236:                            
    0000055A 7160                   ADD         #96,R1
    0000055C 3310                   CMP/EQ      R1,R3
    0000055E 8B02                   BF          L1234
      derivative   236                    darctan();
    00000560 D223                   MOV.L       L1733+14,R2; _darctan
    00000562 422B                   JMP         @R2
    00000564 4F26                   LDS.L       @R15+,PR
    00000566              L1234:                            
      derivative   237                    return;
      derivative   238            }
      derivative   239    
      derivative   240            if (car(p1) == symbol(SINH)) {
    00000566 8448                   MOV.B       @(8,R4),R0
    00000568 2008                   TST         R0,R0
    0000056A 8B01                   BF          L1238
    0000056C A002                   BRA         L1239
    0000056E 6342                   MOV.L       @R4,R3
    00000570              L1238:                            
    00000570 9337                   MOV.W       L1733,R3   ; H'0570
    00000572 335C                   ADD         R5,R3
    00000574              L1239:                            
    00000574 9136                   MOV.W       L1733+2,R1 ; H'04A4
    00000576 315C                   ADD         R5,R1
    00000578 3310                   CMP/EQ      R1,R3
    0000057A 8B02                   BF          L1237
      derivative   241                    dsinh();
    0000057C D21D                   MOV.L       L1733+18,R2; _dsinh
    0000057E 422B                   JMP         @R2
    00000580 4F26                   LDS.L       @R15+,PR
    00000582              L1237:                            
      derivative   242                    return;
      derivative   243            }
      derivative   244    
      derivative   245            if (car(p1) == symbol(COSH)) {
    00000582 8448                   MOV.B       @(8,R4),R0
    00000584 2008                   TST         R0,R0
    00000586 8B01                   BF          L1241
    00000588 A002                   BRA         L1242
    0000058A 6342                   MOV.L       @R4,R3
    0000058C              L1241:                            
    0000058C 9329                   MOV.W       L1733,R3   ; H'0570
    0000058E 335C                   ADD         R5,R3
    00000590              L1242:                            
    00000590 9129                   MOV.W       L1733+4,R1 ; H'012C
    00000592 315C                   ADD         R5,R1
    00000594 3310                   CMP/EQ      R1,R3
    00000596 8B02                   BF          L1240
      derivative   246                    dcosh();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000598 D217                   MOV.L       L1733+22,R2; _dcosh
    0000059A 422B                   JMP         @R2
    0000059C 4F26                   LDS.L       @R15+,PR
    0000059E              L1240:                            
      derivative   247                    return;
      derivative   248            }
      derivative   249    
      derivative   250            if (car(p1) == symbol(TANH)) {
    0000059E 8448                   MOV.B       @(8,R4),R0
    000005A0 2008                   TST         R0,R0
    000005A2 8B01                   BF          L1244
    000005A4 A002                   BRA         L1245
    000005A6 6342                   MOV.L       @R4,R3
    000005A8              L1244:                            
    000005A8 931B                   MOV.W       L1733,R3   ; H'0570
    000005AA 335C                   ADD         R5,R3
    000005AC              L1245:                            
    000005AC 911C                   MOV.W       L1733+6,R1 ; H'04EC
    000005AE 315C                   ADD         R5,R1
    000005B0 3310                   CMP/EQ      R1,R3
    000005B2 8B02                   BF          L1243
      derivative   251                    dtanh();
    000005B4 D211                   MOV.L       L1733+26,R2; _dtanh
    000005B6 422B                   JMP         @R2
    000005B8 4F26                   LDS.L       @R15+,PR
    000005BA              L1243:                            
      derivative   252                    return;
      derivative   253            }
      derivative   254    
      derivative   255            if (car(p1) == symbol(ARCSINH)) {
    000005BA 8448                   MOV.B       @(8,R4),R0
    000005BC 2008                   TST         R0,R0
    000005BE 8F02                   BF/S        L1247
    000005C0 6153                   MOV         R5,R1
    000005C2 A002                   BRA         L1248
    000005C4 6342                   MOV.L       @R4,R3
    000005C6              L1247:                            
    000005C6 930C                   MOV.W       L1733,R3   ; H'0570
    000005C8 335C                   ADD         R5,R3
    000005CA              L1248:                            
    000005CA 7154                   ADD         #84,R1
    000005CC 3310                   CMP/EQ      R1,R3
    000005CE 8B02                   BF          L1246
      derivative   256                    darcsinh();
    000005D0 D20B                   MOV.L       L1733+30,R2; _darcsinh
    000005D2 422B                   JMP         @R2
    000005D4 4F26                   LDS.L       @R15+,PR
    000005D6              L1246:                            
      derivative   257                    return;
      derivative   258            }
      derivative   259    
      derivative   260            if (car(p1) == symbol(ARCCOSH)) {
    000005D6 8448                   MOV.B       @(8,R4),R0
    000005D8 2008                   TST         R0,R0
    000005DA 8F13                   BF/S        L1250
    000005DC 6153                   MOV         R5,R1
    000005DE A013                   BRA         L1251




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005E0 6342                   MOV.L       @R4,R3
    000005E2              L1733:                            
    000005E2 0570                   .DATA.W     H'0570
    000005E4 04A4                   .DATA.W     H'04A4
    000005E6 012C                   .DATA.W     H'012C
    000005E8 04EC                   .DATA.W     H'04EC
    000005EA 0000                   .DATA.W     0
    000005EC <00000000>             .DATA.L     _darccos
    000005F0 <00000000>             .DATA.L     _darctan
    000005F4 <00000000>             .DATA.L     _dsinh
    000005F8 <00000000>             .DATA.L     _dcosh
    000005FC <00000000>             .DATA.L     _dtanh
    00000600 <00000000>             .DATA.L     _darcsinh
    00000604              L1250:                            
    00000604 935D                   MOV.W       L1734,R3   ; H'0570
    00000606 335C                   ADD         R5,R3
    00000608              L1251:                            
    00000608 713C                   ADD         #60,R1
    0000060A 3310                   CMP/EQ      R1,R3
    0000060C 8B02                   BF          L1249
      derivative   261                    darccosh();
    0000060E D22F                   MOV.L       L1734+10,R2; _darccosh
    00000610 422B                   JMP         @R2
    00000612 4F26                   LDS.L       @R15+,PR
    00000614              L1249:                            
      derivative   262                    return;
      derivative   263            }
      derivative   264    
      derivative   265            if (car(p1) == symbol(ARCTANH)) {
    00000614 8448                   MOV.B       @(8,R4),R0
    00000616 2008                   TST         R0,R0
    00000618 8F02                   BF/S        L1253
    0000061A 6153                   MOV         R5,R1
    0000061C A002                   BRA         L1254
    0000061E 6342                   MOV.L       @R4,R3
    00000620              L1253:                            
    00000620 934F                   MOV.W       L1734,R3   ; H'0570
    00000622 335C                   ADD         R5,R3
    00000624              L1254:                            
    00000624 716C                   ADD         #108,R1
    00000626 3310                   CMP/EQ      R1,R3
    00000628 8B02                   BF          L1252
      derivative   266                    darctanh();
    0000062A D229                   MOV.L       L1734+14,R2; _darctanh
    0000062C 422B                   JMP         @R2
    0000062E 4F26                   LDS.L       @R15+,PR
    00000630              L1252:                            
      derivative   267                    return;
      derivative   268            }
      derivative   269    
      derivative   270            if (car(p1) == symbol(ABS)) {
    00000630 8448                   MOV.B       @(8,R4),R0
    00000632 2008                   TST         R0,R0
    00000634 8B01                   BF          L1256
    00000636 A002                   BRA         L1257
    00000638 6342                   MOV.L       @R4,R3
    0000063A              L1256:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000063A 9342                   MOV.W       L1734,R3   ; H'0570
    0000063C 335C                   ADD         R5,R3
    0000063E              L1257:                            
    0000063E 3350                   CMP/EQ      R5,R3
    00000640 8B02                   BF          L1255
      derivative   271                    dabs();
    00000642 D224                   MOV.L       L1734+18,R2; _dabs
    00000644 422B                   JMP         @R2
    00000646 4F26                   LDS.L       @R15+,PR
    00000648              L1255:                            
      derivative   272                    return;
      derivative   273            }
      derivative   274    
      derivative   275            if (car(p1) == symbol(SGN)) {
    00000648 8448                   MOV.B       @(8,R4),R0
    0000064A 2008                   TST         R0,R0
    0000064C 8B01                   BF          L1259
    0000064E A002                   BRA         L1260
    00000650 6342                   MOV.L       @R4,R3
    00000652              L1259:                            
    00000652 9336                   MOV.W       L1734,R3   ; H'0570
    00000654 335C                   ADD         R5,R3
    00000656              L1260:                            
    00000656 9135                   MOV.W       L1734+2,R1 ; H'0480
    00000658 315C                   ADD         R5,R1
    0000065A 3310                   CMP/EQ      R1,R3
    0000065C 8B02                   BF          L1258
      derivative   276                    dsgn();
    0000065E D21E                   MOV.L       L1734+22,R2; _dsgn
    00000660 422B                   JMP         @R2
    00000662 4F26                   LDS.L       @R15+,PR
    00000664              L1258:                            
      derivative   277                    return;
      derivative   278            }
      derivative   279    
      derivative   280            if (car(p1) == symbol(HERMITE)) {
    00000664 8448                   MOV.B       @(8,R4),R0
    00000666 2008                   TST         R0,R0
    00000668 8B01                   BF          L1262
    0000066A A002                   BRA         L1263
    0000066C 6342                   MOV.L       @R4,R3
    0000066E              L1262:                            
    0000066E 9328                   MOV.W       L1734,R3   ; H'0570
    00000670 335C                   ADD         R5,R3
    00000672              L1263:                            
    00000672 9128                   MOV.W       L1734+4,R1 ; H'02B8
    00000674 315C                   ADD         R5,R1
    00000676 3310                   CMP/EQ      R1,R3
    00000678 8B02                   BF          L1261
      derivative   281                    dhermite();
    0000067A D218                   MOV.L       L1734+26,R2; _dhermite
    0000067C 422B                   JMP         @R2
    0000067E 4F26                   LDS.L       @R15+,PR
    00000680              L1261:                            
      derivative   282                    return;
      derivative   283            }
      derivative   284    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   285            if (car(p1) == symbol(ERF)) {
    00000680 8448                   MOV.B       @(8,R4),R0
    00000682 2008                   TST         R0,R0
    00000684 8B01                   BF          L1265
    00000686 A002                   BRA         L1266
    00000688 6342                   MOV.L       @R4,R3
    0000068A              L1265:                            
    0000068A 931A                   MOV.W       L1734,R3   ; H'0570
    0000068C 335C                   ADD         R5,R3
    0000068E              L1266:                            
    0000068E 911B                   MOV.W       L1734+6,R1 ; H'01F8
    00000690 315C                   ADD         R5,R1
    00000692 3310                   CMP/EQ      R1,R3
    00000694 8B02                   BF          L1264
      derivative   286                    derf();
    00000696 D212                   MOV.L       L1734+30,R2; _derf
    00000698 422B                   JMP         @R2
    0000069A 4F26                   LDS.L       @R15+,PR
    0000069C              L1264:                            
      derivative   287                    return;
      derivative   288            }
      derivative   289    
      derivative   290            if (car(p1) == symbol(ERFC)) {
    0000069C 8448                   MOV.B       @(8,R4),R0
    0000069E 2008                   TST         R0,R0
    000006A0 8B01                   BF          L1268
    000006A2 A002                   BRA         L1269
    000006A4 6342                   MOV.L       @R4,R3
    000006A6              L1268:                            
    000006A6 930C                   MOV.W       L1734,R3   ; H'0570
    000006A8 335C                   ADD         R5,R3
    000006AA              L1269:                            
    000006AA 910E                   MOV.W       L1734+8,R1 ; H'0204
    000006AC 315C                   ADD         R5,R1
    000006AE 3310                   CMP/EQ      R1,R3
    000006B0 8B02                   BF          L1267
      derivative   291                    derfc();
    000006B2 D20C                   MOV.L       L1734+34,R2; _derfc
    000006B4 422B                   JMP         @R2
    000006B6 4F26                   LDS.L       @R15+,PR
    000006B8              L1267:                            
      derivative   292                    return;
      derivative   293            }
      derivative   294    /*
      derivative   295            if (car(p1) == symbol(BESSELJ)) {
      derivative   296                    if (iszero(caddr(p1)))
      derivative   297                            dbesselj0();
      derivative   298                    else
      derivative   299                            dbesseljn();
      derivative   300                    return;
      derivative   301            }
      derivative   302    */
      derivative   303    /*
      derivative   304            if (car(p1) == symbol(BESSELY)) {
      derivative   305                    if (iszero(caddr(p1)))
      derivative   306                            dbessely0();
      derivative   307                    else




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   308                            dbesselyn();
      derivative   309                    return;
      derivative   310            }
      derivative   311    */
      derivative   312            if (car(p1) == symbol(INTEGRAL) && caddr(p1) == p2) {
    000006B8 8448                   MOV.B       @(8,R4),R0
    000006BA 2008                   TST         R0,R0
    000006BC 8B14                   BF          L1271
    000006BE A015                   BRA         L1279
    000006C0 6342                   MOV.L       @R4,R3
    000006C2              L1734:                            
    000006C2 0570                   .DATA.W     H'0570
    000006C4 0480                   .DATA.W     H'0480
    000006C6 02B8                   .DATA.W     H'02B8
    000006C8 01F8                   .DATA.W     H'01F8
    000006CA 0204                   .DATA.W     H'0204
    000006CC <00000000>             .DATA.L     _darccosh
    000006D0 <00000000>             .DATA.L     _darctanh
    000006D4 <00000000>             .DATA.L     _dabs
    000006D8 <00000000>             .DATA.L     _dsgn
    000006DC <00000000>             .DATA.L     _dhermite
    000006E0 <00000000>             .DATA.L     _derf
    000006E4 <00000000>             .DATA.L     _derfc
    000006E8              L1271:                            
    000006E8 935F                   MOV.W       L1735,R3   ; H'0570
    000006EA 335C                   ADD         R5,R3
    000006EC              L1279:                            
    000006EC 915E                   MOV.W       L1735+2,R1 ; H'02F4
    000006EE 315C                   ADD         R5,R1
    000006F0 3310                   CMP/EQ      R1,R3
    000006F2 8B38                   BF          L1270
    000006F4 8448                   MOV.B       @(8,R4),R0
    000006F6 2008                   TST         R0,R0
    000006F8 8B01                   BF          L1274
    000006FA A002                   BRA         L1280
    000006FC 5241                   MOV.L       @(4,R4),R2
    000006FE              L1274:                            
    000006FE 9254                   MOV.W       L1735,R2   ; H'0570
    00000700 325C                   ADD         R5,R2
    00000702              L1280:                            
    00000702 8428                   MOV.B       @(8,R2),R0
    00000704 2008                   TST         R0,R0
    00000706 8B09                   BF          L1273
    00000708 8448                   MOV.B       @(8,R4),R0
    0000070A 2008                   TST         R0,R0
    0000070C 8B01                   BF          L1275
    0000070E A002                   BRA         L1281
    00000710 5241                   MOV.L       @(4,R4),R2
    00000712              L1275:                            
    00000712 924A                   MOV.W       L1735,R2   ; H'0570
    00000714 325C                   ADD         R5,R2
    00000716              L1281:                            
    00000716 5321                   MOV.L       @(4,R2),R3
    00000718 A002                   BRA         L1282
    0000071A 0009                   NOP
    0000071C              L1273:                            
    0000071C 9345                   MOV.W       L1735,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000071E 335C                   ADD         R5,R3
    00000720              L1282:                            
    00000720 8438                   MOV.B       @(8,R3),R0
    00000722 2008                   TST         R0,R0
    00000724 8B16                   BF          L1272
    00000726 8448                   MOV.B       @(8,R4),R0
    00000728 2008                   TST         R0,R0
    0000072A 8B01                   BF          L1277
    0000072C A002                   BRA         L1283
    0000072E 5341                   MOV.L       @(4,R4),R3
    00000730              L1277:                            
    00000730 933B                   MOV.W       L1735,R3   ; H'0570
    00000732 335C                   ADD         R5,R3
    00000734              L1283:                            
    00000734 8438                   MOV.B       @(8,R3),R0
    00000736 2008                   TST         R0,R0
    00000738 8B08                   BF          L1276
    0000073A 8448                   MOV.B       @(8,R4),R0
    0000073C 2008                   TST         R0,R0
    0000073E 8B01                   BF          L1278
    00000740 A002                   BRA         L1284
    00000742 5241                   MOV.L       @(4,R4),R2
    00000744              L1278:                            
    00000744 9231                   MOV.W       L1735,R2   ; H'0570
    00000746 325C                   ADD         R5,R2
    00000748              L1284:                            
    00000748 A002                   BRA         L1285
    0000074A 5221                   MOV.L       @(4,R2),R2
    0000074C              L1276:                            
    0000074C 922D                   MOV.W       L1735,R2   ; H'0570
    0000074E 325C                   ADD         R5,R2
    00000750              L1285:                            
    00000750 A002                   BRA         L1286
    00000752 6222                   MOV.L       @R2,R2
    00000754              L1272:                            
    00000754 9229                   MOV.W       L1735,R2   ; H'0570
    00000756 325C                   ADD         R5,R2
    00000758              L1286:                            
    00000758 D115                   MOV.L       L1735+6,R1 ; _p2
    0000075A 6312                   MOV.L       @R1,R3
    0000075C 3230                   CMP/EQ      R3,R2
    0000075E 8B02                   BF          L1270
      derivative   313                    derivative_of_integral();
    00000760 D314                   MOV.L       L1735+10,R3; _derivative_of_integral
    00000762 432B                   JMP         @R3
    00000764 4F26                   LDS.L       @R15+,PR
    00000766              L1270:                            
      derivative   314                    return;
      derivative   315            }
      derivative   316    
      derivative   317            dfunction();
    00000766 A4F7                   BRA         _dfunction
    00000768 4F26                   LDS.L       @R15+,PR
      derivative   318    }
      derivative   319    
      derivative   320    void
      derivative   321    dsum(void)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000076A              _dsum:                           ; function: dsum
                                                           ; frame size=20
    0000076A 2FE6                   MOV.L       R14,@-R15
    0000076C 2FD6                   MOV.L       R13,@-R15
    0000076E 2FC6                   MOV.L       R12,@-R15
    00000770 4F22                   STS.L       PR,@-R15
    00000772 7FFC                   ADD         #-4,R15
      derivative   322    {
      derivative   323            int h = tos;
    00000774 D010                   MOV.L       L1735+14,R0; _tos
    00000776 6202                   MOV.L       @R0,R2
      derivative   324            p1 = cdr(p1);
    00000778 DE10                   MOV.L       L1735+18,R14; _p1
    0000077A 2F22                   MOV.L       R2,@R15
    0000077C 62E2                   MOV.L       @R14,R2
    0000077E 8428                   MOV.B       @(8,R2),R0
    00000780 2008                   TST         R0,R0
    00000782 8B02                   BF          L1287
    00000784 62E2                   MOV.L       @R14,R2
    00000786 A004                   BRA         L1288
    00000788 5321                   MOV.L       @(4,R2),R3
    0000078A              L1287:                            
    0000078A 920E                   MOV.W       L1735,R2   ; H'0570
    0000078C D10C                   MOV.L       L1735+22,R1; _symtab
    0000078E 6312                   MOV.L       @R1,R3
    00000790 332C                   ADD         R2,R3
    00000792              L1288:                            
    00000792 2E32                   MOV.L       R3,@R14
    00000794 DC06                   MOV.L       L1735+6,R12; _p2
    00000796 DD0B                   MOV.L       L1735+26,R13; _push
      derivative   325            while (iscons(p1)) {
    00000798 A02C                   BRA         L1289
    0000079A 0009                   NOP
    0000079C              L1290:                            
      derivative   326                    push(car(p1));
    0000079C 64E2                   MOV.L       @R14,R4
    0000079E 8448                   MOV.B       @(8,R4),R0
    000007A0 2008                   TST         R0,R0
    000007A2 8B11                   BF          L1291
    000007A4 64E2                   MOV.L       @R14,R4
    000007A6 A013                   BRA         L1292
    000007A8 6442                   MOV.L       @R4,R4
    000007AA              L1735:                            
    000007AA 0570                   .DATA.W     H'0570
    000007AC 02F4                   .DATA.W     H'02F4
    000007AE 0000                   .DATA.W     0
    000007B0 <00000000>             .DATA.L     _p2
    000007B4 <00000000>             .DATA.L     _derivative_of_integral
    000007B8 <00000000>             .DATA.L     _tos
    000007BC <00000000>             .DATA.L     _p1
    000007C0 <00000000>             .DATA.L     _symtab
    000007C4 <00000000>             .DATA.L     _push
    000007C8              L1291:                            
    000007C8 937A                   MOV.W       L1736,R3   ; H'0570
    000007CA D23E                   MOV.L       L1736+4,R2 ; _symtab
    000007CC 6422                   MOV.L       @R2,R4
    000007CE 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007D0              L1292:                            
    000007D0 4D0B                   JSR         @R13
    000007D2 0009                   NOP
      derivative   327                    push(p2);
    000007D4 4D0B                   JSR         @R13
    000007D6 64C2                   MOV.L       @R12,R4
      derivative   328                    derivative();
    000007D8 BD76                   BSR         _derivative
    000007DA 0009                   NOP
      derivative   329                    p1 = cdr(p1);
    000007DC 63E2                   MOV.L       @R14,R3
    000007DE 8438                   MOV.B       @(8,R3),R0
    000007E0 2008                   TST         R0,R0
    000007E2 8B02                   BF          L1293
    000007E4 62E2                   MOV.L       @R14,R2
    000007E6 A004                   BRA         L1294
    000007E8 5221                   MOV.L       @(4,R2),R2
    000007EA              L1293:                            
    000007EA 9369                   MOV.W       L1736,R3   ; H'0570
    000007EC D135                   MOV.L       L1736+4,R1 ; _symtab
    000007EE 6212                   MOV.L       @R1,R2
    000007F0 323C                   ADD         R3,R2
    000007F2              L1294:                            
    000007F2 2E22                   MOV.L       R2,@R14
    000007F4              L1289:                            
    000007F4 63E2                   MOV.L       @R14,R3
    000007F6 8438                   MOV.B       @(8,R3),R0
    000007F8 2008                   TST         R0,R0
    000007FA 89CF                   BT          L1290
      derivative   330            }
      derivative   331            add_all(tos - h);
    000007FC 63F2                   MOV.L       @R15,R3
    000007FE D232                   MOV.L       L1736+8,R2 ; _tos
    00000800 D132                   MOV.L       L1736+12,R1; _add_all
    00000802 6422                   MOV.L       @R2,R4
    00000804 3438                   SUB         R3,R4
    00000806 7F04                   ADD         #4,R15
    00000808 4F26                   LDS.L       @R15+,PR
    0000080A 6CF6                   MOV.L       @R15+,R12
    0000080C 6DF6                   MOV.L       @R15+,R13
    0000080E 412B                   JMP         @R1
    00000810 6EF6                   MOV.L       @R15+,R14
      derivative   332    }
      derivative   333    
      derivative   334    void
      derivative   335    dproduct(void)
    00000812              _dproduct:                       ; function: dproduct
                                                           ; frame size=32
    00000812 2FE6                   MOV.L       R14,@-R15
    00000814 2FD6                   MOV.L       R13,@-R15
    00000816 2FC6                   MOV.L       R12,@-R15
    00000818 2FB6                   MOV.L       R11,@-R15
    0000081A 2FA6                   MOV.L       R10,@-R15
    0000081C 2F96                   MOV.L       R9,@-R15
    0000081E 2F86                   MOV.L       R8,@-R15
    00000820 4F22                   STS.L       PR,@-R15
      derivative   336    {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   337            int i, j, n;
      derivative   338            n = length(p1) - 1;
    00000822 D92B                   MOV.L       L1736+16,R9; _p1
    00000824 D32B                   MOV.L       L1736+20,R3; _length
    00000826 430B                   JSR         @R3
    00000828 6492                   MOV.L       @R9,R4
    0000082A 6D03                   MOV         R0,R13
      derivative   339            for (i = 0; i < n; i++) {
    0000082C DA2A                   MOV.L       L1736+24,R10; _push
    0000082E E800                   MOV         #0,R8
    00000830 DE2A                   MOV.L       L1736+28,R14; _p3
    00000832 7DFF                   ADD         #-1,R13
    00000834 A037                   BRA         L1295
    00000836 6B83                   MOV         R8,R11
    00000838              L1296:                            
      derivative   340                    p3 = cdr(p1);
    00000838 6292                   MOV.L       @R9,R2
    0000083A 8428                   MOV.B       @(8,R2),R0
    0000083C 2008                   TST         R0,R0
    0000083E 8B02                   BF          L1297
    00000840 6292                   MOV.L       @R9,R2
    00000842 A004                   BRA         L1298
    00000844 5321                   MOV.L       @(4,R2),R3
    00000846              L1297:                            
    00000846 923B                   MOV.W       L1736,R2   ; H'0570
    00000848 D11E                   MOV.L       L1736+4,R1 ; _symtab
    0000084A 6312                   MOV.L       @R1,R3
    0000084C 332C                   ADD         R2,R3
    0000084E              L1298:                            
      derivative   341                    for (j = 0; j < n; j++) {
    0000084E 4D15                   CMP/PL      R13
    00000850 2E32                   MOV.L       R3,@R14
    00000852 8F24                   BF/S        L1299
    00000854 6C83                   MOV         R8,R12
    00000856              L1300:                            
      derivative   342                            push(car(p3));
    00000856 64E2                   MOV.L       @R14,R4
    00000858 8448                   MOV.B       @(8,R4),R0
    0000085A 2008                   TST         R0,R0
    0000085C 8B02                   BF          L1301
    0000085E 64E2                   MOV.L       @R14,R4
    00000860 A004                   BRA         L1302
    00000862 6442                   MOV.L       @R4,R4
    00000864              L1301:                            
    00000864 932C                   MOV.W       L1736,R3   ; H'0570
    00000866 D217                   MOV.L       L1736+4,R2 ; _symtab
    00000868 6422                   MOV.L       @R2,R4
    0000086A 343C                   ADD         R3,R4
    0000086C              L1302:                            
    0000086C 4A0B                   JSR         @R10
    0000086E 0009                   NOP
      derivative   343                            if (i == j) {
    00000870 3BC0                   CMP/EQ      R12,R11
    00000872 8B04                   BF          L1303
      derivative   344                                    push(p2);
    00000874 D21A                   MOV.L       L1736+32,R2; _p2
    00000876 4A0B                   JSR         @R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000878 6422                   MOV.L       @R2,R4
      derivative   345                                    derivative();
    0000087A BD25                   BSR         _derivative
    0000087C 0009                   NOP
    0000087E              L1303:                            
      derivative   346                            }
      derivative   347                            p3 = cdr(p3);
    0000087E 63E2                   MOV.L       @R14,R3
    00000880 8438                   MOV.B       @(8,R3),R0
    00000882 2008                   TST         R0,R0
    00000884 8B03                   BF          L1304
    00000886 62E2                   MOV.L       @R14,R2
    00000888 5121                   MOV.L       @(4,R2),R1
    0000088A A004                   BRA         L1305
    0000088C 0009                   NOP
    0000088E              L1304:                            
    0000088E 9317                   MOV.W       L1736,R3   ; H'0570
    00000890 D00C                   MOV.L       L1736+4,R0 ; _symtab
    00000892 6102                   MOV.L       @R0,R1
    00000894 313C                   ADD         R3,R1
    00000896              L1305:                            
    00000896 7C01                   ADD         #1,R12
    00000898 3CD3                   CMP/GE      R13,R12
    0000089A 8FDC                   BF/S        L1300
    0000089C 2E12                   MOV.L       R1,@R14
    0000089E              L1299:                            
      derivative   348                    }
      derivative   349                    multiply_all(n);
    0000089E D211                   MOV.L       L1736+36,R2; _multiply_all
    000008A0 420B                   JSR         @R2
    000008A2 64D3                   MOV         R13,R4
    000008A4 7B01                   ADD         #1,R11
    000008A6              L1295:                            
    000008A6 3BD3                   CMP/GE      R13,R11
    000008A8 8BC6                   BF          L1296
      derivative   350            }
      derivative   351            add_all(n);
    000008AA 64D3                   MOV         R13,R4
    000008AC 4F26                   LDS.L       @R15+,PR
    000008AE 68F6                   MOV.L       @R15+,R8
    000008B0 D206                   MOV.L       L1736+12,R2; _add_all
    000008B2 69F6                   MOV.L       @R15+,R9
    000008B4 6AF6                   MOV.L       @R15+,R10
    000008B6 6BF6                   MOV.L       @R15+,R11
    000008B8 6CF6                   MOV.L       @R15+,R12
    000008BA 6DF6                   MOV.L       @R15+,R13
    000008BC 422B                   JMP         @R2
    000008BE 6EF6                   MOV.L       @R15+,R14
    000008C0              L1736:                            
    000008C0 0570                   .DATA.W     H'0570
    000008C2 0000                   .DATA.W     0
    000008C4 <00000000>             .DATA.L     _symtab
    000008C8 <00000000>             .DATA.L     _tos
    000008CC <00000000>             .DATA.L     _add_all
    000008D0 <00000000>             .DATA.L     _p1
    000008D4 <00000000>             .DATA.L     _length
    000008D8 <00000000>             .DATA.L     _push




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008DC <00000000>             .DATA.L     _p3
    000008E0 <00000000>             .DATA.L     _p2
    000008E4 <00000000>             .DATA.L     _multiply_all
      derivative   352    }
      derivative   353    
      derivative   354    //-----------------------------------------------------------------------------
      derivative   355    //
      derivative   356    //           v
      derivative   357    //      y = u
      derivative   358    //
      derivative   359    //      log y = v log u
      derivative   360    //
      derivative   361    //      1 dy   v du           dv
      derivative   362    //      - -- = - -- + (log u) --
      derivative   363    //      y dx   u dx           dx
      derivative   364    //
      derivative   365    //      dy    v  v du           dv
      derivative   366    //      -- = u  (- -- + (log u) --)
      derivative   367    //      dx       u dx           dx
      derivative   368    //
      derivative   369    //-----------------------------------------------------------------------------
      derivative   370    
      derivative   371    void
      derivative   372    dpower(void)
    000008E8              _dpower:                         ; function: dpower
                                                           ; frame size=16
    000008E8 2FE6                   MOV.L       R14,@-R15
    000008EA 2FD6                   MOV.L       R13,@-R15
    000008EC 2FC6                   MOV.L       R12,@-R15
    000008EE 4F22                   STS.L       PR,@-R15
      derivative   373    {
      derivative   374            push(caddr(p1));        // v/u
    000008F0 DD33                   MOV.L       L1737+4,R13; _push
    000008F2 DE34                   MOV.L       L1737+8,R14; _p1
    000008F4 64E2                   MOV.L       @R14,R4
    000008F6 8448                   MOV.B       @(8,R4),R0
    000008F8 2008                   TST         R0,R0
    000008FA 8B02                   BF          L1308
    000008FC 64E2                   MOV.L       @R14,R4
    000008FE A004                   BRA         L1313
    00000900 5441                   MOV.L       @(4,R4),R4
    00000902              L1308:                            
    00000902 935B                   MOV.W       L1737,R3   ; H'0570
    00000904 D230                   MOV.L       L1737+12,R2; _symtab
    00000906 6422                   MOV.L       @R2,R4
    00000908 343C                   ADD         R3,R4
    0000090A              L1313:                            
    0000090A 8448                   MOV.B       @(8,R4),R0
    0000090C 2008                   TST         R0,R0
    0000090E 8B0C                   BF          L1307
    00000910 64E2                   MOV.L       @R14,R4
    00000912 8448                   MOV.B       @(8,R4),R0
    00000914 2008                   TST         R0,R0
    00000916 8B02                   BF          L1309
    00000918 64E2                   MOV.L       @R14,R4
    0000091A A004                   BRA         L1314
    0000091C 5441                   MOV.L       @(4,R4),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000091E              L1309:                            
    0000091E 934D                   MOV.W       L1737,R3   ; H'0570
    00000920 D229                   MOV.L       L1737+12,R2; _symtab
    00000922 6422                   MOV.L       @R2,R4
    00000924 343C                   ADD         R3,R4
    00000926              L1314:                            
    00000926 A004                   BRA         L1315
    00000928 5441                   MOV.L       @(4,R4),R4
    0000092A              L1307:                            
    0000092A 9347                   MOV.W       L1737,R3   ; H'0570
    0000092C D226                   MOV.L       L1737+12,R2; _symtab
    0000092E 6422                   MOV.L       @R2,R4
    00000930 343C                   ADD         R3,R4
    00000932              L1315:                            
    00000932 8448                   MOV.B       @(8,R4),R0
    00000934 2008                   TST         R0,R0
    00000936 8B20                   BF          L1306
    00000938 64E2                   MOV.L       @R14,R4
    0000093A 8448                   MOV.B       @(8,R4),R0
    0000093C 2008                   TST         R0,R0
    0000093E 8B02                   BF          L1311
    00000940 64E2                   MOV.L       @R14,R4
    00000942 A004                   BRA         L1316
    00000944 5441                   MOV.L       @(4,R4),R4
    00000946              L1311:                            
    00000946 9339                   MOV.W       L1737,R3   ; H'0570
    00000948 D21F                   MOV.L       L1737+12,R2; _symtab
    0000094A 6422                   MOV.L       @R2,R4
    0000094C 343C                   ADD         R3,R4
    0000094E              L1316:                            
    0000094E 8448                   MOV.B       @(8,R4),R0
    00000950 2008                   TST         R0,R0
    00000952 8B0C                   BF          L1310
    00000954 64E2                   MOV.L       @R14,R4
    00000956 8448                   MOV.B       @(8,R4),R0
    00000958 2008                   TST         R0,R0
    0000095A 8B02                   BF          L1312
    0000095C 64E2                   MOV.L       @R14,R4
    0000095E A004                   BRA         L1317
    00000960 5441                   MOV.L       @(4,R4),R4
    00000962              L1312:                            
    00000962 932B                   MOV.W       L1737,R3   ; H'0570
    00000964 D218                   MOV.L       L1737+12,R2; _symtab
    00000966 6422                   MOV.L       @R2,R4
    00000968 343C                   ADD         R3,R4
    0000096A              L1317:                            
    0000096A A004                   BRA         L1318
    0000096C 5441                   MOV.L       @(4,R4),R4
    0000096E              L1310:                            
    0000096E 9325                   MOV.W       L1737,R3   ; H'0570
    00000970 D215                   MOV.L       L1737+12,R2; _symtab
    00000972 6422                   MOV.L       @R2,R4
    00000974 343C                   ADD         R3,R4
    00000976              L1318:                            
    00000976 A004                   BRA         L1319
    00000978 6442                   MOV.L       @R4,R4
    0000097A              L1306:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000097A 931F                   MOV.W       L1737,R3   ; H'0570
    0000097C D212                   MOV.L       L1737+12,R2; _symtab
    0000097E 6422                   MOV.L       @R2,R4
    00000980 343C                   ADD         R3,R4
    00000982              L1319:                            
    00000982 4D0B                   JSR         @R13
    00000984 0009                   NOP
      derivative   375            push(cadr(p1));
    00000986 64E2                   MOV.L       @R14,R4
    00000988 8448                   MOV.B       @(8,R4),R0
    0000098A 2008                   TST         R0,R0
    0000098C 8B02                   BF          L1321
    0000098E 64E2                   MOV.L       @R14,R4
    00000990 A004                   BRA         L1323
    00000992 5441                   MOV.L       @(4,R4),R4
    00000994              L1321:                            
    00000994 9312                   MOV.W       L1737,R3   ; H'0570
    00000996 D20C                   MOV.L       L1737+12,R2; _symtab
    00000998 6422                   MOV.L       @R2,R4
    0000099A 343C                   ADD         R3,R4
    0000099C              L1323:                            
    0000099C 8448                   MOV.B       @(8,R4),R0
    0000099E 2008                   TST         R0,R0
    000009A0 8B14                   BF          L1320
    000009A2 64E2                   MOV.L       @R14,R4
    000009A4 8448                   MOV.B       @(8,R4),R0
    000009A6 2008                   TST         R0,R0
    000009A8 8B02                   BF          L1322
    000009AA 64E2                   MOV.L       @R14,R4
    000009AC A004                   BRA         L1324
    000009AE 5441                   MOV.L       @(4,R4),R4
    000009B0              L1322:                            
    000009B0 9304                   MOV.W       L1737,R3   ; H'0570
    000009B2 D205                   MOV.L       L1737+12,R2; _symtab
    000009B4 6422                   MOV.L       @R2,R4
    000009B6 343C                   ADD         R3,R4
    000009B8              L1324:                            
    000009B8 A00C                   BRA         L1325
    000009BA 6442                   MOV.L       @R4,R4
    000009BC              L1737:                            
    000009BC 0570                   .DATA.W     H'0570
    000009BE 0000                   .DATA.W     0
    000009C0 <00000000>             .DATA.L     _push
    000009C4 <00000000>             .DATA.L     _p1
    000009C8 <00000000>             .DATA.L     _symtab
    000009CC              L1320:                            
    000009CC 9369                   MOV.W       L1738,R3   ; H'0570
    000009CE D235                   MOV.L       L1738+2,R2 ; _symtab
    000009D0 6422                   MOV.L       @R2,R4
    000009D2 343C                   ADD         R3,R4
    000009D4              L1325:                            
    000009D4 4D0B                   JSR         @R13
    000009D6 0009                   NOP
      derivative   376            divide();
    000009D8 D333                   MOV.L       L1738+6,R3 ; _divide
    000009DA 430B                   JSR         @R3
    000009DC 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   377    
      derivative   378            push(cadr(p1));         // du/dx
    000009DE 64E2                   MOV.L       @R14,R4
    000009E0 8448                   MOV.B       @(8,R4),R0
    000009E2 2008                   TST         R0,R0
    000009E4 8B02                   BF          L1327
    000009E6 64E2                   MOV.L       @R14,R4
    000009E8 A004                   BRA         L1329
    000009EA 5441                   MOV.L       @(4,R4),R4
    000009EC              L1327:                            
    000009EC 9359                   MOV.W       L1738,R3   ; H'0570
    000009EE D22D                   MOV.L       L1738+2,R2 ; _symtab
    000009F0 6422                   MOV.L       @R2,R4
    000009F2 343C                   ADD         R3,R4
    000009F4              L1329:                            
    000009F4 8448                   MOV.B       @(8,R4),R0
    000009F6 2008                   TST         R0,R0
    000009F8 8B0C                   BF          L1326
    000009FA 64E2                   MOV.L       @R14,R4
    000009FC 8448                   MOV.B       @(8,R4),R0
    000009FE 2008                   TST         R0,R0
    00000A00 8B02                   BF          L1328
    00000A02 64E2                   MOV.L       @R14,R4
    00000A04 A004                   BRA         L1330
    00000A06 5441                   MOV.L       @(4,R4),R4
    00000A08              L1328:                            
    00000A08 934B                   MOV.W       L1738,R3   ; H'0570
    00000A0A D226                   MOV.L       L1738+2,R2 ; _symtab
    00000A0C 6422                   MOV.L       @R2,R4
    00000A0E 343C                   ADD         R3,R4
    00000A10              L1330:                            
    00000A10 A004                   BRA         L1331
    00000A12 6442                   MOV.L       @R4,R4
    00000A14              L1326:                            
    00000A14 9345                   MOV.W       L1738,R3   ; H'0570
    00000A16 D223                   MOV.L       L1738+2,R2 ; _symtab
    00000A18 6422                   MOV.L       @R2,R4
    00000A1A 343C                   ADD         R3,R4
    00000A1C              L1331:                            
    00000A1C 4D0B                   JSR         @R13
    00000A1E 0009                   NOP
      derivative   379            push(p2);
    00000A20 D322                   MOV.L       L1738+10,R3; _p2
    00000A22 4D0B                   JSR         @R13
    00000A24 6432                   MOV.L       @R3,R4
      derivative   380            derivative();
    00000A26 BC4F                   BSR         _derivative
    00000A28 0009                   NOP
      derivative   381    
      derivative   382            multiply();
    00000A2A DC21                   MOV.L       L1738+14,R12; _multiply
    00000A2C 4C0B                   JSR         @R12
    00000A2E 0009                   NOP
      derivative   383    
      derivative   384            push(cadr(p1));         // log u
    00000A30 64E2                   MOV.L       @R14,R4
    00000A32 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A34 2008                   TST         R0,R0
    00000A36 8B02                   BF          L1333
    00000A38 64E2                   MOV.L       @R14,R4
    00000A3A A004                   BRA         L1335
    00000A3C 5441                   MOV.L       @(4,R4),R4
    00000A3E              L1333:                            
    00000A3E 9330                   MOV.W       L1738,R3   ; H'0570
    00000A40 D218                   MOV.L       L1738+2,R2 ; _symtab
    00000A42 6422                   MOV.L       @R2,R4
    00000A44 343C                   ADD         R3,R4
    00000A46              L1335:                            
    00000A46 8448                   MOV.B       @(8,R4),R0
    00000A48 2008                   TST         R0,R0
    00000A4A 8B0C                   BF          L1332
    00000A4C 64E2                   MOV.L       @R14,R4
    00000A4E 8448                   MOV.B       @(8,R4),R0
    00000A50 2008                   TST         R0,R0
    00000A52 8B02                   BF          L1334
    00000A54 64E2                   MOV.L       @R14,R4
    00000A56 A004                   BRA         L1336
    00000A58 5441                   MOV.L       @(4,R4),R4
    00000A5A              L1334:                            
    00000A5A 9322                   MOV.W       L1738,R3   ; H'0570
    00000A5C D211                   MOV.L       L1738+2,R2 ; _symtab
    00000A5E 6422                   MOV.L       @R2,R4
    00000A60 343C                   ADD         R3,R4
    00000A62              L1336:                            
    00000A62 A004                   BRA         L1337
    00000A64 6442                   MOV.L       @R4,R4
    00000A66              L1332:                            
    00000A66 931C                   MOV.W       L1738,R3   ; H'0570
    00000A68 D20E                   MOV.L       L1738+2,R2 ; _symtab
    00000A6A 6422                   MOV.L       @R2,R4
    00000A6C 343C                   ADD         R3,R4
    00000A6E              L1337:                            
    00000A6E 4D0B                   JSR         @R13
    00000A70 0009                   NOP
      derivative   385            logarithm();
    00000A72 D310                   MOV.L       L1738+18,R3; _logarithm
    00000A74 430B                   JSR         @R3
    00000A76 0009                   NOP
      derivative   386    
      derivative   387            push(caddr(p1));        // dv/dx
    00000A78 64E2                   MOV.L       @R14,R4
    00000A7A 8448                   MOV.B       @(8,R4),R0
    00000A7C 2008                   TST         R0,R0
    00000A7E 8B02                   BF          L1340
    00000A80 64E2                   MOV.L       @R14,R4
    00000A82 A004                   BRA         L1345
    00000A84 5441                   MOV.L       @(4,R4),R4
    00000A86              L1340:                            
    00000A86 930C                   MOV.W       L1738,R3   ; H'0570
    00000A88 D206                   MOV.L       L1738+2,R2 ; _symtab
    00000A8A 6422                   MOV.L       @R2,R4
    00000A8C 343C                   ADD         R3,R4
    00000A8E              L1345:                            
    00000A8E 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A90 2008                   TST         R0,R0
    00000A92 8B17                   BF          L1339
    00000A94 64E2                   MOV.L       @R14,R4
    00000A96 8448                   MOV.B       @(8,R4),R0
    00000A98 2008                   TST         R0,R0
    00000A9A 8B0D                   BF          L1341
    00000A9C 64E2                   MOV.L       @R14,R4
    00000A9E A00F                   BRA         L1346
    00000AA0 5441                   MOV.L       @(4,R4),R4
    00000AA2              L1738:                            
    00000AA2 0570                   .DATA.W     H'0570
    00000AA4 <00000000>             .DATA.L     _symtab
    00000AA8 <00000000>             .DATA.L     _divide
    00000AAC <00000000>             .DATA.L     _p2
    00000AB0 <00000000>             .DATA.L     _multiply
    00000AB4 <00000000>             .DATA.L     _logarithm
    00000AB8              L1341:                            
    00000AB8 9365                   MOV.W       L1739,R3   ; H'0570
    00000ABA D233                   MOV.L       L1739+2,R2 ; _symtab
    00000ABC 6422                   MOV.L       @R2,R4
    00000ABE 343C                   ADD         R3,R4
    00000AC0              L1346:                            
    00000AC0 A004                   BRA         L1347
    00000AC2 5441                   MOV.L       @(4,R4),R4
    00000AC4              L1339:                            
    00000AC4 935F                   MOV.W       L1739,R3   ; H'0570
    00000AC6 D230                   MOV.L       L1739+2,R2 ; _symtab
    00000AC8 6422                   MOV.L       @R2,R4
    00000ACA 343C                   ADD         R3,R4
    00000ACC              L1347:                            
    00000ACC 8448                   MOV.B       @(8,R4),R0
    00000ACE 2008                   TST         R0,R0
    00000AD0 8B20                   BF          L1338
    00000AD2 64E2                   MOV.L       @R14,R4
    00000AD4 8448                   MOV.B       @(8,R4),R0
    00000AD6 2008                   TST         R0,R0
    00000AD8 8B02                   BF          L1343
    00000ADA 64E2                   MOV.L       @R14,R4
    00000ADC A004                   BRA         L1348
    00000ADE 5441                   MOV.L       @(4,R4),R4
    00000AE0              L1343:                            
    00000AE0 9351                   MOV.W       L1739,R3   ; H'0570
    00000AE2 D229                   MOV.L       L1739+2,R2 ; _symtab
    00000AE4 6422                   MOV.L       @R2,R4
    00000AE6 343C                   ADD         R3,R4
    00000AE8              L1348:                            
    00000AE8 8448                   MOV.B       @(8,R4),R0
    00000AEA 2008                   TST         R0,R0
    00000AEC 8B0C                   BF          L1342
    00000AEE 64E2                   MOV.L       @R14,R4
    00000AF0 8448                   MOV.B       @(8,R4),R0
    00000AF2 2008                   TST         R0,R0
    00000AF4 8B02                   BF          L1344
    00000AF6 64E2                   MOV.L       @R14,R4
    00000AF8 A004                   BRA         L1349
    00000AFA 5441                   MOV.L       @(4,R4),R4
    00000AFC              L1344:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AFC 9343                   MOV.W       L1739,R3   ; H'0570
    00000AFE D222                   MOV.L       L1739+2,R2 ; _symtab
    00000B00 6422                   MOV.L       @R2,R4
    00000B02 343C                   ADD         R3,R4
    00000B04              L1349:                            
    00000B04 A004                   BRA         L1350
    00000B06 5441                   MOV.L       @(4,R4),R4
    00000B08              L1342:                            
    00000B08 933D                   MOV.W       L1739,R3   ; H'0570
    00000B0A D21F                   MOV.L       L1739+2,R2 ; _symtab
    00000B0C 6422                   MOV.L       @R2,R4
    00000B0E 343C                   ADD         R3,R4
    00000B10              L1350:                            
    00000B10 A004                   BRA         L1351
    00000B12 6442                   MOV.L       @R4,R4
    00000B14              L1338:                            
    00000B14 9337                   MOV.W       L1739,R3   ; H'0570
    00000B16 D21C                   MOV.L       L1739+2,R2 ; _symtab
    00000B18 6422                   MOV.L       @R2,R4
    00000B1A 343C                   ADD         R3,R4
    00000B1C              L1351:                            
    00000B1C 4D0B                   JSR         @R13
    00000B1E 0009                   NOP
      derivative   388            push(p2);
    00000B20 D31A                   MOV.L       L1739+6,R3 ; _p2
    00000B22 4D0B                   JSR         @R13
    00000B24 6432                   MOV.L       @R3,R4
      derivative   389            derivative();
    00000B26 BBCF                   BSR         _derivative
    00000B28 0009                   NOP
      derivative   390    
      derivative   391            multiply();
    00000B2A 4C0B                   JSR         @R12
    00000B2C 0009                   NOP
      derivative   392    
      derivative   393            add();
    00000B2E D118                   MOV.L       L1739+10,R1; _add
    00000B30 410B                   JSR         @R1
    00000B32 0009                   NOP
      derivative   394    
      derivative   395            push(p1);               // u^v
    00000B34 4D0B                   JSR         @R13
    00000B36 64E2                   MOV.L       @R14,R4
      derivative   396    
      derivative   397            multiply();
    00000B38 4C0B                   JSR         @R12
    00000B3A 0009                   NOP
      derivative   398    }
    00000B3C 4F26                   LDS.L       @R15+,PR
    00000B3E 6CF6                   MOV.L       @R15+,R12
    00000B40 6DF6                   MOV.L       @R15+,R13
    00000B42 000B                   RTS
    00000B44 6EF6                   MOV.L       @R15+,R14
      derivative   399    
      derivative   400    void
      derivative   401    dlog(void)
    00000B46              _dlog:                           ; function: dlog




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=12
    00000B46 2FE6                   MOV.L       R14,@-R15
    00000B48 2FD6                   MOV.L       R13,@-R15
    00000B4A 4F22                   STS.L       PR,@-R15
      derivative   402    {
      derivative   403            push(cadr(p1));
    00000B4C DD11                   MOV.L       L1739+14,R13; _push
    00000B4E DE12                   MOV.L       L1739+18,R14; _p1
    00000B50 64E2                   MOV.L       @R14,R4
    00000B52 8448                   MOV.B       @(8,R4),R0
    00000B54 2008                   TST         R0,R0
    00000B56 8B02                   BF          L1353
    00000B58 64E2                   MOV.L       @R14,R4
    00000B5A A004                   BRA         L1355
    00000B5C 5441                   MOV.L       @(4,R4),R4
    00000B5E              L1353:                            
    00000B5E 9312                   MOV.W       L1739,R3   ; H'0570
    00000B60 D209                   MOV.L       L1739+2,R2 ; _symtab
    00000B62 6422                   MOV.L       @R2,R4
    00000B64 343C                   ADD         R3,R4
    00000B66              L1355:                            
    00000B66 8448                   MOV.B       @(8,R4),R0
    00000B68 2008                   TST         R0,R0
    00000B6A 8B17                   BF          L1352
    00000B6C 64E2                   MOV.L       @R14,R4
    00000B6E 8448                   MOV.B       @(8,R4),R0
    00000B70 2008                   TST         R0,R0
    00000B72 8B02                   BF          L1354
    00000B74 64E2                   MOV.L       @R14,R4
    00000B76 A004                   BRA         L1356
    00000B78 5441                   MOV.L       @(4,R4),R4
    00000B7A              L1354:                            
    00000B7A 9304                   MOV.W       L1739,R3   ; H'0570
    00000B7C D202                   MOV.L       L1739+2,R2 ; _symtab
    00000B7E 6422                   MOV.L       @R2,R4
    00000B80 343C                   ADD         R3,R4
    00000B82              L1356:                            
    00000B82 A00F                   BRA         L1357
    00000B84 6442                   MOV.L       @R4,R4
    00000B86              L1739:                            
    00000B86 0570                   .DATA.W     H'0570
    00000B88 <00000000>             .DATA.L     _symtab
    00000B8C <00000000>             .DATA.L     _p2
    00000B90 <00000000>             .DATA.L     _add
    00000B94 <00000000>             .DATA.L     _push
    00000B98 <00000000>             .DATA.L     _p1
    00000B9C              L1352:                            
    00000B9C 9368                   MOV.W       L1740,R3   ; H'0570
    00000B9E D235                   MOV.L       L1740+4,R2 ; _symtab
    00000BA0 6422                   MOV.L       @R2,R4
    00000BA2 343C                   ADD         R3,R4
    00000BA4              L1357:                            
    00000BA4 4D0B                   JSR         @R13
    00000BA6 0009                   NOP
      derivative   404            push(p2);
    00000BA8 D333                   MOV.L       L1740+8,R3 ; _p2
    00000BAA 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BAC 6432                   MOV.L       @R3,R4
      derivative   405            derivative();
    00000BAE BB8B                   BSR         _derivative
    00000BB0 0009                   NOP
      derivative   406            push(cadr(p1));
    00000BB2 64E2                   MOV.L       @R14,R4
    00000BB4 8448                   MOV.B       @(8,R4),R0
    00000BB6 2008                   TST         R0,R0
    00000BB8 8B02                   BF          L1359
    00000BBA 64E2                   MOV.L       @R14,R4
    00000BBC A004                   BRA         L1361
    00000BBE 5441                   MOV.L       @(4,R4),R4
    00000BC0              L1359:                            
    00000BC0 9356                   MOV.W       L1740,R3   ; H'0570
    00000BC2 D22C                   MOV.L       L1740+4,R2 ; _symtab
    00000BC4 6422                   MOV.L       @R2,R4
    00000BC6 343C                   ADD         R3,R4
    00000BC8              L1361:                            
    00000BC8 8448                   MOV.B       @(8,R4),R0
    00000BCA 2008                   TST         R0,R0
    00000BCC 8B0C                   BF          L1358
    00000BCE 64E2                   MOV.L       @R14,R4
    00000BD0 8448                   MOV.B       @(8,R4),R0
    00000BD2 2008                   TST         R0,R0
    00000BD4 8B02                   BF          L1360
    00000BD6 64E2                   MOV.L       @R14,R4
    00000BD8 A004                   BRA         L1362
    00000BDA 5441                   MOV.L       @(4,R4),R4
    00000BDC              L1360:                            
    00000BDC 9348                   MOV.W       L1740,R3   ; H'0570
    00000BDE D225                   MOV.L       L1740+4,R2 ; _symtab
    00000BE0 6422                   MOV.L       @R2,R4
    00000BE2 343C                   ADD         R3,R4
    00000BE4              L1362:                            
    00000BE4 A004                   BRA         L1363
    00000BE6 6442                   MOV.L       @R4,R4
    00000BE8              L1358:                            
    00000BE8 9342                   MOV.W       L1740,R3   ; H'0570
    00000BEA D222                   MOV.L       L1740+4,R2 ; _symtab
    00000BEC 6422                   MOV.L       @R2,R4
    00000BEE 343C                   ADD         R3,R4
    00000BF0              L1363:                            
    00000BF0 4D0B                   JSR         @R13
    00000BF2 0009                   NOP
      derivative   407            divide();
    00000BF4 4F26                   LDS.L       @R15+,PR
    00000BF6 6DF6                   MOV.L       @R15+,R13
    00000BF8 D320                   MOV.L       L1740+12,R3; _divide
    00000BFA 432B                   JMP         @R3
    00000BFC 6EF6                   MOV.L       @R15+,R14
      derivative   408    }
      derivative   409    
      derivative   410    //      derivative of derivative
      derivative   411    //
      derivative   412    //      example: d(d(f(x,y),y),x)
      derivative   413    //
      derivative   414    //      p1 = d(f(x,y),y)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   415    //
      derivative   416    //      p2 = x
      derivative   417    //
      derivative   418    //      cadr(p1) = f(x,y)
      derivative   419    //
      derivative   420    //      caddr(p1) = y
      derivative   421    
      derivative   422    void
      derivative   423    dd(void)
    00000BFE              _dd:                             ; function: dd
                                                           ; frame size=20
    00000BFE 2FE6                   MOV.L       R14,@-R15
    00000C00 2FD6                   MOV.L       R13,@-R15
    00000C02 2FC6                   MOV.L       R12,@-R15
    00000C04 2FB6                   MOV.L       R11,@-R15
    00000C06 4F22                   STS.L       PR,@-R15
      derivative   424    {
      derivative   425            // d(f(x,y),x)
      derivative   426    
      derivative   427            push(cadr(p1));
    00000C08 DC1D                   MOV.L       L1740+16,R12; _push
    00000C0A DE1E                   MOV.L       L1740+20,R14; _p1
    00000C0C 64E2                   MOV.L       @R14,R4
    00000C0E 8448                   MOV.B       @(8,R4),R0
    00000C10 2008                   TST         R0,R0
    00000C12 8B02                   BF          L1365
    00000C14 64E2                   MOV.L       @R14,R4
    00000C16 A004                   BRA         L1367
    00000C18 5441                   MOV.L       @(4,R4),R4
    00000C1A              L1365:                            
    00000C1A 9329                   MOV.W       L1740,R3   ; H'0570
    00000C1C D215                   MOV.L       L1740+4,R2 ; _symtab
    00000C1E 6422                   MOV.L       @R2,R4
    00000C20 343C                   ADD         R3,R4
    00000C22              L1367:                            
    00000C22 8448                   MOV.B       @(8,R4),R0
    00000C24 2008                   TST         R0,R0
    00000C26 8B0C                   BF          L1364
    00000C28 64E2                   MOV.L       @R14,R4
    00000C2A 8448                   MOV.B       @(8,R4),R0
    00000C2C 2008                   TST         R0,R0
    00000C2E 8B02                   BF          L1366
    00000C30 64E2                   MOV.L       @R14,R4
    00000C32 A004                   BRA         L1368
    00000C34 5441                   MOV.L       @(4,R4),R4
    00000C36              L1366:                            
    00000C36 931B                   MOV.W       L1740,R3   ; H'0570
    00000C38 D20E                   MOV.L       L1740+4,R2 ; _symtab
    00000C3A 6422                   MOV.L       @R2,R4
    00000C3C 343C                   ADD         R3,R4
    00000C3E              L1368:                            
    00000C3E A004                   BRA         L1369
    00000C40 6442                   MOV.L       @R4,R4
    00000C42              L1364:                            
    00000C42 9315                   MOV.W       L1740,R3   ; H'0570
    00000C44 D20B                   MOV.L       L1740+4,R2 ; _symtab
    00000C46 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C48 343C                   ADD         R3,R4
    00000C4A              L1369:                            
    00000C4A 4C0B                   JSR         @R12
    00000C4C 0009                   NOP
      derivative   428            push(p2);
    00000C4E D30A                   MOV.L       L1740+8,R3 ; _p2
    00000C50 4C0B                   JSR         @R12
    00000C52 6432                   MOV.L       @R3,R4
      derivative   429            derivative();
    00000C54 BB38                   BSR         _derivative
    00000C56 0009                   NOP
      derivative   430    
      derivative   431            p3 = pop();
    00000C58 DD0B                   MOV.L       L1740+24,R13; _p3
    00000C5A D30C                   MOV.L       L1740+28,R3; _pop
    00000C5C 430B                   JSR         @R3
    00000C5E 0009                   NOP
    00000C60 2D02                   MOV.L       R0,@R13
    00000C62 6403                   MOV         R0,R4
    00000C64 8448                   MOV.B       @(8,R4),R0
    00000C66 2008                   TST         R0,R0
    00000C68 8B12                   BF          L1371
    00000C6A 62D2                   MOV.L       @R13,R2
    00000C6C A014                   BRA         L1372
    00000C6E 6222                   MOV.L       @R2,R2
    00000C70              L1740:                            
    00000C70 0570                   .DATA.W     H'0570
    00000C72 0000                   .DATA.W     0
    00000C74 <00000000>             .DATA.L     _symtab
    00000C78 <00000000>             .DATA.L     _p2
    00000C7C <00000000>             .DATA.L     _divide
    00000C80 <00000000>             .DATA.L     _push
    00000C84 <00000000>             .DATA.L     _p1
    00000C88 <00000000>             .DATA.L     _p3
    00000C8C <00000000>             .DATA.L     _pop
    00000C90              L1371:                            
    00000C90 9369                   MOV.W       L1741,R3   ; H'0570
    00000C92 D136                   MOV.L       L1741+6,R1 ; _symtab
    00000C94 6212                   MOV.L       @R1,R2
    00000C96 323C                   ADD         R3,R2
    00000C98              L1372:                            
    00000C98 9366                   MOV.W       L1741+2,R3 ; H'0168
    00000C9A D134                   MOV.L       L1741+6,R1 ; _symtab
    00000C9C 6012                   MOV.L       @R1,R0
    00000C9E 303C                   ADD         R3,R0
    00000CA0 3200                   CMP/EQ      R0,R2
    00000CA2 8901                   BT          L1742
    00000CA4 A1FD                   BRA         L1370
    00000CA6 0009                   NOP
    00000CA8              L1742:                            
      derivative   432    
      derivative   433            if (car(p3) == symbol(DERIVATIVE)) {
      derivative   434    
      derivative   435                    // sort dx terms
      derivative   436    
      derivative   437                    push_symbol(DERIVATIVE);
    00000CA8 D131                   MOV.L       L1741+10,R1; _push_symbol




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CAA 410B                   JSR         @R1
    00000CAC E41E                   MOV         #30,R4
      derivative   438                    push_symbol(DERIVATIVE);
    00000CAE D330                   MOV.L       L1741+10,R3; _push_symbol
    00000CB0 430B                   JSR         @R3
    00000CB2 E41E                   MOV         #30,R4
      derivative   439                    push(cadr(p3));
    00000CB4 64D2                   MOV.L       @R13,R4
    00000CB6 8448                   MOV.B       @(8,R4),R0
    00000CB8 2008                   TST         R0,R0
    00000CBA 8B02                   BF          L1374
    00000CBC 64D2                   MOV.L       @R13,R4
    00000CBE A004                   BRA         L1376
    00000CC0 5441                   MOV.L       @(4,R4),R4
    00000CC2              L1374:                            
    00000CC2 9350                   MOV.W       L1741,R3   ; H'0570
    00000CC4 D229                   MOV.L       L1741+6,R2 ; _symtab
    00000CC6 6422                   MOV.L       @R2,R4
    00000CC8 343C                   ADD         R3,R4
    00000CCA              L1376:                            
    00000CCA 8448                   MOV.B       @(8,R4),R0
    00000CCC 2008                   TST         R0,R0
    00000CCE 8B0C                   BF          L1373
    00000CD0 64D2                   MOV.L       @R13,R4
    00000CD2 8448                   MOV.B       @(8,R4),R0
    00000CD4 2008                   TST         R0,R0
    00000CD6 8B02                   BF          L1375
    00000CD8 64D2                   MOV.L       @R13,R4
    00000CDA A004                   BRA         L1377
    00000CDC 5441                   MOV.L       @(4,R4),R4
    00000CDE              L1375:                            
    00000CDE 9342                   MOV.W       L1741,R3   ; H'0570
    00000CE0 D222                   MOV.L       L1741+6,R2 ; _symtab
    00000CE2 6422                   MOV.L       @R2,R4
    00000CE4 343C                   ADD         R3,R4
    00000CE6              L1377:                            
    00000CE6 A004                   BRA         L1378
    00000CE8 6442                   MOV.L       @R4,R4
    00000CEA              L1373:                            
    00000CEA 933C                   MOV.W       L1741,R3   ; H'0570
    00000CEC D21F                   MOV.L       L1741+6,R2 ; _symtab
    00000CEE 6422                   MOV.L       @R2,R4
    00000CF0 343C                   ADD         R3,R4
    00000CF2              L1378:                            
    00000CF2 4C0B                   JSR         @R12
    00000CF4 0009                   NOP
      derivative   440    
      derivative   441                    if (lessp(caddr(p3), caddr(p1))) {
    00000CF6 DB1F                   MOV.L       L1741+14,R11; _list
    00000CF8 65E2                   MOV.L       @R14,R5
    00000CFA 8458                   MOV.B       @(8,R5),R0
    00000CFC 2008                   TST         R0,R0
    00000CFE 8B02                   BF          L1382
    00000D00 65E2                   MOV.L       @R14,R5
    00000D02 A004                   BRA         L1394
    00000D04 5551                   MOV.L       @(4,R5),R5
    00000D06              L1382:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D06 932E                   MOV.W       L1741,R3   ; H'0570
    00000D08 D218                   MOV.L       L1741+6,R2 ; _symtab
    00000D0A 6522                   MOV.L       @R2,R5
    00000D0C 353C                   ADD         R3,R5
    00000D0E              L1394:                            
    00000D0E 8458                   MOV.B       @(8,R5),R0
    00000D10 2008                   TST         R0,R0
    00000D12 8B0C                   BF          L1381
    00000D14 65E2                   MOV.L       @R14,R5
    00000D16 8458                   MOV.B       @(8,R5),R0
    00000D18 2008                   TST         R0,R0
    00000D1A 8B02                   BF          L1383
    00000D1C 65E2                   MOV.L       @R14,R5
    00000D1E A004                   BRA         L1395
    00000D20 5551                   MOV.L       @(4,R5),R5
    00000D22              L1383:                            
    00000D22 9320                   MOV.W       L1741,R3   ; H'0570
    00000D24 D211                   MOV.L       L1741+6,R2 ; _symtab
    00000D26 6522                   MOV.L       @R2,R5
    00000D28 353C                   ADD         R3,R5
    00000D2A              L1395:                            
    00000D2A A004                   BRA         L1396
    00000D2C 5551                   MOV.L       @(4,R5),R5
    00000D2E              L1381:                            
    00000D2E 931A                   MOV.W       L1741,R3   ; H'0570
    00000D30 D20E                   MOV.L       L1741+6,R2 ; _symtab
    00000D32 6522                   MOV.L       @R2,R5
    00000D34 353C                   ADD         R3,R5
    00000D36              L1396:                            
    00000D36 8458                   MOV.B       @(8,R5),R0
    00000D38 2008                   TST         R0,R0
    00000D3A 8B29                   BF          L1380
    00000D3C 65E2                   MOV.L       @R14,R5
    00000D3E 8458                   MOV.B       @(8,R5),R0
    00000D40 2008                   TST         R0,R0
    00000D42 8B02                   BF          L1385
    00000D44 65E2                   MOV.L       @R14,R5
    00000D46 A004                   BRA         L1397
    00000D48 5551                   MOV.L       @(4,R5),R5
    00000D4A              L1385:                            
    00000D4A 930C                   MOV.W       L1741,R3   ; H'0570
    00000D4C D207                   MOV.L       L1741+6,R2 ; _symtab
    00000D4E 6522                   MOV.L       @R2,R5
    00000D50 353C                   ADD         R3,R5
    00000D52              L1397:                            
    00000D52 8458                   MOV.B       @(8,R5),R0
    00000D54 2008                   TST         R0,R0
    00000D56 8B15                   BF          L1384
    00000D58 65E2                   MOV.L       @R14,R5
    00000D5A 8458                   MOV.B       @(8,R5),R0
    00000D5C 2008                   TST         R0,R0
    00000D5E 8B0B                   BF          L1386
    00000D60 65E2                   MOV.L       @R14,R5
    00000D62 A00D                   BRA         L1398
    00000D64 5551                   MOV.L       @(4,R5),R5
    00000D66              L1741:                            
    00000D66 0570                   .DATA.W     H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D68 0168                   .DATA.W     H'0168
    00000D6A 0000                   .DATA.W     0
    00000D6C <00000000>             .DATA.L     _symtab
    00000D70 <00000000>             .DATA.L     _push_symbol
    00000D74 <00000000>             .DATA.L     _list
    00000D78              L1386:                            
    00000D78 9363                   MOV.W       L1743,R3   ; H'0570
    00000D7A D232                   MOV.L       L1743+2,R2 ; _symtab
    00000D7C 6522                   MOV.L       @R2,R5
    00000D7E 353C                   ADD         R3,R5
    00000D80              L1398:                            
    00000D80 A004                   BRA         L1399
    00000D82 5551                   MOV.L       @(4,R5),R5
    00000D84              L1384:                            
    00000D84 935D                   MOV.W       L1743,R3   ; H'0570
    00000D86 D22F                   MOV.L       L1743+2,R2 ; _symtab
    00000D88 6522                   MOV.L       @R2,R5
    00000D8A 353C                   ADD         R3,R5
    00000D8C              L1399:                            
    00000D8C A004                   BRA         L1400
    00000D8E 6552                   MOV.L       @R5,R5
    00000D90              L1380:                            
    00000D90 9357                   MOV.W       L1743,R3   ; H'0570
    00000D92 D22C                   MOV.L       L1743+2,R2 ; _symtab
    00000D94 6522                   MOV.L       @R2,R5
    00000D96 353C                   ADD         R3,R5
    00000D98              L1400:                            
    00000D98 64D2                   MOV.L       @R13,R4
    00000D9A 8448                   MOV.B       @(8,R4),R0
    00000D9C 2008                   TST         R0,R0
    00000D9E 8B02                   BF          L1389
    00000DA0 64D2                   MOV.L       @R13,R4
    00000DA2 A004                   BRA         L1401
    00000DA4 5441                   MOV.L       @(4,R4),R4
    00000DA6              L1389:                            
    00000DA6 934C                   MOV.W       L1743,R3   ; H'0570
    00000DA8 D226                   MOV.L       L1743+2,R2 ; _symtab
    00000DAA 6422                   MOV.L       @R2,R4
    00000DAC 343C                   ADD         R3,R4
    00000DAE              L1401:                            
    00000DAE 8448                   MOV.B       @(8,R4),R0
    00000DB0 2008                   TST         R0,R0
    00000DB2 8B0C                   BF          L1388
    00000DB4 64D2                   MOV.L       @R13,R4
    00000DB6 8448                   MOV.B       @(8,R4),R0
    00000DB8 2008                   TST         R0,R0
    00000DBA 8B02                   BF          L1390
    00000DBC 64D2                   MOV.L       @R13,R4
    00000DBE A004                   BRA         L1402
    00000DC0 5441                   MOV.L       @(4,R4),R4
    00000DC2              L1390:                            
    00000DC2 933E                   MOV.W       L1743,R3   ; H'0570
    00000DC4 D21F                   MOV.L       L1743+2,R2 ; _symtab
    00000DC6 6422                   MOV.L       @R2,R4
    00000DC8 343C                   ADD         R3,R4
    00000DCA              L1402:                            
    00000DCA A004                   BRA         L1403




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DCC 5441                   MOV.L       @(4,R4),R4
    00000DCE              L1388:                            
    00000DCE 9338                   MOV.W       L1743,R3   ; H'0570
    00000DD0 D21C                   MOV.L       L1743+2,R2 ; _symtab
    00000DD2 6422                   MOV.L       @R2,R4
    00000DD4 343C                   ADD         R3,R4
    00000DD6              L1403:                            
    00000DD6 8448                   MOV.B       @(8,R4),R0
    00000DD8 2008                   TST         R0,R0
    00000DDA 8B20                   BF          L1387
    00000DDC 64D2                   MOV.L       @R13,R4
    00000DDE 8448                   MOV.B       @(8,R4),R0
    00000DE0 2008                   TST         R0,R0
    00000DE2 8B02                   BF          L1392
    00000DE4 64D2                   MOV.L       @R13,R4
    00000DE6 A004                   BRA         L1404
    00000DE8 5441                   MOV.L       @(4,R4),R4
    00000DEA              L1392:                            
    00000DEA 932A                   MOV.W       L1743,R3   ; H'0570
    00000DEC D215                   MOV.L       L1743+2,R2 ; _symtab
    00000DEE 6422                   MOV.L       @R2,R4
    00000DF0 343C                   ADD         R3,R4
    00000DF2              L1404:                            
    00000DF2 8448                   MOV.B       @(8,R4),R0
    00000DF4 2008                   TST         R0,R0
    00000DF6 8B0C                   BF          L1391
    00000DF8 64D2                   MOV.L       @R13,R4
    00000DFA 8448                   MOV.B       @(8,R4),R0
    00000DFC 2008                   TST         R0,R0
    00000DFE 8B02                   BF          L1393
    00000E00 64D2                   MOV.L       @R13,R4
    00000E02 A004                   BRA         L1405
    00000E04 5441                   MOV.L       @(4,R4),R4
    00000E06              L1393:                            
    00000E06 931C                   MOV.W       L1743,R3   ; H'0570
    00000E08 D20E                   MOV.L       L1743+2,R2 ; _symtab
    00000E0A 6422                   MOV.L       @R2,R4
    00000E0C 343C                   ADD         R3,R4
    00000E0E              L1405:                            
    00000E0E A004                   BRA         L1406
    00000E10 5441                   MOV.L       @(4,R4),R4
    00000E12              L1391:                            
    00000E12 9316                   MOV.W       L1743,R3   ; H'0570
    00000E14 D20B                   MOV.L       L1743+2,R2 ; _symtab
    00000E16 6422                   MOV.L       @R2,R4
    00000E18 343C                   ADD         R3,R4
    00000E1A              L1406:                            
    00000E1A A004                   BRA         L1407
    00000E1C 6442                   MOV.L       @R4,R4
    00000E1E              L1387:                            
    00000E1E 9310                   MOV.W       L1743,R3   ; H'0570
    00000E20 D208                   MOV.L       L1743+2,R2 ; _symtab
    00000E22 6422                   MOV.L       @R2,R4
    00000E24 343C                   ADD         R3,R4
    00000E26              L1407:                            
    00000E26 D308                   MOV.L       L1743+6,R3 ; _lessp
    00000E28 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E2A 0009                   NOP
    00000E2C 2008                   TST         R0,R0
    00000E2E 8B01                   BF          L1744
    00000E30 A09C                   BRA         L1379
    00000E32 0009                   NOP
    00000E34              L1744:                            
      derivative   442                            push(caddr(p3));
    00000E34 64D2                   MOV.L       @R13,R4
    00000E36 8448                   MOV.B       @(8,R4),R0
    00000E38 2008                   TST         R0,R0
    00000E3A 8B07                   BF          L1410
    00000E3C 64D2                   MOV.L       @R13,R4
    00000E3E A009                   BRA         L1415
    00000E40 5441                   MOV.L       @(4,R4),R4
    00000E42              L1743:                            
    00000E42 0570                   .DATA.W     H'0570
    00000E44 <00000000>             .DATA.L     _symtab
    00000E48 <00000000>             .DATA.L     _lessp
    00000E4C              L1410:                            
    00000E4C 935D                   MOV.W       L1745,R3   ; H'0570
    00000E4E D22F                   MOV.L       L1745+2,R2 ; _symtab
    00000E50 6422                   MOV.L       @R2,R4
    00000E52 343C                   ADD         R3,R4
    00000E54              L1415:                            
    00000E54 8448                   MOV.B       @(8,R4),R0
    00000E56 2008                   TST         R0,R0
    00000E58 8B0C                   BF          L1409
    00000E5A 64D2                   MOV.L       @R13,R4
    00000E5C 8448                   MOV.B       @(8,R4),R0
    00000E5E 2008                   TST         R0,R0
    00000E60 8B02                   BF          L1411
    00000E62 64D2                   MOV.L       @R13,R4
    00000E64 A004                   BRA         L1416
    00000E66 5441                   MOV.L       @(4,R4),R4
    00000E68              L1411:                            
    00000E68 934F                   MOV.W       L1745,R3   ; H'0570
    00000E6A D228                   MOV.L       L1745+2,R2 ; _symtab
    00000E6C 6422                   MOV.L       @R2,R4
    00000E6E 343C                   ADD         R3,R4
    00000E70              L1416:                            
    00000E70 A004                   BRA         L1417
    00000E72 5441                   MOV.L       @(4,R4),R4
    00000E74              L1409:                            
    00000E74 9349                   MOV.W       L1745,R3   ; H'0570
    00000E76 D225                   MOV.L       L1745+2,R2 ; _symtab
    00000E78 6422                   MOV.L       @R2,R4
    00000E7A 343C                   ADD         R3,R4
    00000E7C              L1417:                            
    00000E7C 8448                   MOV.B       @(8,R4),R0
    00000E7E 2008                   TST         R0,R0
    00000E80 8B20                   BF          L1408
    00000E82 64D2                   MOV.L       @R13,R4
    00000E84 8448                   MOV.B       @(8,R4),R0
    00000E86 2008                   TST         R0,R0
    00000E88 8B02                   BF          L1413
    00000E8A 64D2                   MOV.L       @R13,R4
    00000E8C A004                   BRA         L1418




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E8E 5441                   MOV.L       @(4,R4),R4
    00000E90              L1413:                            
    00000E90 933B                   MOV.W       L1745,R3   ; H'0570
    00000E92 D21E                   MOV.L       L1745+2,R2 ; _symtab
    00000E94 6422                   MOV.L       @R2,R4
    00000E96 343C                   ADD         R3,R4
    00000E98              L1418:                            
    00000E98 8448                   MOV.B       @(8,R4),R0
    00000E9A 2008                   TST         R0,R0
    00000E9C 8B0C                   BF          L1412
    00000E9E 64D2                   MOV.L       @R13,R4
    00000EA0 8448                   MOV.B       @(8,R4),R0
    00000EA2 2008                   TST         R0,R0
    00000EA4 8B02                   BF          L1414
    00000EA6 64D2                   MOV.L       @R13,R4
    00000EA8 A004                   BRA         L1419
    00000EAA 5441                   MOV.L       @(4,R4),R4
    00000EAC              L1414:                            
    00000EAC 932D                   MOV.W       L1745,R3   ; H'0570
    00000EAE D217                   MOV.L       L1745+2,R2 ; _symtab
    00000EB0 6422                   MOV.L       @R2,R4
    00000EB2 343C                   ADD         R3,R4
    00000EB4              L1419:                            
    00000EB4 A004                   BRA         L1420
    00000EB6 5441                   MOV.L       @(4,R4),R4
    00000EB8              L1412:                            
    00000EB8 9327                   MOV.W       L1745,R3   ; H'0570
    00000EBA D214                   MOV.L       L1745+2,R2 ; _symtab
    00000EBC 6422                   MOV.L       @R2,R4
    00000EBE 343C                   ADD         R3,R4
    00000EC0              L1420:                            
    00000EC0 A004                   BRA         L1421
    00000EC2 6442                   MOV.L       @R4,R4
    00000EC4              L1408:                            
    00000EC4 9321                   MOV.W       L1745,R3   ; H'0570
    00000EC6 D211                   MOV.L       L1745+2,R2 ; _symtab
    00000EC8 6422                   MOV.L       @R2,R4
    00000ECA 343C                   ADD         R3,R4
    00000ECC              L1421:                            
    00000ECC 4C0B                   JSR         @R12
    00000ECE 0009                   NOP
      derivative   443                            list(3);
    00000ED0 4B0B                   JSR         @R11
    00000ED2 E403                   MOV         #3,R4
      derivative   444                            push(caddr(p1));
    00000ED4 64E2                   MOV.L       @R14,R4
    00000ED6 8448                   MOV.B       @(8,R4),R0
    00000ED8 2008                   TST         R0,R0
    00000EDA 8B02                   BF          L1424
    00000EDC 64E2                   MOV.L       @R14,R4
    00000EDE A004                   BRA         L1429
    00000EE0 5441                   MOV.L       @(4,R4),R4
    00000EE2              L1424:                            
    00000EE2 9312                   MOV.W       L1745,R3   ; H'0570
    00000EE4 D209                   MOV.L       L1745+2,R2 ; _symtab
    00000EE6 6422                   MOV.L       @R2,R4
    00000EE8 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EEA              L1429:                            
    00000EEA 8448                   MOV.B       @(8,R4),R0
    00000EEC 2008                   TST         R0,R0
    00000EEE 8B0F                   BF          L1423
    00000EF0 64E2                   MOV.L       @R14,R4
    00000EF2 8448                   MOV.B       @(8,R4),R0
    00000EF4 2008                   TST         R0,R0
    00000EF6 8B02                   BF          L1425
    00000EF8 64E2                   MOV.L       @R14,R4
    00000EFA A004                   BRA         L1430
    00000EFC 5441                   MOV.L       @(4,R4),R4
    00000EFE              L1425:                            
    00000EFE 9304                   MOV.W       L1745,R3   ; H'0570
    00000F00 D202                   MOV.L       L1745+2,R2 ; _symtab
    00000F02 6422                   MOV.L       @R2,R4
    00000F04 343C                   ADD         R3,R4
    00000F06              L1430:                            
    00000F06 A007                   BRA         L1431
    00000F08 5441                   MOV.L       @(4,R4),R4
    00000F0A              L1745:                            
    00000F0A 0570                   .DATA.W     H'0570
    00000F0C <00000000>             .DATA.L     _symtab
    00000F10              L1423:                            
    00000F10 9363                   MOV.W       L1746,R3   ; H'0570
    00000F12 D232                   MOV.L       L1746+2,R2 ; _symtab
    00000F14 6422                   MOV.L       @R2,R4
    00000F16 343C                   ADD         R3,R4
    00000F18              L1431:                            
    00000F18 8448                   MOV.B       @(8,R4),R0
    00000F1A 2008                   TST         R0,R0
    00000F1C 8B20                   BF          L1422
    00000F1E 64E2                   MOV.L       @R14,R4
    00000F20 8448                   MOV.B       @(8,R4),R0
    00000F22 2008                   TST         R0,R0
    00000F24 8B02                   BF          L1427
    00000F26 64E2                   MOV.L       @R14,R4
    00000F28 A004                   BRA         L1432
    00000F2A 5441                   MOV.L       @(4,R4),R4
    00000F2C              L1427:                            
    00000F2C 9355                   MOV.W       L1746,R3   ; H'0570
    00000F2E D22B                   MOV.L       L1746+2,R2 ; _symtab
    00000F30 6422                   MOV.L       @R2,R4
    00000F32 343C                   ADD         R3,R4
    00000F34              L1432:                            
    00000F34 8448                   MOV.B       @(8,R4),R0
    00000F36 2008                   TST         R0,R0
    00000F38 8B0C                   BF          L1426
    00000F3A 64E2                   MOV.L       @R14,R4
    00000F3C 8448                   MOV.B       @(8,R4),R0
    00000F3E 2008                   TST         R0,R0
    00000F40 8B02                   BF          L1428
    00000F42 64E2                   MOV.L       @R14,R4
    00000F44 A004                   BRA         L1433
    00000F46 5441                   MOV.L       @(4,R4),R4
    00000F48              L1428:                            
    00000F48 9347                   MOV.W       L1746,R3   ; H'0570
    00000F4A D224                   MOV.L       L1746+2,R2 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F4C 6422                   MOV.L       @R2,R4
    00000F4E 343C                   ADD         R3,R4
    00000F50              L1433:                            
    00000F50 A004                   BRA         L1434
    00000F52 5441                   MOV.L       @(4,R4),R4
    00000F54              L1426:                            
    00000F54 9341                   MOV.W       L1746,R3   ; H'0570
    00000F56 D221                   MOV.L       L1746+2,R2 ; _symtab
    00000F58 6422                   MOV.L       @R2,R4
    00000F5A 343C                   ADD         R3,R4
    00000F5C              L1434:                            
    00000F5C A09B                   BRA         L1725
    00000F5E 6442                   MOV.L       @R4,R4
    00000F60              L1422:                            
    00000F60 933B                   MOV.W       L1746,R3   ; H'0570
    00000F62 D21E                   MOV.L       L1746+2,R2 ; _symtab
    00000F64 6422                   MOV.L       @R2,R4
    00000F66 343C                   ADD         R3,R4
    00000F68 A095                   BRA         L1725
    00000F6A 0009                   NOP
    00000F6C              L1379:                            
      derivative   445                    } else {
      derivative   446                            push(caddr(p1));
    00000F6C 64E2                   MOV.L       @R14,R4
    00000F6E 8448                   MOV.B       @(8,R4),R0
    00000F70 2008                   TST         R0,R0
    00000F72 8B02                   BF          L1439
    00000F74 64E2                   MOV.L       @R14,R4
    00000F76 A004                   BRA         L1444
    00000F78 5441                   MOV.L       @(4,R4),R4
    00000F7A              L1439:                            
    00000F7A 932E                   MOV.W       L1746,R3   ; H'0570
    00000F7C D217                   MOV.L       L1746+2,R2 ; _symtab
    00000F7E 6422                   MOV.L       @R2,R4
    00000F80 343C                   ADD         R3,R4
    00000F82              L1444:                            
    00000F82 8448                   MOV.B       @(8,R4),R0
    00000F84 2008                   TST         R0,R0
    00000F86 8B0C                   BF          L1438
    00000F88 64E2                   MOV.L       @R14,R4
    00000F8A 8448                   MOV.B       @(8,R4),R0
    00000F8C 2008                   TST         R0,R0
    00000F8E 8B02                   BF          L1440
    00000F90 64E2                   MOV.L       @R14,R4
    00000F92 A004                   BRA         L1445
    00000F94 5441                   MOV.L       @(4,R4),R4
    00000F96              L1440:                            
    00000F96 9320                   MOV.W       L1746,R3   ; H'0570
    00000F98 D210                   MOV.L       L1746+2,R2 ; _symtab
    00000F9A 6422                   MOV.L       @R2,R4
    00000F9C 343C                   ADD         R3,R4
    00000F9E              L1445:                            
    00000F9E A004                   BRA         L1446
    00000FA0 5441                   MOV.L       @(4,R4),R4
    00000FA2              L1438:                            
    00000FA2 931A                   MOV.W       L1746,R3   ; H'0570
    00000FA4 D20D                   MOV.L       L1746+2,R2 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FA6 6422                   MOV.L       @R2,R4
    00000FA8 343C                   ADD         R3,R4
    00000FAA              L1446:                            
    00000FAA 8448                   MOV.B       @(8,R4),R0
    00000FAC 2008                   TST         R0,R0
    00000FAE 8B23                   BF          L1437
    00000FB0 64E2                   MOV.L       @R14,R4
    00000FB2 8448                   MOV.B       @(8,R4),R0
    00000FB4 2008                   TST         R0,R0
    00000FB6 8B02                   BF          L1442
    00000FB8 64E2                   MOV.L       @R14,R4
    00000FBA A004                   BRA         L1447
    00000FBC 5441                   MOV.L       @(4,R4),R4
    00000FBE              L1442:                            
    00000FBE 930C                   MOV.W       L1746,R3   ; H'0570
    00000FC0 D206                   MOV.L       L1746+2,R2 ; _symtab
    00000FC2 6422                   MOV.L       @R2,R4
    00000FC4 343C                   ADD         R3,R4
    00000FC6              L1447:                            
    00000FC6 8448                   MOV.B       @(8,R4),R0
    00000FC8 2008                   TST         R0,R0
    00000FCA 8B0F                   BF          L1441
    00000FCC 64E2                   MOV.L       @R14,R4
    00000FCE 8448                   MOV.B       @(8,R4),R0
    00000FD0 2008                   TST         R0,R0
    00000FD2 8B05                   BF          L1443
    00000FD4 64E2                   MOV.L       @R14,R4
    00000FD6 A007                   BRA         L1448
    00000FD8 5441                   MOV.L       @(4,R4),R4
    00000FDA              L1746:                            
    00000FDA 0570                   .DATA.W     H'0570
    00000FDC <00000000>             .DATA.L     _symtab
    00000FE0              L1443:                            
    00000FE0 9368                   MOV.W       L1747,R3   ; H'0570
    00000FE2 D235                   MOV.L       L1747+4,R2 ; _symtab
    00000FE4 6422                   MOV.L       @R2,R4
    00000FE6 343C                   ADD         R3,R4
    00000FE8              L1448:                            
    00000FE8 A004                   BRA         L1449
    00000FEA 5441                   MOV.L       @(4,R4),R4
    00000FEC              L1441:                            
    00000FEC 9362                   MOV.W       L1747,R3   ; H'0570
    00000FEE D232                   MOV.L       L1747+4,R2 ; _symtab
    00000FF0 6422                   MOV.L       @R2,R4
    00000FF2 343C                   ADD         R3,R4
    00000FF4              L1449:                            
    00000FF4 A004                   BRA         L1450
    00000FF6 6442                   MOV.L       @R4,R4
    00000FF8              L1437:                            
    00000FF8 935C                   MOV.W       L1747,R3   ; H'0570
    00000FFA D22F                   MOV.L       L1747+4,R2 ; _symtab
    00000FFC 6422                   MOV.L       @R2,R4
    00000FFE 343C                   ADD         R3,R4
    00001000              L1450:                            
    00001000 4C0B                   JSR         @R12
    00001002 0009                   NOP
      derivative   447                            list(3);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001004 4B0B                   JSR         @R11
    00001006 E403                   MOV         #3,R4
      derivative   448                            push(caddr(p3));
    00001008 64D2                   MOV.L       @R13,R4
    0000100A 8448                   MOV.B       @(8,R4),R0
    0000100C 2008                   TST         R0,R0
    0000100E 8B02                   BF          L1453
    00001010 64D2                   MOV.L       @R13,R4
    00001012 A004                   BRA         L1458
    00001014 5441                   MOV.L       @(4,R4),R4
    00001016              L1453:                            
    00001016 934D                   MOV.W       L1747,R3   ; H'0570
    00001018 D227                   MOV.L       L1747+4,R2 ; _symtab
    0000101A 6422                   MOV.L       @R2,R4
    0000101C 343C                   ADD         R3,R4
    0000101E              L1458:                            
    0000101E 8448                   MOV.B       @(8,R4),R0
    00001020 2008                   TST         R0,R0
    00001022 8B0C                   BF          L1452
    00001024 64D2                   MOV.L       @R13,R4
    00001026 8448                   MOV.B       @(8,R4),R0
    00001028 2008                   TST         R0,R0
    0000102A 8B02                   BF          L1454
    0000102C 64D2                   MOV.L       @R13,R4
    0000102E A004                   BRA         L1459
    00001030 5441                   MOV.L       @(4,R4),R4
    00001032              L1454:                            
    00001032 933F                   MOV.W       L1747,R3   ; H'0570
    00001034 D220                   MOV.L       L1747+4,R2 ; _symtab
    00001036 6422                   MOV.L       @R2,R4
    00001038 343C                   ADD         R3,R4
    0000103A              L1459:                            
    0000103A A004                   BRA         L1460
    0000103C 5441                   MOV.L       @(4,R4),R4
    0000103E              L1452:                            
    0000103E 9339                   MOV.W       L1747,R3   ; H'0570
    00001040 D21D                   MOV.L       L1747+4,R2 ; _symtab
    00001042 6422                   MOV.L       @R2,R4
    00001044 343C                   ADD         R3,R4
    00001046              L1460:                            
    00001046 8448                   MOV.B       @(8,R4),R0
    00001048 2008                   TST         R0,R0
    0000104A 8B20                   BF          L1451
    0000104C 64D2                   MOV.L       @R13,R4
    0000104E 8448                   MOV.B       @(8,R4),R0
    00001050 2008                   TST         R0,R0
    00001052 8B02                   BF          L1456
    00001054 64D2                   MOV.L       @R13,R4
    00001056 A004                   BRA         L1461
    00001058 5441                   MOV.L       @(4,R4),R4
    0000105A              L1456:                            
    0000105A 932B                   MOV.W       L1747,R3   ; H'0570
    0000105C D216                   MOV.L       L1747+4,R2 ; _symtab
    0000105E 6422                   MOV.L       @R2,R4
    00001060 343C                   ADD         R3,R4
    00001062              L1461:                            
    00001062 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001064 2008                   TST         R0,R0
    00001066 8B0C                   BF          L1455
    00001068 64D2                   MOV.L       @R13,R4
    0000106A 8448                   MOV.B       @(8,R4),R0
    0000106C 2008                   TST         R0,R0
    0000106E 8B02                   BF          L1457
    00001070 64D2                   MOV.L       @R13,R4
    00001072 A004                   BRA         L1462
    00001074 5441                   MOV.L       @(4,R4),R4
    00001076              L1457:                            
    00001076 931D                   MOV.W       L1747,R3   ; H'0570
    00001078 D20F                   MOV.L       L1747+4,R2 ; _symtab
    0000107A 6422                   MOV.L       @R2,R4
    0000107C 343C                   ADD         R3,R4
    0000107E              L1462:                            
    0000107E A004                   BRA         L1463
    00001080 5441                   MOV.L       @(4,R4),R4
    00001082              L1455:                            
    00001082 9317                   MOV.W       L1747,R3   ; H'0570
    00001084 D20C                   MOV.L       L1747+4,R2 ; _symtab
    00001086 6422                   MOV.L       @R2,R4
    00001088 343C                   ADD         R3,R4
    0000108A              L1463:                            
    0000108A A004                   BRA         L1725
    0000108C 6442                   MOV.L       @R4,R4
    0000108E              L1451:                            
    0000108E 9311                   MOV.W       L1747,R3   ; H'0570
    00001090 D209                   MOV.L       L1747+4,R2 ; _symtab
    00001092 6422                   MOV.L       @R2,R4
    00001094 343C                   ADD         R3,R4
    00001096              L1725:                            
    00001096 4C0B                   JSR         @R12
    00001098 0009                   NOP
      derivative   449                    }
      derivative   450    
      derivative   451                    list(3);
    0000109A 4B0B                   JSR         @R11
    0000109C E403                   MOV         #3,R4
    0000109E A055                   BRA         L1465
    000010A0 0009                   NOP
    000010A2              L1370:                            
      derivative   452    
      derivative   453            } else {
      derivative   454                    push(p3);
    000010A2 4C0B                   JSR         @R12
    000010A4 0009                   NOP
      derivative   455                    push(caddr(p1));
    000010A6 64E2                   MOV.L       @R14,R4
    000010A8 8448                   MOV.B       @(8,R4),R0
    000010AA 2008                   TST         R0,R0
    000010AC 8B06                   BF          L1468
    000010AE 64E2                   MOV.L       @R14,R4
    000010B0 A008                   BRA         L1473
    000010B2 5441                   MOV.L       @(4,R4),R4
    000010B4              L1747:                            
    000010B4 0570                   .DATA.W     H'0570
    000010B6 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010B8 <00000000>             .DATA.L     _symtab
    000010BC              L1468:                            
    000010BC 9359                   MOV.W       L1748,R3   ; H'0570
    000010BE D22D                   MOV.L       L1748+2,R2 ; _symtab
    000010C0 6422                   MOV.L       @R2,R4
    000010C2 343C                   ADD         R3,R4
    000010C4              L1473:                            
    000010C4 8448                   MOV.B       @(8,R4),R0
    000010C6 2008                   TST         R0,R0
    000010C8 8B0C                   BF          L1467
    000010CA 64E2                   MOV.L       @R14,R4
    000010CC 8448                   MOV.B       @(8,R4),R0
    000010CE 2008                   TST         R0,R0
    000010D0 8B02                   BF          L1469
    000010D2 64E2                   MOV.L       @R14,R4
    000010D4 A004                   BRA         L1474
    000010D6 5441                   MOV.L       @(4,R4),R4
    000010D8              L1469:                            
    000010D8 934B                   MOV.W       L1748,R3   ; H'0570
    000010DA D226                   MOV.L       L1748+2,R2 ; _symtab
    000010DC 6422                   MOV.L       @R2,R4
    000010DE 343C                   ADD         R3,R4
    000010E0              L1474:                            
    000010E0 A004                   BRA         L1475
    000010E2 5441                   MOV.L       @(4,R4),R4
    000010E4              L1467:                            
    000010E4 9345                   MOV.W       L1748,R3   ; H'0570
    000010E6 D223                   MOV.L       L1748+2,R2 ; _symtab
    000010E8 6422                   MOV.L       @R2,R4
    000010EA 343C                   ADD         R3,R4
    000010EC              L1475:                            
    000010EC 8448                   MOV.B       @(8,R4),R0
    000010EE 2008                   TST         R0,R0
    000010F0 8B20                   BF          L1466
    000010F2 64E2                   MOV.L       @R14,R4
    000010F4 8448                   MOV.B       @(8,R4),R0
    000010F6 2008                   TST         R0,R0
    000010F8 8B02                   BF          L1471
    000010FA 64E2                   MOV.L       @R14,R4
    000010FC A004                   BRA         L1476
    000010FE 5441                   MOV.L       @(4,R4),R4
    00001100              L1471:                            
    00001100 9337                   MOV.W       L1748,R3   ; H'0570
    00001102 D21C                   MOV.L       L1748+2,R2 ; _symtab
    00001104 6422                   MOV.L       @R2,R4
    00001106 343C                   ADD         R3,R4
    00001108              L1476:                            
    00001108 8448                   MOV.B       @(8,R4),R0
    0000110A 2008                   TST         R0,R0
    0000110C 8B0C                   BF          L1470
    0000110E 64E2                   MOV.L       @R14,R4
    00001110 8448                   MOV.B       @(8,R4),R0
    00001112 2008                   TST         R0,R0
    00001114 8B02                   BF          L1472
    00001116 64E2                   MOV.L       @R14,R4
    00001118 A004                   BRA         L1477
    0000111A 5441                   MOV.L       @(4,R4),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000111C              L1472:                            
    0000111C 9329                   MOV.W       L1748,R3   ; H'0570
    0000111E D215                   MOV.L       L1748+2,R2 ; _symtab
    00001120 6422                   MOV.L       @R2,R4
    00001122 343C                   ADD         R3,R4
    00001124              L1477:                            
    00001124 A004                   BRA         L1478
    00001126 5441                   MOV.L       @(4,R4),R4
    00001128              L1470:                            
    00001128 9323                   MOV.W       L1748,R3   ; H'0570
    0000112A D212                   MOV.L       L1748+2,R2 ; _symtab
    0000112C 6422                   MOV.L       @R2,R4
    0000112E 343C                   ADD         R3,R4
    00001130              L1478:                            
    00001130 A004                   BRA         L1479
    00001132 6442                   MOV.L       @R4,R4
    00001134              L1466:                            
    00001134 931D                   MOV.W       L1748,R3   ; H'0570
    00001136 D20F                   MOV.L       L1748+2,R2 ; _symtab
    00001138 6422                   MOV.L       @R2,R4
    0000113A 343C                   ADD         R3,R4
    0000113C              L1479:                            
    0000113C 4C0B                   JSR         @R12
    0000113E 0009                   NOP
      derivative   456                    derivative();
    00001140 4F26                   LDS.L       @R15+,PR
    00001142 6BF6                   MOV.L       @R15+,R11
    00001144 6CF6                   MOV.L       @R15+,R12
    00001146 6DF6                   MOV.L       @R15+,R13
    00001148 A8BE                   BRA         _derivative
    0000114A 6EF6                   MOV.L       @R15+,R14
    0000114C              L1465:                            
      derivative   457            }
      derivative   458    }
    0000114C 4F26                   LDS.L       @R15+,PR
    0000114E 6BF6                   MOV.L       @R15+,R11
    00001150 6CF6                   MOV.L       @R15+,R12
    00001152 6DF6                   MOV.L       @R15+,R13
    00001154 000B                   RTS
    00001156 6EF6                   MOV.L       @R15+,R14
      derivative   459    
      derivative   460    // derivative of a generic function
      derivative   461    
      derivative   462    void
      derivative   463    dfunction(void)
    00001158              _dfunction:                      ; function: dfunction
                                                           ; frame size=16
    00001158 2FE6                   MOV.L       R14,@-R15
    0000115A 2FD6                   MOV.L       R13,@-R15
    0000115C 2FC6                   MOV.L       R12,@-R15
    0000115E 4F22                   STS.L       PR,@-R15
      derivative   464    {
      derivative   465            p3 = cdr(p1);   // p3 is the argument list for the function
    00001160 DD05                   MOV.L       L1748+6,R13; _p1
    00001162 DE06                   MOV.L       L1748+10,R14; _p3
    00001164 62D2                   MOV.L       @R13,R2
    00001166 8428                   MOV.B       @(8,R2),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001168 2008                   TST         R0,R0
    0000116A 8B09                   BF          L1480
    0000116C 62D2                   MOV.L       @R13,R2
    0000116E A00B                   BRA         L1481
    00001170 5321                   MOV.L       @(4,R2),R3
    00001172              L1748:                            
    00001172 0570                   .DATA.W     H'0570
    00001174 <00000000>             .DATA.L     _symtab
    00001178 <00000000>             .DATA.L     _p1
    0000117C <00000000>             .DATA.L     _p3
    00001180              L1480:                            
    00001180 926F                   MOV.W       L1749,R2   ; H'0570
    00001182 D138                   MOV.L       L1749+2,R1 ; _symtab
    00001184 6312                   MOV.L       @R1,R3
    00001186 332C                   ADD         R2,R3
    00001188              L1481:                            
    00001188 2E32                   MOV.L       R3,@R14
      derivative   466    
      derivative   467            if (p3 == symbol(NIL) || find(p3, p2)) {
    0000118A DC37                   MOV.L       L1749+6,R12; _push
    0000118C 9369                   MOV.W       L1749,R3   ; H'0570
    0000118E D135                   MOV.L       L1749+2,R1 ; _symtab
    00001190 60E2                   MOV.L       @R14,R0
    00001192 6212                   MOV.L       @R1,R2
    00001194 323C                   ADD         R3,R2
    00001196 3020                   CMP/EQ      R2,R0
    00001198 8906                   BT          L1483
    0000119A D134                   MOV.L       L1749+10,R1; _p2
    0000119C D234                   MOV.L       L1749+14,R2; _find
    0000119E 6512                   MOV.L       @R1,R5
    000011A0 420B                   JSR         @R2
    000011A2 64E2                   MOV.L       @R14,R4
    000011A4 2008                   TST         R0,R0
    000011A6 890E                   BT          L1482
    000011A8              L1483:                            
      derivative   468                    push_symbol(DERIVATIVE);
    000011A8 D232                   MOV.L       L1749+18,R2; _push_symbol
    000011AA 420B                   JSR         @R2
    000011AC E41E                   MOV         #30,R4
      derivative   469                    push(p1);
    000011AE 4C0B                   JSR         @R12
    000011B0 64D2                   MOV.L       @R13,R4
      derivative   470                    push(p2);
    000011B2 D32E                   MOV.L       L1749+10,R3; _p2
    000011B4 4C0B                   JSR         @R12
    000011B6 6432                   MOV.L       @R3,R4
      derivative   471                    list(3);
    000011B8 4F26                   LDS.L       @R15+,PR
    000011BA E403                   MOV         #3,R4
    000011BC D22E                   MOV.L       L1749+22,R2; _list
    000011BE 6CF6                   MOV.L       @R15+,R12
    000011C0 6DF6                   MOV.L       @R15+,R13
    000011C2 422B                   JMP         @R2
    000011C4 6EF6                   MOV.L       @R15+,R14
    000011C6              L1482:                            
      derivative   472            } else
      derivative   473                    push(zero);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011C6 D22D                   MOV.L       L1749+26,R2; _zero
    000011C8 4C0B                   JSR         @R12
    000011CA 6422                   MOV.L       @R2,R4
      derivative   474    }
    000011CC 4F26                   LDS.L       @R15+,PR
    000011CE 6CF6                   MOV.L       @R15+,R12
    000011D0 6DF6                   MOV.L       @R15+,R13
    000011D2 000B                   RTS
    000011D4 6EF6                   MOV.L       @R15+,R14
      derivative   475    
      derivative   476    void
      derivative   477    dsin(void)
    000011D6              _dsin:                           ; function: dsin
                                                           ; frame size=12
    000011D6 2FE6                   MOV.L       R14,@-R15
    000011D8 2FD6                   MOV.L       R13,@-R15
    000011DA 4F22                   STS.L       PR,@-R15
      derivative   478    {
      derivative   479            push(cadr(p1));
    000011DC DD22                   MOV.L       L1749+6,R13; _push
    000011DE DE28                   MOV.L       L1749+30,R14; _p1
    000011E0 64E2                   MOV.L       @R14,R4
    000011E2 8448                   MOV.B       @(8,R4),R0
    000011E4 2008                   TST         R0,R0
    000011E6 8B02                   BF          L1486
    000011E8 64E2                   MOV.L       @R14,R4
    000011EA A004                   BRA         L1488
    000011EC 5441                   MOV.L       @(4,R4),R4
    000011EE              L1486:                            
    000011EE 9338                   MOV.W       L1749,R3   ; H'0570
    000011F0 D21C                   MOV.L       L1749+2,R2 ; _symtab
    000011F2 6422                   MOV.L       @R2,R4
    000011F4 343C                   ADD         R3,R4
    000011F6              L1488:                            
    000011F6 8448                   MOV.B       @(8,R4),R0
    000011F8 2008                   TST         R0,R0
    000011FA 8B0C                   BF          L1485
    000011FC 64E2                   MOV.L       @R14,R4
    000011FE 8448                   MOV.B       @(8,R4),R0
    00001200 2008                   TST         R0,R0
    00001202 8B02                   BF          L1487
    00001204 64E2                   MOV.L       @R14,R4
    00001206 A004                   BRA         L1489
    00001208 5441                   MOV.L       @(4,R4),R4
    0000120A              L1487:                            
    0000120A 932A                   MOV.W       L1749,R3   ; H'0570
    0000120C D215                   MOV.L       L1749+2,R2 ; _symtab
    0000120E 6422                   MOV.L       @R2,R4
    00001210 343C                   ADD         R3,R4
    00001212              L1489:                            
    00001212 A004                   BRA         L1490
    00001214 6442                   MOV.L       @R4,R4
    00001216              L1485:                            
    00001216 9324                   MOV.W       L1749,R3   ; H'0570
    00001218 D212                   MOV.L       L1749+2,R2 ; _symtab
    0000121A 6422                   MOV.L       @R2,R4
    0000121C 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000121E              L1490:                            
    0000121E 4D0B                   JSR         @R13
    00001220 0009                   NOP
      derivative   480            push(p2);
    00001222 D312                   MOV.L       L1749+10,R3; _p2
    00001224 4D0B                   JSR         @R13
    00001226 6432                   MOV.L       @R3,R4
      derivative   481            derivative();
    00001228 B84E                   BSR         _derivative
    0000122A 0009                   NOP
      derivative   482            push(cadr(p1));
    0000122C 64E2                   MOV.L       @R14,R4
    0000122E 8448                   MOV.B       @(8,R4),R0
    00001230 2008                   TST         R0,R0
    00001232 8B02                   BF          L1492
    00001234 64E2                   MOV.L       @R14,R4
    00001236 A004                   BRA         L1494
    00001238 5441                   MOV.L       @(4,R4),R4
    0000123A              L1492:                            
    0000123A 9312                   MOV.W       L1749,R3   ; H'0570
    0000123C D209                   MOV.L       L1749+2,R2 ; _symtab
    0000123E 6422                   MOV.L       @R2,R4
    00001240 343C                   ADD         R3,R4
    00001242              L1494:                            
    00001242 8448                   MOV.B       @(8,R4),R0
    00001244 2008                   TST         R0,R0
    00001246 8B1D                   BF          L1491
    00001248 64E2                   MOV.L       @R14,R4
    0000124A 8448                   MOV.B       @(8,R4),R0
    0000124C 2008                   TST         R0,R0
    0000124E 8B02                   BF          L1493
    00001250 64E2                   MOV.L       @R14,R4
    00001252 A004                   BRA         L1495
    00001254 5441                   MOV.L       @(4,R4),R4
    00001256              L1493:                            
    00001256 9304                   MOV.W       L1749,R3   ; H'0570
    00001258 D202                   MOV.L       L1749+2,R2 ; _symtab
    0000125A 6422                   MOV.L       @R2,R4
    0000125C 343C                   ADD         R3,R4
    0000125E              L1495:                            
    0000125E A015                   BRA         L1496
    00001260 6442                   MOV.L       @R4,R4
    00001262              L1749:                            
    00001262 0570                   .DATA.W     H'0570
    00001264 <00000000>             .DATA.L     _symtab
    00001268 <00000000>             .DATA.L     _push
    0000126C <00000000>             .DATA.L     _p2
    00001270 <00000000>             .DATA.L     _find
    00001274 <00000000>             .DATA.L     _push_symbol
    00001278 <00000000>             .DATA.L     _list
    0000127C <00000000>             .DATA.L     _zero
    00001280 <00000000>             .DATA.L     _p1
    00001284              L1491:                            
    00001284 9370                   MOV.W       L1750,R3   ; H'0570
    00001286 D239                   MOV.L       L1750+4,R2 ; _symtab
    00001288 6422                   MOV.L       @R2,R4
    0000128A 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000128C              L1496:                            
    0000128C 4D0B                   JSR         @R13
    0000128E 0009                   NOP
      derivative   483            cosine();
    00001290 D337                   MOV.L       L1750+8,R3 ; _cosine
    00001292 430B                   JSR         @R3
    00001294 0009                   NOP
      derivative   484            multiply();
    00001296 4F26                   LDS.L       @R15+,PR
    00001298 D236                   MOV.L       L1750+12,R2; _multiply
    0000129A 6DF6                   MOV.L       @R15+,R13
    0000129C 422B                   JMP         @R2
    0000129E 6EF6                   MOV.L       @R15+,R14
      derivative   485    }
      derivative   486    
      derivative   487    void
      derivative   488    dcos(void)
    000012A0              _dcos:                           ; function: dcos
                                                           ; frame size=12
    000012A0 2FE6                   MOV.L       R14,@-R15
    000012A2 2FD6                   MOV.L       R13,@-R15
    000012A4 4F22                   STS.L       PR,@-R15
      derivative   489    {
      derivative   490            push(cadr(p1));
    000012A6 DD34                   MOV.L       L1750+16,R13; _push
    000012A8 DE34                   MOV.L       L1750+20,R14; _p1
    000012AA 64E2                   MOV.L       @R14,R4
    000012AC 8448                   MOV.B       @(8,R4),R0
    000012AE 2008                   TST         R0,R0
    000012B0 8B02                   BF          L1498
    000012B2 64E2                   MOV.L       @R14,R4
    000012B4 A004                   BRA         L1500
    000012B6 5441                   MOV.L       @(4,R4),R4
    000012B8              L1498:                            
    000012B8 9356                   MOV.W       L1750,R3   ; H'0570
    000012BA D22C                   MOV.L       L1750+4,R2 ; _symtab
    000012BC 6422                   MOV.L       @R2,R4
    000012BE 343C                   ADD         R3,R4
    000012C0              L1500:                            
    000012C0 8448                   MOV.B       @(8,R4),R0
    000012C2 2008                   TST         R0,R0
    000012C4 8B0C                   BF          L1497
    000012C6 64E2                   MOV.L       @R14,R4
    000012C8 8448                   MOV.B       @(8,R4),R0
    000012CA 2008                   TST         R0,R0
    000012CC 8B02                   BF          L1499
    000012CE 64E2                   MOV.L       @R14,R4
    000012D0 A004                   BRA         L1501
    000012D2 5441                   MOV.L       @(4,R4),R4
    000012D4              L1499:                            
    000012D4 9348                   MOV.W       L1750,R3   ; H'0570
    000012D6 D225                   MOV.L       L1750+4,R2 ; _symtab
    000012D8 6422                   MOV.L       @R2,R4
    000012DA 343C                   ADD         R3,R4
    000012DC              L1501:                            
    000012DC A004                   BRA         L1502
    000012DE 6442                   MOV.L       @R4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012E0              L1497:                            
    000012E0 9342                   MOV.W       L1750,R3   ; H'0570
    000012E2 D222                   MOV.L       L1750+4,R2 ; _symtab
    000012E4 6422                   MOV.L       @R2,R4
    000012E6 343C                   ADD         R3,R4
    000012E8              L1502:                            
    000012E8 4D0B                   JSR         @R13
    000012EA 0009                   NOP
      derivative   491            push(p2);
    000012EC D324                   MOV.L       L1750+24,R3; _p2
    000012EE 4D0B                   JSR         @R13
    000012F0 6432                   MOV.L       @R3,R4
      derivative   492            derivative();
    000012F2 D224                   MOV.L       L1750+28,R2; _derivative
    000012F4 420B                   JSR         @R2
    000012F6 0009                   NOP
      derivative   493            push(cadr(p1));
    000012F8 64E2                   MOV.L       @R14,R4
    000012FA 8448                   MOV.B       @(8,R4),R0
    000012FC 2008                   TST         R0,R0
    000012FE 8B02                   BF          L1504
    00001300 64E2                   MOV.L       @R14,R4
    00001302 A004                   BRA         L1506
    00001304 5441                   MOV.L       @(4,R4),R4
    00001306              L1504:                            
    00001306 932F                   MOV.W       L1750,R3   ; H'0570
    00001308 D218                   MOV.L       L1750+4,R2 ; _symtab
    0000130A 6422                   MOV.L       @R2,R4
    0000130C 343C                   ADD         R3,R4
    0000130E              L1506:                            
    0000130E 8448                   MOV.B       @(8,R4),R0
    00001310 2008                   TST         R0,R0
    00001312 8B0C                   BF          L1503
    00001314 64E2                   MOV.L       @R14,R4
    00001316 8448                   MOV.B       @(8,R4),R0
    00001318 2008                   TST         R0,R0
    0000131A 8B02                   BF          L1505
    0000131C 64E2                   MOV.L       @R14,R4
    0000131E A004                   BRA         L1507
    00001320 5441                   MOV.L       @(4,R4),R4
    00001322              L1505:                            
    00001322 9321                   MOV.W       L1750,R3   ; H'0570
    00001324 D211                   MOV.L       L1750+4,R2 ; _symtab
    00001326 6422                   MOV.L       @R2,R4
    00001328 343C                   ADD         R3,R4
    0000132A              L1507:                            
    0000132A A004                   BRA         L1508
    0000132C 6442                   MOV.L       @R4,R4
    0000132E              L1503:                            
    0000132E 931B                   MOV.W       L1750,R3   ; H'0570
    00001330 D20E                   MOV.L       L1750+4,R2 ; _symtab
    00001332 6422                   MOV.L       @R2,R4
    00001334 343C                   ADD         R3,R4
    00001336              L1508:                            
    00001336 4D0B                   JSR         @R13
    00001338 0009                   NOP
      derivative   494            sine();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000133A D313                   MOV.L       L1750+32,R3; _sine
    0000133C 430B                   JSR         @R3
    0000133E 0009                   NOP
      derivative   495            multiply();
    00001340 D20C                   MOV.L       L1750+12,R2; _multiply
    00001342 420B                   JSR         @R2
    00001344 0009                   NOP
      derivative   496            negate();
    00001346 4F26                   LDS.L       @R15+,PR
    00001348 D310                   MOV.L       L1750+36,R3; _negate
    0000134A 6DF6                   MOV.L       @R15+,R13
    0000134C 432B                   JMP         @R3
    0000134E 6EF6                   MOV.L       @R15+,R14
      derivative   497    }
      derivative   498    
      derivative   499    void
      derivative   500    dtan(void)
    00001350              _dtan:                           ; function: dtan
                                                           ; frame size=12
    00001350 2FE6                   MOV.L       R14,@-R15
    00001352 2FD6                   MOV.L       R13,@-R15
    00001354 4F22                   STS.L       PR,@-R15
      derivative   501    {
      derivative   502            push(cadr(p1));
    00001356 DD08                   MOV.L       L1750+16,R13; _push
    00001358 DE08                   MOV.L       L1750+20,R14; _p1
    0000135A 64E2                   MOV.L       @R14,R4
    0000135C 8448                   MOV.B       @(8,R4),R0
    0000135E 2008                   TST         R0,R0
    00001360 8B16                   BF          L1510
    00001362 64E2                   MOV.L       @R14,R4
    00001364 A018                   BRA         L1512
    00001366 5441                   MOV.L       @(4,R4),R4
    00001368              L1750:                            
    00001368 0570                   .DATA.W     H'0570
    0000136A 0000                   .DATA.W     0
    0000136C <00000000>             .DATA.L     _symtab
    00001370 <00000000>             .DATA.L     _cosine
    00001374 <00000000>             .DATA.L     _multiply
    00001378 <00000000>             .DATA.L     _push
    0000137C <00000000>             .DATA.L     _p1
    00001380 <00000000>             .DATA.L     _p2
    00001384 <00000000>             .DATA.L     _derivative
    00001388 <00000000>             .DATA.L     _sine
    0000138C <00000000>             .DATA.L     _negate
    00001390              L1510:                            
    00001390 936D                   MOV.W       L1751,R3   ; H'0570
    00001392 D237                   MOV.L       L1751+2,R2 ; _symtab
    00001394 6422                   MOV.L       @R2,R4
    00001396 343C                   ADD         R3,R4
    00001398              L1512:                            
    00001398 8448                   MOV.B       @(8,R4),R0
    0000139A 2008                   TST         R0,R0
    0000139C 8B0C                   BF          L1509
    0000139E 64E2                   MOV.L       @R14,R4
    000013A0 8448                   MOV.B       @(8,R4),R0
    000013A2 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013A4 8B02                   BF          L1511
    000013A6 64E2                   MOV.L       @R14,R4
    000013A8 A004                   BRA         L1513
    000013AA 5441                   MOV.L       @(4,R4),R4
    000013AC              L1511:                            
    000013AC 935F                   MOV.W       L1751,R3   ; H'0570
    000013AE D230                   MOV.L       L1751+2,R2 ; _symtab
    000013B0 6422                   MOV.L       @R2,R4
    000013B2 343C                   ADD         R3,R4
    000013B4              L1513:                            
    000013B4 A004                   BRA         L1514
    000013B6 6442                   MOV.L       @R4,R4
    000013B8              L1509:                            
    000013B8 9359                   MOV.W       L1751,R3   ; H'0570
    000013BA D22D                   MOV.L       L1751+2,R2 ; _symtab
    000013BC 6422                   MOV.L       @R2,R4
    000013BE 343C                   ADD         R3,R4
    000013C0              L1514:                            
    000013C0 4D0B                   JSR         @R13
    000013C2 0009                   NOP
      derivative   503            push(p2);
    000013C4 D32B                   MOV.L       L1751+6,R3 ; _p2
    000013C6 4D0B                   JSR         @R13
    000013C8 6432                   MOV.L       @R3,R4
      derivative   504            derivative();
    000013CA D22B                   MOV.L       L1751+10,R2; _derivative
    000013CC 420B                   JSR         @R2
    000013CE 0009                   NOP
      derivative   505            push(cadr(p1));
    000013D0 64E2                   MOV.L       @R14,R4
    000013D2 8448                   MOV.B       @(8,R4),R0
    000013D4 2008                   TST         R0,R0
    000013D6 8B02                   BF          L1516
    000013D8 64E2                   MOV.L       @R14,R4
    000013DA A004                   BRA         L1518
    000013DC 5441                   MOV.L       @(4,R4),R4
    000013DE              L1516:                            
    000013DE 9346                   MOV.W       L1751,R3   ; H'0570
    000013E0 D223                   MOV.L       L1751+2,R2 ; _symtab
    000013E2 6422                   MOV.L       @R2,R4
    000013E4 343C                   ADD         R3,R4
    000013E6              L1518:                            
    000013E6 8448                   MOV.B       @(8,R4),R0
    000013E8 2008                   TST         R0,R0
    000013EA 8B0C                   BF          L1515
    000013EC 64E2                   MOV.L       @R14,R4
    000013EE 8448                   MOV.B       @(8,R4),R0
    000013F0 2008                   TST         R0,R0
    000013F2 8B02                   BF          L1517
    000013F4 64E2                   MOV.L       @R14,R4
    000013F6 A004                   BRA         L1519
    000013F8 5441                   MOV.L       @(4,R4),R4
    000013FA              L1517:                            
    000013FA 9338                   MOV.W       L1751,R3   ; H'0570
    000013FC D21C                   MOV.L       L1751+2,R2 ; _symtab
    000013FE 6422                   MOV.L       @R2,R4
    00001400 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001402              L1519:                            
    00001402 A004                   BRA         L1520
    00001404 6442                   MOV.L       @R4,R4
    00001406              L1515:                            
    00001406 9332                   MOV.W       L1751,R3   ; H'0570
    00001408 D219                   MOV.L       L1751+2,R2 ; _symtab
    0000140A 6422                   MOV.L       @R2,R4
    0000140C 343C                   ADD         R3,R4
    0000140E              L1520:                            
    0000140E 4D0B                   JSR         @R13
    00001410 0009                   NOP
      derivative   506            cosine();
    00001412 D31A                   MOV.L       L1751+14,R3; _cosine
    00001414 430B                   JSR         @R3
    00001416 0009                   NOP
      derivative   507            push_integer(-2);
    00001418 D219                   MOV.L       L1751+18,R2; _push_integer
    0000141A 420B                   JSR         @R2
    0000141C E4FE                   MOV         #-2,R4
      derivative   508            power();
    0000141E D319                   MOV.L       L1751+22,R3; _power
    00001420 430B                   JSR         @R3
    00001422 0009                   NOP
      derivative   509            multiply();
    00001424 4F26                   LDS.L       @R15+,PR
    00001426 6DF6                   MOV.L       @R15+,R13
    00001428 D217                   MOV.L       L1751+26,R2; _multiply
    0000142A 422B                   JMP         @R2
    0000142C 6EF6                   MOV.L       @R15+,R14
      derivative   510    }
      derivative   511    
      derivative   512    void
      derivative   513    darcsin(void)
    0000142E              _darcsin:                        ; function: darcsin
                                                           ; frame size=12
    0000142E 2FE6                   MOV.L       R14,@-R15
    00001430 2FD6                   MOV.L       R13,@-R15
    00001432 4F22                   STS.L       PR,@-R15
      derivative   514    {
      derivative   515            push(cadr(p1));
    00001434 DD15                   MOV.L       L1751+30,R13; _push
    00001436 DE16                   MOV.L       L1751+34,R14; _p1
    00001438 64E2                   MOV.L       @R14,R4
    0000143A 8448                   MOV.B       @(8,R4),R0
    0000143C 2008                   TST         R0,R0
    0000143E 8B02                   BF          L1522
    00001440 64E2                   MOV.L       @R14,R4
    00001442 A004                   BRA         L1524
    00001444 5441                   MOV.L       @(4,R4),R4
    00001446              L1522:                            
    00001446 9312                   MOV.W       L1751,R3   ; H'0570
    00001448 D209                   MOV.L       L1751+2,R2 ; _symtab
    0000144A 6422                   MOV.L       @R2,R4
    0000144C 343C                   ADD         R3,R4
    0000144E              L1524:                            
    0000144E 8448                   MOV.B       @(8,R4),R0
    00001450 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001452 8B1F                   BF          L1521
    00001454 64E2                   MOV.L       @R14,R4
    00001456 8448                   MOV.B       @(8,R4),R0
    00001458 2008                   TST         R0,R0
    0000145A 8B02                   BF          L1523
    0000145C 64E2                   MOV.L       @R14,R4
    0000145E A004                   BRA         L1525
    00001460 5441                   MOV.L       @(4,R4),R4
    00001462              L1523:                            
    00001462 9304                   MOV.W       L1751,R3   ; H'0570
    00001464 D202                   MOV.L       L1751+2,R2 ; _symtab
    00001466 6422                   MOV.L       @R2,R4
    00001468 343C                   ADD         R3,R4
    0000146A              L1525:                            
    0000146A A017                   BRA         L1526
    0000146C 6442                   MOV.L       @R4,R4
    0000146E              L1751:                            
    0000146E 0570                   .DATA.W     H'0570
    00001470 <00000000>             .DATA.L     _symtab
    00001474 <00000000>             .DATA.L     _p2
    00001478 <00000000>             .DATA.L     _derivative
    0000147C <00000000>             .DATA.L     _cosine
    00001480 <00000000>             .DATA.L     _push_integer
    00001484 <00000000>             .DATA.L     _power
    00001488 <00000000>             .DATA.L     _multiply
    0000148C <00000000>             .DATA.L     _push
    00001490 <00000000>             .DATA.L     _p1
    00001494              L1521:                            
    00001494 9363                   MOV.W       L1752,R3   ; H'0570
    00001496 D232                   MOV.L       L1752+2,R2 ; _symtab
    00001498 6422                   MOV.L       @R2,R4
    0000149A 343C                   ADD         R3,R4
    0000149C              L1526:                            
    0000149C 4D0B                   JSR         @R13
    0000149E 0009                   NOP
      derivative   516            push(p2);
    000014A0 D330                   MOV.L       L1752+6,R3 ; _p2
    000014A2 4D0B                   JSR         @R13
    000014A4 6432                   MOV.L       @R3,R4
      derivative   517            derivative();
    000014A6 D230                   MOV.L       L1752+10,R2; _derivative
    000014A8 420B                   JSR         @R2
    000014AA 0009                   NOP
      derivative   518            push_integer(1);
    000014AC D32F                   MOV.L       L1752+14,R3; _push_integer
    000014AE 430B                   JSR         @R3
    000014B0 E401                   MOV         #1,R4
      derivative   519            push(cadr(p1));
    000014B2 64E2                   MOV.L       @R14,R4
    000014B4 8448                   MOV.B       @(8,R4),R0
    000014B6 2008                   TST         R0,R0
    000014B8 8B02                   BF          L1528
    000014BA 64E2                   MOV.L       @R14,R4
    000014BC A004                   BRA         L1530
    000014BE 5441                   MOV.L       @(4,R4),R4
    000014C0              L1528:                            
    000014C0 934D                   MOV.W       L1752,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014C2 D227                   MOV.L       L1752+2,R2 ; _symtab
    000014C4 6422                   MOV.L       @R2,R4
    000014C6 343C                   ADD         R3,R4
    000014C8              L1530:                            
    000014C8 8448                   MOV.B       @(8,R4),R0
    000014CA 2008                   TST         R0,R0
    000014CC 8B0C                   BF          L1527
    000014CE 64E2                   MOV.L       @R14,R4
    000014D0 8448                   MOV.B       @(8,R4),R0
    000014D2 2008                   TST         R0,R0
    000014D4 8B02                   BF          L1529
    000014D6 64E2                   MOV.L       @R14,R4
    000014D8 A004                   BRA         L1531
    000014DA 5441                   MOV.L       @(4,R4),R4
    000014DC              L1529:                            
    000014DC 933F                   MOV.W       L1752,R3   ; H'0570
    000014DE D220                   MOV.L       L1752+2,R2 ; _symtab
    000014E0 6422                   MOV.L       @R2,R4
    000014E2 343C                   ADD         R3,R4
    000014E4              L1531:                            
    000014E4 A004                   BRA         L1532
    000014E6 6442                   MOV.L       @R4,R4
    000014E8              L1527:                            
    000014E8 9339                   MOV.W       L1752,R3   ; H'0570
    000014EA D21D                   MOV.L       L1752+2,R2 ; _symtab
    000014EC 6422                   MOV.L       @R2,R4
    000014EE 343C                   ADD         R3,R4
    000014F0              L1532:                            
    000014F0 4D0B                   JSR         @R13
    000014F2 0009                   NOP
      derivative   520            push_integer(2);
    000014F4 D31D                   MOV.L       L1752+14,R3; _push_integer
    000014F6 430B                   JSR         @R3
    000014F8 E402                   MOV         #2,R4
      derivative   521            power();
    000014FA D21D                   MOV.L       L1752+18,R2; _power
    000014FC 420B                   JSR         @R2
    000014FE 0009                   NOP
      derivative   522            subtract();
    00001500 D31C                   MOV.L       L1752+22,R3; _subtract
    00001502 430B                   JSR         @R3
    00001504 0009                   NOP
      derivative   523            push_rational(-1, 2);
    00001506 E502                   MOV         #2,R5
    00001508 D21B                   MOV.L       L1752+26,R2; _push_rational
    0000150A 420B                   JSR         @R2
    0000150C E4FF                   MOV         #-1,R4
      derivative   524            power();
    0000150E D318                   MOV.L       L1752+18,R3; _power
    00001510 430B                   JSR         @R3
    00001512 0009                   NOP
      derivative   525            multiply();
    00001514 4F26                   LDS.L       @R15+,PR
    00001516 6DF6                   MOV.L       @R15+,R13
    00001518 D218                   MOV.L       L1752+30,R2; _multiply
    0000151A 422B                   JMP         @R2
    0000151C 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   526    }
      derivative   527    
      derivative   528    void
      derivative   529    darccos(void)
    0000151E              _darccos:                        ; function: darccos
                                                           ; frame size=12
    0000151E 2FE6                   MOV.L       R14,@-R15
    00001520 2FD6                   MOV.L       R13,@-R15
    00001522 4F22                   STS.L       PR,@-R15
      derivative   530    {
      derivative   531            push(cadr(p1));
    00001524 DD16                   MOV.L       L1752+34,R13; _push
    00001526 DE17                   MOV.L       L1752+38,R14; _p1
    00001528 64E2                   MOV.L       @R14,R4
    0000152A 8448                   MOV.B       @(8,R4),R0
    0000152C 2008                   TST         R0,R0
    0000152E 8B02                   BF          L1534
    00001530 64E2                   MOV.L       @R14,R4
    00001532 A004                   BRA         L1536
    00001534 5441                   MOV.L       @(4,R4),R4
    00001536              L1534:                            
    00001536 9312                   MOV.W       L1752,R3   ; H'0570
    00001538 D209                   MOV.L       L1752+2,R2 ; _symtab
    0000153A 6422                   MOV.L       @R2,R4
    0000153C 343C                   ADD         R3,R4
    0000153E              L1536:                            
    0000153E 8448                   MOV.B       @(8,R4),R0
    00001540 2008                   TST         R0,R0
    00001542 8B21                   BF          L1533
    00001544 64E2                   MOV.L       @R14,R4
    00001546 8448                   MOV.B       @(8,R4),R0
    00001548 2008                   TST         R0,R0
    0000154A 8B02                   BF          L1535
    0000154C 64E2                   MOV.L       @R14,R4
    0000154E A004                   BRA         L1537
    00001550 5441                   MOV.L       @(4,R4),R4
    00001552              L1535:                            
    00001552 9304                   MOV.W       L1752,R3   ; H'0570
    00001554 D202                   MOV.L       L1752+2,R2 ; _symtab
    00001556 6422                   MOV.L       @R2,R4
    00001558 343C                   ADD         R3,R4
    0000155A              L1537:                            
    0000155A A019                   BRA         L1538
    0000155C 6442                   MOV.L       @R4,R4
    0000155E              L1752:                            
    0000155E 0570                   .DATA.W     H'0570
    00001560 <00000000>             .DATA.L     _symtab
    00001564 <00000000>             .DATA.L     _p2
    00001568 <00000000>             .DATA.L     _derivative
    0000156C <00000000>             .DATA.L     _push_integer
    00001570 <00000000>             .DATA.L     _power
    00001574 <00000000>             .DATA.L     _subtract
    00001578 <00000000>             .DATA.L     _push_rational
    0000157C <00000000>             .DATA.L     _multiply
    00001580 <00000000>             .DATA.L     _push
    00001584 <00000000>             .DATA.L     _p1
    00001588              L1533:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001588 9366                   MOV.W       L1753,R3   ; H'0570
    0000158A D234                   MOV.L       L1753+4,R2 ; _symtab
    0000158C 6422                   MOV.L       @R2,R4
    0000158E 343C                   ADD         R3,R4
    00001590              L1538:                            
    00001590 4D0B                   JSR         @R13
    00001592 0009                   NOP
      derivative   532            push(p2);
    00001594 D332                   MOV.L       L1753+8,R3 ; _p2
    00001596 4D0B                   JSR         @R13
    00001598 6432                   MOV.L       @R3,R4
      derivative   533            derivative();
    0000159A D232                   MOV.L       L1753+12,R2; _derivative
    0000159C 420B                   JSR         @R2
    0000159E 0009                   NOP
      derivative   534            push_integer(1);
    000015A0 D331                   MOV.L       L1753+16,R3; _push_integer
    000015A2 430B                   JSR         @R3
    000015A4 E401                   MOV         #1,R4
      derivative   535            push(cadr(p1));
    000015A6 64E2                   MOV.L       @R14,R4
    000015A8 8448                   MOV.B       @(8,R4),R0
    000015AA 2008                   TST         R0,R0
    000015AC 8B02                   BF          L1540
    000015AE 64E2                   MOV.L       @R14,R4
    000015B0 A004                   BRA         L1542
    000015B2 5441                   MOV.L       @(4,R4),R4
    000015B4              L1540:                            
    000015B4 9350                   MOV.W       L1753,R3   ; H'0570
    000015B6 D229                   MOV.L       L1753+4,R2 ; _symtab
    000015B8 6422                   MOV.L       @R2,R4
    000015BA 343C                   ADD         R3,R4
    000015BC              L1542:                            
    000015BC 8448                   MOV.B       @(8,R4),R0
    000015BE 2008                   TST         R0,R0
    000015C0 8B0C                   BF          L1539
    000015C2 64E2                   MOV.L       @R14,R4
    000015C4 8448                   MOV.B       @(8,R4),R0
    000015C6 2008                   TST         R0,R0
    000015C8 8B02                   BF          L1541
    000015CA 64E2                   MOV.L       @R14,R4
    000015CC A004                   BRA         L1543
    000015CE 5441                   MOV.L       @(4,R4),R4
    000015D0              L1541:                            
    000015D0 9342                   MOV.W       L1753,R3   ; H'0570
    000015D2 D222                   MOV.L       L1753+4,R2 ; _symtab
    000015D4 6422                   MOV.L       @R2,R4
    000015D6 343C                   ADD         R3,R4
    000015D8              L1543:                            
    000015D8 A004                   BRA         L1544
    000015DA 6442                   MOV.L       @R4,R4
    000015DC              L1539:                            
    000015DC 933C                   MOV.W       L1753,R3   ; H'0570
    000015DE D21F                   MOV.L       L1753+4,R2 ; _symtab
    000015E0 6422                   MOV.L       @R2,R4
    000015E2 343C                   ADD         R3,R4
    000015E4              L1544:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015E4 4D0B                   JSR         @R13
    000015E6 0009                   NOP
      derivative   536            push_integer(2);
    000015E8 D31F                   MOV.L       L1753+16,R3; _push_integer
    000015EA 430B                   JSR         @R3
    000015EC E402                   MOV         #2,R4
      derivative   537            power();
    000015EE D21F                   MOV.L       L1753+20,R2; _power
    000015F0 420B                   JSR         @R2
    000015F2 0009                   NOP
      derivative   538            subtract();
    000015F4 D31E                   MOV.L       L1753+24,R3; _subtract
    000015F6 430B                   JSR         @R3
    000015F8 0009                   NOP
      derivative   539            push_rational(-1, 2);
    000015FA E502                   MOV         #2,R5
    000015FC D21D                   MOV.L       L1753+28,R2; _push_rational
    000015FE 420B                   JSR         @R2
    00001600 E4FF                   MOV         #-1,R4
      derivative   540            power();
    00001602 D31A                   MOV.L       L1753+20,R3; _power
    00001604 430B                   JSR         @R3
    00001606 0009                   NOP
      derivative   541            multiply();
    00001608 D21B                   MOV.L       L1753+32,R2; _multiply
    0000160A 420B                   JSR         @R2
    0000160C 0009                   NOP
      derivative   542            negate();
    0000160E 4F26                   LDS.L       @R15+,PR
    00001610 D31A                   MOV.L       L1753+36,R3; _negate
    00001612 6DF6                   MOV.L       @R15+,R13
    00001614 432B                   JMP         @R3
    00001616 6EF6                   MOV.L       @R15+,R14
      derivative   543    }
      derivative   544    
      derivative   545    //                              Without simplify        With simplify
      derivative   546    //
      derivative   547    //      d(arctan(y/x),x)        -y/(x^2*(y^2/x^2+1))    -y/(x^2+y^2)
      derivative   548    //
      derivative   549    //      d(arctan(y/x),y)        1/(x*(y^2/x^2+1))       x/(x^2+y^2)
      derivative   550    
      derivative   551    void
      derivative   552    darctan(void)
    00001618              _darctan:                        ; function: darctan
                                                           ; frame size=12
    00001618 2FE6                   MOV.L       R14,@-R15
    0000161A 2FD6                   MOV.L       R13,@-R15
    0000161C 4F22                   STS.L       PR,@-R15
      derivative   553    {
      derivative   554            push(cadr(p1));
    0000161E DD18                   MOV.L       L1753+40,R13; _push
    00001620 DE18                   MOV.L       L1753+44,R14; _p1
    00001622 64E2                   MOV.L       @R14,R4
    00001624 8448                   MOV.B       @(8,R4),R0
    00001626 2008                   TST         R0,R0
    00001628 8B02                   BF          L1546
    0000162A 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000162C A004                   BRA         L1548
    0000162E 5441                   MOV.L       @(4,R4),R4
    00001630              L1546:                            
    00001630 9312                   MOV.W       L1753,R3   ; H'0570
    00001632 D20A                   MOV.L       L1753+4,R2 ; _symtab
    00001634 6422                   MOV.L       @R2,R4
    00001636 343C                   ADD         R3,R4
    00001638              L1548:                            
    00001638 8448                   MOV.B       @(8,R4),R0
    0000163A 2008                   TST         R0,R0
    0000163C 8B24                   BF          L1545
    0000163E 64E2                   MOV.L       @R14,R4
    00001640 8448                   MOV.B       @(8,R4),R0
    00001642 2008                   TST         R0,R0
    00001644 8B02                   BF          L1547
    00001646 64E2                   MOV.L       @R14,R4
    00001648 A004                   BRA         L1549
    0000164A 5441                   MOV.L       @(4,R4),R4
    0000164C              L1547:                            
    0000164C 9304                   MOV.W       L1753,R3   ; H'0570
    0000164E D203                   MOV.L       L1753+4,R2 ; _symtab
    00001650 6422                   MOV.L       @R2,R4
    00001652 343C                   ADD         R3,R4
    00001654              L1549:                            
    00001654 A01C                   BRA         L1550
    00001656 6442                   MOV.L       @R4,R4
    00001658              L1753:                            
    00001658 0570                   .DATA.W     H'0570
    0000165A 0000                   .DATA.W     0
    0000165C <00000000>             .DATA.L     _symtab
    00001660 <00000000>             .DATA.L     _p2
    00001664 <00000000>             .DATA.L     _derivative
    00001668 <00000000>             .DATA.L     _push_integer
    0000166C <00000000>             .DATA.L     _power
    00001670 <00000000>             .DATA.L     _subtract
    00001674 <00000000>             .DATA.L     _push_rational
    00001678 <00000000>             .DATA.L     _multiply
    0000167C <00000000>             .DATA.L     _negate
    00001680 <00000000>             .DATA.L     _push
    00001684 <00000000>             .DATA.L     _p1
    00001688              L1545:                            
    00001688 9375                   MOV.W       L1754,R3   ; H'0570
    0000168A D23B                   MOV.L       L1754+2,R2 ; _symtab
    0000168C 6422                   MOV.L       @R2,R4
    0000168E 343C                   ADD         R3,R4
    00001690              L1550:                            
    00001690 4D0B                   JSR         @R13
    00001692 0009                   NOP
      derivative   555            push(p2);
    00001694 D339                   MOV.L       L1754+6,R3 ; _p2
    00001696 4D0B                   JSR         @R13
    00001698 6432                   MOV.L       @R3,R4
      derivative   556            derivative();
    0000169A D239                   MOV.L       L1754+10,R2; _derivative
    0000169C 420B                   JSR         @R2
    0000169E 0009                   NOP
      derivative   557            push_integer(1);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016A0 D338                   MOV.L       L1754+14,R3; _push_integer
    000016A2 430B                   JSR         @R3
    000016A4 E401                   MOV         #1,R4
      derivative   558            push(cadr(p1));
    000016A6 64E2                   MOV.L       @R14,R4
    000016A8 8448                   MOV.B       @(8,R4),R0
    000016AA 2008                   TST         R0,R0
    000016AC 8B02                   BF          L1552
    000016AE 64E2                   MOV.L       @R14,R4
    000016B0 A004                   BRA         L1554
    000016B2 5441                   MOV.L       @(4,R4),R4
    000016B4              L1552:                            
    000016B4 935F                   MOV.W       L1754,R3   ; H'0570
    000016B6 D230                   MOV.L       L1754+2,R2 ; _symtab
    000016B8 6422                   MOV.L       @R2,R4
    000016BA 343C                   ADD         R3,R4
    000016BC              L1554:                            
    000016BC 8448                   MOV.B       @(8,R4),R0
    000016BE 2008                   TST         R0,R0
    000016C0 8B0C                   BF          L1551
    000016C2 64E2                   MOV.L       @R14,R4
    000016C4 8448                   MOV.B       @(8,R4),R0
    000016C6 2008                   TST         R0,R0
    000016C8 8B02                   BF          L1553
    000016CA 64E2                   MOV.L       @R14,R4
    000016CC A004                   BRA         L1555
    000016CE 5441                   MOV.L       @(4,R4),R4
    000016D0              L1553:                            
    000016D0 9351                   MOV.W       L1754,R3   ; H'0570
    000016D2 D229                   MOV.L       L1754+2,R2 ; _symtab
    000016D4 6422                   MOV.L       @R2,R4
    000016D6 343C                   ADD         R3,R4
    000016D8              L1555:                            
    000016D8 A004                   BRA         L1556
    000016DA 6442                   MOV.L       @R4,R4
    000016DC              L1551:                            
    000016DC 934B                   MOV.W       L1754,R3   ; H'0570
    000016DE D226                   MOV.L       L1754+2,R2 ; _symtab
    000016E0 6422                   MOV.L       @R2,R4
    000016E2 343C                   ADD         R3,R4
    000016E4              L1556:                            
    000016E4 4D0B                   JSR         @R13
    000016E6 0009                   NOP
      derivative   559            push_integer(2);
    000016E8 D326                   MOV.L       L1754+14,R3; _push_integer
    000016EA 430B                   JSR         @R3
    000016EC E402                   MOV         #2,R4
      derivative   560            power();
    000016EE D226                   MOV.L       L1754+18,R2; _power
    000016F0 420B                   JSR         @R2
    000016F2 0009                   NOP
      derivative   561            add();
    000016F4 D325                   MOV.L       L1754+22,R3; _add
    000016F6 430B                   JSR         @R3
    000016F8 0009                   NOP
      derivative   562            inverse();
    000016FA D225                   MOV.L       L1754+26,R2; _inverse




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016FC 420B                   JSR         @R2
    000016FE 0009                   NOP
      derivative   563            multiply();
    00001700 D324                   MOV.L       L1754+30,R3; _multiply
    00001702 430B                   JSR         @R3
    00001704 0009                   NOP
      derivative   564            simplify();
    00001706 4F26                   LDS.L       @R15+,PR
    00001708 D223                   MOV.L       L1754+34,R2; _simplify
    0000170A 6DF6                   MOV.L       @R15+,R13
    0000170C 422B                   JMP         @R2
    0000170E 6EF6                   MOV.L       @R15+,R14
      derivative   565    }
      derivative   566    
      derivative   567    void
      derivative   568    dsinh(void)
    00001710              _dsinh:                          ; function: dsinh
                                                           ; frame size=12
    00001710 2FE6                   MOV.L       R14,@-R15
    00001712 2FD6                   MOV.L       R13,@-R15
    00001714 4F22                   STS.L       PR,@-R15
      derivative   569    {
      derivative   570            push(cadr(p1));
    00001716 DD21                   MOV.L       L1754+38,R13; _push
    00001718 DE21                   MOV.L       L1754+42,R14; _p1
    0000171A 64E2                   MOV.L       @R14,R4
    0000171C 8448                   MOV.B       @(8,R4),R0
    0000171E 2008                   TST         R0,R0
    00001720 8B02                   BF          L1558
    00001722 64E2                   MOV.L       @R14,R4
    00001724 A004                   BRA         L1560
    00001726 5441                   MOV.L       @(4,R4),R4
    00001728              L1558:                            
    00001728 9325                   MOV.W       L1754,R3   ; H'0570
    0000172A D213                   MOV.L       L1754+2,R2 ; _symtab
    0000172C 6422                   MOV.L       @R2,R4
    0000172E 343C                   ADD         R3,R4
    00001730              L1560:                            
    00001730 8448                   MOV.B       @(8,R4),R0
    00001732 2008                   TST         R0,R0
    00001734 8B0C                   BF          L1557
    00001736 64E2                   MOV.L       @R14,R4
    00001738 8448                   MOV.B       @(8,R4),R0
    0000173A 2008                   TST         R0,R0
    0000173C 8B02                   BF          L1559
    0000173E 64E2                   MOV.L       @R14,R4
    00001740 A004                   BRA         L1561
    00001742 5441                   MOV.L       @(4,R4),R4
    00001744              L1559:                            
    00001744 9317                   MOV.W       L1754,R3   ; H'0570
    00001746 D20C                   MOV.L       L1754+2,R2 ; _symtab
    00001748 6422                   MOV.L       @R2,R4
    0000174A 343C                   ADD         R3,R4
    0000174C              L1561:                            
    0000174C A004                   BRA         L1562
    0000174E 6442                   MOV.L       @R4,R4
    00001750              L1557:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001750 9311                   MOV.W       L1754,R3   ; H'0570
    00001752 D209                   MOV.L       L1754+2,R2 ; _symtab
    00001754 6422                   MOV.L       @R2,R4
    00001756 343C                   ADD         R3,R4
    00001758              L1562:                            
    00001758 4D0B                   JSR         @R13
    0000175A 0009                   NOP
      derivative   571            push(p2);
    0000175C D307                   MOV.L       L1754+6,R3 ; _p2
    0000175E 4D0B                   JSR         @R13
    00001760 6432                   MOV.L       @R3,R4
      derivative   572            derivative();
    00001762 D207                   MOV.L       L1754+10,R2; _derivative
    00001764 420B                   JSR         @R2
    00001766 0009                   NOP
      derivative   573            push(cadr(p1));
    00001768 64E2                   MOV.L       @R14,R4
    0000176A 8448                   MOV.B       @(8,R4),R0
    0000176C 2008                   TST         R0,R0
    0000176E 8B19                   BF          L1564
    00001770 64E2                   MOV.L       @R14,R4
    00001772 A01B                   BRA         L1566
    00001774 5441                   MOV.L       @(4,R4),R4
    00001776              L1754:                            
    00001776 0570                   .DATA.W     H'0570
    00001778 <00000000>             .DATA.L     _symtab
    0000177C <00000000>             .DATA.L     _p2
    00001780 <00000000>             .DATA.L     _derivative
    00001784 <00000000>             .DATA.L     _push_integer
    00001788 <00000000>             .DATA.L     _power
    0000178C <00000000>             .DATA.L     _add
    00001790 <00000000>             .DATA.L     _inverse
    00001794 <00000000>             .DATA.L     _multiply
    00001798 <00000000>             .DATA.L     _simplify
    0000179C <00000000>             .DATA.L     _push
    000017A0 <00000000>             .DATA.L     _p1
    000017A4              L1564:                            
    000017A4 9367                   MOV.W       L1755,R3   ; H'0570
    000017A6 D234                   MOV.L       L1755+2,R2 ; _symtab
    000017A8 6422                   MOV.L       @R2,R4
    000017AA 343C                   ADD         R3,R4
    000017AC              L1566:                            
    000017AC 8448                   MOV.B       @(8,R4),R0
    000017AE 2008                   TST         R0,R0
    000017B0 8B0C                   BF          L1563
    000017B2 64E2                   MOV.L       @R14,R4
    000017B4 8448                   MOV.B       @(8,R4),R0
    000017B6 2008                   TST         R0,R0
    000017B8 8B02                   BF          L1565
    000017BA 64E2                   MOV.L       @R14,R4
    000017BC A004                   BRA         L1567
    000017BE 5441                   MOV.L       @(4,R4),R4
    000017C0              L1565:                            
    000017C0 9359                   MOV.W       L1755,R3   ; H'0570
    000017C2 D22D                   MOV.L       L1755+2,R2 ; _symtab
    000017C4 6422                   MOV.L       @R2,R4
    000017C6 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017C8              L1567:                            
    000017C8 A004                   BRA         L1568
    000017CA 6442                   MOV.L       @R4,R4
    000017CC              L1563:                            
    000017CC 9353                   MOV.W       L1755,R3   ; H'0570
    000017CE D22A                   MOV.L       L1755+2,R2 ; _symtab
    000017D0 6422                   MOV.L       @R2,R4
    000017D2 343C                   ADD         R3,R4
    000017D4              L1568:                            
    000017D4 4D0B                   JSR         @R13
    000017D6 0009                   NOP
      derivative   574            ycosh();
    000017D8 D328                   MOV.L       L1755+6,R3 ; _ycosh
    000017DA 430B                   JSR         @R3
    000017DC 0009                   NOP
      derivative   575            multiply();
    000017DE 4F26                   LDS.L       @R15+,PR
    000017E0 D227                   MOV.L       L1755+10,R2; _multiply
    000017E2 6DF6                   MOV.L       @R15+,R13
    000017E4 422B                   JMP         @R2
    000017E6 6EF6                   MOV.L       @R15+,R14
      derivative   576    }
      derivative   577    
      derivative   578    void
      derivative   579    dcosh(void)
    000017E8              _dcosh:                          ; function: dcosh
                                                           ; frame size=12
    000017E8 2FE6                   MOV.L       R14,@-R15
    000017EA 2FD6                   MOV.L       R13,@-R15
    000017EC 4F22                   STS.L       PR,@-R15
      derivative   580    {
      derivative   581            push(cadr(p1));
    000017EE DD25                   MOV.L       L1755+14,R13; _push
    000017F0 DE25                   MOV.L       L1755+18,R14; _p1
    000017F2 64E2                   MOV.L       @R14,R4
    000017F4 8448                   MOV.B       @(8,R4),R0
    000017F6 2008                   TST         R0,R0
    000017F8 8B02                   BF          L1570
    000017FA 64E2                   MOV.L       @R14,R4
    000017FC A004                   BRA         L1572
    000017FE 5441                   MOV.L       @(4,R4),R4
    00001800              L1570:                            
    00001800 9339                   MOV.W       L1755,R3   ; H'0570
    00001802 D21D                   MOV.L       L1755+2,R2 ; _symtab
    00001804 6422                   MOV.L       @R2,R4
    00001806 343C                   ADD         R3,R4
    00001808              L1572:                            
    00001808 8448                   MOV.B       @(8,R4),R0
    0000180A 2008                   TST         R0,R0
    0000180C 8B0C                   BF          L1569
    0000180E 64E2                   MOV.L       @R14,R4
    00001810 8448                   MOV.B       @(8,R4),R0
    00001812 2008                   TST         R0,R0
    00001814 8B02                   BF          L1571
    00001816 64E2                   MOV.L       @R14,R4
    00001818 A004                   BRA         L1573
    0000181A 5441                   MOV.L       @(4,R4),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000181C              L1571:                            
    0000181C 932B                   MOV.W       L1755,R3   ; H'0570
    0000181E D216                   MOV.L       L1755+2,R2 ; _symtab
    00001820 6422                   MOV.L       @R2,R4
    00001822 343C                   ADD         R3,R4
    00001824              L1573:                            
    00001824 A004                   BRA         L1574
    00001826 6442                   MOV.L       @R4,R4
    00001828              L1569:                            
    00001828 9325                   MOV.W       L1755,R3   ; H'0570
    0000182A D213                   MOV.L       L1755+2,R2 ; _symtab
    0000182C 6422                   MOV.L       @R2,R4
    0000182E 343C                   ADD         R3,R4
    00001830              L1574:                            
    00001830 4D0B                   JSR         @R13
    00001832 0009                   NOP
      derivative   582            push(p2);
    00001834 D315                   MOV.L       L1755+22,R3; _p2
    00001836 4D0B                   JSR         @R13
    00001838 6432                   MOV.L       @R3,R4
      derivative   583            derivative();
    0000183A D215                   MOV.L       L1755+26,R2; _derivative
    0000183C 420B                   JSR         @R2
    0000183E 0009                   NOP
      derivative   584            push(cadr(p1));
    00001840 64E2                   MOV.L       @R14,R4
    00001842 8448                   MOV.B       @(8,R4),R0
    00001844 2008                   TST         R0,R0
    00001846 8B02                   BF          L1576
    00001848 64E2                   MOV.L       @R14,R4
    0000184A A004                   BRA         L1578
    0000184C 5441                   MOV.L       @(4,R4),R4
    0000184E              L1576:                            
    0000184E 9312                   MOV.W       L1755,R3   ; H'0570
    00001850 D209                   MOV.L       L1755+2,R2 ; _symtab
    00001852 6422                   MOV.L       @R2,R4
    00001854 343C                   ADD         R3,R4
    00001856              L1578:                            
    00001856 8448                   MOV.B       @(8,R4),R0
    00001858 2008                   TST         R0,R0
    0000185A 8B1B                   BF          L1575
    0000185C 64E2                   MOV.L       @R14,R4
    0000185E 8448                   MOV.B       @(8,R4),R0
    00001860 2008                   TST         R0,R0
    00001862 8B02                   BF          L1577
    00001864 64E2                   MOV.L       @R14,R4
    00001866 A004                   BRA         L1579
    00001868 5441                   MOV.L       @(4,R4),R4
    0000186A              L1577:                            
    0000186A 9304                   MOV.W       L1755,R3   ; H'0570
    0000186C D202                   MOV.L       L1755+2,R2 ; _symtab
    0000186E 6422                   MOV.L       @R2,R4
    00001870 343C                   ADD         R3,R4
    00001872              L1579:                            
    00001872 A013                   BRA         L1580
    00001874 6442                   MOV.L       @R4,R4
    00001876              L1755:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001876 0570                   .DATA.W     H'0570
    00001878 <00000000>             .DATA.L     _symtab
    0000187C <00000000>             .DATA.L     _ycosh
    00001880 <00000000>             .DATA.L     _multiply
    00001884 <00000000>             .DATA.L     _push
    00001888 <00000000>             .DATA.L     _p1
    0000188C <00000000>             .DATA.L     _p2
    00001890 <00000000>             .DATA.L     _derivative
    00001894              L1575:                            
    00001894 9373                   MOV.W       L1756,R3   ; H'0570
    00001896 D23A                   MOV.L       L1756+2,R2 ; _symtab
    00001898 6422                   MOV.L       @R2,R4
    0000189A 343C                   ADD         R3,R4
    0000189C              L1580:                            
    0000189C 4D0B                   JSR         @R13
    0000189E 0009                   NOP
      derivative   585            ysinh();
    000018A0 D338                   MOV.L       L1756+6,R3 ; _ysinh
    000018A2 430B                   JSR         @R3
    000018A4 0009                   NOP
      derivative   586            multiply();
    000018A6 4F26                   LDS.L       @R15+,PR
    000018A8 D237                   MOV.L       L1756+10,R2; _multiply
    000018AA 6DF6                   MOV.L       @R15+,R13
    000018AC 422B                   JMP         @R2
    000018AE 6EF6                   MOV.L       @R15+,R14
      derivative   587    }
      derivative   588    
      derivative   589    void
      derivative   590    dtanh(void)
    000018B0              _dtanh:                          ; function: dtanh
                                                           ; frame size=12
    000018B0 2FE6                   MOV.L       R14,@-R15
    000018B2 2FD6                   MOV.L       R13,@-R15
    000018B4 4F22                   STS.L       PR,@-R15
      derivative   591    {
      derivative   592            push(cadr(p1));
    000018B6 DD35                   MOV.L       L1756+14,R13; _push
    000018B8 DE35                   MOV.L       L1756+18,R14; _p1
    000018BA 64E2                   MOV.L       @R14,R4
    000018BC 8448                   MOV.B       @(8,R4),R0
    000018BE 2008                   TST         R0,R0
    000018C0 8B02                   BF          L1582
    000018C2 64E2                   MOV.L       @R14,R4
    000018C4 A004                   BRA         L1584
    000018C6 5441                   MOV.L       @(4,R4),R4
    000018C8              L1582:                            
    000018C8 9359                   MOV.W       L1756,R3   ; H'0570
    000018CA D22D                   MOV.L       L1756+2,R2 ; _symtab
    000018CC 6422                   MOV.L       @R2,R4
    000018CE 343C                   ADD         R3,R4
    000018D0              L1584:                            
    000018D0 8448                   MOV.B       @(8,R4),R0
    000018D2 2008                   TST         R0,R0
    000018D4 8B0C                   BF          L1581
    000018D6 64E2                   MOV.L       @R14,R4
    000018D8 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000018DA 2008                   TST         R0,R0
    000018DC 8B02                   BF          L1583
    000018DE 64E2                   MOV.L       @R14,R4
    000018E0 A004                   BRA         L1585
    000018E2 5441                   MOV.L       @(4,R4),R4
    000018E4              L1583:                            
    000018E4 934B                   MOV.W       L1756,R3   ; H'0570
    000018E6 D226                   MOV.L       L1756+2,R2 ; _symtab
    000018E8 6422                   MOV.L       @R2,R4
    000018EA 343C                   ADD         R3,R4
    000018EC              L1585:                            
    000018EC A004                   BRA         L1586
    000018EE 6442                   MOV.L       @R4,R4
    000018F0              L1581:                            
    000018F0 9345                   MOV.W       L1756,R3   ; H'0570
    000018F2 D223                   MOV.L       L1756+2,R2 ; _symtab
    000018F4 6422                   MOV.L       @R2,R4
    000018F6 343C                   ADD         R3,R4
    000018F8              L1586:                            
    000018F8 4D0B                   JSR         @R13
    000018FA 0009                   NOP
      derivative   593            push(p2);
    000018FC D325                   MOV.L       L1756+22,R3; _p2
    000018FE 4D0B                   JSR         @R13
    00001900 6432                   MOV.L       @R3,R4
      derivative   594            derivative();
    00001902 D225                   MOV.L       L1756+26,R2; _derivative
    00001904 420B                   JSR         @R2
    00001906 0009                   NOP
      derivative   595            push(cadr(p1));
    00001908 64E2                   MOV.L       @R14,R4
    0000190A 8448                   MOV.B       @(8,R4),R0
    0000190C 2008                   TST         R0,R0
    0000190E 8B02                   BF          L1588
    00001910 64E2                   MOV.L       @R14,R4
    00001912 A004                   BRA         L1590
    00001914 5441                   MOV.L       @(4,R4),R4
    00001916              L1588:                            
    00001916 9332                   MOV.W       L1756,R3   ; H'0570
    00001918 D219                   MOV.L       L1756+2,R2 ; _symtab
    0000191A 6422                   MOV.L       @R2,R4
    0000191C 343C                   ADD         R3,R4
    0000191E              L1590:                            
    0000191E 8448                   MOV.B       @(8,R4),R0
    00001920 2008                   TST         R0,R0
    00001922 8B0C                   BF          L1587
    00001924 64E2                   MOV.L       @R14,R4
    00001926 8448                   MOV.B       @(8,R4),R0
    00001928 2008                   TST         R0,R0
    0000192A 8B02                   BF          L1589
    0000192C 64E2                   MOV.L       @R14,R4
    0000192E A004                   BRA         L1591
    00001930 5441                   MOV.L       @(4,R4),R4
    00001932              L1589:                            
    00001932 9324                   MOV.W       L1756,R3   ; H'0570
    00001934 D212                   MOV.L       L1756+2,R2 ; _symtab
    00001936 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001938 343C                   ADD         R3,R4
    0000193A              L1591:                            
    0000193A A004                   BRA         L1592
    0000193C 6442                   MOV.L       @R4,R4
    0000193E              L1587:                            
    0000193E 931E                   MOV.W       L1756,R3   ; H'0570
    00001940 D20F                   MOV.L       L1756+2,R2 ; _symtab
    00001942 6422                   MOV.L       @R2,R4
    00001944 343C                   ADD         R3,R4
    00001946              L1592:                            
    00001946 4D0B                   JSR         @R13
    00001948 0009                   NOP
      derivative   596            ycosh();
    0000194A D314                   MOV.L       L1756+30,R3; _ycosh
    0000194C 430B                   JSR         @R3
    0000194E 0009                   NOP
      derivative   597            push_integer(-2);
    00001950 D213                   MOV.L       L1756+34,R2; _push_integer
    00001952 420B                   JSR         @R2
    00001954 E4FE                   MOV         #-2,R4
      derivative   598            power();
    00001956 D313                   MOV.L       L1756+38,R3; _power
    00001958 430B                   JSR         @R3
    0000195A 0009                   NOP
      derivative   599            multiply();
    0000195C 4F26                   LDS.L       @R15+,PR
    0000195E 6DF6                   MOV.L       @R15+,R13
    00001960 D209                   MOV.L       L1756+10,R2; _multiply
    00001962 422B                   JMP         @R2
    00001964 6EF6                   MOV.L       @R15+,R14
      derivative   600    }
      derivative   601    
      derivative   602    void
      derivative   603    darcsinh(void)
    00001966              _darcsinh:                       ; function: darcsinh
                                                           ; frame size=12
    00001966 2FE6                   MOV.L       R14,@-R15
    00001968 2FD6                   MOV.L       R13,@-R15
    0000196A 4F22                   STS.L       PR,@-R15
      derivative   604    {
      derivative   605            push(cadr(p1));
    0000196C DD07                   MOV.L       L1756+14,R13; _push
    0000196E DE08                   MOV.L       L1756+18,R14; _p1
    00001970 64E2                   MOV.L       @R14,R4
    00001972 8448                   MOV.B       @(8,R4),R0
    00001974 2008                   TST         R0,R0
    00001976 8B17                   BF          L1594
    00001978 64E2                   MOV.L       @R14,R4
    0000197A A019                   BRA         L1596
    0000197C 5441                   MOV.L       @(4,R4),R4
    0000197E              L1756:                            
    0000197E 0570                   .DATA.W     H'0570
    00001980 <00000000>             .DATA.L     _symtab
    00001984 <00000000>             .DATA.L     _ysinh
    00001988 <00000000>             .DATA.L     _multiply
    0000198C <00000000>             .DATA.L     _push
    00001990 <00000000>             .DATA.L     _p1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001994 <00000000>             .DATA.L     _p2
    00001998 <00000000>             .DATA.L     _derivative
    0000199C <00000000>             .DATA.L     _ycosh
    000019A0 <00000000>             .DATA.L     _push_integer
    000019A4 <00000000>             .DATA.L     _power
    000019A8              L1594:                            
    000019A8 9371                   MOV.W       L1757,R3   ; H'0570
    000019AA D239                   MOV.L       L1757+2,R2 ; _symtab
    000019AC 6422                   MOV.L       @R2,R4
    000019AE 343C                   ADD         R3,R4
    000019B0              L1596:                            
    000019B0 8448                   MOV.B       @(8,R4),R0
    000019B2 2008                   TST         R0,R0
    000019B4 8B0C                   BF          L1593
    000019B6 64E2                   MOV.L       @R14,R4
    000019B8 8448                   MOV.B       @(8,R4),R0
    000019BA 2008                   TST         R0,R0
    000019BC 8B02                   BF          L1595
    000019BE 64E2                   MOV.L       @R14,R4
    000019C0 A004                   BRA         L1597
    000019C2 5441                   MOV.L       @(4,R4),R4
    000019C4              L1595:                            
    000019C4 9363                   MOV.W       L1757,R3   ; H'0570
    000019C6 D232                   MOV.L       L1757+2,R2 ; _symtab
    000019C8 6422                   MOV.L       @R2,R4
    000019CA 343C                   ADD         R3,R4
    000019CC              L1597:                            
    000019CC A004                   BRA         L1598
    000019CE 6442                   MOV.L       @R4,R4
    000019D0              L1593:                            
    000019D0 935D                   MOV.W       L1757,R3   ; H'0570
    000019D2 D22F                   MOV.L       L1757+2,R2 ; _symtab
    000019D4 6422                   MOV.L       @R2,R4
    000019D6 343C                   ADD         R3,R4
    000019D8              L1598:                            
    000019D8 4D0B                   JSR         @R13
    000019DA 0009                   NOP
      derivative   606            push(p2);
    000019DC D32D                   MOV.L       L1757+6,R3 ; _p2
    000019DE 4D0B                   JSR         @R13
    000019E0 6432                   MOV.L       @R3,R4
      derivative   607            derivative();
    000019E2 D22D                   MOV.L       L1757+10,R2; _derivative
    000019E4 420B                   JSR         @R2
    000019E6 0009                   NOP
      derivative   608            push(cadr(p1));
    000019E8 64E2                   MOV.L       @R14,R4
    000019EA 8448                   MOV.B       @(8,R4),R0
    000019EC 2008                   TST         R0,R0
    000019EE 8B02                   BF          L1600
    000019F0 64E2                   MOV.L       @R14,R4
    000019F2 A004                   BRA         L1602
    000019F4 5441                   MOV.L       @(4,R4),R4
    000019F6              L1600:                            
    000019F6 934A                   MOV.W       L1757,R3   ; H'0570
    000019F8 D225                   MOV.L       L1757+2,R2 ; _symtab
    000019FA 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000019FC 343C                   ADD         R3,R4
    000019FE              L1602:                            
    000019FE 8448                   MOV.B       @(8,R4),R0
    00001A00 2008                   TST         R0,R0
    00001A02 8B0C                   BF          L1599
    00001A04 64E2                   MOV.L       @R14,R4
    00001A06 8448                   MOV.B       @(8,R4),R0
    00001A08 2008                   TST         R0,R0
    00001A0A 8B02                   BF          L1601
    00001A0C 64E2                   MOV.L       @R14,R4
    00001A0E A004                   BRA         L1603
    00001A10 5441                   MOV.L       @(4,R4),R4
    00001A12              L1601:                            
    00001A12 933C                   MOV.W       L1757,R3   ; H'0570
    00001A14 D21E                   MOV.L       L1757+2,R2 ; _symtab
    00001A16 6422                   MOV.L       @R2,R4
    00001A18 343C                   ADD         R3,R4
    00001A1A              L1603:                            
    00001A1A A004                   BRA         L1604
    00001A1C 6442                   MOV.L       @R4,R4
    00001A1E              L1599:                            
    00001A1E 9336                   MOV.W       L1757,R3   ; H'0570
    00001A20 D21B                   MOV.L       L1757+2,R2 ; _symtab
    00001A22 6422                   MOV.L       @R2,R4
    00001A24 343C                   ADD         R3,R4
    00001A26              L1604:                            
    00001A26 4D0B                   JSR         @R13
    00001A28 0009                   NOP
      derivative   609            push_integer(2);
    00001A2A D31C                   MOV.L       L1757+14,R3; _push_integer
    00001A2C 430B                   JSR         @R3
    00001A2E E402                   MOV         #2,R4
      derivative   610            power();
    00001A30 D21B                   MOV.L       L1757+18,R2; _power
    00001A32 420B                   JSR         @R2
    00001A34 0009                   NOP
      derivative   611            push_integer(1);
    00001A36 D319                   MOV.L       L1757+14,R3; _push_integer
    00001A38 430B                   JSR         @R3
    00001A3A E401                   MOV         #1,R4
      derivative   612            add();
    00001A3C D219                   MOV.L       L1757+22,R2; _add
    00001A3E 420B                   JSR         @R2
    00001A40 0009                   NOP
      derivative   613            push_rational(-1, 2);
    00001A42 E502                   MOV         #2,R5
    00001A44 D318                   MOV.L       L1757+26,R3; _push_rational
    00001A46 430B                   JSR         @R3
    00001A48 E4FF                   MOV         #-1,R4
      derivative   614            power();
    00001A4A D215                   MOV.L       L1757+18,R2; _power
    00001A4C 420B                   JSR         @R2
    00001A4E 0009                   NOP
      derivative   615            multiply();
    00001A50 4F26                   LDS.L       @R15+,PR
    00001A52 6DF6                   MOV.L       @R15+,R13
    00001A54 D315                   MOV.L       L1757+30,R3; _multiply




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A56 432B                   JMP         @R3
    00001A58 6EF6                   MOV.L       @R15+,R14
      derivative   616    }
      derivative   617    
      derivative   618    void
      derivative   619    darccosh(void)
    00001A5A              _darccosh:                       ; function: darccosh
                                                           ; frame size=12
    00001A5A 2FE6                   MOV.L       R14,@-R15
    00001A5C 2FD6                   MOV.L       R13,@-R15
    00001A5E 4F22                   STS.L       PR,@-R15
      derivative   620    {
      derivative   621            push(cadr(p1));
    00001A60 DD13                   MOV.L       L1757+34,R13; _push
    00001A62 DE14                   MOV.L       L1757+38,R14; _p1
    00001A64 64E2                   MOV.L       @R14,R4
    00001A66 8448                   MOV.B       @(8,R4),R0
    00001A68 2008                   TST         R0,R0
    00001A6A 8B02                   BF          L1606
    00001A6C 64E2                   MOV.L       @R14,R4
    00001A6E A004                   BRA         L1608
    00001A70 5441                   MOV.L       @(4,R4),R4
    00001A72              L1606:                            
    00001A72 930C                   MOV.W       L1757,R3   ; H'0570
    00001A74 D206                   MOV.L       L1757+2,R2 ; _symtab
    00001A76 6422                   MOV.L       @R2,R4
    00001A78 343C                   ADD         R3,R4
    00001A7A              L1608:                            
    00001A7A 8448                   MOV.B       @(8,R4),R0
    00001A7C 2008                   TST         R0,R0
    00001A7E 8B21                   BF          L1605
    00001A80 64E2                   MOV.L       @R14,R4
    00001A82 8448                   MOV.B       @(8,R4),R0
    00001A84 2008                   TST         R0,R0
    00001A86 8B17                   BF          L1607
    00001A88 64E2                   MOV.L       @R14,R4
    00001A8A A019                   BRA         L1609
    00001A8C 5441                   MOV.L       @(4,R4),R4
    00001A8E              L1757:                            
    00001A8E 0570                   .DATA.W     H'0570
    00001A90 <00000000>             .DATA.L     _symtab
    00001A94 <00000000>             .DATA.L     _p2
    00001A98 <00000000>             .DATA.L     _derivative
    00001A9C <00000000>             .DATA.L     _push_integer
    00001AA0 <00000000>             .DATA.L     _power
    00001AA4 <00000000>             .DATA.L     _add
    00001AA8 <00000000>             .DATA.L     _push_rational
    00001AAC <00000000>             .DATA.L     _multiply
    00001AB0 <00000000>             .DATA.L     _push
    00001AB4 <00000000>             .DATA.L     _p1
    00001AB8              L1607:                            
    00001AB8 9369                   MOV.W       L1758,R3   ; H'0570
    00001ABA D235                   MOV.L       L1758+2,R2 ; _symtab
    00001ABC 6422                   MOV.L       @R2,R4
    00001ABE 343C                   ADD         R3,R4
    00001AC0              L1609:                            
    00001AC0 A004                   BRA         L1610




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001AC2 6442                   MOV.L       @R4,R4
    00001AC4              L1605:                            
    00001AC4 9363                   MOV.W       L1758,R3   ; H'0570
    00001AC6 D232                   MOV.L       L1758+2,R2 ; _symtab
    00001AC8 6422                   MOV.L       @R2,R4
    00001ACA 343C                   ADD         R3,R4
    00001ACC              L1610:                            
    00001ACC 4D0B                   JSR         @R13
    00001ACE 0009                   NOP
      derivative   622            push(p2);
    00001AD0 D330                   MOV.L       L1758+6,R3 ; _p2
    00001AD2 4D0B                   JSR         @R13
    00001AD4 6432                   MOV.L       @R3,R4
      derivative   623            derivative();
    00001AD6 D230                   MOV.L       L1758+10,R2; _derivative
    00001AD8 420B                   JSR         @R2
    00001ADA 0009                   NOP
      derivative   624            push(cadr(p1));
    00001ADC 64E2                   MOV.L       @R14,R4
    00001ADE 8448                   MOV.B       @(8,R4),R0
    00001AE0 2008                   TST         R0,R0
    00001AE2 8B02                   BF          L1612
    00001AE4 64E2                   MOV.L       @R14,R4
    00001AE6 A004                   BRA         L1614
    00001AE8 5441                   MOV.L       @(4,R4),R4
    00001AEA              L1612:                            
    00001AEA 9350                   MOV.W       L1758,R3   ; H'0570
    00001AEC D228                   MOV.L       L1758+2,R2 ; _symtab
    00001AEE 6422                   MOV.L       @R2,R4
    00001AF0 343C                   ADD         R3,R4
    00001AF2              L1614:                            
    00001AF2 8448                   MOV.B       @(8,R4),R0
    00001AF4 2008                   TST         R0,R0
    00001AF6 8B0C                   BF          L1611
    00001AF8 64E2                   MOV.L       @R14,R4
    00001AFA 8448                   MOV.B       @(8,R4),R0
    00001AFC 2008                   TST         R0,R0
    00001AFE 8B02                   BF          L1613
    00001B00 64E2                   MOV.L       @R14,R4
    00001B02 A004                   BRA         L1615
    00001B04 5441                   MOV.L       @(4,R4),R4
    00001B06              L1613:                            
    00001B06 9342                   MOV.W       L1758,R3   ; H'0570
    00001B08 D221                   MOV.L       L1758+2,R2 ; _symtab
    00001B0A 6422                   MOV.L       @R2,R4
    00001B0C 343C                   ADD         R3,R4
    00001B0E              L1615:                            
    00001B0E A004                   BRA         L1616
    00001B10 6442                   MOV.L       @R4,R4
    00001B12              L1611:                            
    00001B12 933C                   MOV.W       L1758,R3   ; H'0570
    00001B14 D21E                   MOV.L       L1758+2,R2 ; _symtab
    00001B16 6422                   MOV.L       @R2,R4
    00001B18 343C                   ADD         R3,R4
    00001B1A              L1616:                            
    00001B1A 4D0B                   JSR         @R13
    00001B1C 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   625            push_integer(2);
    00001B1E D31F                   MOV.L       L1758+14,R3; _push_integer
    00001B20 430B                   JSR         @R3
    00001B22 E402                   MOV         #2,R4
      derivative   626            power();
    00001B24 D21E                   MOV.L       L1758+18,R2; _power
    00001B26 420B                   JSR         @R2
    00001B28 0009                   NOP
      derivative   627            push_integer(-1);
    00001B2A D31C                   MOV.L       L1758+14,R3; _push_integer
    00001B2C 430B                   JSR         @R3
    00001B2E E4FF                   MOV         #-1,R4
      derivative   628            add();
    00001B30 D21C                   MOV.L       L1758+22,R2; _add
    00001B32 420B                   JSR         @R2
    00001B34 0009                   NOP
      derivative   629            push_rational(-1, 2);
    00001B36 E502                   MOV         #2,R5
    00001B38 D31B                   MOV.L       L1758+26,R3; _push_rational
    00001B3A 430B                   JSR         @R3
    00001B3C E4FF                   MOV         #-1,R4
      derivative   630            power();
    00001B3E D218                   MOV.L       L1758+18,R2; _power
    00001B40 420B                   JSR         @R2
    00001B42 0009                   NOP
      derivative   631            multiply();
    00001B44 4F26                   LDS.L       @R15+,PR
    00001B46 6DF6                   MOV.L       @R15+,R13
    00001B48 D318                   MOV.L       L1758+30,R3; _multiply
    00001B4A 432B                   JMP         @R3
    00001B4C 6EF6                   MOV.L       @R15+,R14
      derivative   632    }
      derivative   633    
      derivative   634    void
      derivative   635    darctanh(void)
    00001B4E              _darctanh:                       ; function: darctanh
                                                           ; frame size=12
    00001B4E 2FE6                   MOV.L       R14,@-R15
    00001B50 2FD6                   MOV.L       R13,@-R15
    00001B52 4F22                   STS.L       PR,@-R15
      derivative   636    {
      derivative   637            push(cadr(p1));
    00001B54 DD16                   MOV.L       L1758+34,R13; _push
    00001B56 DE17                   MOV.L       L1758+38,R14; _p1
    00001B58 64E2                   MOV.L       @R14,R4
    00001B5A 8448                   MOV.B       @(8,R4),R0
    00001B5C 2008                   TST         R0,R0
    00001B5E 8B02                   BF          L1618
    00001B60 64E2                   MOV.L       @R14,R4
    00001B62 A004                   BRA         L1620
    00001B64 5441                   MOV.L       @(4,R4),R4
    00001B66              L1618:                            
    00001B66 9312                   MOV.W       L1758,R3   ; H'0570
    00001B68 D209                   MOV.L       L1758+2,R2 ; _symtab
    00001B6A 6422                   MOV.L       @R2,R4
    00001B6C 343C                   ADD         R3,R4
    00001B6E              L1620:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B6E 8448                   MOV.B       @(8,R4),R0
    00001B70 2008                   TST         R0,R0
    00001B72 8B21                   BF          L1617
    00001B74 64E2                   MOV.L       @R14,R4
    00001B76 8448                   MOV.B       @(8,R4),R0
    00001B78 2008                   TST         R0,R0
    00001B7A 8B02                   BF          L1619
    00001B7C 64E2                   MOV.L       @R14,R4
    00001B7E A004                   BRA         L1621
    00001B80 5441                   MOV.L       @(4,R4),R4
    00001B82              L1619:                            
    00001B82 9304                   MOV.W       L1758,R3   ; H'0570
    00001B84 D202                   MOV.L       L1758+2,R2 ; _symtab
    00001B86 6422                   MOV.L       @R2,R4
    00001B88 343C                   ADD         R3,R4
    00001B8A              L1621:                            
    00001B8A A019                   BRA         L1622
    00001B8C 6442                   MOV.L       @R4,R4
    00001B8E              L1758:                            
    00001B8E 0570                   .DATA.W     H'0570
    00001B90 <00000000>             .DATA.L     _symtab
    00001B94 <00000000>             .DATA.L     _p2
    00001B98 <00000000>             .DATA.L     _derivative
    00001B9C <00000000>             .DATA.L     _push_integer
    00001BA0 <00000000>             .DATA.L     _power
    00001BA4 <00000000>             .DATA.L     _add
    00001BA8 <00000000>             .DATA.L     _push_rational
    00001BAC <00000000>             .DATA.L     _multiply
    00001BB0 <00000000>             .DATA.L     _push
    00001BB4 <00000000>             .DATA.L     _p1
    00001BB8              L1617:                            
    00001BB8 9372                   MOV.W       L1759,R3   ; H'0570
    00001BBA D23A                   MOV.L       L1759+4,R2 ; _symtab
    00001BBC 6422                   MOV.L       @R2,R4
    00001BBE 343C                   ADD         R3,R4
    00001BC0              L1622:                            
    00001BC0 4D0B                   JSR         @R13
    00001BC2 0009                   NOP
      derivative   638            push(p2);
    00001BC4 D338                   MOV.L       L1759+8,R3 ; _p2
    00001BC6 4D0B                   JSR         @R13
    00001BC8 6432                   MOV.L       @R3,R4
      derivative   639            derivative();
    00001BCA D238                   MOV.L       L1759+12,R2; _derivative
    00001BCC 420B                   JSR         @R2
    00001BCE 0009                   NOP
      derivative   640            push_integer(1);
    00001BD0 D337                   MOV.L       L1759+16,R3; _push_integer
    00001BD2 430B                   JSR         @R3
    00001BD4 E401                   MOV         #1,R4
      derivative   641            push(cadr(p1));
    00001BD6 64E2                   MOV.L       @R14,R4
    00001BD8 8448                   MOV.B       @(8,R4),R0
    00001BDA 2008                   TST         R0,R0
    00001BDC 8B02                   BF          L1624
    00001BDE 64E2                   MOV.L       @R14,R4
    00001BE0 A004                   BRA         L1626




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001BE2 5441                   MOV.L       @(4,R4),R4
    00001BE4              L1624:                            
    00001BE4 935C                   MOV.W       L1759,R3   ; H'0570
    00001BE6 D22F                   MOV.L       L1759+4,R2 ; _symtab
    00001BE8 6422                   MOV.L       @R2,R4
    00001BEA 343C                   ADD         R3,R4
    00001BEC              L1626:                            
    00001BEC 8448                   MOV.B       @(8,R4),R0
    00001BEE 2008                   TST         R0,R0
    00001BF0 8B0C                   BF          L1623
    00001BF2 64E2                   MOV.L       @R14,R4
    00001BF4 8448                   MOV.B       @(8,R4),R0
    00001BF6 2008                   TST         R0,R0
    00001BF8 8B02                   BF          L1625
    00001BFA 64E2                   MOV.L       @R14,R4
    00001BFC A004                   BRA         L1627
    00001BFE 5441                   MOV.L       @(4,R4),R4
    00001C00              L1625:                            
    00001C00 934E                   MOV.W       L1759,R3   ; H'0570
    00001C02 D228                   MOV.L       L1759+4,R2 ; _symtab
    00001C04 6422                   MOV.L       @R2,R4
    00001C06 343C                   ADD         R3,R4
    00001C08              L1627:                            
    00001C08 A004                   BRA         L1628
    00001C0A 6442                   MOV.L       @R4,R4
    00001C0C              L1623:                            
    00001C0C 9348                   MOV.W       L1759,R3   ; H'0570
    00001C0E D225                   MOV.L       L1759+4,R2 ; _symtab
    00001C10 6422                   MOV.L       @R2,R4
    00001C12 343C                   ADD         R3,R4
    00001C14              L1628:                            
    00001C14 4D0B                   JSR         @R13
    00001C16 0009                   NOP
      derivative   642            push_integer(2);
    00001C18 D325                   MOV.L       L1759+16,R3; _push_integer
    00001C1A 430B                   JSR         @R3
    00001C1C E402                   MOV         #2,R4
      derivative   643            power();
    00001C1E D225                   MOV.L       L1759+20,R2; _power
    00001C20 420B                   JSR         @R2
    00001C22 0009                   NOP
      derivative   644            subtract();
    00001C24 D324                   MOV.L       L1759+24,R3; _subtract
    00001C26 430B                   JSR         @R3
    00001C28 0009                   NOP
      derivative   645            inverse();
    00001C2A D224                   MOV.L       L1759+28,R2; _inverse
    00001C2C 420B                   JSR         @R2
    00001C2E 0009                   NOP
      derivative   646            multiply();
    00001C30 4F26                   LDS.L       @R15+,PR
    00001C32 6DF6                   MOV.L       @R15+,R13
    00001C34 D322                   MOV.L       L1759+32,R3; _multiply
    00001C36 432B                   JMP         @R3
    00001C38 6EF6                   MOV.L       @R15+,R14
      derivative   647    }
      derivative   648    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   649    void
      derivative   650    dabs(void)
    00001C3A              _dabs:                           ; function: dabs
                                                           ; frame size=12
    00001C3A 2FE6                   MOV.L       R14,@-R15
    00001C3C 2FD6                   MOV.L       R13,@-R15
    00001C3E 4F22                   STS.L       PR,@-R15
      derivative   651    {
      derivative   652            push(cadr(p1));
    00001C40 DD20                   MOV.L       L1759+36,R13; _push
    00001C42 DE21                   MOV.L       L1759+40,R14; _p1
    00001C44 64E2                   MOV.L       @R14,R4
    00001C46 8448                   MOV.B       @(8,R4),R0
    00001C48 2008                   TST         R0,R0
    00001C4A 8B02                   BF          L1630
    00001C4C 64E2                   MOV.L       @R14,R4
    00001C4E A004                   BRA         L1632
    00001C50 5441                   MOV.L       @(4,R4),R4
    00001C52              L1630:                            
    00001C52 9325                   MOV.W       L1759,R3   ; H'0570
    00001C54 D213                   MOV.L       L1759+4,R2 ; _symtab
    00001C56 6422                   MOV.L       @R2,R4
    00001C58 343C                   ADD         R3,R4
    00001C5A              L1632:                            
    00001C5A 8448                   MOV.B       @(8,R4),R0
    00001C5C 2008                   TST         R0,R0
    00001C5E 8B0C                   BF          L1629
    00001C60 64E2                   MOV.L       @R14,R4
    00001C62 8448                   MOV.B       @(8,R4),R0
    00001C64 2008                   TST         R0,R0
    00001C66 8B02                   BF          L1631
    00001C68 64E2                   MOV.L       @R14,R4
    00001C6A A004                   BRA         L1633
    00001C6C 5441                   MOV.L       @(4,R4),R4
    00001C6E              L1631:                            
    00001C6E 9317                   MOV.W       L1759,R3   ; H'0570
    00001C70 D20C                   MOV.L       L1759+4,R2 ; _symtab
    00001C72 6422                   MOV.L       @R2,R4
    00001C74 343C                   ADD         R3,R4
    00001C76              L1633:                            
    00001C76 A004                   BRA         L1634
    00001C78 6442                   MOV.L       @R4,R4
    00001C7A              L1629:                            
    00001C7A 9311                   MOV.W       L1759,R3   ; H'0570
    00001C7C D209                   MOV.L       L1759+4,R2 ; _symtab
    00001C7E 6422                   MOV.L       @R2,R4
    00001C80 343C                   ADD         R3,R4
    00001C82              L1634:                            
    00001C82 4D0B                   JSR         @R13
    00001C84 0009                   NOP
      derivative   653            push(p2);
    00001C86 D308                   MOV.L       L1759+8,R3 ; _p2
    00001C88 4D0B                   JSR         @R13
    00001C8A 6432                   MOV.L       @R3,R4
      derivative   654            derivative();
    00001C8C D207                   MOV.L       L1759+12,R2; _derivative
    00001C8E 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C90 0009                   NOP
      derivative   655            push(cadr(p1));
    00001C92 64E2                   MOV.L       @R14,R4
    00001C94 8448                   MOV.B       @(8,R4),R0
    00001C96 2008                   TST         R0,R0
    00001C98 8B18                   BF          L1636
    00001C9A 64E2                   MOV.L       @R14,R4
    00001C9C A01A                   BRA         L1638
    00001C9E 5441                   MOV.L       @(4,R4),R4
    00001CA0              L1759:                            
    00001CA0 0570                   .DATA.W     H'0570
    00001CA2 0000                   .DATA.W     0
    00001CA4 <00000000>             .DATA.L     _symtab
    00001CA8 <00000000>             .DATA.L     _p2
    00001CAC <00000000>             .DATA.L     _derivative
    00001CB0 <00000000>             .DATA.L     _push_integer
    00001CB4 <00000000>             .DATA.L     _power
    00001CB8 <00000000>             .DATA.L     _subtract
    00001CBC <00000000>             .DATA.L     _inverse
    00001CC0 <00000000>             .DATA.L     _multiply
    00001CC4 <00000000>             .DATA.L     _push
    00001CC8 <00000000>             .DATA.L     _p1
    00001CCC              L1636:                            
    00001CCC 9367                   MOV.W       L1760,R3   ; H'0570
    00001CCE D234                   MOV.L       L1760+2,R2 ; _symtab
    00001CD0 6422                   MOV.L       @R2,R4
    00001CD2 343C                   ADD         R3,R4
    00001CD4              L1638:                            
    00001CD4 8448                   MOV.B       @(8,R4),R0
    00001CD6 2008                   TST         R0,R0
    00001CD8 8B0C                   BF          L1635
    00001CDA 64E2                   MOV.L       @R14,R4
    00001CDC 8448                   MOV.B       @(8,R4),R0
    00001CDE 2008                   TST         R0,R0
    00001CE0 8B02                   BF          L1637
    00001CE2 64E2                   MOV.L       @R14,R4
    00001CE4 A004                   BRA         L1639
    00001CE6 5441                   MOV.L       @(4,R4),R4
    00001CE8              L1637:                            
    00001CE8 9359                   MOV.W       L1760,R3   ; H'0570
    00001CEA D22D                   MOV.L       L1760+2,R2 ; _symtab
    00001CEC 6422                   MOV.L       @R2,R4
    00001CEE 343C                   ADD         R3,R4
    00001CF0              L1639:                            
    00001CF0 A004                   BRA         L1640
    00001CF2 6442                   MOV.L       @R4,R4
    00001CF4              L1635:                            
    00001CF4 9353                   MOV.W       L1760,R3   ; H'0570
    00001CF6 D22A                   MOV.L       L1760+2,R2 ; _symtab
    00001CF8 6422                   MOV.L       @R2,R4
    00001CFA 343C                   ADD         R3,R4
    00001CFC              L1640:                            
    00001CFC 4D0B                   JSR         @R13
    00001CFE 0009                   NOP
      derivative   656            sgn();
    00001D00 D328                   MOV.L       L1760+6,R3 ; _sgn
    00001D02 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D04 0009                   NOP
      derivative   657            multiply();
    00001D06 4F26                   LDS.L       @R15+,PR
    00001D08 D227                   MOV.L       L1760+10,R2; _multiply
    00001D0A 6DF6                   MOV.L       @R15+,R13
    00001D0C 422B                   JMP         @R2
    00001D0E 6EF6                   MOV.L       @R15+,R14
      derivative   658    }
      derivative   659    
      derivative   660    void
      derivative   661    dsgn(void)
    00001D10              _dsgn:                           ; function: dsgn
                                                           ; frame size=12
    00001D10 2FE6                   MOV.L       R14,@-R15
    00001D12 2FD6                   MOV.L       R13,@-R15
    00001D14 4F22                   STS.L       PR,@-R15
      derivative   662    {
      derivative   663            push(cadr(p1));
    00001D16 DD25                   MOV.L       L1760+14,R13; _push
    00001D18 DE25                   MOV.L       L1760+18,R14; _p1
    00001D1A 64E2                   MOV.L       @R14,R4
    00001D1C 8448                   MOV.B       @(8,R4),R0
    00001D1E 2008                   TST         R0,R0
    00001D20 8B02                   BF          L1642
    00001D22 64E2                   MOV.L       @R14,R4
    00001D24 A004                   BRA         L1644
    00001D26 5441                   MOV.L       @(4,R4),R4
    00001D28              L1642:                            
    00001D28 9339                   MOV.W       L1760,R3   ; H'0570
    00001D2A D21D                   MOV.L       L1760+2,R2 ; _symtab
    00001D2C 6422                   MOV.L       @R2,R4
    00001D2E 343C                   ADD         R3,R4
    00001D30              L1644:                            
    00001D30 8448                   MOV.B       @(8,R4),R0
    00001D32 2008                   TST         R0,R0
    00001D34 8B0C                   BF          L1641
    00001D36 64E2                   MOV.L       @R14,R4
    00001D38 8448                   MOV.B       @(8,R4),R0
    00001D3A 2008                   TST         R0,R0
    00001D3C 8B02                   BF          L1643
    00001D3E 64E2                   MOV.L       @R14,R4
    00001D40 A004                   BRA         L1645
    00001D42 5441                   MOV.L       @(4,R4),R4
    00001D44              L1643:                            
    00001D44 932B                   MOV.W       L1760,R3   ; H'0570
    00001D46 D216                   MOV.L       L1760+2,R2 ; _symtab
    00001D48 6422                   MOV.L       @R2,R4
    00001D4A 343C                   ADD         R3,R4
    00001D4C              L1645:                            
    00001D4C A004                   BRA         L1646
    00001D4E 6442                   MOV.L       @R4,R4
    00001D50              L1641:                            
    00001D50 9325                   MOV.W       L1760,R3   ; H'0570
    00001D52 D213                   MOV.L       L1760+2,R2 ; _symtab
    00001D54 6422                   MOV.L       @R2,R4
    00001D56 343C                   ADD         R3,R4
    00001D58              L1646:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D58 4D0B                   JSR         @R13
    00001D5A 0009                   NOP
      derivative   664            push(p2);
    00001D5C D315                   MOV.L       L1760+22,R3; _p2
    00001D5E 4D0B                   JSR         @R13
    00001D60 6432                   MOV.L       @R3,R4
      derivative   665            derivative();
    00001D62 D215                   MOV.L       L1760+26,R2; _derivative
    00001D64 420B                   JSR         @R2
    00001D66 0009                   NOP
      derivative   666            push(cadr(p1));
    00001D68 64E2                   MOV.L       @R14,R4
    00001D6A 8448                   MOV.B       @(8,R4),R0
    00001D6C 2008                   TST         R0,R0
    00001D6E 8B02                   BF          L1648
    00001D70 64E2                   MOV.L       @R14,R4
    00001D72 A004                   BRA         L1650
    00001D74 5441                   MOV.L       @(4,R4),R4
    00001D76              L1648:                            
    00001D76 9312                   MOV.W       L1760,R3   ; H'0570
    00001D78 D209                   MOV.L       L1760+2,R2 ; _symtab
    00001D7A 6422                   MOV.L       @R2,R4
    00001D7C 343C                   ADD         R3,R4
    00001D7E              L1650:                            
    00001D7E 8448                   MOV.B       @(8,R4),R0
    00001D80 2008                   TST         R0,R0
    00001D82 8B1B                   BF          L1647
    00001D84 64E2                   MOV.L       @R14,R4
    00001D86 8448                   MOV.B       @(8,R4),R0
    00001D88 2008                   TST         R0,R0
    00001D8A 8B02                   BF          L1649
    00001D8C 64E2                   MOV.L       @R14,R4
    00001D8E A004                   BRA         L1651
    00001D90 5441                   MOV.L       @(4,R4),R4
    00001D92              L1649:                            
    00001D92 9304                   MOV.W       L1760,R3   ; H'0570
    00001D94 D202                   MOV.L       L1760+2,R2 ; _symtab
    00001D96 6422                   MOV.L       @R2,R4
    00001D98 343C                   ADD         R3,R4
    00001D9A              L1651:                            
    00001D9A A013                   BRA         L1652
    00001D9C 6442                   MOV.L       @R4,R4
    00001D9E              L1760:                            
    00001D9E 0570                   .DATA.W     H'0570
    00001DA0 <00000000>             .DATA.L     _symtab
    00001DA4 <00000000>             .DATA.L     _sgn
    00001DA8 <00000000>             .DATA.L     _multiply
    00001DAC <00000000>             .DATA.L     _push
    00001DB0 <00000000>             .DATA.L     _p1
    00001DB4 <00000000>             .DATA.L     _p2
    00001DB8 <00000000>             .DATA.L     _derivative
    00001DBC              L1647:                            
    00001DBC 936B                   MOV.W       L1761,R3   ; H'0570
    00001DBE D236                   MOV.L       L1761+2,R2 ; _symtab
    00001DC0 6422                   MOV.L       @R2,R4
    00001DC2 343C                   ADD         R3,R4
    00001DC4              L1652:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001DC4 4D0B                   JSR         @R13
    00001DC6 0009                   NOP
      derivative   667            dirac();
    00001DC8 D334                   MOV.L       L1761+6,R3 ; _dirac
    00001DCA 430B                   JSR         @R3
    00001DCC 0009                   NOP
      derivative   668            multiply();
    00001DCE D234                   MOV.L       L1761+10,R2; _multiply
    00001DD0 420B                   JSR         @R2
    00001DD2 0009                   NOP
      derivative   669            push_integer(2);
    00001DD4 D333                   MOV.L       L1761+14,R3; _push_integer
    00001DD6 430B                   JSR         @R3
    00001DD8 E402                   MOV         #2,R4
      derivative   670            multiply();
    00001DDA 4F26                   LDS.L       @R15+,PR
    00001DDC D230                   MOV.L       L1761+10,R2; _multiply
    00001DDE 6DF6                   MOV.L       @R15+,R13
    00001DE0 422B                   JMP         @R2
    00001DE2 6EF6                   MOV.L       @R15+,R14
      derivative   671    }
      derivative   672    
      derivative   673    void
      derivative   674    dhermite(void)
    00001DE4              _dhermite:                       ; function: dhermite
                                                           ; frame size=16
    00001DE4 2FE6                   MOV.L       R14,@-R15
    00001DE6 2FD6                   MOV.L       R13,@-R15
    00001DE8 2FC6                   MOV.L       R12,@-R15
    00001DEA 4F22                   STS.L       PR,@-R15
      derivative   675    {
      derivative   676            push(cadr(p1));
    00001DEC DD2E                   MOV.L       L1761+18,R13; _push
    00001DEE DE2F                   MOV.L       L1761+22,R14; _p1
    00001DF0 64E2                   MOV.L       @R14,R4
    00001DF2 8448                   MOV.B       @(8,R4),R0
    00001DF4 2008                   TST         R0,R0
    00001DF6 8B02                   BF          L1654
    00001DF8 64E2                   MOV.L       @R14,R4
    00001DFA A004                   BRA         L1656
    00001DFC 5441                   MOV.L       @(4,R4),R4
    00001DFE              L1654:                            
    00001DFE 934A                   MOV.W       L1761,R3   ; H'0570
    00001E00 D225                   MOV.L       L1761+2,R2 ; _symtab
    00001E02 6422                   MOV.L       @R2,R4
    00001E04 343C                   ADD         R3,R4
    00001E06              L1656:                            
    00001E06 8448                   MOV.B       @(8,R4),R0
    00001E08 2008                   TST         R0,R0
    00001E0A 8B0C                   BF          L1653
    00001E0C 64E2                   MOV.L       @R14,R4
    00001E0E 8448                   MOV.B       @(8,R4),R0
    00001E10 2008                   TST         R0,R0
    00001E12 8B02                   BF          L1655
    00001E14 64E2                   MOV.L       @R14,R4
    00001E16 A004                   BRA         L1657
    00001E18 5441                   MOV.L       @(4,R4),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E1A              L1655:                            
    00001E1A 933C                   MOV.W       L1761,R3   ; H'0570
    00001E1C D21E                   MOV.L       L1761+2,R2 ; _symtab
    00001E1E 6422                   MOV.L       @R2,R4
    00001E20 343C                   ADD         R3,R4
    00001E22              L1657:                            
    00001E22 A004                   BRA         L1658
    00001E24 6442                   MOV.L       @R4,R4
    00001E26              L1653:                            
    00001E26 9336                   MOV.W       L1761,R3   ; H'0570
    00001E28 D21B                   MOV.L       L1761+2,R2 ; _symtab
    00001E2A 6422                   MOV.L       @R2,R4
    00001E2C 343C                   ADD         R3,R4
    00001E2E              L1658:                            
    00001E2E 4D0B                   JSR         @R13
    00001E30 0009                   NOP
      derivative   677            push(p2);
    00001E32 D31F                   MOV.L       L1761+26,R3; _p2
    00001E34 4D0B                   JSR         @R13
    00001E36 6432                   MOV.L       @R3,R4
      derivative   678            derivative();
    00001E38 D21E                   MOV.L       L1761+30,R2; _derivative
    00001E3A 420B                   JSR         @R2
    00001E3C 0009                   NOP
      derivative   679            push_integer(2);
    00001E3E D319                   MOV.L       L1761+14,R3; _push_integer
    00001E40 430B                   JSR         @R3
    00001E42 E402                   MOV         #2,R4
      derivative   680            push(caddr(p1));
    00001E44 64E2                   MOV.L       @R14,R4
    00001E46 8448                   MOV.B       @(8,R4),R0
    00001E48 2008                   TST         R0,R0
    00001E4A 8B02                   BF          L1661
    00001E4C 64E2                   MOV.L       @R14,R4
    00001E4E A004                   BRA         L1666
    00001E50 5441                   MOV.L       @(4,R4),R4
    00001E52              L1661:                            
    00001E52 9320                   MOV.W       L1761,R3   ; H'0570
    00001E54 D210                   MOV.L       L1761+2,R2 ; _symtab
    00001E56 6422                   MOV.L       @R2,R4
    00001E58 343C                   ADD         R3,R4
    00001E5A              L1666:                            
    00001E5A 8448                   MOV.B       @(8,R4),R0
    00001E5C 2008                   TST         R0,R0
    00001E5E 8B0C                   BF          L1660
    00001E60 64E2                   MOV.L       @R14,R4
    00001E62 8448                   MOV.B       @(8,R4),R0
    00001E64 2008                   TST         R0,R0
    00001E66 8B02                   BF          L1662
    00001E68 64E2                   MOV.L       @R14,R4
    00001E6A A004                   BRA         L1667
    00001E6C 5441                   MOV.L       @(4,R4),R4
    00001E6E              L1662:                            
    00001E6E 9312                   MOV.W       L1761,R3   ; H'0570
    00001E70 D209                   MOV.L       L1761+2,R2 ; _symtab
    00001E72 6422                   MOV.L       @R2,R4
    00001E74 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E76              L1667:                            
    00001E76 A004                   BRA         L1668
    00001E78 5441                   MOV.L       @(4,R4),R4
    00001E7A              L1660:                            
    00001E7A 930C                   MOV.W       L1761,R3   ; H'0570
    00001E7C D206                   MOV.L       L1761+2,R2 ; _symtab
    00001E7E 6422                   MOV.L       @R2,R4
    00001E80 343C                   ADD         R3,R4
    00001E82              L1668:                            
    00001E82 8448                   MOV.B       @(8,R4),R0
    00001E84 2008                   TST         R0,R0
    00001E86 8B31                   BF          L1659
    00001E88 64E2                   MOV.L       @R14,R4
    00001E8A 8448                   MOV.B       @(8,R4),R0
    00001E8C 2008                   TST         R0,R0
    00001E8E 8B13                   BF          L1664
    00001E90 64E2                   MOV.L       @R14,R4
    00001E92 A015                   BRA         L1669
    00001E94 5441                   MOV.L       @(4,R4),R4
    00001E96              L1761:                            
    00001E96 0570                   .DATA.W     H'0570
    00001E98 <00000000>             .DATA.L     _symtab
    00001E9C <00000000>             .DATA.L     _dirac
    00001EA0 <00000000>             .DATA.L     _multiply
    00001EA4 <00000000>             .DATA.L     _push_integer
    00001EA8 <00000000>             .DATA.L     _push
    00001EAC <00000000>             .DATA.L     _p1
    00001EB0 <00000000>             .DATA.L     _p2
    00001EB4 <00000000>             .DATA.L     _derivative
    00001EB8              L1664:                            
    00001EB8 935F                   MOV.W       L1762,R3   ; H'0570
    00001EBA D230                   MOV.L       L1762+2,R2 ; _symtab
    00001EBC 6422                   MOV.L       @R2,R4
    00001EBE 343C                   ADD         R3,R4
    00001EC0              L1669:                            
    00001EC0 8448                   MOV.B       @(8,R4),R0
    00001EC2 2008                   TST         R0,R0
    00001EC4 8B0C                   BF          L1663
    00001EC6 64E2                   MOV.L       @R14,R4
    00001EC8 8448                   MOV.B       @(8,R4),R0
    00001ECA 2008                   TST         R0,R0
    00001ECC 8B02                   BF          L1665
    00001ECE 64E2                   MOV.L       @R14,R4
    00001ED0 A004                   BRA         L1670
    00001ED2 5441                   MOV.L       @(4,R4),R4
    00001ED4              L1665:                            
    00001ED4 9351                   MOV.W       L1762,R3   ; H'0570
    00001ED6 D229                   MOV.L       L1762+2,R2 ; _symtab
    00001ED8 6422                   MOV.L       @R2,R4
    00001EDA 343C                   ADD         R3,R4
    00001EDC              L1670:                            
    00001EDC A004                   BRA         L1671
    00001EDE 5441                   MOV.L       @(4,R4),R4
    00001EE0              L1663:                            
    00001EE0 934B                   MOV.W       L1762,R3   ; H'0570
    00001EE2 D226                   MOV.L       L1762+2,R2 ; _symtab
    00001EE4 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001EE6 343C                   ADD         R3,R4
    00001EE8              L1671:                            
    00001EE8 A004                   BRA         L1672
    00001EEA 6442                   MOV.L       @R4,R4
    00001EEC              L1659:                            
    00001EEC 9345                   MOV.W       L1762,R3   ; H'0570
    00001EEE D223                   MOV.L       L1762+2,R2 ; _symtab
    00001EF0 6422                   MOV.L       @R2,R4
    00001EF2 343C                   ADD         R3,R4
    00001EF4              L1672:                            
    00001EF4 4D0B                   JSR         @R13
    00001EF6 0009                   NOP
      derivative   681            multiply();
    00001EF8 DC21                   MOV.L       L1762+6,R12; _multiply
    00001EFA 4C0B                   JSR         @R12
    00001EFC 0009                   NOP
      derivative   682            multiply();
    00001EFE 4C0B                   JSR         @R12
    00001F00 0009                   NOP
      derivative   683            push(cadr(p1));
    00001F02 64E2                   MOV.L       @R14,R4
    00001F04 8448                   MOV.B       @(8,R4),R0
    00001F06 2008                   TST         R0,R0
    00001F08 8B02                   BF          L1674
    00001F0A 64E2                   MOV.L       @R14,R4
    00001F0C A004                   BRA         L1676
    00001F0E 5441                   MOV.L       @(4,R4),R4
    00001F10              L1674:                            
    00001F10 9333                   MOV.W       L1762,R3   ; H'0570
    00001F12 D21A                   MOV.L       L1762+2,R2 ; _symtab
    00001F14 6422                   MOV.L       @R2,R4
    00001F16 343C                   ADD         R3,R4
    00001F18              L1676:                            
    00001F18 8448                   MOV.B       @(8,R4),R0
    00001F1A 2008                   TST         R0,R0
    00001F1C 8B0C                   BF          L1673
    00001F1E 64E2                   MOV.L       @R14,R4
    00001F20 8448                   MOV.B       @(8,R4),R0
    00001F22 2008                   TST         R0,R0
    00001F24 8B02                   BF          L1675
    00001F26 64E2                   MOV.L       @R14,R4
    00001F28 A004                   BRA         L1677
    00001F2A 5441                   MOV.L       @(4,R4),R4
    00001F2C              L1675:                            
    00001F2C 9325                   MOV.W       L1762,R3   ; H'0570
    00001F2E D213                   MOV.L       L1762+2,R2 ; _symtab
    00001F30 6422                   MOV.L       @R2,R4
    00001F32 343C                   ADD         R3,R4
    00001F34              L1677:                            
    00001F34 A004                   BRA         L1678
    00001F36 6442                   MOV.L       @R4,R4
    00001F38              L1673:                            
    00001F38 931F                   MOV.W       L1762,R3   ; H'0570
    00001F3A D210                   MOV.L       L1762+2,R2 ; _symtab
    00001F3C 6422                   MOV.L       @R2,R4
    00001F3E 343C                   ADD         R3,R4
    00001F40              L1678:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001F40 4D0B                   JSR         @R13
    00001F42 0009                   NOP
      derivative   684            push(caddr(p1));
    00001F44 64E2                   MOV.L       @R14,R4
    00001F46 8448                   MOV.B       @(8,R4),R0
    00001F48 2008                   TST         R0,R0
    00001F4A 8B02                   BF          L1681
    00001F4C 64E2                   MOV.L       @R14,R4
    00001F4E A004                   BRA         L1686
    00001F50 5441                   MOV.L       @(4,R4),R4
    00001F52              L1681:                            
    00001F52 9312                   MOV.W       L1762,R3   ; H'0570
    00001F54 D209                   MOV.L       L1762+2,R2 ; _symtab
    00001F56 6422                   MOV.L       @R2,R4
    00001F58 343C                   ADD         R3,R4
    00001F5A              L1686:                            
    00001F5A 8448                   MOV.B       @(8,R4),R0
    00001F5C 2008                   TST         R0,R0
    00001F5E 8B11                   BF          L1680
    00001F60 64E2                   MOV.L       @R14,R4
    00001F62 8448                   MOV.B       @(8,R4),R0
    00001F64 2008                   TST         R0,R0
    00001F66 8B02                   BF          L1682
    00001F68 64E2                   MOV.L       @R14,R4
    00001F6A A004                   BRA         L1687
    00001F6C 5441                   MOV.L       @(4,R4),R4
    00001F6E              L1682:                            
    00001F6E 9304                   MOV.W       L1762,R3   ; H'0570
    00001F70 D202                   MOV.L       L1762+2,R2 ; _symtab
    00001F72 6422                   MOV.L       @R2,R4
    00001F74 343C                   ADD         R3,R4
    00001F76              L1687:                            
    00001F76 A009                   BRA         L1688
    00001F78 5441                   MOV.L       @(4,R4),R4
    00001F7A              L1762:                            
    00001F7A 0570                   .DATA.W     H'0570
    00001F7C <00000000>             .DATA.L     _symtab
    00001F80 <00000000>             .DATA.L     _multiply
    00001F84              L1680:                            
    00001F84 935E                   MOV.W       L1763,R3   ; H'0570
    00001F86 D230                   MOV.L       L1763+4,R2 ; _symtab
    00001F88 6422                   MOV.L       @R2,R4
    00001F8A 343C                   ADD         R3,R4
    00001F8C              L1688:                            
    00001F8C 8448                   MOV.B       @(8,R4),R0
    00001F8E 2008                   TST         R0,R0
    00001F90 8B20                   BF          L1679
    00001F92 64E2                   MOV.L       @R14,R4
    00001F94 8448                   MOV.B       @(8,R4),R0
    00001F96 2008                   TST         R0,R0
    00001F98 8B02                   BF          L1684
    00001F9A 64E2                   MOV.L       @R14,R4
    00001F9C A004                   BRA         L1689
    00001F9E 5441                   MOV.L       @(4,R4),R4
    00001FA0              L1684:                            
    00001FA0 9350                   MOV.W       L1763,R3   ; H'0570
    00001FA2 D229                   MOV.L       L1763+4,R2 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001FA4 6422                   MOV.L       @R2,R4
    00001FA6 343C                   ADD         R3,R4
    00001FA8              L1689:                            
    00001FA8 8448                   MOV.B       @(8,R4),R0
    00001FAA 2008                   TST         R0,R0
    00001FAC 8B0C                   BF          L1683
    00001FAE 64E2                   MOV.L       @R14,R4
    00001FB0 8448                   MOV.B       @(8,R4),R0
    00001FB2 2008                   TST         R0,R0
    00001FB4 8B02                   BF          L1685
    00001FB6 64E2                   MOV.L       @R14,R4
    00001FB8 A004                   BRA         L1690
    00001FBA 5441                   MOV.L       @(4,R4),R4
    00001FBC              L1685:                            
    00001FBC 9342                   MOV.W       L1763,R3   ; H'0570
    00001FBE D222                   MOV.L       L1763+4,R2 ; _symtab
    00001FC0 6422                   MOV.L       @R2,R4
    00001FC2 343C                   ADD         R3,R4
    00001FC4              L1690:                            
    00001FC4 A004                   BRA         L1691
    00001FC6 5441                   MOV.L       @(4,R4),R4
    00001FC8              L1683:                            
    00001FC8 933C                   MOV.W       L1763,R3   ; H'0570
    00001FCA D21F                   MOV.L       L1763+4,R2 ; _symtab
    00001FCC 6422                   MOV.L       @R2,R4
    00001FCE 343C                   ADD         R3,R4
    00001FD0              L1691:                            
    00001FD0 A004                   BRA         L1692
    00001FD2 6442                   MOV.L       @R4,R4
    00001FD4              L1679:                            
    00001FD4 9336                   MOV.W       L1763,R3   ; H'0570
    00001FD6 D21C                   MOV.L       L1763+4,R2 ; _symtab
    00001FD8 6422                   MOV.L       @R2,R4
    00001FDA 343C                   ADD         R3,R4
    00001FDC              L1692:                            
    00001FDC 4D0B                   JSR         @R13
    00001FDE 0009                   NOP
      derivative   685            push_integer(-1);
    00001FE0 D31A                   MOV.L       L1763+8,R3 ; _push_integer
    00001FE2 430B                   JSR         @R3
    00001FE4 E4FF                   MOV         #-1,R4
      derivative   686            add();
    00001FE6 D21A                   MOV.L       L1763+12,R2; _add
    00001FE8 420B                   JSR         @R2
    00001FEA 0009                   NOP
      derivative   687            hermite();
    00001FEC D319                   MOV.L       L1763+16,R3; _hermite
    00001FEE 430B                   JSR         @R3
    00001FF0 0009                   NOP
      derivative   688            multiply();
    00001FF2 4C0B                   JSR         @R12
    00001FF4 0009                   NOP
      derivative   689    }
    00001FF6 4F26                   LDS.L       @R15+,PR
    00001FF8 6CF6                   MOV.L       @R15+,R12
    00001FFA 6DF6                   MOV.L       @R15+,R13
    00001FFC 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001FFE 6EF6                   MOV.L       @R15+,R14
      derivative   690    
      derivative   691    void
      derivative   692    derf(void)
    00002000              _derf:                           ; function: derf
                                                           ; frame size=20
    00002000 2FE6                   MOV.L       R14,@-R15
    00002002 2FD6                   MOV.L       R13,@-R15
    00002004 2FC6                   MOV.L       R12,@-R15
    00002006 2FB6                   MOV.L       R11,@-R15
    00002008 4F22                   STS.L       PR,@-R15
      derivative   693    {
      derivative   694            push(cadr(p1));
    0000200A DC13                   MOV.L       L1763+20,R12; _push
    0000200C DE13                   MOV.L       L1763+24,R14; _p1
    0000200E 64E2                   MOV.L       @R14,R4
    00002010 8448                   MOV.B       @(8,R4),R0
    00002012 2008                   TST         R0,R0
    00002014 8B02                   BF          L1694
    00002016 64E2                   MOV.L       @R14,R4
    00002018 A004                   BRA         L1696
    0000201A 5441                   MOV.L       @(4,R4),R4
    0000201C              L1694:                            
    0000201C 9312                   MOV.W       L1763,R3   ; H'0570
    0000201E D20A                   MOV.L       L1763+4,R2 ; _symtab
    00002020 6422                   MOV.L       @R2,R4
    00002022 343C                   ADD         R3,R4
    00002024              L1696:                            
    00002024 8448                   MOV.B       @(8,R4),R0
    00002026 2008                   TST         R0,R0
    00002028 8B1A                   BF          L1693
    0000202A 64E2                   MOV.L       @R14,R4
    0000202C 8448                   MOV.B       @(8,R4),R0
    0000202E 2008                   TST         R0,R0
    00002030 8B02                   BF          L1695
    00002032 64E2                   MOV.L       @R14,R4
    00002034 A004                   BRA         L1697
    00002036 5441                   MOV.L       @(4,R4),R4
    00002038              L1695:                            
    00002038 9304                   MOV.W       L1763,R3   ; H'0570
    0000203A D203                   MOV.L       L1763+4,R2 ; _symtab
    0000203C 6422                   MOV.L       @R2,R4
    0000203E 343C                   ADD         R3,R4
    00002040              L1697:                            
    00002040 A012                   BRA         L1698
    00002042 6442                   MOV.L       @R4,R4
    00002044              L1763:                            
    00002044 0570                   .DATA.W     H'0570
    00002046 0000                   .DATA.W     0
    00002048 <00000000>             .DATA.L     _symtab
    0000204C <00000000>             .DATA.L     _push_integer
    00002050 <00000000>             .DATA.L     _add
    00002054 <00000000>             .DATA.L     _hermite
    00002058 <00000000>             .DATA.L     _push
    0000205C <00000000>             .DATA.L     _p1
    00002060              L1693:                            
    00002060 9373                   MOV.W       L1764,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002062 D23A                   MOV.L       L1764+2,R2 ; _symtab
    00002064 6422                   MOV.L       @R2,R4
    00002066 343C                   ADD         R3,R4
    00002068              L1698:                            
    00002068 4C0B                   JSR         @R12
    0000206A 0009                   NOP
      derivative   695            push_integer(2);
    0000206C DB38                   MOV.L       L1764+6,R11; _push_integer
    0000206E 4B0B                   JSR         @R11
    00002070 E402                   MOV         #2,R4
      derivative   696            power();
    00002072 D338                   MOV.L       L1764+10,R3; _power
    00002074 430B                   JSR         @R3
    00002076 0009                   NOP
      derivative   697            push_integer(-1);
    00002078 4B0B                   JSR         @R11
    0000207A E4FF                   MOV         #-1,R4
      derivative   698            multiply();
    0000207C DD36                   MOV.L       L1764+14,R13; _multiply
    0000207E 4D0B                   JSR         @R13
    00002080 0009                   NOP
      derivative   699            exponential();
    00002082 D236                   MOV.L       L1764+18,R2; _exponential
    00002084 420B                   JSR         @R2
    00002086 0009                   NOP
      derivative   700            push_symbol(PI);
    00002088 D335                   MOV.L       L1764+22,R3; _push_symbol
    0000208A 430B                   JSR         @R3
    0000208C E47F                   MOV         #127,R4
      derivative   701            push_rational(-1,2);
    0000208E E502                   MOV         #2,R5
    00002090 D234                   MOV.L       L1764+26,R2; _push_rational
    00002092 420B                   JSR         @R2
    00002094 E4FF                   MOV         #-1,R4
      derivative   702            power();
    00002096 D32F                   MOV.L       L1764+10,R3; _power
    00002098 430B                   JSR         @R3
    0000209A 0009                   NOP
      derivative   703            multiply();
    0000209C 4D0B                   JSR         @R13
    0000209E 0009                   NOP
      derivative   704            push_integer(2);
    000020A0 4B0B                   JSR         @R11
    000020A2 E402                   MOV         #2,R4
      derivative   705            multiply();
    000020A4 4D0B                   JSR         @R13
    000020A6 0009                   NOP
      derivative   706            push(cadr(p1));
    000020A8 64E2                   MOV.L       @R14,R4
    000020AA 8448                   MOV.B       @(8,R4),R0
    000020AC 2008                   TST         R0,R0
    000020AE 8B02                   BF          L1700
    000020B0 64E2                   MOV.L       @R14,R4
    000020B2 A004                   BRA         L1702
    000020B4 5441                   MOV.L       @(4,R4),R4
    000020B6              L1700:                            
    000020B6 9348                   MOV.W       L1764,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000020B8 D224                   MOV.L       L1764+2,R2 ; _symtab
    000020BA 6422                   MOV.L       @R2,R4
    000020BC 343C                   ADD         R3,R4
    000020BE              L1702:                            
    000020BE 8448                   MOV.B       @(8,R4),R0
    000020C0 2008                   TST         R0,R0
    000020C2 8B0C                   BF          L1699
    000020C4 64E2                   MOV.L       @R14,R4
    000020C6 8448                   MOV.B       @(8,R4),R0
    000020C8 2008                   TST         R0,R0
    000020CA 8B02                   BF          L1701
    000020CC 64E2                   MOV.L       @R14,R4
    000020CE A004                   BRA         L1703
    000020D0 5441                   MOV.L       @(4,R4),R4
    000020D2              L1701:                            
    000020D2 933A                   MOV.W       L1764,R3   ; H'0570
    000020D4 D21D                   MOV.L       L1764+2,R2 ; _symtab
    000020D6 6422                   MOV.L       @R2,R4
    000020D8 343C                   ADD         R3,R4
    000020DA              L1703:                            
    000020DA A004                   BRA         L1704
    000020DC 6442                   MOV.L       @R4,R4
    000020DE              L1699:                            
    000020DE 9334                   MOV.W       L1764,R3   ; H'0570
    000020E0 D21A                   MOV.L       L1764+2,R2 ; _symtab
    000020E2 6422                   MOV.L       @R2,R4
    000020E4 343C                   ADD         R3,R4
    000020E6              L1704:                            
    000020E6 4C0B                   JSR         @R12
    000020E8 0009                   NOP
      derivative   707            push(p2);
    000020EA D31F                   MOV.L       L1764+30,R3; _p2
    000020EC 4C0B                   JSR         @R12
    000020EE 6432                   MOV.L       @R3,R4
      derivative   708            derivative();
    000020F0 D21E                   MOV.L       L1764+34,R2; _derivative
    000020F2 420B                   JSR         @R2
    000020F4 0009                   NOP
      derivative   709            multiply();
    000020F6 4D0B                   JSR         @R13
    000020F8 0009                   NOP
      derivative   710    
      derivative   711    }
    000020FA 4F26                   LDS.L       @R15+,PR
    000020FC 6BF6                   MOV.L       @R15+,R11
    000020FE 6CF6                   MOV.L       @R15+,R12
    00002100 6DF6                   MOV.L       @R15+,R13
    00002102 000B                   RTS
    00002104 6EF6                   MOV.L       @R15+,R14
      derivative   712    
      derivative   713    void
      derivative   714    derfc(void)
    00002106              _derfc:                          ; function: derfc
                                                           ; frame size=20
    00002106 2FE6                   MOV.L       R14,@-R15
    00002108 2FD6                   MOV.L       R13,@-R15
    0000210A 2FC6                   MOV.L       R12,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000210C 2FB6                   MOV.L       R11,@-R15
    0000210E 4F22                   STS.L       PR,@-R15
      derivative   715    {
      derivative   716            push(cadr(p1));
    00002110 DC17                   MOV.L       L1764+38,R12; _push
    00002112 DE18                   MOV.L       L1764+42,R14; _p1
    00002114 64E2                   MOV.L       @R14,R4
    00002116 8448                   MOV.B       @(8,R4),R0
    00002118 2008                   TST         R0,R0
    0000211A 8B02                   BF          L1706
    0000211C 64E2                   MOV.L       @R14,R4
    0000211E A004                   BRA         L1708
    00002120 5441                   MOV.L       @(4,R4),R4
    00002122              L1706:                            
    00002122 9312                   MOV.W       L1764,R3   ; H'0570
    00002124 D209                   MOV.L       L1764+2,R2 ; _symtab
    00002126 6422                   MOV.L       @R2,R4
    00002128 343C                   ADD         R3,R4
    0000212A              L1708:                            
    0000212A 8448                   MOV.B       @(8,R4),R0
    0000212C 2008                   TST         R0,R0
    0000212E 8B23                   BF          L1705
    00002130 64E2                   MOV.L       @R14,R4
    00002132 8448                   MOV.B       @(8,R4),R0
    00002134 2008                   TST         R0,R0
    00002136 8B02                   BF          L1707
    00002138 64E2                   MOV.L       @R14,R4
    0000213A A004                   BRA         L1709
    0000213C 5441                   MOV.L       @(4,R4),R4
    0000213E              L1707:                            
    0000213E 9304                   MOV.W       L1764,R3   ; H'0570
    00002140 D202                   MOV.L       L1764+2,R2 ; _symtab
    00002142 6422                   MOV.L       @R2,R4
    00002144 343C                   ADD         R3,R4
    00002146              L1709:                            
    00002146 A01B                   BRA         L1710
    00002148 6442                   MOV.L       @R4,R4
    0000214A              L1764:                            
    0000214A 0570                   .DATA.W     H'0570
    0000214C <00000000>             .DATA.L     _symtab
    00002150 <00000000>             .DATA.L     _push_integer
    00002154 <00000000>             .DATA.L     _power
    00002158 <00000000>             .DATA.L     _multiply
    0000215C <00000000>             .DATA.L     _exponential
    00002160 <00000000>             .DATA.L     _push_symbol
    00002164 <00000000>             .DATA.L     _push_rational
    00002168 <00000000>             .DATA.L     _p2
    0000216C <00000000>             .DATA.L     _derivative
    00002170 <00000000>             .DATA.L     _push
    00002174 <00000000>             .DATA.L     _p1
    00002178              L1705:                            
    00002178 9375                   MOV.W       L1765,R3   ; H'0570
    0000217A D23B                   MOV.L       L1765+2,R2 ; _symtab
    0000217C 6422                   MOV.L       @R2,R4
    0000217E 343C                   ADD         R3,R4
    00002180              L1710:                            
    00002180 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002182 0009                   NOP
      derivative   717            push_integer(2);
    00002184 DB39                   MOV.L       L1765+6,R11; _push_integer
    00002186 4B0B                   JSR         @R11
    00002188 E402                   MOV         #2,R4
      derivative   718            power();
    0000218A D339                   MOV.L       L1765+10,R3; _power
    0000218C 430B                   JSR         @R3
    0000218E 0009                   NOP
      derivative   719            push_integer(-1);
    00002190 4B0B                   JSR         @R11
    00002192 E4FF                   MOV         #-1,R4
      derivative   720            multiply();
    00002194 DD37                   MOV.L       L1765+14,R13; _multiply
    00002196 4D0B                   JSR         @R13
    00002198 0009                   NOP
      derivative   721            exponential();
    0000219A D237                   MOV.L       L1765+18,R2; _exponential
    0000219C 420B                   JSR         @R2
    0000219E 0009                   NOP
      derivative   722            push_symbol(PI);
    000021A0 D336                   MOV.L       L1765+22,R3; _push_symbol
    000021A2 430B                   JSR         @R3
    000021A4 E47F                   MOV         #127,R4
      derivative   723            push_rational(-1,2);
    000021A6 E502                   MOV         #2,R5
    000021A8 D235                   MOV.L       L1765+26,R2; _push_rational
    000021AA 420B                   JSR         @R2
    000021AC E4FF                   MOV         #-1,R4
      derivative   724            power();
    000021AE D330                   MOV.L       L1765+10,R3; _power
    000021B0 430B                   JSR         @R3
    000021B2 0009                   NOP
      derivative   725            multiply();
    000021B4 4D0B                   JSR         @R13
    000021B6 0009                   NOP
      derivative   726            push_integer(-2);
    000021B8 4B0B                   JSR         @R11
    000021BA E4FE                   MOV         #-2,R4
      derivative   727            multiply();
    000021BC 4D0B                   JSR         @R13
    000021BE 0009                   NOP
      derivative   728            push(cadr(p1));
    000021C0 64E2                   MOV.L       @R14,R4
    000021C2 8448                   MOV.B       @(8,R4),R0
    000021C4 2008                   TST         R0,R0
    000021C6 8B02                   BF          L1712
    000021C8 64E2                   MOV.L       @R14,R4
    000021CA A004                   BRA         L1714
    000021CC 5441                   MOV.L       @(4,R4),R4
    000021CE              L1712:                            
    000021CE 934A                   MOV.W       L1765,R3   ; H'0570
    000021D0 D225                   MOV.L       L1765+2,R2 ; _symtab
    000021D2 6422                   MOV.L       @R2,R4
    000021D4 343C                   ADD         R3,R4
    000021D6              L1714:                            
    000021D6 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000021D8 2008                   TST         R0,R0
    000021DA 8B0C                   BF          L1711
    000021DC 64E2                   MOV.L       @R14,R4
    000021DE 8448                   MOV.B       @(8,R4),R0
    000021E0 2008                   TST         R0,R0
    000021E2 8B02                   BF          L1713
    000021E4 64E2                   MOV.L       @R14,R4
    000021E6 A004                   BRA         L1715
    000021E8 5441                   MOV.L       @(4,R4),R4
    000021EA              L1713:                            
    000021EA 933C                   MOV.W       L1765,R3   ; H'0570
    000021EC D21E                   MOV.L       L1765+2,R2 ; _symtab
    000021EE 6422                   MOV.L       @R2,R4
    000021F0 343C                   ADD         R3,R4
    000021F2              L1715:                            
    000021F2 A004                   BRA         L1716
    000021F4 6442                   MOV.L       @R4,R4
    000021F6              L1711:                            
    000021F6 9336                   MOV.W       L1765,R3   ; H'0570
    000021F8 D21B                   MOV.L       L1765+2,R2 ; _symtab
    000021FA 6422                   MOV.L       @R2,R4
    000021FC 343C                   ADD         R3,R4
    000021FE              L1716:                            
    000021FE 4C0B                   JSR         @R12
    00002200 0009                   NOP
      derivative   729            push(p2);
    00002202 D320                   MOV.L       L1765+30,R3; _p2
    00002204 4C0B                   JSR         @R12
    00002206 6432                   MOV.L       @R3,R4
      derivative   730            derivative();
    00002208 D21F                   MOV.L       L1765+34,R2; _derivative
    0000220A 420B                   JSR         @R2
    0000220C 0009                   NOP
      derivative   731            multiply();
    0000220E 4D0B                   JSR         @R13
    00002210 0009                   NOP
      derivative   732    
      derivative   733    }
    00002212 4F26                   LDS.L       @R15+,PR
    00002214 6BF6                   MOV.L       @R15+,R11
    00002216 6CF6                   MOV.L       @R15+,R12
    00002218 6DF6                   MOV.L       @R15+,R13
    0000221A 000B                   RTS
    0000221C 6EF6                   MOV.L       @R15+,R14
      derivative   734    /*
      derivative   735    void
      derivative   736    dbesselj0(void)
      derivative   737    {
      derivative   738            push(cadr(p1));
      derivative   739            push(p2);
      derivative   740            derivative();
      derivative   741            push(cadr(p1));
      derivative   742            push_integer(1);
      derivative   743            besselj();
      derivative   744            multiply();
      derivative   745            push_integer(-1);
      derivative   746            multiply();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   747    }
      derivative   748    
      derivative   749    void
      derivative   750    dbesseljn(void)
      derivative   751    {
      derivative   752            push(cadr(p1));
      derivative   753            push(p2);
      derivative   754            derivative();
      derivative   755            push(cadr(p1));
      derivative   756            push(caddr(p1));
      derivative   757            push_integer(-1);
      derivative   758            add();
      derivative   759            besselj();
      derivative   760            push(caddr(p1));
      derivative   761            push_integer(-1);
      derivative   762            multiply();
      derivative   763            push(cadr(p1));
      derivative   764            divide();
      derivative   765            push(cadr(p1));
      derivative   766            push(caddr(p1));
      derivative   767            besselj();
      derivative   768            multiply();
      derivative   769            add();
      derivative   770            multiply();
      derivative   771    }
      derivative   772    
      derivative   773    
      derivative   774    void
      derivative   775    dbessely0(void)
      derivative   776    {
      derivative   777            push(cadr(p1));
      derivative   778            push(p2);
      derivative   779            derivative();
      derivative   780            push(cadr(p1));
      derivative   781            push_integer(1);
      derivative   782            besselj();
      derivative   783            multiply();
      derivative   784            push_integer(-1);
      derivative   785            multiply();
      derivative   786    }
      derivative   787    
      derivative   788    
      derivative   789    void
      derivative   790    dbesselyn(void)
      derivative   791    {
      derivative   792            push(cadr(p1));
      derivative   793            push(p2);
      derivative   794            derivative();
      derivative   795            push(cadr(p1));
      derivative   796            push(caddr(p1));
      derivative   797            push_integer(-1);
      derivative   798            add();
      derivative   799            bessely();
      derivative   800            push(caddr(p1));
      derivative   801            push_integer(-1);
      derivative   802            multiply();
      derivative   803            push(cadr(p1));




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      derivative   804            divide();
      derivative   805            push(cadr(p1));
      derivative   806            push(caddr(p1));
      derivative   807            bessely();
      derivative   808            multiply();
      derivative   809            add();
      derivative   810            multiply();
      derivative   811    }
      derivative   812    */
      derivative   813    void
      derivative   814    derivative_of_integral(void)
    0000221E              _derivative_of_integral:         ; function: derivative_of_integral
                                                           ; frame size=4
    0000221E 2FE6                   MOV.L       R14,@-R15
      derivative   815    {
      derivative   816            push(cadr(p1));
    00002220 DE1A                   MOV.L       L1765+38,R14; _p1
    00002222 64E2                   MOV.L       @R14,R4
    00002224 8448                   MOV.B       @(8,R4),R0
    00002226 2008                   TST         R0,R0
    00002228 8B02                   BF          L1718
    0000222A 64E2                   MOV.L       @R14,R4
    0000222C A004                   BRA         L1720
    0000222E 5441                   MOV.L       @(4,R4),R4
    00002230              L1718:                            
    00002230 9319                   MOV.W       L1765,R3   ; H'0570
    00002232 D20D                   MOV.L       L1765+2,R2 ; _symtab
    00002234 6422                   MOV.L       @R2,R4
    00002236 343C                   ADD         R3,R4
    00002238              L1720:                            
    00002238 8448                   MOV.B       @(8,R4),R0
    0000223A 2008                   TST         R0,R0
    0000223C 8B0C                   BF          L1717
    0000223E 64E2                   MOV.L       @R14,R4
    00002240 8448                   MOV.B       @(8,R4),R0
    00002242 2008                   TST         R0,R0
    00002244 8B02                   BF          L1719
    00002246 64E2                   MOV.L       @R14,R4
    00002248 A004                   BRA         L1721
    0000224A 5441                   MOV.L       @(4,R4),R4
    0000224C              L1719:                            
    0000224C 930B                   MOV.W       L1765,R3   ; H'0570
    0000224E D206                   MOV.L       L1765+2,R2 ; _symtab
    00002250 6422                   MOV.L       @R2,R4
    00002252 343C                   ADD         R3,R4
    00002254              L1721:                            
    00002254 A004                   BRA         L1722
    00002256 6442                   MOV.L       @R4,R4
    00002258              L1717:                            
    00002258 9305                   MOV.W       L1765,R3   ; H'0570
    0000225A D203                   MOV.L       L1765+2,R2 ; _symtab
    0000225C 6422                   MOV.L       @R2,R4
    0000225E 343C                   ADD         R3,R4
    00002260              L1722:                            
    00002260 D30B                   MOV.L       L1765+42,R3; _push
    00002262 432B                   JMP         @R3
    00002264 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002266              L1765:                            
    00002266 0570                   .DATA.W     H'0570
    00002268 <00000000>             .DATA.L     _symtab
    0000226C <00000000>             .DATA.L     _push_integer
    00002270 <00000000>             .DATA.L     _power
    00002274 <00000000>             .DATA.L     _multiply
    00002278 <00000000>             .DATA.L     _exponential
    0000227C <00000000>             .DATA.L     _push_symbol
    00002280 <00000000>             .DATA.L     _push_rational
    00002284 <00000000>             .DATA.L     _p2
    00002288 <00000000>             .DATA.L     _derivative
    0000228C <00000000>             .DATA.L     _p1
    00002290 <00000000>             .DATA.L     _push
      derivative   817    }
      derivative   818    
C   00000000              L1066:
    00000000 6E74682064             .SDATA      "nth derivative: check n"
             6572697661   
             746976653A   
             2063686563   
             6B206E       
    00000017 00                     .DATA.B     H'00
    00000018              L1075:
    00000018 756E646566             .SDATA      "undefined function"
             696E656420   
             66756E6374   
             696F6E       
    0000002A 00                     .DATA.B     H'00

































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:53  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      818



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00002294 Byte(s)
CONSTANT SECTION (C):                               0000002B Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000022BF Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           49
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          28
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           681






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk4F1D.tmp 

