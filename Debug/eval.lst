SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\eval.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          eval.c     1    // Evaluate an expression, for example...
          eval.c     2    //
          eval.c     3    //      push(p1)
          eval.c     4    //      eval()
          eval.c     5    //      p2 = pop()
          eval.c     6    
          eval.c     7    #include "stdafx.h"
          eval.c     8    #include "defs.h"
          eval.c     9    
          eval.c    10    void
          eval.c    11    eval(void)
P   00000000              _eval:                           ; function: eval
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
          eval.c    12    {
          eval.c    13            check_esc_flag();
    00000004 D334                   MOV.L       L1754+4,R3 ; _check_esc_flag
    00000006 430B                   JSR         @R3
    00000008 0009                   NOP
          eval.c    14            save();
    0000000A D234                   MOV.L       L1754+8,R2 ; _save
    0000000C 420B                   JSR         @R2
    0000000E 0009                   NOP
          eval.c    15            p1 = pop();
    00000010 D333                   MOV.L       L1754+12,R3; _pop
    00000012 430B                   JSR         @R3
    00000014 0009                   NOP
    00000016 6403                   MOV         R0,R4
    00000018 D232                   MOV.L       L1754+16,R2; _p1
    0000001A 2202                   MOV.L       R0,@R2
    0000001C DE32                   MOV.L       L1754+20,R14; _push
    0000001E 8448                   MOV.B       @(8,R4),R0
    00000020 600C                   EXTU.B      R0,R0
    00000022 8800                   CMP/EQ      #0,R0
    00000024 890B                   BT          L1128
    00000026 8801                   CMP/EQ      #1,R0
    00000028 890D                   BT          L1748
    0000002A 8802                   CMP/EQ      #2,R0
    0000002C 890B                   BT          L1748
    0000002E 8803                   CMP/EQ      #3,R0
    00000030 8909                   BT          L1131
    00000032 8804                   CMP/EQ      #4,R0
    00000034 890B                   BT          L1132
    00000036 8805                   CMP/EQ      #5,R0
    00000038 890E                   BT          L1133
    0000003A A011                   BRA         L1134
    0000003C 0009                   NOP
    0000003E              L1128:                           ; case label 
          eval.c    16            switch (p1->k) {
          eval.c    17            case CONS:
          eval.c    18                    eval_cons();
    0000003E B067                   BSR         _eval_cons
    00000040 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          eval.c    19                    break;
    00000042 A011                   BRA         L1262
    00000044 0009                   NOP
    00000046              L1131:                           ; case label 
          eval.c    20            case NUM:
          eval.c    21                    push(p1);
          eval.c    22                    break;
          eval.c    23            case DOUBLE:
          eval.c    24                    push(p1);
          eval.c    25                    break;
          eval.c    26            case STR:
          eval.c    27                    push(p1);
          eval.c    28                    break;
    00000046              L1748:                            
    00000046 4E0B                   JSR         @R14
    00000048 0009                   NOP
    0000004A A00D                   BRA         L1262
    0000004C 0009                   NOP
    0000004E              L1132:                           ; case label 
          eval.c    29            case TENSOR:
          eval.c    30                    eval_tensor();
    0000004E D127                   MOV.L       L1754+24,R1; _eval_tensor
    00000050 410B                   JSR         @R1
    00000052 0009                   NOP
          eval.c    31                    break;
    00000054 A008                   BRA         L1262
    00000056 0009                   NOP
    00000058              L1133:                           ; case label 
          eval.c    32            case SYM:
          eval.c    33                    eval_sym();
    00000058 B00A                   BSR         _eval_sym
    0000005A 0009                   NOP
          eval.c    34                    break;
    0000005C A004                   BRA         L1262
    0000005E 0009                   NOP
    00000060              L1134:                           ; default label 
          eval.c    35            default:
          eval.c    36                    stop("atom?");
    00000060 D423                   MOV.L       L1754+28,R4; L1060
    00000062 D124                   MOV.L       L1754+32,R1; _stop
    00000064 410B                   JSR         @R1
    00000066 0009                   NOP
          eval.c    37                    break;
    00000068              L1262:                            
          eval.c    38            }
          eval.c    39            restore();
    00000068 4F26                   LDS.L       @R15+,PR
    0000006A D223                   MOV.L       L1754+36,R2; _restore
    0000006C 422B                   JMP         @R2
    0000006E 6EF6                   MOV.L       @R15+,R14
          eval.c    40    }
          eval.c    41    
          eval.c    42    void
          eval.c    43    eval_sym(void)
    00000070              _eval_sym:                       ; function: eval_sym
                                                           ; frame size=16
    00000070 2FE6                   MOV.L       R14,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000072 2FD6                   MOV.L       R13,@-R15
    00000074 2FC6                   MOV.L       R12,@-R15
    00000076 4F22                   STS.L       PR,@-R15
          eval.c    44    {
          eval.c    45            // bare keyword?
          eval.c    46    
          eval.c    47            if (iskeyword(p1)) {
    00000078 DD1B                   MOV.L       L1754+20,R13; _push
    0000007A DE1A                   MOV.L       L1754+16,R14; _p1
    0000007C 60E2                   MOV.L       @R14,R0
    0000007E 8408                   MOV.B       @(8,R0),R0
    00000080 600C                   EXTU.B      R0,R0
    00000082 8805                   CMP/EQ      #5,R0
    00000084 8B11                   BF          L1263
    00000086 D21D                   MOV.L       L1754+40,R2; _symnum
    00000088 420B                   JSR         @R2
    0000008A 64E2                   MOV.L       @R14,R4
    0000008C E374                   MOV         #116,R3
    0000008E 3033                   CMP/GE      R3,R0
    00000090 890B                   BT          L1263
          eval.c    48                    push(p1);
    00000092 4D0B                   JSR         @R13
    00000094 64E2                   MOV.L       @R14,R4
          eval.c    49                    push(symbol(LAST));
    00000096 931D                   MOV.W       L1754,R3   ; H'0594
    00000098 D219                   MOV.L       L1754+44,R2; _symtab
    0000009A 6422                   MOV.L       @R2,R4
    0000009C 4D0B                   JSR         @R13
    0000009E 343C                   ADD         R3,R4
          eval.c    50                    list(2);
    000000A0 D318                   MOV.L       L1754+48,R3; _list
    000000A2 430B                   JSR         @R3
    000000A4 E402                   MOV         #2,R4
    000000A6 A00B                   BRA         L1124
    000000A8 0009                   NOP
    000000AA              L1263:                            
          eval.c    51                    eval();
          eval.c    52                    return;
          eval.c    53            }
          eval.c    54    
          eval.c    55            // evaluate symbol's binding
          eval.c    56    
          eval.c    57            p2 = get_binding(p1);
    000000AA DC17                   MOV.L       L1754+52,R12; _p2
    000000AC D317                   MOV.L       L1754+56,R3; _get_binding
    000000AE 430B                   JSR         @R3
    000000B0 64E2                   MOV.L       @R14,R4
    000000B2 2C02                   MOV.L       R0,@R12
          eval.c    58            push(p2);
    000000B4 4D0B                   JSR         @R13
    000000B6 6403                   MOV         R0,R4
          eval.c    59            if (p1 != p2)
    000000B8 62C2                   MOV.L       @R12,R2
    000000BA 63E2                   MOV.L       @R14,R3
    000000BC 3320                   CMP/EQ      R2,R3
    000000BE 8904                   BT          L1265
    000000C0              L1124:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          eval.c    60                    eval();
    000000C0 4F26                   LDS.L       @R15+,PR
    000000C2 6CF6                   MOV.L       @R15+,R12
    000000C4 6DF6                   MOV.L       @R15+,R13
    000000C6 AF9B                   BRA         _eval
    000000C8 6EF6                   MOV.L       @R15+,R14
    000000CA              L1265:                            
          eval.c    61    }
    000000CA 4F26                   LDS.L       @R15+,PR
    000000CC 6CF6                   MOV.L       @R15+,R12
    000000CE 6DF6                   MOV.L       @R15+,R13
    000000D0 000B                   RTS
    000000D2 6EF6                   MOV.L       @R15+,R14
    000000D4              L1754:                            
    000000D4 0594                   .DATA.W     H'0594
    000000D6 0000                   .DATA.W     0
    000000D8 <00000000>             .DATA.L     _check_esc_flag
    000000DC <00000000>             .DATA.L     _save
    000000E0 <00000000>             .DATA.L     _pop
    000000E4 <00000000>             .DATA.L     _p1
    000000E8 <00000000>             .DATA.L     _push
    000000EC <00000000>             .DATA.L     _eval_tensor
    000000F0 <00000000>             .DATA.L     L1060
    000000F4 <00000000>             .DATA.L     _stop
    000000F8 <00000000>             .DATA.L     _restore
    000000FC <00000000>             .DATA.L     _symnum
    00000100 <00000000>             .DATA.L     _symtab
    00000104 <00000000>             .DATA.L     _list
    00000108 <00000000>             .DATA.L     _p2
    0000010C <00000000>             .DATA.L     _get_binding
          eval.c    62    
          eval.c    63    void
          eval.c    64    eval_cons(void)
    00000110              _eval_cons:                      ; function: eval_cons
                                                           ; frame size=8
    00000110 2FE6                   MOV.L       R14,@-R15
    00000112 4F22                   STS.L       PR,@-R15
    00000114 DE0D                   MOV.L       L1755+4,R14; _p1
    00000116 64E2                   MOV.L       @R14,R4
    00000118 8448                   MOV.B       @(8,R4),R0
    0000011A 2008                   TST         R0,R0
    0000011C 8B01                   BF          L1267
    0000011E A004                   BRA         L1268
    00000120 6042                   MOV.L       @R4,R0
    00000122              L1267:                            
    00000122 9311                   MOV.W       L1755,R3   ; H'0570
    00000124 D20A                   MOV.L       L1755+8,R2 ; _symtab
    00000126 6022                   MOV.L       @R2,R0
    00000128 303C                   ADD         R3,R0
    0000012A              L1268:                            
    0000012A 8408                   MOV.B       @(8,R0),R0
    0000012C 600C                   EXTU.B      R0,R0
    0000012E 8805                   CMP/EQ      #5,R0
    00000130 8903                   BT          L1266
          eval.c    65    {
          eval.c    66            if (!issymbol(car(p1)))
          eval.c    67                    stop("cons?");




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000132 D408                   MOV.L       L1755+12,R4; L1064
    00000134 D208                   MOV.L       L1755+16,R2; _stop
    00000136 420B                   JSR         @R2
    00000138 0009                   NOP
    0000013A              L1266:                            
          eval.c    68    
          eval.c    69            switch (symnum(car(p1))) {
    0000013A 64E2                   MOV.L       @R14,R4
    0000013C 8448                   MOV.B       @(8,R4),R0
    0000013E 2008                   TST         R0,R0
    00000140 8B0C                   BF          L1269
    00000142 64E2                   MOV.L       @R14,R4
    00000144 A00E                   BRA         L1270
    00000146 6442                   MOV.L       @R4,R4
    00000148              L1755:                            
    00000148 0570                   .DATA.W     H'0570
    0000014A 0000                   .DATA.W     0
    0000014C <00000000>             .DATA.L     _p1
    00000150 <00000000>             .DATA.L     _symtab
    00000154 <00000000>             .DATA.L     L1064
    00000158 <00000000>             .DATA.L     _stop
    0000015C              L1269:                            
    0000015C 9310                   MOV.W       L1756,R3   ; H'0570
    0000015E D209                   MOV.L       L1756+4,R2 ; _symtab
    00000160 6422                   MOV.L       @R2,R4
    00000162 343C                   ADD         R3,R4
    00000164              L1270:                            
    00000164 D308                   MOV.L       L1756+8,R3 ; _symnum
    00000166 430B                   JSR         @R3
    00000168 0009                   NOP
    0000016A E174                   MOV         #116,R1
    0000016C 3012                   CMP/HS      R1,R0
    0000016E 8B01                   BF          L1757
    00000170 A2BE                   BRA         L1253
    00000172 0009                   NOP
    00000174              L1757:                            
    00000174 4000                   SHLL        R0
    00000176 6103                   MOV         R0,R1
    00000178 C704                   MOVA        L1759,R0
    0000017A 001D                   MOV.W       @(R0,R1),R0
    0000017C 0023                   BRAF        R0
    0000017E 0009                   NOP
    00000180              L1758:                            
    00000180              L1756:                            
    00000180 0570                   .DATA.W     H'0570
    00000182 0000                   .DATA.W     0
    00000184 <00000000>             .DATA.L     _symtab
    00000188 <00000000>             .DATA.L     _symnum
    0000018C              L1759:
    0000018C 00F4                   .DATA.W     L1137-L1758
    0000018E 00FC                   .DATA.W     L1138-L1758
    00000190 0104                   .DATA.W     L1139-L1758
    00000192 010C                   .DATA.W     L1140-L1758
    00000194 0114                   .DATA.W     L1141-L1758
    00000196 011C                   .DATA.W     L1142-L1758
    00000198 0124                   .DATA.W     L1143-L1758
    0000019A 012C                   .DATA.W     L1144-L1758




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000019C 0134                   .DATA.W     L1145-L1758
    0000019E 013C                   .DATA.W     L1146-L1758
    000001A0 0144                   .DATA.W     L1147-L1758
    000001A2 014C                   .DATA.W     L1148-L1758
    000001A4 0152                   .DATA.W     L1149-L1758
    000001A6 015A                   .DATA.W     L1150-L1758
    000001A8 0162                   .DATA.W     L1151-L1758
    000001AA 0168                   .DATA.W     L1152-L1758
    000001AC 0170                   .DATA.W     L1153-L1758
    000001AE 0178                   .DATA.W     L1154-L1758
    000001B0 0180                   .DATA.W     L1155-L1758
    000001B2 0188                   .DATA.W     L1156-L1758
    000001B4 0190                   .DATA.W     L1157-L1758
    000001B6 0198                   .DATA.W     L1158-L1758
    000001B8 01A0                   .DATA.W     L1159-L1758
    000001BA 01A8                   .DATA.W     L1160-L1758
    000001BC 01B0                   .DATA.W     L1161-L1758
    000001BE 01B8                   .DATA.W     L1162-L1758
    000001C0 01C0                   .DATA.W     L1163-L1758
    000001C2 01D0                   .DATA.W     L1165-L1758
    000001C4 01C8                   .DATA.W     L1164-L1758
    000001C6 01D8                   .DATA.W     L1166-L1758
    000001C8 01E0                   .DATA.W     L1167-L1758
    000001CA 01E8                   .DATA.W     L1168-L1758
    000001CC 01EE                   .DATA.W     L1169-L1758
    000001CE 01F4                   .DATA.W     L1170-L1758
    000001D0 01FC                   .DATA.W     L1171-L1758
    000001D2 0202                   .DATA.W     L1172-L1758
    000001D4 0208                   .DATA.W     L1173-L1758
    000001D6 020C                   .DATA.W     L1174-L1758
    000001D8 0214                   .DATA.W     L1175-L1758
    000001DA 021A                   .DATA.W     L1176-L1758
    000001DC 0222                   .DATA.W     L1177-L1758
    000001DE 022A                   .DATA.W     L1178-L1758
    000001E0 0232                   .DATA.W     L1179-L1758
    000001E2 023A                   .DATA.W     L1180-L1758
    000001E4 0242                   .DATA.W     L1181-L1758
    000001E6 0248                   .DATA.W     L1182-L1758
    000001E8 024E                   .DATA.W     L1183-L1758
    000001EA 0256                   .DATA.W     L1184-L1758
    000001EC 025E                   .DATA.W     L1185-L1758
    000001EE 0266                   .DATA.W     L1186-L1758
    000001F0 026E                   .DATA.W     L1187-L1758
    000001F2 0274                   .DATA.W     L1188-L1758
    000001F4 027A                   .DATA.W     L1189-L1758
    000001F6 0282                   .DATA.W     L1190-L1758
    000001F8 028A                   .DATA.W     L1191-L1758
    000001FA 0292                   .DATA.W     L1192-L1758
    000001FC 029A                   .DATA.W     L1193-L1758
    000001FE 02A2                   .DATA.W     L1194-L1758
    00000200 02AA                   .DATA.W     L1195-L1758
    00000202 02B0                   .DATA.W     L1196-L1758
    00000204 02B6                   .DATA.W     L1197-L1758
    00000206 02BE                   .DATA.W     L1198-L1758
    00000208 02C4                   .DATA.W     L1199-L1758
    0000020A 02CC                   .DATA.W     L1200-L1758
    0000020C 02D4                   .DATA.W     L1201-L1758




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000020E 02DA                   .DATA.W     L1202-L1758
    00000210 02E0                   .DATA.W     L1203-L1758
    00000212 02E8                   .DATA.W     L1204-L1758
    00000214 02F0                   .DATA.W     L1205-L1758
    00000216 02F8                   .DATA.W     L1206-L1758
    00000218 0300                   .DATA.W     L1207-L1758
    0000021A 0308                   .DATA.W     L1208-L1758
    0000021C 0310                   .DATA.W     L1209-L1758
    0000021E 0318                   .DATA.W     L1210-L1758
    00000220 0320                   .DATA.W     L1211-L1758
    00000222 0328                   .DATA.W     L1212-L1758
    00000224 0330                   .DATA.W     L1213-L1758
    00000226 0338                   .DATA.W     L1214-L1758
    00000228 0340                   .DATA.W     L1215-L1758
    0000022A 0348                   .DATA.W     L1216-L1758
    0000022C 0350                   .DATA.W     L1217-L1758
    0000022E 0458                   .DATA.W     L1218-L1758
    00000230 0460                   .DATA.W     L1219-L1758
    00000232 0468                   .DATA.W     L1220-L1758
    00000234 0470                   .DATA.W     L1221-L1758
    00000236 0478                   .DATA.W     L1222-L1758
    00000238 0480                   .DATA.W     L1223-L1758
    0000023A 0488                   .DATA.W     L1224-L1758
    0000023C 0490                   .DATA.W     L1225-L1758
    0000023E 0498                   .DATA.W     L1226-L1758
    00000240 04A0                   .DATA.W     L1227-L1758
    00000242 04A8                   .DATA.W     L1228-L1758
    00000244 04B0                   .DATA.W     L1229-L1758
    00000246 04B8                   .DATA.W     L1230-L1758
    00000248 04C0                   .DATA.W     L1231-L1758
    0000024A 04C8                   .DATA.W     L1232-L1758
    0000024C 04D0                   .DATA.W     L1233-L1758
    0000024E 04D8                   .DATA.W     L1234-L1758
    00000250 04E0                   .DATA.W     L1235-L1758
    00000252 04E8                   .DATA.W     L1236-L1758
    00000254 04F0                   .DATA.W     L1237-L1758
    00000256 04F8                   .DATA.W     L1238-L1758
    00000258 0500                   .DATA.W     L1239-L1758
    0000025A 0508                   .DATA.W     L1240-L1758
    0000025C 0510                   .DATA.W     L1241-L1758
    0000025E 0518                   .DATA.W     L1242-L1758
    00000260 0520                   .DATA.W     L1243-L1758
    00000262 0528                   .DATA.W     L1244-L1758
    00000264 0530                   .DATA.W     L1245-L1758
    00000266 0538                   .DATA.W     L1246-L1758
    00000268 0540                   .DATA.W     L1247-L1758
    0000026A 0548                   .DATA.W     L1248-L1758
    0000026C 0550                   .DATA.W     L1249-L1758
    0000026E 0558                   .DATA.W     L1250-L1758
    00000270 0560                   .DATA.W     L1251-L1758
    00000272 0568                   .DATA.W     L1252-L1758
          eval.c    70            case ABS:               eval_abs();             break;
    00000274              L1137:                           ; case label 
    00000274 4F26                   LDS.L       @R15+,PR
    00000276 D298                   MOV.L       L1760,R2   ; _eval_abs
    00000278 422B                   JMP         @R2
    0000027A 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000027C              L1138:                           ; case label 
          eval.c    71            case ADD:               eval_add();             break;
    0000027C 4F26                   LDS.L       @R15+,PR
    0000027E D297                   MOV.L       L1760+4,R2 ; _eval_add
    00000280 422B                   JMP         @R2
    00000282 6EF6                   MOV.L       @R15+,R14
    00000284              L1139:                           ; case label 
          eval.c    72            case ADJ:               eval_adj();             break;
    00000284 4F26                   LDS.L       @R15+,PR
    00000286 D296                   MOV.L       L1760+8,R2 ; _eval_adj
    00000288 422B                   JMP         @R2
    0000028A 6EF6                   MOV.L       @R15+,R14
    0000028C              L1140:                           ; case label 
          eval.c    73            case AND:               eval_and();             break;
    0000028C 4F26                   LDS.L       @R15+,PR
    0000028E D295                   MOV.L       L1760+12,R2; _eval_and
    00000290 422B                   JMP         @R2
    00000292 6EF6                   MOV.L       @R15+,R14
    00000294              L1141:                           ; case label 
          eval.c    74            case ARCCOS:            eval_arccos();          break;
    00000294 4F26                   LDS.L       @R15+,PR
    00000296 D294                   MOV.L       L1760+16,R2; _eval_arccos
    00000298 422B                   JMP         @R2
    0000029A 6EF6                   MOV.L       @R15+,R14
    0000029C              L1142:                           ; case label 
          eval.c    75            case ARCCOSH:           eval_arccosh();         break;
    0000029C 4F26                   LDS.L       @R15+,PR
    0000029E D293                   MOV.L       L1760+20,R2; _eval_arccosh
    000002A0 422B                   JMP         @R2
    000002A2 6EF6                   MOV.L       @R15+,R14
    000002A4              L1143:                           ; case label 
          eval.c    76            case ARCSIN:            eval_arcsin();          break;
    000002A4 4F26                   LDS.L       @R15+,PR
    000002A6 D292                   MOV.L       L1760+24,R2; _eval_arcsin
    000002A8 422B                   JMP         @R2
    000002AA 6EF6                   MOV.L       @R15+,R14
    000002AC              L1144:                           ; case label 
          eval.c    77            case ARCSINH:           eval_arcsinh();         break;
    000002AC 4F26                   LDS.L       @R15+,PR
    000002AE D291                   MOV.L       L1760+28,R2; _eval_arcsinh
    000002B0 422B                   JMP         @R2
    000002B2 6EF6                   MOV.L       @R15+,R14
    000002B4              L1145:                           ; case label 
          eval.c    78            case ARCTAN:            eval_arctan();          break;
    000002B4 4F26                   LDS.L       @R15+,PR
    000002B6 D290                   MOV.L       L1760+32,R2; _eval_arctan
    000002B8 422B                   JMP         @R2
    000002BA 6EF6                   MOV.L       @R15+,R14
    000002BC              L1146:                           ; case label 
          eval.c    79            case ARCTANH:           eval_arctanh();         break;
    000002BC 4F26                   LDS.L       @R15+,PR
    000002BE D28F                   MOV.L       L1760+36,R2; _eval_arctanh
    000002C0 422B                   JMP         @R2
    000002C2 6EF6                   MOV.L       @R15+,R14
    000002C4              L1147:                           ; case label 
          eval.c    80            case ARG:               eval_arg();             break;
    000002C4 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002C6 D28E                   MOV.L       L1760+40,R2; _eval_arg
    000002C8 422B                   JMP         @R2
    000002CA 6EF6                   MOV.L       @R15+,R14
    000002CC              L1148:                           ; case label 
          eval.c    81            //case BESSELJ:         eval_besselj();         break;
          eval.c    82            //case BESSELY:         eval_bessely();         break;
          eval.c    83            case BINDING:           eval_binding();         break;
    000002CC 4F26                   LDS.L       @R15+,PR
    000002CE A213                   BRA         _eval_binding
    000002D0 6EF6                   MOV.L       @R15+,R14
    000002D2              L1149:                           ; case label 
          eval.c    84            case BINOMIAL:          eval_binomial();        break;
    000002D2 4F26                   LDS.L       @R15+,PR
    000002D4 D28B                   MOV.L       L1760+44,R2; _eval_binomial
    000002D6 422B                   JMP         @R2
    000002D8 6EF6                   MOV.L       @R15+,R14
    000002DA              L1150:                           ; case label 
          eval.c    85            case CEILING:           eval_ceiling();         break;
    000002DA 4F26                   LDS.L       @R15+,PR
    000002DC D28A                   MOV.L       L1760+48,R2; _eval_ceiling
    000002DE 422B                   JMP         @R2
    000002E0 6EF6                   MOV.L       @R15+,R14
    000002E2              L1151:                           ; case label 
          eval.c    86            case CHECK:             eval_check();           break;
    000002E2 4F26                   LDS.L       @R15+,PR
    000002E4 A27C                   BRA         _eval_check
    000002E6 6EF6                   MOV.L       @R15+,R14
    000002E8              L1152:                           ; case label 
          eval.c    87            case CHOOSE:            eval_choose();          break;
    000002E8 4F26                   LDS.L       @R15+,PR
    000002EA D288                   MOV.L       L1760+52,R2; _eval_choose
    000002EC 422B                   JMP         @R2
    000002EE 6EF6                   MOV.L       @R15+,R14
    000002F0              L1153:                           ; case label 
          eval.c    88            case CIRCEXP:           eval_circexp();         break;
    000002F0 4F26                   LDS.L       @R15+,PR
    000002F2 D287                   MOV.L       L1760+56,R2; _eval_circexp
    000002F4 422B                   JMP         @R2
    000002F6 6EF6                   MOV.L       @R15+,R14
    000002F8              L1154:                           ; case label 
          eval.c    89            case CLEAR:             eval_clear();           break;
    000002F8 4F26                   LDS.L       @R15+,PR
    000002FA D286                   MOV.L       L1760+60,R2; _eval_clear
    000002FC 422B                   JMP         @R2
    000002FE 6EF6                   MOV.L       @R15+,R14
    00000300              L1155:                           ; case label 
          eval.c    90            case CLOCK:             eval_clock();           break;
    00000300 4F26                   LDS.L       @R15+,PR
    00000302 D285                   MOV.L       L1760+64,R2; _eval_clock
    00000304 422B                   JMP         @R2
    00000306 6EF6                   MOV.L       @R15+,R14
    00000308              L1156:                           ; case label 
          eval.c    91            case COEFF:             eval_coeff();           break;
    00000308 4F26                   LDS.L       @R15+,PR
    0000030A D284                   MOV.L       L1760+68,R2; _eval_coeff
    0000030C 422B                   JMP         @R2
    0000030E 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000310              L1157:                           ; case label 
          eval.c    92            case COFACTOR:          eval_cofactor();        break;
    00000310 4F26                   LDS.L       @R15+,PR
    00000312 D283                   MOV.L       L1760+72,R2; _eval_cofactor
    00000314 422B                   JMP         @R2
    00000316 6EF6                   MOV.L       @R15+,R14
    00000318              L1158:                           ; case label 
          eval.c    93            case CONDENSE:          eval_condense();        break;
    00000318 4F26                   LDS.L       @R15+,PR
    0000031A D282                   MOV.L       L1760+76,R2; _eval_condense
    0000031C 422B                   JMP         @R2
    0000031E 6EF6                   MOV.L       @R15+,R14
    00000320              L1159:                           ; case label 
          eval.c    94            case CONJ:              eval_conj();            break;
    00000320 4F26                   LDS.L       @R15+,PR
    00000322 D281                   MOV.L       L1760+80,R2; _eval_conj
    00000324 422B                   JMP         @R2
    00000326 6EF6                   MOV.L       @R15+,R14
    00000328              L1160:                           ; case label 
          eval.c    95            case CONTRACT:          eval_contract();        break;
    00000328 4F26                   LDS.L       @R15+,PR
    0000032A D280                   MOV.L       L1760+84,R2; _eval_contract
    0000032C 422B                   JMP         @R2
    0000032E 6EF6                   MOV.L       @R15+,R14
    00000330              L1161:                           ; case label 
          eval.c    96            case COS:               eval_cos();             break;
    00000330 4F26                   LDS.L       @R15+,PR
    00000332 D27F                   MOV.L       L1760+88,R2; _eval_cos
    00000334 422B                   JMP         @R2
    00000336 6EF6                   MOV.L       @R15+,R14
    00000338              L1162:                           ; case label 
          eval.c    97            case COSH:              eval_cosh();            break;
    00000338 4F26                   LDS.L       @R15+,PR
    0000033A D27E                   MOV.L       L1760+92,R2; _eval_cosh
    0000033C 422B                   JMP         @R2
    0000033E 6EF6                   MOV.L       @R15+,R14
    00000340              L1163:                           ; case label 
          eval.c    98            case DECOMP:            eval_decomp();          break;
    00000340 4F26                   LDS.L       @R15+,PR
    00000342 D27D                   MOV.L       L1760+96,R2; _eval_decomp
    00000344 422B                   JMP         @R2
    00000346 6EF6                   MOV.L       @R15+,R14
    00000348              L1164:                           ; case label 
          eval.c    99            case DEGREE:            eval_degree();          break;
    00000348 4F26                   LDS.L       @R15+,PR
    0000034A D27C                   MOV.L       L1760+100,R2; _eval_degree
    0000034C 422B                   JMP         @R2
    0000034E 6EF6                   MOV.L       @R15+,R14
    00000350              L1165:                           ; case label 
          eval.c   100            case DEFINT:            eval_defint();          break;
    00000350 4F26                   LDS.L       @R15+,PR
    00000352 D27B                   MOV.L       L1760+104,R2; _eval_defint
    00000354 422B                   JMP         @R2
    00000356 6EF6                   MOV.L       @R15+,R14
    00000358              L1166:                           ; case label 
          eval.c   101            case DENOMINATOR:       eval_denominator();     break;
    00000358 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000035A D27A                   MOV.L       L1760+108,R2; _eval_denominator
    0000035C 422B                   JMP         @R2
    0000035E 6EF6                   MOV.L       @R15+,R14
    00000360              L1167:                           ; case label 
          eval.c   102            case DERIVATIVE:        eval_derivative();      break;
    00000360 4F26                   LDS.L       @R15+,PR
    00000362 D279                   MOV.L       L1760+112,R2; _eval_derivative
    00000364 422B                   JMP         @R2
    00000366 6EF6                   MOV.L       @R15+,R14
    00000368              L1168:                           ; case label 
          eval.c   103    #ifdef ARM9
          eval.c   104            case USR_DERIVATIVE:    eval_derivative();      break;
          eval.c   105    #endif
          eval.c   106            case DET:               eval_det();             break;
    00000368 4F26                   LDS.L       @R15+,PR
    0000036A A276                   BRA         _eval_det
    0000036C 6EF6                   MOV.L       @R15+,R14
    0000036E              L1169:                           ; case label 
          eval.c   107            case DIM:               eval_dim();             break;
    0000036E 4F26                   LDS.L       @R15+,PR
    00000370 A2B1                   BRA         _eval_dim
    00000372 6EF6                   MOV.L       @R15+,R14
    00000374              L1170:                           ; case label 
          eval.c   108            case DIRAC:             eval_dirac();           break;
    00000374 4F26                   LDS.L       @R15+,PR
    00000376 D275                   MOV.L       L1760+116,R2; _eval_dirac
    00000378 422B                   JMP         @R2
    0000037A 6EF6                   MOV.L       @R15+,R14
    0000037C              L1171:                           ; case label 
          eval.c   109            //case DISPLAY:         eval_display();         break;
          eval.c   110            case DIVISORS:          eval_divisors();        break;
    0000037C 4F26                   LDS.L       @R15+,PR
    0000037E A390                   BRA         _eval_divisors
    00000380 6EF6                   MOV.L       @R15+,R14
    00000382              L1172:                           ; case label 
          eval.c   111            case DO:                eval_do();              break;
    00000382 4F26                   LDS.L       @R15+,PR
    00000384 A3B8                   BRA         _eval_do
    00000386 6EF6                   MOV.L       @R15+,R14
    00000388              L1173:                           ; case label 
          eval.c   112            case DOT:               eval_inner();           break;
    00000388 A05C                   BRA         L1749
    0000038A 0009                   NOP
    0000038C              L1174:                           ; case label 
          eval.c   113            case DRAW:              eval_draw();            break;
    0000038C 4F26                   LDS.L       @R15+,PR
    0000038E D270                   MOV.L       L1760+120,R2; _eval_draw
    00000390 422B                   JMP         @R2
    00000392 6EF6                   MOV.L       @R15+,R14
    00000394              L1175:                           ; case label 
          eval.c   114            case DSOLVE:            eval_dsolve();          break;
    00000394 4F26                   LDS.L       @R15+,PR
    00000396 A404                   BRA         _eval_dsolve
    00000398 6EF6                   MOV.L       @R15+,R14
    0000039A              L1176:                           ; case label 
          eval.c   115            case EIGEN:             eval_eigen();           break;
    0000039A 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000039C D26D                   MOV.L       L1760+124,R2; _eval_eigen
    0000039E 422B                   JMP         @R2
    000003A0 6EF6                   MOV.L       @R15+,R14
    000003A2              L1177:                           ; case label 
          eval.c   116            case EIGENVAL:          eval_eigenval();        break;
    000003A2 4F26                   LDS.L       @R15+,PR
    000003A4 D26C                   MOV.L       L1760+128,R2; _eval_eigenval
    000003A6 422B                   JMP         @R2
    000003A8 6EF6                   MOV.L       @R15+,R14
    000003AA              L1178:                           ; case label 
          eval.c   117            case EIGENVEC:          eval_eigenvec();        break;
    000003AA 4F26                   LDS.L       @R15+,PR
    000003AC D26B                   MOV.L       L1760+132,R2; _eval_eigenvec
    000003AE 422B                   JMP         @R2
    000003B0 6EF6                   MOV.L       @R15+,R14
    000003B2              L1179:                           ; case label 
          eval.c   118            case ERF:               eval_erf();             break;
    000003B2 4F26                   LDS.L       @R15+,PR
    000003B4 D26A                   MOV.L       L1760+136,R2; _eval_erf
    000003B6 422B                   JMP         @R2
    000003B8 6EF6                   MOV.L       @R15+,R14
    000003BA              L1180:                           ; case label 
          eval.c   119            case ERFC:              eval_erfc();            break;
    000003BA 4F26                   LDS.L       @R15+,PR
    000003BC D269                   MOV.L       L1760+140,R2; _eval_erfc
    000003BE 422B                   JMP         @R2
    000003C0 6EF6                   MOV.L       @R15+,R14
    000003C2              L1181:                           ; case label 
          eval.c   120            case EVAL:              eval_eval();            break;
    000003C2 4F26                   LDS.L       @R15+,PR
    000003C4 A50B                   BRA         _eval_eval
    000003C6 6EF6                   MOV.L       @R15+,R14
    000003C8              L1182:                           ; case label 
          eval.c   121            case EXP:               eval_exp();             break;
    000003C8 4F26                   LDS.L       @R15+,PR
    000003CA A5C0                   BRA         _eval_exp
    000003CC 6EF6                   MOV.L       @R15+,R14
    000003CE              L1183:                           ; case label 
          eval.c   122            case EXPAND:            eval_expand();          break;
    000003CE 4F26                   LDS.L       @R15+,PR
    000003D0 D265                   MOV.L       L1760+144,R2; _eval_expand
    000003D2 422B                   JMP         @R2
    000003D4 6EF6                   MOV.L       @R15+,R14
    000003D6              L1184:                           ; case label 
          eval.c   123            case EXPCOS:            eval_expcos();          break;
    000003D6 4F26                   LDS.L       @R15+,PR
    000003D8 D264                   MOV.L       L1760+148,R2; _eval_expcos
    000003DA 422B                   JMP         @R2
    000003DC 6EF6                   MOV.L       @R15+,R14
    000003DE              L1185:                           ; case label 
          eval.c   124            case EXPSIN:            eval_expsin();          break;
    000003DE 4F26                   LDS.L       @R15+,PR
    000003E0 D263                   MOV.L       L1760+152,R2; _eval_expsin
    000003E2 422B                   JMP         @R2
    000003E4 6EF6                   MOV.L       @R15+,R14
    000003E6              L1186:                           ; case label 
          eval.c   125            case FACTOR:            eval_factor();          break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003E6 4F26                   LDS.L       @R15+,PR
    000003E8 D262                   MOV.L       L1760+156,R2; _eval_factor
    000003EA 422B                   JMP         @R2
    000003EC 6EF6                   MOV.L       @R15+,R14
    000003EE              L1187:                           ; case label 
          eval.c   126            case FACTORIAL:         eval_factorial();       break;
    000003EE 4F26                   LDS.L       @R15+,PR
    000003F0 A5D8                   BRA         _eval_factorial
    000003F2 6EF6                   MOV.L       @R15+,R14
    000003F4              L1188:                           ; case label 
          eval.c   127            case FACTORPOLY:        eval_factorpoly();      break;
    000003F4 4F26                   LDS.L       @R15+,PR
    000003F6 A60B                   BRA         _eval_factorpoly
    000003F8 6EF6                   MOV.L       @R15+,R14
    000003FA              L1189:                           ; case label 
          eval.c   128            case FILTER:            eval_filter();          break;
    000003FA 4F26                   LDS.L       @R15+,PR
    000003FC D25E                   MOV.L       L1760+160,R2; _eval_filter
    000003FE 422B                   JMP         @R2
    00000400 6EF6                   MOV.L       @R15+,R14
    00000402              L1190:                           ; case label 
          eval.c   129            case FLOATF:            eval_float();           break;
    00000402 4F26                   LDS.L       @R15+,PR
    00000404 D25D                   MOV.L       L1760+164,R2; _eval_float
    00000406 422B                   JMP         @R2
    00000408 6EF6                   MOV.L       @R15+,R14
    0000040A              L1191:                           ; case label 
          eval.c   130            case FLOOR:             eval_floor();           break;
    0000040A 4F26                   LDS.L       @R15+,PR
    0000040C D25C                   MOV.L       L1760+168,R2; _eval_floor
    0000040E 422B                   JMP         @R2
    00000410 6EF6                   MOV.L       @R15+,R14
    00000412              L1192:                           ; case label 
          eval.c   131            case FOR:               eval_for();             break;
    00000412 4F26                   LDS.L       @R15+,PR
    00000414 D25B                   MOV.L       L1760+172,R2; _eval_for
    00000416 422B                   JMP         @R2
    00000418 6EF6                   MOV.L       @R15+,R14
    0000041A              L1193:                           ; case label 
          eval.c   132            case GAMMA:             eval_gamma();           break;
    0000041A 4F26                   LDS.L       @R15+,PR
    0000041C D25A                   MOV.L       L1760+176,R2; _eval_gamma
    0000041E 422B                   JMP         @R2
    00000420 6EF6                   MOV.L       @R15+,R14
    00000422              L1194:                           ; case label 
          eval.c   133            case GCD:               eval_gcd();             break;
    00000422 4F26                   LDS.L       @R15+,PR
    00000424 D259                   MOV.L       L1760+180,R2; _eval_gcd
    00000426 422B                   JMP         @R2
    00000428 6EF6                   MOV.L       @R15+,R14
    0000042A              L1195:                           ; case label 
          eval.c   134            case HERMITE:           eval_hermite();         break;
    0000042A 4F26                   LDS.L       @R15+,PR
    0000042C A673                   BRA         _eval_hermite
    0000042E 6EF6                   MOV.L       @R15+,R14
    00000430              L1196:                           ; case label 
          eval.c   135            case HILBERT:           eval_hilbert();         break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000430 4F26                   LDS.L       @R15+,PR
    00000432 A6F3                   BRA         _eval_hilbert
    00000434 6EF6                   MOV.L       @R15+,R14
    00000436              L1197:                           ; case label 
          eval.c   136            case IMAG:              eval_imag();            break;
    00000436 4F26                   LDS.L       @R15+,PR
    00000438 D255                   MOV.L       L1760+184,R2; _eval_imag
    0000043A 422B                   JMP         @R2
    0000043C 6EF6                   MOV.L       @R15+,R14
    0000043E              L1198:                           ; case label 
          eval.c   137            case INDEX:             eval_index();           break;
    0000043E 4F26                   LDS.L       @R15+,PR
    00000440 A718                   BRA         _eval_index
    00000442 6EF6                   MOV.L       @R15+,R14
    00000444              L1199:                           ; case label 
          eval.c   138            case INNER:             eval_inner();           break;
    00000444              L1749:                            
    00000444 4F26                   LDS.L       @R15+,PR
    00000446 D253                   MOV.L       L1760+188,R2; _eval_inner
    00000448 422B                   JMP         @R2
    0000044A 6EF6                   MOV.L       @R15+,R14
    0000044C              L1200:                           ; case label 
          eval.c   139            case INTEGRAL:          eval_integral();        break;
    0000044C 4F26                   LDS.L       @R15+,PR
    0000044E D252                   MOV.L       L1760+192,R2; _eval_integral
    00000450 422B                   JMP         @R2
    00000452 6EF6                   MOV.L       @R15+,R14
    00000454              L1201:                           ; case label 
          eval.c   140    #ifdef ARM9
          eval.c   141            case USR_INTEGRAL:              eval_integral();        break;
          eval.c   142    #endif
          eval.c   143            case INV:               eval_inv();             break;
    00000454 4F26                   LDS.L       @R15+,PR
    00000456 A75D                   BRA         _eval_inv
    00000458 6EF6                   MOV.L       @R15+,R14
    0000045A              L1202:                           ; case label 
          eval.c   144            case INVG:              eval_invg();            break;
    0000045A 4F26                   LDS.L       @R15+,PR
    0000045C A786                   BRA         _eval_invg
    0000045E 6EF6                   MOV.L       @R15+,R14
    00000460              L1203:                           ; case label 
          eval.c   145            case ISINTEGER:         eval_isinteger();       break;
    00000460 4F26                   LDS.L       @R15+,PR
    00000462 D24E                   MOV.L       L1760+196,R2; _eval_isinteger
    00000464 422B                   JMP         @R2
    00000466 6EF6                   MOV.L       @R15+,R14
    00000468              L1204:                           ; case label 
          eval.c   146            case ISPRIME:           eval_isprime();         break;
    00000468 4F26                   LDS.L       @R15+,PR
    0000046A D24D                   MOV.L       L1760+200,R2; _eval_isprime
    0000046C 422B                   JMP         @R2
    0000046E 6EF6                   MOV.L       @R15+,R14
    00000470              L1205:                           ; case label 
          eval.c   147            case LAGUERRE:          eval_laguerre();        break;
    00000470 4F26                   LDS.L       @R15+,PR
    00000472 D24C                   MOV.L       L1760+204,R2; _eval_laguerre
    00000474 422B                   JMP         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000476 6EF6                   MOV.L       @R15+,R14
    00000478              L1206:                           ; case label 
          eval.c   148    //      case LAPLACE:           eval_laplace();         break;
          eval.c   149            case LCM:               eval_lcm();             break;
    00000478 4F26                   LDS.L       @R15+,PR
    0000047A D24B                   MOV.L       L1760+208,R2; _eval_lcm
    0000047C 422B                   JMP         @R2
    0000047E 6EF6                   MOV.L       @R15+,R14
    00000480              L1207:                           ; case label 
          eval.c   150            case LEADING:           eval_leading();         break;
    00000480 4F26                   LDS.L       @R15+,PR
    00000482 D24A                   MOV.L       L1760+212,R2; _eval_leading
    00000484 422B                   JMP         @R2
    00000486 6EF6                   MOV.L       @R15+,R14
    00000488              L1208:                           ; case label 
          eval.c   151            case LEGENDRE:          eval_legendre();        break;
    00000488 4F26                   LDS.L       @R15+,PR
    0000048A D249                   MOV.L       L1760+216,R2; _eval_legendre
    0000048C 422B                   JMP         @R2
    0000048E 6EF6                   MOV.L       @R15+,R14
    00000490              L1209:                           ; case label 
          eval.c   152            case LOG:               eval_log();             break;
    00000490 4F26                   LDS.L       @R15+,PR
    00000492 D248                   MOV.L       L1760+220,R2; _eval_log
    00000494 422B                   JMP         @R2
    00000496 6EF6                   MOV.L       @R15+,R14
    00000498              L1210:                           ; case label 
          eval.c   153            case MAG:               eval_mag();             break;
    00000498 4F26                   LDS.L       @R15+,PR
    0000049A D247                   MOV.L       L1760+224,R2; _eval_mag
    0000049C 422B                   JMP         @R2
    0000049E 6EF6                   MOV.L       @R15+,R14
    000004A0              L1211:                           ; case label 
          eval.c   154            case MOD:               eval_mod();             break;
    000004A0 4F26                   LDS.L       @R15+,PR
    000004A2 D246                   MOV.L       L1760+228,R2; _eval_mod
    000004A4 422B                   JMP         @R2
    000004A6 6EF6                   MOV.L       @R15+,R14
    000004A8              L1212:                           ; case label 
          eval.c   155            case MULTIPLY:          eval_multiply();        break;
    000004A8 4F26                   LDS.L       @R15+,PR
    000004AA D245                   MOV.L       L1760+232,R2; _eval_multiply
    000004AC 422B                   JMP         @R2
    000004AE 6EF6                   MOV.L       @R15+,R14
    000004B0              L1213:                           ; case label 
          eval.c   156            case NOT:               eval_not();             break;
    000004B0 4F26                   LDS.L       @R15+,PR
    000004B2 D244                   MOV.L       L1760+236,R2; _eval_not
    000004B4 422B                   JMP         @R2
    000004B6 6EF6                   MOV.L       @R15+,R14
    000004B8              L1214:                           ; case label 
          eval.c   157            case NROOTS:            eval_nroots();          break;
    000004B8 4F26                   LDS.L       @R15+,PR
    000004BA D243                   MOV.L       L1760+240,R2; _eval_nroots
    000004BC 422B                   JMP         @R2
    000004BE 6EF6                   MOV.L       @R15+,R14
    000004C0              L1215:                           ; case label 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          eval.c   158            case NUMBER:            eval_number();          break;
    000004C0 4F26                   LDS.L       @R15+,PR
    000004C2 D242                   MOV.L       L1760+244,R2; _eval_number
    000004C4 422B                   JMP         @R2
    000004C6 6EF6                   MOV.L       @R15+,R14
    000004C8              L1216:                           ; case label 
          eval.c   159            case NUMERATOR:         eval_numerator();       break;
    000004C8 4F26                   LDS.L       @R15+,PR
    000004CA D241                   MOV.L       L1760+248,R2; _eval_numerator
    000004CC 422B                   JMP         @R2
    000004CE 6EF6                   MOV.L       @R15+,R14
    000004D0              L1217:                           ; case label 
          eval.c   160            case OPERATOR:          eval_operator();        break;
    000004D0 4F26                   LDS.L       @R15+,PR
    000004D2 D240                   MOV.L       L1760+252,R2; _eval_operator
    000004D4 422B                   JMP         @R2
    000004D6 6EF6                   MOV.L       @R15+,R14
    000004D8              L1760:                            
    000004D8 <00000000>             .DATA.L     _eval_abs
    000004DC <00000000>             .DATA.L     _eval_add
    000004E0 <00000000>             .DATA.L     _eval_adj
    000004E4 <00000000>             .DATA.L     _eval_and
    000004E8 <00000000>             .DATA.L     _eval_arccos
    000004EC <00000000>             .DATA.L     _eval_arccosh
    000004F0 <00000000>             .DATA.L     _eval_arcsin
    000004F4 <00000000>             .DATA.L     _eval_arcsinh
    000004F8 <00000000>             .DATA.L     _eval_arctan
    000004FC <00000000>             .DATA.L     _eval_arctanh
    00000500 <00000000>             .DATA.L     _eval_arg
    00000504 <00000000>             .DATA.L     _eval_binomial
    00000508 <00000000>             .DATA.L     _eval_ceiling
    0000050C <00000000>             .DATA.L     _eval_choose
    00000510 <00000000>             .DATA.L     _eval_circexp
    00000514 <00000000>             .DATA.L     _eval_clear
    00000518 <00000000>             .DATA.L     _eval_clock
    0000051C <00000000>             .DATA.L     _eval_coeff
    00000520 <00000000>             .DATA.L     _eval_cofactor
    00000524 <00000000>             .DATA.L     _eval_condense
    00000528 <00000000>             .DATA.L     _eval_conj
    0000052C <00000000>             .DATA.L     _eval_contract
    00000530 <00000000>             .DATA.L     _eval_cos
    00000534 <00000000>             .DATA.L     _eval_cosh
    00000538 <00000000>             .DATA.L     _eval_decomp
    0000053C <00000000>             .DATA.L     _eval_degree
    00000540 <00000000>             .DATA.L     _eval_defint
    00000544 <00000000>             .DATA.L     _eval_denominator
    00000548 <00000000>             .DATA.L     _eval_derivative
    0000054C <00000000>             .DATA.L     _eval_dirac
    00000550 <00000000>             .DATA.L     _eval_draw
    00000554 <00000000>             .DATA.L     _eval_eigen
    00000558 <00000000>             .DATA.L     _eval_eigenval
    0000055C <00000000>             .DATA.L     _eval_eigenvec
    00000560 <00000000>             .DATA.L     _eval_erf
    00000564 <00000000>             .DATA.L     _eval_erfc
    00000568 <00000000>             .DATA.L     _eval_expand
    0000056C <00000000>             .DATA.L     _eval_expcos
    00000570 <00000000>             .DATA.L     _eval_expsin




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000574 <00000000>             .DATA.L     _eval_factor
    00000578 <00000000>             .DATA.L     _eval_filter
    0000057C <00000000>             .DATA.L     _eval_float
    00000580 <00000000>             .DATA.L     _eval_floor
    00000584 <00000000>             .DATA.L     _eval_for
    00000588 <00000000>             .DATA.L     _eval_gamma
    0000058C <00000000>             .DATA.L     _eval_gcd
    00000590 <00000000>             .DATA.L     _eval_imag
    00000594 <00000000>             .DATA.L     _eval_inner
    00000598 <00000000>             .DATA.L     _eval_integral
    0000059C <00000000>             .DATA.L     _eval_isinteger
    000005A0 <00000000>             .DATA.L     _eval_isprime
    000005A4 <00000000>             .DATA.L     _eval_laguerre
    000005A8 <00000000>             .DATA.L     _eval_lcm
    000005AC <00000000>             .DATA.L     _eval_leading
    000005B0 <00000000>             .DATA.L     _eval_legendre
    000005B4 <00000000>             .DATA.L     _eval_log
    000005B8 <00000000>             .DATA.L     _eval_mag
    000005BC <00000000>             .DATA.L     _eval_mod
    000005C0 <00000000>             .DATA.L     _eval_multiply
    000005C4 <00000000>             .DATA.L     _eval_not
    000005C8 <00000000>             .DATA.L     _eval_nroots
    000005CC <00000000>             .DATA.L     _eval_number
    000005D0 <00000000>             .DATA.L     _eval_numerator
    000005D4 <00000000>             .DATA.L     _eval_operator
    000005D8              L1218:                           ; case label 
          eval.c   161            case OR:                eval_or();              break;
    000005D8 4F26                   LDS.L       @R15+,PR
    000005DA D24C                   MOV.L       L1761,R2   ; _eval_or
    000005DC 422B                   JMP         @R2
    000005DE 6EF6                   MOV.L       @R15+,R14
    000005E0              L1219:                           ; case label 
          eval.c   162            case OUTER:             eval_outer();           break;
    000005E0 4F26                   LDS.L       @R15+,PR
    000005E2 D24B                   MOV.L       L1761+4,R2 ; _eval_outer
    000005E4 422B                   JMP         @R2
    000005E6 6EF6                   MOV.L       @R15+,R14
    000005E8              L1220:                           ; case label 
          eval.c   163            case POLAR:             eval_polar();           break;
    000005E8 4F26                   LDS.L       @R15+,PR
    000005EA D24A                   MOV.L       L1761+8,R2 ; _eval_polar
    000005EC 422B                   JMP         @R2
    000005EE 6EF6                   MOV.L       @R15+,R14
    000005F0              L1221:                           ; case label 
          eval.c   164            case POWER:             eval_power();           break;
    000005F0 4F26                   LDS.L       @R15+,PR
    000005F2 D249                   MOV.L       L1761+12,R2; _eval_power
    000005F4 422B                   JMP         @R2
    000005F6 6EF6                   MOV.L       @R15+,R14
    000005F8              L1222:                           ; case label 
          eval.c   165            case PRIME:             eval_prime();           break;
    000005F8 4F26                   LDS.L       @R15+,PR
    000005FA D248                   MOV.L       L1761+16,R2; _eval_prime
    000005FC 422B                   JMP         @R2
    000005FE 6EF6                   MOV.L       @R15+,R14
    00000600              L1223:                           ; case label 
          eval.c   166            case PRINT:             eval_display();         break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000600 4F26                   LDS.L       @R15+,PR
    00000602 D247                   MOV.L       L1761+20,R2; _eval_display
    00000604 422B                   JMP         @R2
    00000606 6EF6                   MOV.L       @R15+,R14
    00000608              L1224:                           ; case label 
          eval.c   167            case PRODUCT:           eval_product();         break;
    00000608 4F26                   LDS.L       @R15+,PR
    0000060A D246                   MOV.L       L1761+24,R2; _eval_product
    0000060C 422B                   JMP         @R2
    0000060E 6EF6                   MOV.L       @R15+,R14
    00000610              L1225:                           ; case label 
          eval.c   168            case QUOTE:             eval_quote();           break;
    00000610 4F26                   LDS.L       @R15+,PR
    00000612 D245                   MOV.L       L1761+28,R2; _eval_quote
    00000614 422B                   JMP         @R2
    00000616 6EF6                   MOV.L       @R15+,R14
    00000618              L1226:                           ; case label 
          eval.c   169            case QUOTIENT:          eval_quotient();        break;
    00000618 4F26                   LDS.L       @R15+,PR
    0000061A D244                   MOV.L       L1761+32,R2; _eval_quotient
    0000061C 422B                   JMP         @R2
    0000061E 6EF6                   MOV.L       @R15+,R14
    00000620              L1227:                           ; case label 
          eval.c   170            case RANK:              eval_rank();            break;
    00000620 4F26                   LDS.L       @R15+,PR
    00000622 D243                   MOV.L       L1761+36,R2; _eval_rank
    00000624 422B                   JMP         @R2
    00000626 6EF6                   MOV.L       @R15+,R14
    00000628              L1228:                           ; case label 
          eval.c   171            case RATIONALIZE:       eval_rationalize();     break;
    00000628 4F26                   LDS.L       @R15+,PR
    0000062A D242                   MOV.L       L1761+40,R2; _eval_rationalize
    0000062C 422B                   JMP         @R2
    0000062E 6EF6                   MOV.L       @R15+,R14
    00000630              L1229:                           ; case label 
          eval.c   172            case REAL:              eval_real();            break;
    00000630 4F26                   LDS.L       @R15+,PR
    00000632 D241                   MOV.L       L1761+44,R2; _eval_real
    00000634 422B                   JMP         @R2
    00000636 6EF6                   MOV.L       @R15+,R14
    00000638              L1230:                           ; case label 
          eval.c   173            case YYRECT:            eval_rect();            break;
    00000638 4F26                   LDS.L       @R15+,PR
    0000063A D240                   MOV.L       L1761+48,R2; _eval_rect
    0000063C 422B                   JMP         @R2
    0000063E 6EF6                   MOV.L       @R15+,R14
    00000640              L1231:                           ; case label 
          eval.c   174            case ROOTS:             eval_roots();           break;
    00000640 4F26                   LDS.L       @R15+,PR
    00000642 D23F                   MOV.L       L1761+52,R2; _eval_roots
    00000644 422B                   JMP         @R2
    00000646 6EF6                   MOV.L       @R15+,R14
    00000648              L1232:                           ; case label 
          eval.c   175            case SETQ:              eval_setq();            break;
    00000648 4F26                   LDS.L       @R15+,PR
    0000064A D23E                   MOV.L       L1761+56,R2; _eval_setq
    0000064C 422B                   JMP         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000064E 6EF6                   MOV.L       @R15+,R14
    00000650              L1233:                           ; case label 
          eval.c   176            case SGN:               eval_sgn();             break;
    00000650 4F26                   LDS.L       @R15+,PR
    00000652 D23D                   MOV.L       L1761+60,R2; _eval_sgn
    00000654 422B                   JMP         @R2
    00000656 6EF6                   MOV.L       @R15+,R14
    00000658              L1234:                           ; case label 
          eval.c   177            case SIMPLIFY:          eval_simplify();        break;
    00000658 4F26                   LDS.L       @R15+,PR
    0000065A D23C                   MOV.L       L1761+64,R2; _eval_simplify
    0000065C 422B                   JMP         @R2
    0000065E 6EF6                   MOV.L       @R15+,R14
    00000660              L1235:                           ; case label 
          eval.c   178            case SIN:               eval_sin();             break;
    00000660 4F26                   LDS.L       @R15+,PR
    00000662 D23B                   MOV.L       L1761+68,R2; _eval_sin
    00000664 422B                   JMP         @R2
    00000666 6EF6                   MOV.L       @R15+,R14
    00000668              L1236:                           ; case label 
          eval.c   179            case SINH:              eval_sinh();            break;
    00000668 4F26                   LDS.L       @R15+,PR
    0000066A D23A                   MOV.L       L1761+72,R2; _eval_sinh
    0000066C 422B                   JMP         @R2
    0000066E 6EF6                   MOV.L       @R15+,R14
    00000670              L1237:                           ; case label 
          eval.c   180            case SQRT:              eval_sqrt();            break;
    00000670 4F26                   LDS.L       @R15+,PR
    00000672 D239                   MOV.L       L1761+76,R2; _eval_sqrt
    00000674 422B                   JMP         @R2
    00000676 6EF6                   MOV.L       @R15+,R14
    00000678              L1238:                           ; case label 
          eval.c   181            case STOP:              eval_stop();            break;
    00000678 4F26                   LDS.L       @R15+,PR
    0000067A D238                   MOV.L       L1761+80,R2; _eval_stop
    0000067C 422B                   JMP         @R2
    0000067E 6EF6                   MOV.L       @R15+,R14
    00000680              L1239:                           ; case label 
          eval.c   182            case SUBST:             eval_subst();           break;
    00000680 4F26                   LDS.L       @R15+,PR
    00000682 D237                   MOV.L       L1761+84,R2; _eval_subst
    00000684 422B                   JMP         @R2
    00000686 6EF6                   MOV.L       @R15+,R14
    00000688              L1240:                           ; case label 
          eval.c   183            case SUM:               eval_sum();             break;
    00000688 4F26                   LDS.L       @R15+,PR
    0000068A D236                   MOV.L       L1761+88,R2; _eval_sum
    0000068C 422B                   JMP         @R2
    0000068E 6EF6                   MOV.L       @R15+,R14
    00000690              L1241:                           ; case label 
          eval.c   184            case TAN:               eval_tan();             break;
    00000690 4F26                   LDS.L       @R15+,PR
    00000692 D235                   MOV.L       L1761+92,R2; _eval_tan
    00000694 422B                   JMP         @R2
    00000696 6EF6                   MOV.L       @R15+,R14
    00000698              L1242:                           ; case label 
          eval.c   185            case TANH:              eval_tanh();            break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000698 4F26                   LDS.L       @R15+,PR
    0000069A D234                   MOV.L       L1761+96,R2; _eval_tanh
    0000069C 422B                   JMP         @R2
    0000069E 6EF6                   MOV.L       @R15+,R14
    000006A0              L1243:                           ; case label 
          eval.c   186            case TAYLOR:            eval_taylor();          break;
    000006A0 4F26                   LDS.L       @R15+,PR
    000006A2 D233                   MOV.L       L1761+100,R2; _eval_taylor
    000006A4 422B                   JMP         @R2
    000006A6 6EF6                   MOV.L       @R15+,R14
    000006A8              L1244:                           ; case label 
          eval.c   187            case TEST:              eval_test();            break;
    000006A8 4F26                   LDS.L       @R15+,PR
    000006AA D232                   MOV.L       L1761+104,R2; _eval_test
    000006AC 422B                   JMP         @R2
    000006AE 6EF6                   MOV.L       @R15+,R14
    000006B0              L1245:                           ; case label 
          eval.c   188            case TESTEQ:            eval_testeq();          break;
    000006B0 4F26                   LDS.L       @R15+,PR
    000006B2 D231                   MOV.L       L1761+108,R2; _eval_testeq
    000006B4 422B                   JMP         @R2
    000006B6 6EF6                   MOV.L       @R15+,R14
    000006B8              L1246:                           ; case label 
          eval.c   189            case TESTGE:            eval_testge();          break;
    000006B8 4F26                   LDS.L       @R15+,PR
    000006BA D230                   MOV.L       L1761+112,R2; _eval_testge
    000006BC 422B                   JMP         @R2
    000006BE 6EF6                   MOV.L       @R15+,R14
    000006C0              L1247:                           ; case label 
          eval.c   190            case TESTGT:            eval_testgt();          break;
    000006C0 4F26                   LDS.L       @R15+,PR
    000006C2 D22F                   MOV.L       L1761+116,R2; _eval_testgt
    000006C4 422B                   JMP         @R2
    000006C6 6EF6                   MOV.L       @R15+,R14
    000006C8              L1248:                           ; case label 
          eval.c   191            case TESTLE:            eval_testle();          break;
    000006C8 4F26                   LDS.L       @R15+,PR
    000006CA D22E                   MOV.L       L1761+120,R2; _eval_testle
    000006CC 422B                   JMP         @R2
    000006CE 6EF6                   MOV.L       @R15+,R14
    000006D0              L1249:                           ; case label 
          eval.c   192            case TESTLT:            eval_testlt();          break;
    000006D0 4F26                   LDS.L       @R15+,PR
    000006D2 D22D                   MOV.L       L1761+124,R2; _eval_testlt
    000006D4 422B                   JMP         @R2
    000006D6 6EF6                   MOV.L       @R15+,R14
    000006D8              L1250:                           ; case label 
          eval.c   193            case TRANSPOSE:         eval_transpose();       break;
    000006D8 4F26                   LDS.L       @R15+,PR
    000006DA D22C                   MOV.L       L1761+128,R2; _eval_transpose
    000006DC 422B                   JMP         @R2
    000006DE 6EF6                   MOV.L       @R15+,R14
    000006E0              L1251:                           ; case label 
          eval.c   194            case UNIT:              eval_unit();            break;
    000006E0 4F26                   LDS.L       @R15+,PR
    000006E2 D22B                   MOV.L       L1761+132,R2; _eval_unit
    000006E4 422B                   JMP         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006E6 6EF6                   MOV.L       @R15+,R14
    000006E8              L1252:                           ; case label 
          eval.c   195            case ZERO:              eval_zero();            break;
    000006E8 4F26                   LDS.L       @R15+,PR
    000006EA D22A                   MOV.L       L1761+136,R2; _eval_zero
    000006EC 422B                   JMP         @R2
    000006EE 6EF6                   MOV.L       @R15+,R14
    000006F0              L1253:                           ; default label 
          eval.c   196            default:                eval_user_function();   break;
    000006F0 4F26                   LDS.L       @R15+,PR
    000006F2 D229                   MOV.L       L1761+140,R2; _eval_user_function
    000006F4 422B                   JMP         @R2
    000006F6 6EF6                   MOV.L       @R15+,R14
          eval.c   197            }       
          eval.c   198    }
          eval.c   199    
          eval.c   200    void
          eval.c   201    eval_binding(void)
    000006F8              _eval_binding:                   ; function: eval_binding
                                                           ; frame size=8
    000006F8 2FE6                   MOV.L       R14,@-R15
    000006FA 4F22                   STS.L       PR,@-R15
          eval.c   202    {
          eval.c   203            push(get_binding(cadr(p1)));
    000006FC DE27                   MOV.L       L1761+144,R14; _p1
    000006FE 64E2                   MOV.L       @R14,R4
    00000700 8448                   MOV.B       @(8,R4),R0
    00000702 2008                   TST         R0,R0
    00000704 8B4C                   BF          L1273
    00000706 64E2                   MOV.L       @R14,R4
    00000708 A04E                   BRA         L1275
    0000070A 5441                   MOV.L       @(4,R4),R4
    0000070C              L1761:                            
    0000070C <00000000>             .DATA.L     _eval_or
    00000710 <00000000>             .DATA.L     _eval_outer
    00000714 <00000000>             .DATA.L     _eval_polar
    00000718 <00000000>             .DATA.L     _eval_power
    0000071C <00000000>             .DATA.L     _eval_prime
    00000720 <00000000>             .DATA.L     _eval_display
    00000724 <00000000>             .DATA.L     _eval_product
    00000728 <00000000>             .DATA.L     _eval_quote
    0000072C <00000000>             .DATA.L     _eval_quotient
    00000730 <00000000>             .DATA.L     _eval_rank
    00000734 <00000000>             .DATA.L     _eval_rationalize
    00000738 <00000000>             .DATA.L     _eval_real
    0000073C <00000000>             .DATA.L     _eval_rect
    00000740 <00000000>             .DATA.L     _eval_roots
    00000744 <00000000>             .DATA.L     _eval_setq
    00000748 <00000000>             .DATA.L     _eval_sgn
    0000074C <00000000>             .DATA.L     _eval_simplify
    00000750 <00000000>             .DATA.L     _eval_sin
    00000754 <00000000>             .DATA.L     _eval_sinh
    00000758 <00000000>             .DATA.L     _eval_sqrt
    0000075C <00000000>             .DATA.L     _eval_stop
    00000760 <00000000>             .DATA.L     _eval_subst
    00000764 <00000000>             .DATA.L     _eval_sum
    00000768 <00000000>             .DATA.L     _eval_tan




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000076C <00000000>             .DATA.L     _eval_tanh
    00000770 <00000000>             .DATA.L     _eval_taylor
    00000774 <00000000>             .DATA.L     _eval_test
    00000778 <00000000>             .DATA.L     _eval_testeq
    0000077C <00000000>             .DATA.L     _eval_testge
    00000780 <00000000>             .DATA.L     _eval_testgt
    00000784 <00000000>             .DATA.L     _eval_testle
    00000788 <00000000>             .DATA.L     _eval_testlt
    0000078C <00000000>             .DATA.L     _eval_transpose
    00000790 <00000000>             .DATA.L     _eval_unit
    00000794 <00000000>             .DATA.L     _eval_zero
    00000798 <00000000>             .DATA.L     _eval_user_function
    0000079C <00000000>             .DATA.L     _p1
    000007A0              L1273:                            
    000007A0 9365                   MOV.W       L1762,R3   ; H'0570
    000007A2 D233                   MOV.L       L1762+2,R2 ; _symtab
    000007A4 6422                   MOV.L       @R2,R4
    000007A6 343C                   ADD         R3,R4
    000007A8              L1275:                            
    000007A8 8448                   MOV.B       @(8,R4),R0
    000007AA 2008                   TST         R0,R0
    000007AC 8B0C                   BF          L1272
    000007AE 64E2                   MOV.L       @R14,R4
    000007B0 8448                   MOV.B       @(8,R4),R0
    000007B2 2008                   TST         R0,R0
    000007B4 8B02                   BF          L1274
    000007B6 64E2                   MOV.L       @R14,R4
    000007B8 A004                   BRA         L1276
    000007BA 5441                   MOV.L       @(4,R4),R4
    000007BC              L1274:                            
    000007BC 9357                   MOV.W       L1762,R3   ; H'0570
    000007BE D22C                   MOV.L       L1762+2,R2 ; _symtab
    000007C0 6422                   MOV.L       @R2,R4
    000007C2 343C                   ADD         R3,R4
    000007C4              L1276:                            
    000007C4 A004                   BRA         L1277
    000007C6 6442                   MOV.L       @R4,R4
    000007C8              L1272:                            
    000007C8 9351                   MOV.W       L1762,R3   ; H'0570
    000007CA D229                   MOV.L       L1762+2,R2 ; _symtab
    000007CC 6422                   MOV.L       @R2,R4
    000007CE 343C                   ADD         R3,R4
    000007D0              L1277:                            
    000007D0 D328                   MOV.L       L1762+6,R3 ; _get_binding
    000007D2 430B                   JSR         @R3
    000007D4 0009                   NOP
    000007D6 6403                   MOV         R0,R4
    000007D8 4F26                   LDS.L       @R15+,PR
    000007DA D227                   MOV.L       L1762+10,R2; _push
    000007DC 422B                   JMP         @R2
    000007DE 6EF6                   MOV.L       @R15+,R14
          eval.c   204    }
          eval.c   205    
          eval.c   206    // checks a predicate, i.e. check(A = B)
          eval.c   207    
          eval.c   208    void
          eval.c   209    eval_check(void)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007E0              _eval_check:                     ; function: eval_check
                                                           ; frame size=8
    000007E0 2FE6                   MOV.L       R14,@-R15
    000007E2 4F22                   STS.L       PR,@-R15
          eval.c   210    {
          eval.c   211            push(cadr(p1));
    000007E4 DE25                   MOV.L       L1762+14,R14; _p1
    000007E6 64E2                   MOV.L       @R14,R4
    000007E8 8448                   MOV.B       @(8,R4),R0
    000007EA 2008                   TST         R0,R0
    000007EC 8B02                   BF          L1279
    000007EE 64E2                   MOV.L       @R14,R4
    000007F0 A004                   BRA         L1281
    000007F2 5441                   MOV.L       @(4,R4),R4
    000007F4              L1279:                            
    000007F4 933B                   MOV.W       L1762,R3   ; H'0570
    000007F6 D21E                   MOV.L       L1762+2,R2 ; _symtab
    000007F8 6422                   MOV.L       @R2,R4
    000007FA 343C                   ADD         R3,R4
    000007FC              L1281:                            
    000007FC 8448                   MOV.B       @(8,R4),R0
    000007FE 2008                   TST         R0,R0
    00000800 8B0C                   BF          L1278
    00000802 64E2                   MOV.L       @R14,R4
    00000804 8448                   MOV.B       @(8,R4),R0
    00000806 2008                   TST         R0,R0
    00000808 8B02                   BF          L1280
    0000080A 64E2                   MOV.L       @R14,R4
    0000080C A004                   BRA         L1282
    0000080E 5441                   MOV.L       @(4,R4),R4
    00000810              L1280:                            
    00000810 932D                   MOV.W       L1762,R3   ; H'0570
    00000812 D217                   MOV.L       L1762+2,R2 ; _symtab
    00000814 6422                   MOV.L       @R2,R4
    00000816 343C                   ADD         R3,R4
    00000818              L1282:                            
    00000818 A004                   BRA         L1283
    0000081A 6442                   MOV.L       @R4,R4
    0000081C              L1278:                            
    0000081C 9327                   MOV.W       L1762,R3   ; H'0570
    0000081E D214                   MOV.L       L1762+2,R2 ; _symtab
    00000820 6422                   MOV.L       @R2,R4
    00000822 343C                   ADD         R3,R4
    00000824              L1283:                            
    00000824 D314                   MOV.L       L1762+10,R3; _push
    00000826 430B                   JSR         @R3
    00000828 0009                   NOP
          eval.c   212            eval_predicate();
    0000082A D215                   MOV.L       L1762+18,R2; _eval_predicate
    0000082C 420B                   JSR         @R2
    0000082E 0009                   NOP
          eval.c   213            p1 = pop();
    00000830 D314                   MOV.L       L1762+22,R3; _pop
    00000832 430B                   JSR         @R3
    00000834 0009                   NOP
    00000836 2E02                   MOV.L       R0,@R14
          eval.c   214            if (iszero(p1))




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000838 D213                   MOV.L       L1762+26,R2; _iszero
    0000083A 420B                   JSR         @R2
    0000083C 6403                   MOV         R0,R4
    0000083E 2008                   TST         R0,R0
    00000840 8903                   BT          L1284
          eval.c   215                    stop("check(arg): arg is zero");
    00000842 D412                   MOV.L       L1762+30,R4; L1068
    00000844 D212                   MOV.L       L1762+34,R2; _stop
    00000846 420B                   JSR         @R2
    00000848 0009                   NOP
    0000084A              L1284:                            
          eval.c   216            push(symbol(NIL)); // no result is printed
    0000084A 9310                   MOV.W       L1762,R3   ; H'0570
    0000084C D208                   MOV.L       L1762+2,R2 ; _symtab
    0000084E 6422                   MOV.L       @R2,R4
    00000850 4F26                   LDS.L       @R15+,PR
    00000852 343C                   ADD         R3,R4
    00000854 D108                   MOV.L       L1762+10,R1; _push
    00000856 412B                   JMP         @R1
    00000858 6EF6                   MOV.L       @R15+,R14
          eval.c   217    }
          eval.c   218    
          eval.c   219    void
          eval.c   220    eval_det(void)
    0000085A              _eval_det:                       ; function: eval_det
                                                           ; frame size=8
    0000085A 2FE6                   MOV.L       R14,@-R15
    0000085C 4F22                   STS.L       PR,@-R15
          eval.c   221    {
          eval.c   222            push(cadr(p1));
    0000085E DE07                   MOV.L       L1762+14,R14; _p1
    00000860 64E2                   MOV.L       @R14,R4
    00000862 8448                   MOV.B       @(8,R4),R0
    00000864 2008                   TST         R0,R0
    00000866 8B15                   BF          L1286
    00000868 64E2                   MOV.L       @R14,R4
    0000086A A017                   BRA         L1288
    0000086C 5441                   MOV.L       @(4,R4),R4
    0000086E              L1762:                            
    0000086E 0570                   .DATA.W     H'0570
    00000870 <00000000>             .DATA.L     _symtab
    00000874 <00000000>             .DATA.L     _get_binding
    00000878 <00000000>             .DATA.L     _push
    0000087C <00000000>             .DATA.L     _p1
    00000880 <00000000>             .DATA.L     _eval_predicate
    00000884 <00000000>             .DATA.L     _pop
    00000888 <00000000>             .DATA.L     _iszero
    0000088C <00000000>             .DATA.L     L1068
    00000890 <00000000>             .DATA.L     _stop
    00000894              L1286:                            
    00000894 9369                   MOV.W       L1763,R3   ; H'0570
    00000896 D235                   MOV.L       L1763+2,R2 ; _symtab
    00000898 6422                   MOV.L       @R2,R4
    0000089A 343C                   ADD         R3,R4
    0000089C              L1288:                            
    0000089C 8448                   MOV.B       @(8,R4),R0
    0000089E 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008A0 8B0C                   BF          L1285
    000008A2 64E2                   MOV.L       @R14,R4
    000008A4 8448                   MOV.B       @(8,R4),R0
    000008A6 2008                   TST         R0,R0
    000008A8 8B02                   BF          L1287
    000008AA 64E2                   MOV.L       @R14,R4
    000008AC A004                   BRA         L1289
    000008AE 5441                   MOV.L       @(4,R4),R4
    000008B0              L1287:                            
    000008B0 935B                   MOV.W       L1763,R3   ; H'0570
    000008B2 D22E                   MOV.L       L1763+2,R2 ; _symtab
    000008B4 6422                   MOV.L       @R2,R4
    000008B6 343C                   ADD         R3,R4
    000008B8              L1289:                            
    000008B8 A004                   BRA         L1290
    000008BA 6442                   MOV.L       @R4,R4
    000008BC              L1285:                            
    000008BC 9355                   MOV.W       L1763,R3   ; H'0570
    000008BE D22B                   MOV.L       L1763+2,R2 ; _symtab
    000008C0 6422                   MOV.L       @R2,R4
    000008C2 343C                   ADD         R3,R4
    000008C4              L1290:                            
    000008C4 D32A                   MOV.L       L1763+6,R3 ; _push
    000008C6 430B                   JSR         @R3
    000008C8 0009                   NOP
          eval.c   223            eval();
    000008CA BB99                   BSR         _eval
    000008CC 0009                   NOP
          eval.c   224            det();
    000008CE 4F26                   LDS.L       @R15+,PR
    000008D0 D328                   MOV.L       L1763+10,R3; _det
    000008D2 432B                   JMP         @R3
    000008D4 6EF6                   MOV.L       @R15+,R14
          eval.c   225    }
          eval.c   226    
          eval.c   227    void
          eval.c   228    eval_dim(void)
    000008D6              _eval_dim:                       ; function: eval_dim
                                                           ; frame size=20
    000008D6 2FE6                   MOV.L       R14,@-R15
    000008D8 2FD6                   MOV.L       R13,@-R15
    000008DA 2FC6                   MOV.L       R12,@-R15
    000008DC 2FB6                   MOV.L       R11,@-R15
    000008DE 4F22                   STS.L       PR,@-R15
          eval.c   229    {
          eval.c   230            int n;
          eval.c   231            push(cadr(p1));
    000008E0 DB23                   MOV.L       L1763+6,R11; _push
    000008E2 DE25                   MOV.L       L1763+14,R14; _p1
    000008E4 64E2                   MOV.L       @R14,R4
    000008E6 8448                   MOV.B       @(8,R4),R0
    000008E8 2008                   TST         R0,R0
    000008EA 8B02                   BF          L1292
    000008EC 64E2                   MOV.L       @R14,R4
    000008EE A004                   BRA         L1294
    000008F0 5441                   MOV.L       @(4,R4),R4
    000008F2              L1292:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008F2 933A                   MOV.W       L1763,R3   ; H'0570
    000008F4 D21D                   MOV.L       L1763+2,R2 ; _symtab
    000008F6 6422                   MOV.L       @R2,R4
    000008F8 343C                   ADD         R3,R4
    000008FA              L1294:                            
    000008FA 8448                   MOV.B       @(8,R4),R0
    000008FC 2008                   TST         R0,R0
    000008FE 8B0C                   BF          L1291
    00000900 64E2                   MOV.L       @R14,R4
    00000902 8448                   MOV.B       @(8,R4),R0
    00000904 2008                   TST         R0,R0
    00000906 8B02                   BF          L1293
    00000908 64E2                   MOV.L       @R14,R4
    0000090A A004                   BRA         L1295
    0000090C 5441                   MOV.L       @(4,R4),R4
    0000090E              L1293:                            
    0000090E 932C                   MOV.W       L1763,R3   ; H'0570
    00000910 D216                   MOV.L       L1763+2,R2 ; _symtab
    00000912 6422                   MOV.L       @R2,R4
    00000914 343C                   ADD         R3,R4
    00000916              L1295:                            
    00000916 A004                   BRA         L1296
    00000918 6442                   MOV.L       @R4,R4
    0000091A              L1291:                            
    0000091A 9326                   MOV.W       L1763,R3   ; H'0570
    0000091C D213                   MOV.L       L1763+2,R2 ; _symtab
    0000091E 6422                   MOV.L       @R2,R4
    00000920 343C                   ADD         R3,R4
    00000922              L1296:                            
    00000922 4B0B                   JSR         @R11
    00000924 0009                   NOP
          eval.c   232            eval();
    00000926 BB6B                   BSR         _eval
    00000928 0009                   NOP
          eval.c   233            p2 = pop();
    0000092A D214                   MOV.L       L1763+18,R2; _pop
    0000092C 420B                   JSR         @R2
    0000092E 0009                   NOP
    00000930 D313                   MOV.L       L1763+22,R3; _p2
    00000932 2302                   MOV.L       R0,@R3
          eval.c   234            if (iscons(cddr(p1))) {
    00000934 62E2                   MOV.L       @R14,R2
    00000936 8428                   MOV.B       @(8,R2),R0
    00000938 2008                   TST         R0,R0
    0000093A 8B02                   BF          L1299
    0000093C 61E2                   MOV.L       @R14,R1
    0000093E A004                   BRA         L1301
    00000940 5111                   MOV.L       @(4,R1),R1
    00000942              L1299:                            
    00000942 9212                   MOV.W       L1763,R2   ; H'0570
    00000944 D009                   MOV.L       L1763+2,R0 ; _symtab
    00000946 6102                   MOV.L       @R0,R1
    00000948 312C                   ADD         R2,R1
    0000094A              L1301:                            
    0000094A 8418                   MOV.B       @(8,R1),R0
    0000094C 2008                   TST         R0,R0
    0000094E 8B19                   BF          L1298




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000950 63E2                   MOV.L       @R14,R3
    00000952 8438                   MOV.B       @(8,R3),R0
    00000954 2008                   TST         R0,R0
    00000956 8B02                   BF          L1300
    00000958 62E2                   MOV.L       @R14,R2
    0000095A A004                   BRA         L1302
    0000095C 5221                   MOV.L       @(4,R2),R2
    0000095E              L1300:                            
    0000095E 9304                   MOV.W       L1763,R3   ; H'0570
    00000960 D102                   MOV.L       L1763+2,R1 ; _symtab
    00000962 6212                   MOV.L       @R1,R2
    00000964 323C                   ADD         R3,R2
    00000966              L1302:                            
    00000966 A011                   BRA         L1303
    00000968 5221                   MOV.L       @(4,R2),R2
    0000096A              L1763:                            
    0000096A 0570                   .DATA.W     H'0570
    0000096C <00000000>             .DATA.L     _symtab
    00000970 <00000000>             .DATA.L     _push
    00000974 <00000000>             .DATA.L     _det
    00000978 <00000000>             .DATA.L     _p1
    0000097C <00000000>             .DATA.L     _pop
    00000980 <00000000>             .DATA.L     _p2
    00000984              L1298:                            
    00000984 9364                   MOV.W       L1764,R3   ; H'0570
    00000986 D133                   MOV.L       L1764+4,R1 ; _symtab
    00000988 6212                   MOV.L       @R1,R2
    0000098A 323C                   ADD         R3,R2
    0000098C              L1303:                            
    0000098C 8428                   MOV.B       @(8,R2),R0
    0000098E 2008                   TST         R0,R0
    00000990 8B4F                   BF          L1297
          eval.c   235                    push(caddr(p1));
    00000992 64E2                   MOV.L       @R14,R4
    00000994 8448                   MOV.B       @(8,R4),R0
    00000996 2008                   TST         R0,R0
    00000998 8B02                   BF          L1306
    0000099A 64E2                   MOV.L       @R14,R4
    0000099C A004                   BRA         L1311
    0000099E 5441                   MOV.L       @(4,R4),R4
    000009A0              L1306:                            
    000009A0 9356                   MOV.W       L1764,R3   ; H'0570
    000009A2 D22C                   MOV.L       L1764+4,R2 ; _symtab
    000009A4 6422                   MOV.L       @R2,R4
    000009A6 343C                   ADD         R3,R4
    000009A8              L1311:                            
    000009A8 8448                   MOV.B       @(8,R4),R0
    000009AA 2008                   TST         R0,R0
    000009AC 8B0C                   BF          L1305
    000009AE 64E2                   MOV.L       @R14,R4
    000009B0 8448                   MOV.B       @(8,R4),R0
    000009B2 2008                   TST         R0,R0
    000009B4 8B02                   BF          L1307
    000009B6 64E2                   MOV.L       @R14,R4
    000009B8 A004                   BRA         L1312
    000009BA 5441                   MOV.L       @(4,R4),R4
    000009BC              L1307:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009BC 9348                   MOV.W       L1764,R3   ; H'0570
    000009BE D225                   MOV.L       L1764+4,R2 ; _symtab
    000009C0 6422                   MOV.L       @R2,R4
    000009C2 343C                   ADD         R3,R4
    000009C4              L1312:                            
    000009C4 A004                   BRA         L1313
    000009C6 5441                   MOV.L       @(4,R4),R4
    000009C8              L1305:                            
    000009C8 9342                   MOV.W       L1764,R3   ; H'0570
    000009CA D222                   MOV.L       L1764+4,R2 ; _symtab
    000009CC 6422                   MOV.L       @R2,R4
    000009CE 343C                   ADD         R3,R4
    000009D0              L1313:                            
    000009D0 8448                   MOV.B       @(8,R4),R0
    000009D2 2008                   TST         R0,R0
    000009D4 8B20                   BF          L1304
    000009D6 64E2                   MOV.L       @R14,R4
    000009D8 8448                   MOV.B       @(8,R4),R0
    000009DA 2008                   TST         R0,R0
    000009DC 8B02                   BF          L1309
    000009DE 64E2                   MOV.L       @R14,R4
    000009E0 A004                   BRA         L1314
    000009E2 5441                   MOV.L       @(4,R4),R4
    000009E4              L1309:                            
    000009E4 9334                   MOV.W       L1764,R3   ; H'0570
    000009E6 D21B                   MOV.L       L1764+4,R2 ; _symtab
    000009E8 6422                   MOV.L       @R2,R4
    000009EA 343C                   ADD         R3,R4
    000009EC              L1314:                            
    000009EC 8448                   MOV.B       @(8,R4),R0
    000009EE 2008                   TST         R0,R0
    000009F0 8B0C                   BF          L1308
    000009F2 64E2                   MOV.L       @R14,R4
    000009F4 8448                   MOV.B       @(8,R4),R0
    000009F6 2008                   TST         R0,R0
    000009F8 8B02                   BF          L1310
    000009FA 64E2                   MOV.L       @R14,R4
    000009FC A004                   BRA         L1315
    000009FE 5441                   MOV.L       @(4,R4),R4
    00000A00              L1310:                            
    00000A00 9326                   MOV.W       L1764,R3   ; H'0570
    00000A02 D214                   MOV.L       L1764+4,R2 ; _symtab
    00000A04 6422                   MOV.L       @R2,R4
    00000A06 343C                   ADD         R3,R4
    00000A08              L1315:                            
    00000A08 A004                   BRA         L1316
    00000A0A 5441                   MOV.L       @(4,R4),R4
    00000A0C              L1308:                            
    00000A0C 9320                   MOV.W       L1764,R3   ; H'0570
    00000A0E D211                   MOV.L       L1764+4,R2 ; _symtab
    00000A10 6422                   MOV.L       @R2,R4
    00000A12 343C                   ADD         R3,R4
    00000A14              L1316:                            
    00000A14 A004                   BRA         L1317
    00000A16 6442                   MOV.L       @R4,R4
    00000A18              L1304:                            
    00000A18 931A                   MOV.W       L1764,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A1A D20E                   MOV.L       L1764+4,R2 ; _symtab
    00000A1C 6422                   MOV.L       @R2,R4
    00000A1E 343C                   ADD         R3,R4
    00000A20              L1317:                            
    00000A20 4B0B                   JSR         @R11
    00000A22 0009                   NOP
          eval.c   236                    eval();
    00000A24 BAEC                   BSR         _eval
    00000A26 0009                   NOP
          eval.c   237                    n = pop_integer();
    00000A28 D20B                   MOV.L       L1764+8,R2 ; _pop_integer
    00000A2A 420B                   JSR         @R2
    00000A2C 0009                   NOP
    00000A2E A001                   BRA         L1318
    00000A30 6D03                   MOV         R0,R13
    00000A32              L1297:                            
          eval.c   238            } else
          eval.c   239                    n = 1;
    00000A32 ED01                   MOV         #1,R13
    00000A34              L1318:                            
    00000A34 D209                   MOV.L       L1764+12,R2; _p2
    00000A36 6C22                   MOV.L       @R2,R12
    00000A38 84C8                   MOV.B       @(8,R12),R0
    00000A3A 600C                   EXTU.B      R0,R0
    00000A3C 8804                   CMP/EQ      #4,R0
    00000A3E 8911                   BT          L1319
          eval.c   240            if (!istensor(p2))
          eval.c   241                    push_integer(1); // dim of scalar is 1
    00000A40 4F26                   LDS.L       @R15+,PR
    00000A42 E401                   MOV         #1,R4
    00000A44 D106                   MOV.L       L1764+16,R1; _push_integer
    00000A46 6BF6                   MOV.L       @R15+,R11
    00000A48 6CF6                   MOV.L       @R15+,R12
    00000A4A 6DF6                   MOV.L       @R15+,R13
    00000A4C 412B                   JMP         @R1
    00000A4E 6EF6                   MOV.L       @R15+,R14
    00000A50              L1764:                            
    00000A50 0570                   .DATA.W     H'0570
    00000A52 0000                   .DATA.W     0
    00000A54 <00000000>             .DATA.L     _symtab
    00000A58 <00000000>             .DATA.L     _pop_integer
    00000A5C <00000000>             .DATA.L     _p2
    00000A60 <00000000>             .DATA.L     _push_integer
    00000A64              L1319:                            
          eval.c   242            else if (n < 1 || n > p2->u.tensor->ndim)
    00000A64 E101                   MOV         #1,R1
    00000A66 3D13                   CMP/GE      R1,R13
    00000A68 8B03                   BF          L1322
    00000A6A 60C2                   MOV.L       @R12,R0
    00000A6C 6302                   MOV.L       @R0,R3
    00000A6E 3D37                   CMP/GT      R3,R13
    00000A70 8B03                   BF          L1321
    00000A72              L1322:                            
          eval.c   243                    push(p1);
    00000A72 4B0B                   JSR         @R11
    00000A74 64E2                   MOV.L       @R14,R4
    00000A76 A00E                   BRA         L1320




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A78 0009                   NOP
    00000A7A              L1321:                            
          eval.c   244            else
          eval.c   245                    push_integer(p2->u.tensor->dim[n - 1]);
    00000A7A 64D3                   MOV         R13,R4
    00000A7C 4F26                   LDS.L       @R15+,PR
    00000A7E 74FF                   ADD         #-1,R4
    00000A80 D233                   MOV.L       L1765+2,R2 ; _push_integer
    00000A82 4408                   SHLL2       R4
    00000A84 6BF6                   MOV.L       @R15+,R11
    00000A86 63C2                   MOV.L       @R12,R3
    00000A88 6CF6                   MOV.L       @R15+,R12
    00000A8A 7304                   ADD         #4,R3
    00000A8C 6DF6                   MOV.L       @R15+,R13
    00000A8E 343C                   ADD         R3,R4
    00000A90 6442                   MOV.L       @R4,R4
    00000A92 422B                   JMP         @R2
    00000A94 6EF6                   MOV.L       @R15+,R14
    00000A96              L1320:                            
          eval.c   246    }
    00000A96 4F26                   LDS.L       @R15+,PR
    00000A98 6BF6                   MOV.L       @R15+,R11
    00000A9A 6CF6                   MOV.L       @R15+,R12
    00000A9C 6DF6                   MOV.L       @R15+,R13
    00000A9E 000B                   RTS
    00000AA0 6EF6                   MOV.L       @R15+,R14
          eval.c   247    
          eval.c   248    void
          eval.c   249    eval_divisors(void)
    00000AA2              _eval_divisors:                  ; function: eval_divisors
                                                           ; frame size=8
    00000AA2 2FE6                   MOV.L       R14,@-R15
    00000AA4 4F22                   STS.L       PR,@-R15
          eval.c   250    {
          eval.c   251            push(cadr(p1));
    00000AA6 DE2B                   MOV.L       L1765+6,R14; _p1
    00000AA8 64E2                   MOV.L       @R14,R4
    00000AAA 8448                   MOV.B       @(8,R4),R0
    00000AAC 2008                   TST         R0,R0
    00000AAE 8B02                   BF          L1325
    00000AB0 64E2                   MOV.L       @R14,R4
    00000AB2 A004                   BRA         L1327
    00000AB4 5441                   MOV.L       @(4,R4),R4
    00000AB6              L1325:                            
    00000AB6 934A                   MOV.W       L1765,R3   ; H'0570
    00000AB8 D227                   MOV.L       L1765+10,R2; _symtab
    00000ABA 6422                   MOV.L       @R2,R4
    00000ABC 343C                   ADD         R3,R4
    00000ABE              L1327:                            
    00000ABE 8448                   MOV.B       @(8,R4),R0
    00000AC0 2008                   TST         R0,R0
    00000AC2 8B0C                   BF          L1324
    00000AC4 64E2                   MOV.L       @R14,R4
    00000AC6 8448                   MOV.B       @(8,R4),R0
    00000AC8 2008                   TST         R0,R0
    00000ACA 8B02                   BF          L1326
    00000ACC 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000ACE A004                   BRA         L1328
    00000AD0 5441                   MOV.L       @(4,R4),R4
    00000AD2              L1326:                            
    00000AD2 933C                   MOV.W       L1765,R3   ; H'0570
    00000AD4 D220                   MOV.L       L1765+10,R2; _symtab
    00000AD6 6422                   MOV.L       @R2,R4
    00000AD8 343C                   ADD         R3,R4
    00000ADA              L1328:                            
    00000ADA A004                   BRA         L1329
    00000ADC 6442                   MOV.L       @R4,R4
    00000ADE              L1324:                            
    00000ADE 9336                   MOV.W       L1765,R3   ; H'0570
    00000AE0 D21D                   MOV.L       L1765+10,R2; _symtab
    00000AE2 6422                   MOV.L       @R2,R4
    00000AE4 343C                   ADD         R3,R4
    00000AE6              L1329:                            
    00000AE6 D31D                   MOV.L       L1765+14,R3; _push
    00000AE8 430B                   JSR         @R3
    00000AEA 0009                   NOP
          eval.c   252            eval();
    00000AEC BA88                   BSR         _eval
    00000AEE 0009                   NOP
          eval.c   253            divisors();
    00000AF0 4F26                   LDS.L       @R15+,PR
    00000AF2 D31B                   MOV.L       L1765+18,R3; _divisors
    00000AF4 432B                   JMP         @R3
    00000AF6 6EF6                   MOV.L       @R15+,R14
          eval.c   254    }
          eval.c   255    
          eval.c   256    void
          eval.c   257    eval_do(void)
    00000AF8              _eval_do:                        ; function: eval_do
                                                           ; frame size=16
    00000AF8 2FE6                   MOV.L       R14,@-R15
    00000AFA 2FD6                   MOV.L       R13,@-R15
    00000AFC 2FC6                   MOV.L       R12,@-R15
    00000AFE 4F22                   STS.L       PR,@-R15
          eval.c   258    {
          eval.c   259            push(car(p1));
    00000B00 DD16                   MOV.L       L1765+14,R13; _push
    00000B02 DE14                   MOV.L       L1765+6,R14; _p1
    00000B04 64E2                   MOV.L       @R14,R4
    00000B06 8448                   MOV.B       @(8,R4),R0
    00000B08 2008                   TST         R0,R0
    00000B0A 8B02                   BF          L1330
    00000B0C 64E2                   MOV.L       @R14,R4
    00000B0E A004                   BRA         L1331
    00000B10 6442                   MOV.L       @R4,R4
    00000B12              L1330:                            
    00000B12 931C                   MOV.W       L1765,R3   ; H'0570
    00000B14 D210                   MOV.L       L1765+10,R2; _symtab
    00000B16 6422                   MOV.L       @R2,R4
    00000B18 343C                   ADD         R3,R4
    00000B1A              L1331:                            
    00000B1A 4D0B                   JSR         @R13
    00000B1C 0009                   NOP
          eval.c   260            p1 = cdr(p1);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B1E 62E2                   MOV.L       @R14,R2
    00000B20 8428                   MOV.B       @(8,R2),R0
    00000B22 2008                   TST         R0,R0
    00000B24 8B02                   BF          L1332
    00000B26 62E2                   MOV.L       @R14,R2
    00000B28 A004                   BRA         L1333
    00000B2A 5321                   MOV.L       @(4,R2),R3
    00000B2C              L1332:                            
    00000B2C 920F                   MOV.W       L1765,R2   ; H'0570
    00000B2E D10A                   MOV.L       L1765+10,R1; _symtab
    00000B30 6312                   MOV.L       @R1,R3
    00000B32 332C                   ADD         R2,R3
    00000B34              L1333:                            
    00000B34 2E32                   MOV.L       R3,@R14
    00000B36 DC0B                   MOV.L       L1765+22,R12; _pop
          eval.c   261            while (iscons(p1)) {
    00000B38 A02A                   BRA         L1334
    00000B3A 0009                   NOP
    00000B3C              L1335:                            
          eval.c   262                    pop();
    00000B3C 4C0B                   JSR         @R12
    00000B3E 0009                   NOP
          eval.c   263                    push(car(p1));
    00000B40 64E2                   MOV.L       @R14,R4
    00000B42 8448                   MOV.B       @(8,R4),R0
    00000B44 2008                   TST         R0,R0
    00000B46 8B0F                   BF          L1336
    00000B48 64E2                   MOV.L       @R14,R4
    00000B4A A011                   BRA         L1337
    00000B4C 6442                   MOV.L       @R4,R4
    00000B4E              L1765:                            
    00000B4E 0570                   .DATA.W     H'0570
    00000B50 <00000000>             .DATA.L     _push_integer
    00000B54 <00000000>             .DATA.L     _p1
    00000B58 <00000000>             .DATA.L     _symtab
    00000B5C <00000000>             .DATA.L     _push
    00000B60 <00000000>             .DATA.L     _divisors
    00000B64 <00000000>             .DATA.L     _pop
    00000B68              L1336:                            
    00000B68 936C                   MOV.W       L1766,R3   ; H'0570
    00000B6A D237                   MOV.L       L1766+4,R2 ; _symtab
    00000B6C 6422                   MOV.L       @R2,R4
    00000B6E 343C                   ADD         R3,R4
    00000B70              L1337:                            
    00000B70 4D0B                   JSR         @R13
    00000B72 0009                   NOP
          eval.c   264                    eval();
    00000B74 BA44                   BSR         _eval
    00000B76 0009                   NOP
          eval.c   265                    p1 = cdr(p1);
    00000B78 63E2                   MOV.L       @R14,R3
    00000B7A 8438                   MOV.B       @(8,R3),R0
    00000B7C 2008                   TST         R0,R0
    00000B7E 8B02                   BF          L1338
    00000B80 62E2                   MOV.L       @R14,R2
    00000B82 A004                   BRA         L1339
    00000B84 5221                   MOV.L       @(4,R2),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B86              L1338:                            
    00000B86 935D                   MOV.W       L1766,R3   ; H'0570
    00000B88 D12F                   MOV.L       L1766+4,R1 ; _symtab
    00000B8A 6212                   MOV.L       @R1,R2
    00000B8C 323C                   ADD         R3,R2
    00000B8E              L1339:                            
    00000B8E 2E22                   MOV.L       R2,@R14
    00000B90              L1334:                            
    00000B90 63E2                   MOV.L       @R14,R3
    00000B92 8438                   MOV.B       @(8,R3),R0
    00000B94 2008                   TST         R0,R0
    00000B96 89D1                   BT          L1335
          eval.c   266            }
          eval.c   267    }
    00000B98 4F26                   LDS.L       @R15+,PR
    00000B9A 6CF6                   MOV.L       @R15+,R12
    00000B9C 6DF6                   MOV.L       @R15+,R13
    00000B9E 000B                   RTS
    00000BA0 6EF6                   MOV.L       @R15+,R14
          eval.c   268    
          eval.c   269    void
          eval.c   270    eval_dsolve(void)
    00000BA2              _eval_dsolve:                    ; function: eval_dsolve
                                                           ; frame size=12
    00000BA2 2FE6                   MOV.L       R14,@-R15
    00000BA4 2FD6                   MOV.L       R13,@-R15
    00000BA6 4F22                   STS.L       PR,@-R15
          eval.c   271    {
          eval.c   272            push(cadr(p1));
    00000BA8 DD28                   MOV.L       L1766+8,R13; _push
    00000BAA DE29                   MOV.L       L1766+12,R14; _p1
    00000BAC 64E2                   MOV.L       @R14,R4
    00000BAE 8448                   MOV.B       @(8,R4),R0
    00000BB0 2008                   TST         R0,R0
    00000BB2 8B02                   BF          L1341
    00000BB4 64E2                   MOV.L       @R14,R4
    00000BB6 A004                   BRA         L1343
    00000BB8 5441                   MOV.L       @(4,R4),R4
    00000BBA              L1341:                            
    00000BBA 9343                   MOV.W       L1766,R3   ; H'0570
    00000BBC D222                   MOV.L       L1766+4,R2 ; _symtab
    00000BBE 6422                   MOV.L       @R2,R4
    00000BC0 343C                   ADD         R3,R4
    00000BC2              L1343:                            
    00000BC2 8448                   MOV.B       @(8,R4),R0
    00000BC4 2008                   TST         R0,R0
    00000BC6 8B0C                   BF          L1340
    00000BC8 64E2                   MOV.L       @R14,R4
    00000BCA 8448                   MOV.B       @(8,R4),R0
    00000BCC 2008                   TST         R0,R0
    00000BCE 8B02                   BF          L1342
    00000BD0 64E2                   MOV.L       @R14,R4
    00000BD2 A004                   BRA         L1344
    00000BD4 5441                   MOV.L       @(4,R4),R4
    00000BD6              L1342:                            
    00000BD6 9335                   MOV.W       L1766,R3   ; H'0570
    00000BD8 D21B                   MOV.L       L1766+4,R2 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BDA 6422                   MOV.L       @R2,R4
    00000BDC 343C                   ADD         R3,R4
    00000BDE              L1344:                            
    00000BDE A004                   BRA         L1345
    00000BE0 6442                   MOV.L       @R4,R4
    00000BE2              L1340:                            
    00000BE2 932F                   MOV.W       L1766,R3   ; H'0570
    00000BE4 D218                   MOV.L       L1766+4,R2 ; _symtab
    00000BE6 6422                   MOV.L       @R2,R4
    00000BE8 343C                   ADD         R3,R4
    00000BEA              L1345:                            
    00000BEA 4D0B                   JSR         @R13
    00000BEC 0009                   NOP
          eval.c   273            eval();
    00000BEE BA07                   BSR         _eval
    00000BF0 0009                   NOP
          eval.c   274            push(caddr(p1));
    00000BF2 64E2                   MOV.L       @R14,R4
    00000BF4 8448                   MOV.B       @(8,R4),R0
    00000BF6 2008                   TST         R0,R0
    00000BF8 8B02                   BF          L1348
    00000BFA 64E2                   MOV.L       @R14,R4
    00000BFC A004                   BRA         L1353
    00000BFE 5441                   MOV.L       @(4,R4),R4
    00000C00              L1348:                            
    00000C00 9320                   MOV.W       L1766,R3   ; H'0570
    00000C02 D211                   MOV.L       L1766+4,R2 ; _symtab
    00000C04 6422                   MOV.L       @R2,R4
    00000C06 343C                   ADD         R3,R4
    00000C08              L1353:                            
    00000C08 8448                   MOV.B       @(8,R4),R0
    00000C0A 2008                   TST         R0,R0
    00000C0C 8B0C                   BF          L1347
    00000C0E 64E2                   MOV.L       @R14,R4
    00000C10 8448                   MOV.B       @(8,R4),R0
    00000C12 2008                   TST         R0,R0
    00000C14 8B02                   BF          L1349
    00000C16 64E2                   MOV.L       @R14,R4
    00000C18 A004                   BRA         L1354
    00000C1A 5441                   MOV.L       @(4,R4),R4
    00000C1C              L1349:                            
    00000C1C 9312                   MOV.W       L1766,R3   ; H'0570
    00000C1E D20A                   MOV.L       L1766+4,R2 ; _symtab
    00000C20 6422                   MOV.L       @R2,R4
    00000C22 343C                   ADD         R3,R4
    00000C24              L1354:                            
    00000C24 A004                   BRA         L1355
    00000C26 5441                   MOV.L       @(4,R4),R4
    00000C28              L1347:                            
    00000C28 930C                   MOV.W       L1766,R3   ; H'0570
    00000C2A D207                   MOV.L       L1766+4,R2 ; _symtab
    00000C2C 6422                   MOV.L       @R2,R4
    00000C2E 343C                   ADD         R3,R4
    00000C30              L1355:                            
    00000C30 8448                   MOV.B       @(8,R4),R0
    00000C32 2008                   TST         R0,R0
    00000C34 8B28                   BF          L1346




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C36 64E2                   MOV.L       @R14,R4
    00000C38 8448                   MOV.B       @(8,R4),R0
    00000C3A 2008                   TST         R0,R0
    00000C3C 8B0A                   BF          L1351
    00000C3E 64E2                   MOV.L       @R14,R4
    00000C40 A00C                   BRA         L1356
    00000C42 5441                   MOV.L       @(4,R4),R4
    00000C44              L1766:                            
    00000C44 0570                   .DATA.W     H'0570
    00000C46 0000                   .DATA.W     0
    00000C48 <00000000>             .DATA.L     _symtab
    00000C4C <00000000>             .DATA.L     _push
    00000C50 <00000000>             .DATA.L     _p1
    00000C54              L1351:                            
    00000C54 9363                   MOV.W       L1767,R3   ; H'0570
    00000C56 D232                   MOV.L       L1767+2,R2 ; _symtab
    00000C58 6422                   MOV.L       @R2,R4
    00000C5A 343C                   ADD         R3,R4
    00000C5C              L1356:                            
    00000C5C 8448                   MOV.B       @(8,R4),R0
    00000C5E 2008                   TST         R0,R0
    00000C60 8B0C                   BF          L1350
    00000C62 64E2                   MOV.L       @R14,R4
    00000C64 8448                   MOV.B       @(8,R4),R0
    00000C66 2008                   TST         R0,R0
    00000C68 8B02                   BF          L1352
    00000C6A 64E2                   MOV.L       @R14,R4
    00000C6C A004                   BRA         L1357
    00000C6E 5441                   MOV.L       @(4,R4),R4
    00000C70              L1352:                            
    00000C70 9355                   MOV.W       L1767,R3   ; H'0570
    00000C72 D22B                   MOV.L       L1767+2,R2 ; _symtab
    00000C74 6422                   MOV.L       @R2,R4
    00000C76 343C                   ADD         R3,R4
    00000C78              L1357:                            
    00000C78 A004                   BRA         L1358
    00000C7A 5441                   MOV.L       @(4,R4),R4
    00000C7C              L1350:                            
    00000C7C 934F                   MOV.W       L1767,R3   ; H'0570
    00000C7E D228                   MOV.L       L1767+2,R2 ; _symtab
    00000C80 6422                   MOV.L       @R2,R4
    00000C82 343C                   ADD         R3,R4
    00000C84              L1358:                            
    00000C84 A004                   BRA         L1359
    00000C86 6442                   MOV.L       @R4,R4
    00000C88              L1346:                            
    00000C88 9349                   MOV.W       L1767,R3   ; H'0570
    00000C8A D225                   MOV.L       L1767+2,R2 ; _symtab
    00000C8C 6422                   MOV.L       @R2,R4
    00000C8E 343C                   ADD         R3,R4
    00000C90              L1359:                            
    00000C90 4D0B                   JSR         @R13
    00000C92 0009                   NOP
          eval.c   275            eval();
    00000C94 B9B4                   BSR         _eval
    00000C96 0009                   NOP
          eval.c   276            push(cadddr(p1));




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C98 64E2                   MOV.L       @R14,R4
    00000C9A 8448                   MOV.B       @(8,R4),R0
    00000C9C 2008                   TST         R0,R0
    00000C9E 8B02                   BF          L1363
    00000CA0 64E2                   MOV.L       @R14,R4
    00000CA2 A004                   BRA         L1375
    00000CA4 5441                   MOV.L       @(4,R4),R4
    00000CA6              L1363:                            
    00000CA6 933A                   MOV.W       L1767,R3   ; H'0570
    00000CA8 D21D                   MOV.L       L1767+2,R2 ; _symtab
    00000CAA 6422                   MOV.L       @R2,R4
    00000CAC 343C                   ADD         R3,R4
    00000CAE              L1375:                            
    00000CAE 8448                   MOV.B       @(8,R4),R0
    00000CB0 2008                   TST         R0,R0
    00000CB2 8B0C                   BF          L1362
    00000CB4 64E2                   MOV.L       @R14,R4
    00000CB6 8448                   MOV.B       @(8,R4),R0
    00000CB8 2008                   TST         R0,R0
    00000CBA 8B02                   BF          L1364
    00000CBC 64E2                   MOV.L       @R14,R4
    00000CBE A004                   BRA         L1376
    00000CC0 5441                   MOV.L       @(4,R4),R4
    00000CC2              L1364:                            
    00000CC2 932C                   MOV.W       L1767,R3   ; H'0570
    00000CC4 D216                   MOV.L       L1767+2,R2 ; _symtab
    00000CC6 6422                   MOV.L       @R2,R4
    00000CC8 343C                   ADD         R3,R4
    00000CCA              L1376:                            
    00000CCA A004                   BRA         L1377
    00000CCC 5441                   MOV.L       @(4,R4),R4
    00000CCE              L1362:                            
    00000CCE 9326                   MOV.W       L1767,R3   ; H'0570
    00000CD0 D213                   MOV.L       L1767+2,R2 ; _symtab
    00000CD2 6422                   MOV.L       @R2,R4
    00000CD4 343C                   ADD         R3,R4
    00000CD6              L1377:                            
    00000CD6 8448                   MOV.B       @(8,R4),R0
    00000CD8 2008                   TST         R0,R0
    00000CDA 8B23                   BF          L1361
    00000CDC 64E2                   MOV.L       @R14,R4
    00000CDE 8448                   MOV.B       @(8,R4),R0
    00000CE0 2008                   TST         R0,R0
    00000CE2 8B02                   BF          L1366
    00000CE4 64E2                   MOV.L       @R14,R4
    00000CE6 A004                   BRA         L1378
    00000CE8 5441                   MOV.L       @(4,R4),R4
    00000CEA              L1366:                            
    00000CEA 9318                   MOV.W       L1767,R3   ; H'0570
    00000CEC D20C                   MOV.L       L1767+2,R2 ; _symtab
    00000CEE 6422                   MOV.L       @R2,R4
    00000CF0 343C                   ADD         R3,R4
    00000CF2              L1378:                            
    00000CF2 8448                   MOV.B       @(8,R4),R0
    00000CF4 2008                   TST         R0,R0
    00000CF6 8B0C                   BF          L1365
    00000CF8 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CFA 8448                   MOV.B       @(8,R4),R0
    00000CFC 2008                   TST         R0,R0
    00000CFE 8B02                   BF          L1367
    00000D00 64E2                   MOV.L       @R14,R4
    00000D02 A004                   BRA         L1379
    00000D04 5441                   MOV.L       @(4,R4),R4
    00000D06              L1367:                            
    00000D06 930A                   MOV.W       L1767,R3   ; H'0570
    00000D08 D205                   MOV.L       L1767+2,R2 ; _symtab
    00000D0A 6422                   MOV.L       @R2,R4
    00000D0C 343C                   ADD         R3,R4
    00000D0E              L1379:                            
    00000D0E A004                   BRA         L1380
    00000D10 5441                   MOV.L       @(4,R4),R4
    00000D12              L1365:                            
    00000D12 9304                   MOV.W       L1767,R3   ; H'0570
    00000D14 D202                   MOV.L       L1767+2,R2 ; _symtab
    00000D16 6422                   MOV.L       @R2,R4
    00000D18 343C                   ADD         R3,R4
    00000D1A              L1380:                            
    00000D1A A007                   BRA         L1381
    00000D1C 5441                   MOV.L       @(4,R4),R4
    00000D1E              L1767:                            
    00000D1E 0570                   .DATA.W     H'0570
    00000D20 <00000000>             .DATA.L     _symtab
    00000D24              L1361:                            
    00000D24 9368                   MOV.W       L1768,R3   ; H'0570
    00000D26 D235                   MOV.L       L1768+4,R2 ; _symtab
    00000D28 6422                   MOV.L       @R2,R4
    00000D2A 343C                   ADD         R3,R4
    00000D2C              L1381:                            
    00000D2C 8448                   MOV.B       @(8,R4),R0
    00000D2E 2008                   TST         R0,R0
    00000D30 8B48                   BF          L1360
    00000D32 64E2                   MOV.L       @R14,R4
    00000D34 8448                   MOV.B       @(8,R4),R0
    00000D36 2008                   TST         R0,R0
    00000D38 8B02                   BF          L1370
    00000D3A 64E2                   MOV.L       @R14,R4
    00000D3C A004                   BRA         L1382
    00000D3E 5441                   MOV.L       @(4,R4),R4
    00000D40              L1370:                            
    00000D40 935A                   MOV.W       L1768,R3   ; H'0570
    00000D42 D22E                   MOV.L       L1768+4,R2 ; _symtab
    00000D44 6422                   MOV.L       @R2,R4
    00000D46 343C                   ADD         R3,R4
    00000D48              L1382:                            
    00000D48 8448                   MOV.B       @(8,R4),R0
    00000D4A 2008                   TST         R0,R0
    00000D4C 8B0C                   BF          L1369
    00000D4E 64E2                   MOV.L       @R14,R4
    00000D50 8448                   MOV.B       @(8,R4),R0
    00000D52 2008                   TST         R0,R0
    00000D54 8B02                   BF          L1371
    00000D56 64E2                   MOV.L       @R14,R4
    00000D58 A004                   BRA         L1383
    00000D5A 5441                   MOV.L       @(4,R4),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D5C              L1371:                            
    00000D5C 934C                   MOV.W       L1768,R3   ; H'0570
    00000D5E D227                   MOV.L       L1768+4,R2 ; _symtab
    00000D60 6422                   MOV.L       @R2,R4
    00000D62 343C                   ADD         R3,R4
    00000D64              L1383:                            
    00000D64 A004                   BRA         L1384
    00000D66 5441                   MOV.L       @(4,R4),R4
    00000D68              L1369:                            
    00000D68 9346                   MOV.W       L1768,R3   ; H'0570
    00000D6A D224                   MOV.L       L1768+4,R2 ; _symtab
    00000D6C 6422                   MOV.L       @R2,R4
    00000D6E 343C                   ADD         R3,R4
    00000D70              L1384:                            
    00000D70 8448                   MOV.B       @(8,R4),R0
    00000D72 2008                   TST         R0,R0
    00000D74 8B20                   BF          L1368
    00000D76 64E2                   MOV.L       @R14,R4
    00000D78 8448                   MOV.B       @(8,R4),R0
    00000D7A 2008                   TST         R0,R0
    00000D7C 8B02                   BF          L1373
    00000D7E 64E2                   MOV.L       @R14,R4
    00000D80 A004                   BRA         L1385
    00000D82 5441                   MOV.L       @(4,R4),R4
    00000D84              L1373:                            
    00000D84 9338                   MOV.W       L1768,R3   ; H'0570
    00000D86 D21D                   MOV.L       L1768+4,R2 ; _symtab
    00000D88 6422                   MOV.L       @R2,R4
    00000D8A 343C                   ADD         R3,R4
    00000D8C              L1385:                            
    00000D8C 8448                   MOV.B       @(8,R4),R0
    00000D8E 2008                   TST         R0,R0
    00000D90 8B0C                   BF          L1372
    00000D92 64E2                   MOV.L       @R14,R4
    00000D94 8448                   MOV.B       @(8,R4),R0
    00000D96 2008                   TST         R0,R0
    00000D98 8B02                   BF          L1374
    00000D9A 64E2                   MOV.L       @R14,R4
    00000D9C A004                   BRA         L1386
    00000D9E 5441                   MOV.L       @(4,R4),R4
    00000DA0              L1374:                            
    00000DA0 932A                   MOV.W       L1768,R3   ; H'0570
    00000DA2 D216                   MOV.L       L1768+4,R2 ; _symtab
    00000DA4 6422                   MOV.L       @R2,R4
    00000DA6 343C                   ADD         R3,R4
    00000DA8              L1386:                            
    00000DA8 A004                   BRA         L1387
    00000DAA 5441                   MOV.L       @(4,R4),R4
    00000DAC              L1372:                            
    00000DAC 9324                   MOV.W       L1768,R3   ; H'0570
    00000DAE D213                   MOV.L       L1768+4,R2 ; _symtab
    00000DB0 6422                   MOV.L       @R2,R4
    00000DB2 343C                   ADD         R3,R4
    00000DB4              L1387:                            
    00000DB4 A004                   BRA         L1388
    00000DB6 5441                   MOV.L       @(4,R4),R4
    00000DB8              L1368:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DB8 931E                   MOV.W       L1768,R3   ; H'0570
    00000DBA D210                   MOV.L       L1768+4,R2 ; _symtab
    00000DBC 6422                   MOV.L       @R2,R4
    00000DBE 343C                   ADD         R3,R4
    00000DC0              L1388:                            
    00000DC0 A004                   BRA         L1389
    00000DC2 6442                   MOV.L       @R4,R4
    00000DC4              L1360:                            
    00000DC4 9318                   MOV.W       L1768,R3   ; H'0570
    00000DC6 D20D                   MOV.L       L1768+4,R2 ; _symtab
    00000DC8 6422                   MOV.L       @R2,R4
    00000DCA 343C                   ADD         R3,R4
    00000DCC              L1389:                            
    00000DCC 4D0B                   JSR         @R13
    00000DCE 0009                   NOP
          eval.c   277            eval();
    00000DD0 B916                   BSR         _eval
    00000DD2 0009                   NOP
          eval.c   278            dsolve();
    00000DD4 4F26                   LDS.L       @R15+,PR
    00000DD6 6DF6                   MOV.L       @R15+,R13
    00000DD8 D209                   MOV.L       L1768+8,R2 ; _dsolve
    00000DDA 422B                   JMP         @R2
    00000DDC 6EF6                   MOV.L       @R15+,R14
          eval.c   279    }
          eval.c   280    
          eval.c   281    // for example, eval(f,x,2)
          eval.c   282    
          eval.c   283    void
          eval.c   284    eval_eval(void)
    00000DDE              _eval_eval:                      ; function: eval_eval
                                                           ; frame size=16
    00000DDE 2FE6                   MOV.L       R14,@-R15
    00000DE0 2FD6                   MOV.L       R13,@-R15
    00000DE2 2FC6                   MOV.L       R12,@-R15
    00000DE4 4F22                   STS.L       PR,@-R15
          eval.c   285    {
          eval.c   286            push(cadr(p1));
    00000DE6 DD07                   MOV.L       L1768+12,R13; _push
    00000DE8 DE07                   MOV.L       L1768+16,R14; _p1
    00000DEA 64E2                   MOV.L       @R14,R4
    00000DEC 8448                   MOV.B       @(8,R4),R0
    00000DEE 2008                   TST         R0,R0
    00000DF0 8B0C                   BF          L1391
    00000DF2 64E2                   MOV.L       @R14,R4
    00000DF4 A00E                   BRA         L1393
    00000DF6 5441                   MOV.L       @(4,R4),R4
    00000DF8              L1768:                            
    00000DF8 0570                   .DATA.W     H'0570
    00000DFA 0000                   .DATA.W     0
    00000DFC <00000000>             .DATA.L     _symtab
    00000E00 <00000000>             .DATA.L     _dsolve
    00000E04 <00000000>             .DATA.L     _push
    00000E08 <00000000>             .DATA.L     _p1
    00000E0C              L1391:                            
    00000E0C 9366                   MOV.W       L1769,R3   ; H'0570
    00000E0E D234                   MOV.L       L1769+4,R2 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E10 6422                   MOV.L       @R2,R4
    00000E12 343C                   ADD         R3,R4
    00000E14              L1393:                            
    00000E14 8448                   MOV.B       @(8,R4),R0
    00000E16 2008                   TST         R0,R0
    00000E18 8B0C                   BF          L1390
    00000E1A 64E2                   MOV.L       @R14,R4
    00000E1C 8448                   MOV.B       @(8,R4),R0
    00000E1E 2008                   TST         R0,R0
    00000E20 8B02                   BF          L1392
    00000E22 64E2                   MOV.L       @R14,R4
    00000E24 A004                   BRA         L1394
    00000E26 5441                   MOV.L       @(4,R4),R4
    00000E28              L1392:                            
    00000E28 9358                   MOV.W       L1769,R3   ; H'0570
    00000E2A D22D                   MOV.L       L1769+4,R2 ; _symtab
    00000E2C 6422                   MOV.L       @R2,R4
    00000E2E 343C                   ADD         R3,R4
    00000E30              L1394:                            
    00000E30 A004                   BRA         L1395
    00000E32 6442                   MOV.L       @R4,R4
    00000E34              L1390:                            
    00000E34 9352                   MOV.W       L1769,R3   ; H'0570
    00000E36 D22A                   MOV.L       L1769+4,R2 ; _symtab
    00000E38 6422                   MOV.L       @R2,R4
    00000E3A 343C                   ADD         R3,R4
    00000E3C              L1395:                            
    00000E3C 4D0B                   JSR         @R13
    00000E3E 0009                   NOP
          eval.c   287            eval();
    00000E40 B8DE                   BSR         _eval
    00000E42 0009                   NOP
          eval.c   288            p1 = cddr(p1);
    00000E44 62E2                   MOV.L       @R14,R2
    00000E46 8428                   MOV.B       @(8,R2),R0
    00000E48 2008                   TST         R0,R0
    00000E4A 8B02                   BF          L1397
    00000E4C 62E2                   MOV.L       @R14,R2
    00000E4E A004                   BRA         L1399
    00000E50 5321                   MOV.L       @(4,R2),R3
    00000E52              L1397:                            
    00000E52 9243                   MOV.W       L1769,R2   ; H'0570
    00000E54 D122                   MOV.L       L1769+4,R1 ; _symtab
    00000E56 6312                   MOV.L       @R1,R3
    00000E58 332C                   ADD         R2,R3
    00000E5A              L1399:                            
    00000E5A 8438                   MOV.B       @(8,R3),R0
    00000E5C 2008                   TST         R0,R0
    00000E5E 8B0C                   BF          L1396
    00000E60 63E2                   MOV.L       @R14,R3
    00000E62 8438                   MOV.B       @(8,R3),R0
    00000E64 2008                   TST         R0,R0
    00000E66 8B02                   BF          L1398
    00000E68 62E2                   MOV.L       @R14,R2
    00000E6A A004                   BRA         L1400
    00000E6C 5221                   MOV.L       @(4,R2),R2
    00000E6E              L1398:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E6E 9335                   MOV.W       L1769,R3   ; H'0570
    00000E70 D11B                   MOV.L       L1769+4,R1 ; _symtab
    00000E72 6212                   MOV.L       @R1,R2
    00000E74 323C                   ADD         R3,R2
    00000E76              L1400:                            
    00000E76 A004                   BRA         L1401
    00000E78 5221                   MOV.L       @(4,R2),R2
    00000E7A              L1396:                            
    00000E7A 932F                   MOV.W       L1769,R3   ; H'0570
    00000E7C D118                   MOV.L       L1769+4,R1 ; _symtab
    00000E7E 6212                   MOV.L       @R1,R2
    00000E80 323C                   ADD         R3,R2
    00000E82              L1401:                            
    00000E82 DC18                   MOV.L       L1769+8,R12; _subst
          eval.c   289            while (iscons(p1)) {
    00000E84 A05A                   BRA         L1402
    00000E86 2E22                   MOV.L       R2,@R14
    00000E88              L1403:                            
          eval.c   290                    push(car(p1));
    00000E88 64E2                   MOV.L       @R14,R4
    00000E8A 8448                   MOV.B       @(8,R4),R0
    00000E8C 2008                   TST         R0,R0
    00000E8E 8B02                   BF          L1404
    00000E90 64E2                   MOV.L       @R14,R4
    00000E92 A004                   BRA         L1405
    00000E94 6442                   MOV.L       @R4,R4
    00000E96              L1404:                            
    00000E96 9321                   MOV.W       L1769,R3   ; H'0570
    00000E98 D211                   MOV.L       L1769+4,R2 ; _symtab
    00000E9A 6422                   MOV.L       @R2,R4
    00000E9C 343C                   ADD         R3,R4
    00000E9E              L1405:                            
    00000E9E 4D0B                   JSR         @R13
    00000EA0 0009                   NOP
          eval.c   291                    eval();
    00000EA2 B8AD                   BSR         _eval
    00000EA4 0009                   NOP
          eval.c   292                    push(cadr(p1));
    00000EA6 64E2                   MOV.L       @R14,R4
    00000EA8 8448                   MOV.B       @(8,R4),R0
    00000EAA 2008                   TST         R0,R0
    00000EAC 8B02                   BF          L1407
    00000EAE 64E2                   MOV.L       @R14,R4
    00000EB0 A004                   BRA         L1409
    00000EB2 5441                   MOV.L       @(4,R4),R4
    00000EB4              L1407:                            
    00000EB4 9312                   MOV.W       L1769,R3   ; H'0570
    00000EB6 D20A                   MOV.L       L1769+4,R2 ; _symtab
    00000EB8 6422                   MOV.L       @R2,R4
    00000EBA 343C                   ADD         R3,R4
    00000EBC              L1409:                            
    00000EBC 8448                   MOV.B       @(8,R4),R0
    00000EBE 2008                   TST         R0,R0
    00000EC0 8B12                   BF          L1406
    00000EC2 64E2                   MOV.L       @R14,R4
    00000EC4 8448                   MOV.B       @(8,R4),R0
    00000EC6 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EC8 8B02                   BF          L1408
    00000ECA 64E2                   MOV.L       @R14,R4
    00000ECC A004                   BRA         L1410
    00000ECE 5441                   MOV.L       @(4,R4),R4
    00000ED0              L1408:                            
    00000ED0 9304                   MOV.W       L1769,R3   ; H'0570
    00000ED2 D203                   MOV.L       L1769+4,R2 ; _symtab
    00000ED4 6422                   MOV.L       @R2,R4
    00000ED6 343C                   ADD         R3,R4
    00000ED8              L1410:                            
    00000ED8 A00A                   BRA         L1411
    00000EDA 6442                   MOV.L       @R4,R4
    00000EDC              L1769:                            
    00000EDC 0570                   .DATA.W     H'0570
    00000EDE 0000                   .DATA.W     0
    00000EE0 <00000000>             .DATA.L     _symtab
    00000EE4 <00000000>             .DATA.L     _subst
    00000EE8              L1406:                            
    00000EE8 9366                   MOV.W       L1770,R3   ; H'0570
    00000EEA D234                   MOV.L       L1770+4,R2 ; _symtab
    00000EEC 6422                   MOV.L       @R2,R4
    00000EEE 343C                   ADD         R3,R4
    00000EF0              L1411:                            
    00000EF0 4D0B                   JSR         @R13
    00000EF2 0009                   NOP
          eval.c   293                    eval();
    00000EF4 B884                   BSR         _eval
    00000EF6 0009                   NOP
          eval.c   294                    subst();
    00000EF8 4C0B                   JSR         @R12
    00000EFA 0009                   NOP
          eval.c   295                    p1 = cddr(p1);
    00000EFC 62E2                   MOV.L       @R14,R2
    00000EFE 8428                   MOV.B       @(8,R2),R0
    00000F00 2008                   TST         R0,R0
    00000F02 8B02                   BF          L1413
    00000F04 62E2                   MOV.L       @R14,R2
    00000F06 A004                   BRA         L1415
    00000F08 5321                   MOV.L       @(4,R2),R3
    00000F0A              L1413:                            
    00000F0A 9255                   MOV.W       L1770,R2   ; H'0570
    00000F0C D12B                   MOV.L       L1770+4,R1 ; _symtab
    00000F0E 6312                   MOV.L       @R1,R3
    00000F10 332C                   ADD         R2,R3
    00000F12              L1415:                            
    00000F12 8438                   MOV.B       @(8,R3),R0
    00000F14 2008                   TST         R0,R0
    00000F16 8B0C                   BF          L1412
    00000F18 63E2                   MOV.L       @R14,R3
    00000F1A 8438                   MOV.B       @(8,R3),R0
    00000F1C 2008                   TST         R0,R0
    00000F1E 8B02                   BF          L1414
    00000F20 62E2                   MOV.L       @R14,R2
    00000F22 A004                   BRA         L1416
    00000F24 5221                   MOV.L       @(4,R2),R2
    00000F26              L1414:                            
    00000F26 9347                   MOV.W       L1770,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F28 D124                   MOV.L       L1770+4,R1 ; _symtab
    00000F2A 6212                   MOV.L       @R1,R2
    00000F2C 323C                   ADD         R3,R2
    00000F2E              L1416:                            
    00000F2E A004                   BRA         L1417
    00000F30 5221                   MOV.L       @(4,R2),R2
    00000F32              L1412:                            
    00000F32 9341                   MOV.W       L1770,R3   ; H'0570
    00000F34 D121                   MOV.L       L1770+4,R1 ; _symtab
    00000F36 6212                   MOV.L       @R1,R2
    00000F38 323C                   ADD         R3,R2
    00000F3A              L1417:                            
    00000F3A 2E22                   MOV.L       R2,@R14
    00000F3C              L1402:                            
    00000F3C 63E2                   MOV.L       @R14,R3
    00000F3E 8438                   MOV.B       @(8,R3),R0
    00000F40 2008                   TST         R0,R0
    00000F42 89A1                   BT          L1403
          eval.c   296            }
          eval.c   297            eval();
    00000F44 4F26                   LDS.L       @R15+,PR
    00000F46 6CF6                   MOV.L       @R15+,R12
    00000F48 6DF6                   MOV.L       @R15+,R13
    00000F4A A859                   BRA         _eval
    00000F4C 6EF6                   MOV.L       @R15+,R14
          eval.c   298    }
          eval.c   299    
          eval.c   300    void
          eval.c   301    eval_exp(void)
    00000F4E              _eval_exp:                       ; function: eval_exp
                                                           ; frame size=8
    00000F4E 2FE6                   MOV.L       R14,@-R15
    00000F50 4F22                   STS.L       PR,@-R15
          eval.c   302    {
          eval.c   303            push(cadr(p1));
    00000F52 DE1B                   MOV.L       L1770+8,R14; _p1
    00000F54 64E2                   MOV.L       @R14,R4
    00000F56 8448                   MOV.B       @(8,R4),R0
    00000F58 2008                   TST         R0,R0
    00000F5A 8B02                   BF          L1419
    00000F5C 64E2                   MOV.L       @R14,R4
    00000F5E A004                   BRA         L1421
    00000F60 5441                   MOV.L       @(4,R4),R4
    00000F62              L1419:                            
    00000F62 9329                   MOV.W       L1770,R3   ; H'0570
    00000F64 D215                   MOV.L       L1770+4,R2 ; _symtab
    00000F66 6422                   MOV.L       @R2,R4
    00000F68 343C                   ADD         R3,R4
    00000F6A              L1421:                            
    00000F6A 8448                   MOV.B       @(8,R4),R0
    00000F6C 2008                   TST         R0,R0
    00000F6E 8B0C                   BF          L1418
    00000F70 64E2                   MOV.L       @R14,R4
    00000F72 8448                   MOV.B       @(8,R4),R0
    00000F74 2008                   TST         R0,R0
    00000F76 8B02                   BF          L1420
    00000F78 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F7A A004                   BRA         L1422
    00000F7C 5441                   MOV.L       @(4,R4),R4
    00000F7E              L1420:                            
    00000F7E 931B                   MOV.W       L1770,R3   ; H'0570
    00000F80 D20E                   MOV.L       L1770+4,R2 ; _symtab
    00000F82 6422                   MOV.L       @R2,R4
    00000F84 343C                   ADD         R3,R4
    00000F86              L1422:                            
    00000F86 A004                   BRA         L1423
    00000F88 6442                   MOV.L       @R4,R4
    00000F8A              L1418:                            
    00000F8A 9315                   MOV.W       L1770,R3   ; H'0570
    00000F8C D20B                   MOV.L       L1770+4,R2 ; _symtab
    00000F8E 6422                   MOV.L       @R2,R4
    00000F90 343C                   ADD         R3,R4
    00000F92              L1423:                            
    00000F92 D30C                   MOV.L       L1770+12,R3; _push
    00000F94 430B                   JSR         @R3
    00000F96 0009                   NOP
          eval.c   304            eval();
    00000F98 B832                   BSR         _eval
    00000F9A 0009                   NOP
          eval.c   305            exponential();
    00000F9C 4F26                   LDS.L       @R15+,PR
    00000F9E D30A                   MOV.L       L1770+16,R3; _exponential
    00000FA0 432B                   JMP         @R3
    00000FA2 6EF6                   MOV.L       @R15+,R14
          eval.c   306    }
          eval.c   307    
          eval.c   308    void
          eval.c   309    eval_factorial(void)
    00000FA4              _eval_factorial:                 ; function: eval_factorial
                                                           ; frame size=8
    00000FA4 2FE6                   MOV.L       R14,@-R15
    00000FA6 4F22                   STS.L       PR,@-R15
          eval.c   310    {
          eval.c   311            push(cadr(p1));
    00000FA8 DE05                   MOV.L       L1770+8,R14; _p1
    00000FAA 64E2                   MOV.L       @R14,R4
    00000FAC 8448                   MOV.B       @(8,R4),R0
    00000FAE 2008                   TST         R0,R0
    00000FB0 8B0C                   BF          L1425
    00000FB2 64E2                   MOV.L       @R14,R4
    00000FB4 A00E                   BRA         L1427
    00000FB6 5441                   MOV.L       @(4,R4),R4
    00000FB8              L1770:                            
    00000FB8 0570                   .DATA.W     H'0570
    00000FBA 0000                   .DATA.W     0
    00000FBC <00000000>             .DATA.L     _symtab
    00000FC0 <00000000>             .DATA.L     _p1
    00000FC4 <00000000>             .DATA.L     _push
    00000FC8 <00000000>             .DATA.L     _exponential
    00000FCC              L1425:                            
    00000FCC 936E                   MOV.W       L1771,R3   ; H'0570
    00000FCE D238                   MOV.L       L1771+4,R2 ; _symtab
    00000FD0 6422                   MOV.L       @R2,R4
    00000FD2 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FD4              L1427:                            
    00000FD4 8448                   MOV.B       @(8,R4),R0
    00000FD6 2008                   TST         R0,R0
    00000FD8 8B0C                   BF          L1424
    00000FDA 64E2                   MOV.L       @R14,R4
    00000FDC 8448                   MOV.B       @(8,R4),R0
    00000FDE 2008                   TST         R0,R0
    00000FE0 8B02                   BF          L1426
    00000FE2 64E2                   MOV.L       @R14,R4
    00000FE4 A004                   BRA         L1428
    00000FE6 5441                   MOV.L       @(4,R4),R4
    00000FE8              L1426:                            
    00000FE8 9360                   MOV.W       L1771,R3   ; H'0570
    00000FEA D231                   MOV.L       L1771+4,R2 ; _symtab
    00000FEC 6422                   MOV.L       @R2,R4
    00000FEE 343C                   ADD         R3,R4
    00000FF0              L1428:                            
    00000FF0 A004                   BRA         L1429
    00000FF2 6442                   MOV.L       @R4,R4
    00000FF4              L1424:                            
    00000FF4 935A                   MOV.W       L1771,R3   ; H'0570
    00000FF6 D22E                   MOV.L       L1771+4,R2 ; _symtab
    00000FF8 6422                   MOV.L       @R2,R4
    00000FFA 343C                   ADD         R3,R4
    00000FFC              L1429:                            
    00000FFC D32D                   MOV.L       L1771+8,R3 ; _push
    00000FFE 430B                   JSR         @R3
    00001000 0009                   NOP
          eval.c   312            eval();
    00001002 D22D                   MOV.L       L1771+12,R2; _eval
    00001004 420B                   JSR         @R2
    00001006 0009                   NOP
          eval.c   313            factorial();
    00001008 4F26                   LDS.L       @R15+,PR
    0000100A D32C                   MOV.L       L1771+16,R3; _factorial
    0000100C 432B                   JMP         @R3
    0000100E 6EF6                   MOV.L       @R15+,R14
          eval.c   314    }
          eval.c   315    
          eval.c   316    void
          eval.c   317    eval_factorpoly(void)
    00001010              _eval_factorpoly:                ; function: eval_factorpoly
                                                           ; frame size=16
    00001010 2FE6                   MOV.L       R14,@-R15
    00001012 2FD6                   MOV.L       R13,@-R15
    00001014 2FC6                   MOV.L       R12,@-R15
    00001016 4F22                   STS.L       PR,@-R15
          eval.c   318    {
          eval.c   319            p1 = cdr(p1);
    00001018 DE29                   MOV.L       L1771+20,R14; _p1
    0000101A 62E2                   MOV.L       @R14,R2
    0000101C 8428                   MOV.B       @(8,R2),R0
    0000101E 2008                   TST         R0,R0
    00001020 8B02                   BF          L1430
    00001022 62E2                   MOV.L       @R14,R2
    00001024 A004                   BRA         L1431
    00001026 5321                   MOV.L       @(4,R2),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001028              L1430:                            
    00001028 9240                   MOV.W       L1771,R2   ; H'0570
    0000102A D121                   MOV.L       L1771+4,R1 ; _symtab
    0000102C 6312                   MOV.L       @R1,R3
    0000102E 332C                   ADD         R2,R3
    00001030              L1431:                            
    00001030 2E32                   MOV.L       R3,@R14
          eval.c   320            push(car(p1));
    00001032 6433                   MOV         R3,R4
    00001034 DD1F                   MOV.L       L1771+8,R13; _push
    00001036 8448                   MOV.B       @(8,R4),R0
    00001038 2008                   TST         R0,R0
    0000103A 8B02                   BF          L1432
    0000103C 64E2                   MOV.L       @R14,R4
    0000103E A004                   BRA         L1433
    00001040 6442                   MOV.L       @R4,R4
    00001042              L1432:                            
    00001042 9333                   MOV.W       L1771,R3   ; H'0570
    00001044 D21A                   MOV.L       L1771+4,R2 ; _symtab
    00001046 6422                   MOV.L       @R2,R4
    00001048 343C                   ADD         R3,R4
    0000104A              L1433:                            
    0000104A 4D0B                   JSR         @R13
    0000104C 0009                   NOP
          eval.c   321            eval();
    0000104E D31A                   MOV.L       L1771+12,R3; _eval
    00001050 430B                   JSR         @R3
    00001052 0009                   NOP
          eval.c   322            p1 = cdr(p1);
    00001054 63E2                   MOV.L       @R14,R3
    00001056 8438                   MOV.B       @(8,R3),R0
    00001058 2008                   TST         R0,R0
    0000105A 8B02                   BF          L1434
    0000105C 62E2                   MOV.L       @R14,R2
    0000105E A004                   BRA         L1435
    00001060 5221                   MOV.L       @(4,R2),R2
    00001062              L1434:                            
    00001062 9323                   MOV.W       L1771,R3   ; H'0570
    00001064 D112                   MOV.L       L1771+4,R1 ; _symtab
    00001066 6212                   MOV.L       @R1,R2
    00001068 323C                   ADD         R3,R2
    0000106A              L1435:                            
          eval.c   323            push(car(p1));
    0000106A 6423                   MOV         R2,R4
    0000106C 2E22                   MOV.L       R2,@R14
    0000106E 8448                   MOV.B       @(8,R4),R0
    00001070 2008                   TST         R0,R0
    00001072 8B02                   BF          L1436
    00001074 64E2                   MOV.L       @R14,R4
    00001076 A004                   BRA         L1437
    00001078 6442                   MOV.L       @R4,R4
    0000107A              L1436:                            
    0000107A 9317                   MOV.W       L1771,R3   ; H'0570
    0000107C D20C                   MOV.L       L1771+4,R2 ; _symtab
    0000107E 6422                   MOV.L       @R2,R4
    00001080 343C                   ADD         R3,R4
    00001082              L1437:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001082 4D0B                   JSR         @R13
    00001084 0009                   NOP
          eval.c   324            eval();
    00001086 D30C                   MOV.L       L1771+12,R3; _eval
    00001088 430B                   JSR         @R3
    0000108A 0009                   NOP
          eval.c   325            factorpoly();
    0000108C DC0D                   MOV.L       L1771+24,R12; _factorpoly
    0000108E 4C0B                   JSR         @R12
    00001090 0009                   NOP
          eval.c   326            p1 = cdr(p1);
    00001092 63E2                   MOV.L       @R14,R3
    00001094 8438                   MOV.B       @(8,R3),R0
    00001096 2008                   TST         R0,R0
    00001098 8B02                   BF          L1438
    0000109A 62E2                   MOV.L       @R14,R2
    0000109C A031                   BRA         L1750
    0000109E 5221                   MOV.L       @(4,R2),R2
    000010A0              L1438:                            
    000010A0 9304                   MOV.W       L1771,R3   ; H'0570
    000010A2 D103                   MOV.L       L1771+4,R1 ; _symtab
    000010A4 6212                   MOV.L       @R1,R2
    000010A6 323C                   ADD         R3,R2
          eval.c   327            while (iscons(p1)) {
    000010A8 A02B                   BRA         L1750
    000010AA 0009                   NOP
    000010AC              L1771:                            
    000010AC 0570                   .DATA.W     H'0570
    000010AE 0000                   .DATA.W     0
    000010B0 <00000000>             .DATA.L     _symtab
    000010B4 <00000000>             .DATA.L     _push
    000010B8 <00000000>             .DATA.L     _eval
    000010BC <00000000>             .DATA.L     _factorial
    000010C0 <00000000>             .DATA.L     _p1
    000010C4 <00000000>             .DATA.L     _factorpoly
    000010C8              L1441:                            
          eval.c   328                    push(car(p1));
    000010C8 64E2                   MOV.L       @R14,R4
    000010CA 8448                   MOV.B       @(8,R4),R0
    000010CC 2008                   TST         R0,R0
    000010CE 8B02                   BF          L1442
    000010D0 64E2                   MOV.L       @R14,R4
    000010D2 A004                   BRA         L1443
    000010D4 6442                   MOV.L       @R4,R4
    000010D6              L1442:                            
    000010D6 9361                   MOV.W       L1772,R3   ; H'0570
    000010D8 D231                   MOV.L       L1772+4,R2 ; _symtab
    000010DA 6422                   MOV.L       @R2,R4
    000010DC 343C                   ADD         R3,R4
    000010DE              L1443:                            
    000010DE 4D0B                   JSR         @R13
    000010E0 0009                   NOP
          eval.c   329                    eval();
    000010E2 D330                   MOV.L       L1772+8,R3 ; _eval
    000010E4 430B                   JSR         @R3
    000010E6 0009                   NOP
          eval.c   330                    factorpoly();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010E8 4C0B                   JSR         @R12
    000010EA 0009                   NOP
          eval.c   331                    p1 = cdr(p1);
    000010EC 63E2                   MOV.L       @R14,R3
    000010EE 8438                   MOV.B       @(8,R3),R0
    000010F0 2008                   TST         R0,R0
    000010F2 8B02                   BF          L1444
    000010F4 62E2                   MOV.L       @R14,R2
    000010F6 A004                   BRA         L1750
    000010F8 5221                   MOV.L       @(4,R2),R2
    000010FA              L1444:                            
    000010FA 934F                   MOV.W       L1772,R3   ; H'0570
    000010FC D128                   MOV.L       L1772+4,R1 ; _symtab
    000010FE 6212                   MOV.L       @R1,R2
    00001100 323C                   ADD         R3,R2
    00001102              L1750:                            
    00001102 6323                   MOV         R2,R3
    00001104 2E22                   MOV.L       R2,@R14
    00001106 8438                   MOV.B       @(8,R3),R0
    00001108 2008                   TST         R0,R0
    0000110A 89DD                   BT          L1441
          eval.c   332            }
          eval.c   333    }
    0000110C 4F26                   LDS.L       @R15+,PR
    0000110E 6CF6                   MOV.L       @R15+,R12
    00001110 6DF6                   MOV.L       @R15+,R13
    00001112 000B                   RTS
    00001114 6EF6                   MOV.L       @R15+,R14
          eval.c   334    
          eval.c   335    void
          eval.c   336    eval_hermite(void)
    00001116              _eval_hermite:                   ; function: eval_hermite
                                                           ; frame size=8
    00001116 2FE6                   MOV.L       R14,@-R15
    00001118 4F22                   STS.L       PR,@-R15
          eval.c   337    {
          eval.c   338            push(cadr(p1));
    0000111A DE23                   MOV.L       L1772+12,R14; _p1
    0000111C 64E2                   MOV.L       @R14,R4
    0000111E 8448                   MOV.B       @(8,R4),R0
    00001120 2008                   TST         R0,R0
    00001122 8B02                   BF          L1447
    00001124 64E2                   MOV.L       @R14,R4
    00001126 A004                   BRA         L1449
    00001128 5441                   MOV.L       @(4,R4),R4
    0000112A              L1447:                            
    0000112A 9337                   MOV.W       L1772,R3   ; H'0570
    0000112C D21C                   MOV.L       L1772+4,R2 ; _symtab
    0000112E 6422                   MOV.L       @R2,R4
    00001130 343C                   ADD         R3,R4
    00001132              L1449:                            
    00001132 8448                   MOV.B       @(8,R4),R0
    00001134 2008                   TST         R0,R0
    00001136 8B0C                   BF          L1446
    00001138 64E2                   MOV.L       @R14,R4
    0000113A 8448                   MOV.B       @(8,R4),R0
    0000113C 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000113E 8B02                   BF          L1448
    00001140 64E2                   MOV.L       @R14,R4
    00001142 A004                   BRA         L1450
    00001144 5441                   MOV.L       @(4,R4),R4
    00001146              L1448:                            
    00001146 9329                   MOV.W       L1772,R3   ; H'0570
    00001148 D215                   MOV.L       L1772+4,R2 ; _symtab
    0000114A 6422                   MOV.L       @R2,R4
    0000114C 343C                   ADD         R3,R4
    0000114E              L1450:                            
    0000114E A004                   BRA         L1451
    00001150 6442                   MOV.L       @R4,R4
    00001152              L1446:                            
    00001152 9323                   MOV.W       L1772,R3   ; H'0570
    00001154 D212                   MOV.L       L1772+4,R2 ; _symtab
    00001156 6422                   MOV.L       @R2,R4
    00001158 343C                   ADD         R3,R4
    0000115A              L1451:                            
    0000115A D314                   MOV.L       L1772+16,R3; _push
    0000115C 430B                   JSR         @R3
    0000115E 0009                   NOP
          eval.c   339            eval();
    00001160 D210                   MOV.L       L1772+8,R2 ; _eval
    00001162 420B                   JSR         @R2
    00001164 0009                   NOP
          eval.c   340            push(caddr(p1));
    00001166 64E2                   MOV.L       @R14,R4
    00001168 8448                   MOV.B       @(8,R4),R0
    0000116A 2008                   TST         R0,R0
    0000116C 8B02                   BF          L1454
    0000116E 64E2                   MOV.L       @R14,R4
    00001170 A004                   BRA         L1459
    00001172 5441                   MOV.L       @(4,R4),R4
    00001174              L1454:                            
    00001174 9312                   MOV.W       L1772,R3   ; H'0570
    00001176 D20A                   MOV.L       L1772+4,R2 ; _symtab
    00001178 6422                   MOV.L       @R2,R4
    0000117A 343C                   ADD         R3,R4
    0000117C              L1459:                            
    0000117C 8448                   MOV.B       @(8,R4),R0
    0000117E 2008                   TST         R0,R0
    00001180 8B16                   BF          L1453
    00001182 64E2                   MOV.L       @R14,R4
    00001184 8448                   MOV.B       @(8,R4),R0
    00001186 2008                   TST         R0,R0
    00001188 8B02                   BF          L1455
    0000118A 64E2                   MOV.L       @R14,R4
    0000118C A004                   BRA         L1460
    0000118E 5441                   MOV.L       @(4,R4),R4
    00001190              L1455:                            
    00001190 9304                   MOV.W       L1772,R3   ; H'0570
    00001192 D203                   MOV.L       L1772+4,R2 ; _symtab
    00001194 6422                   MOV.L       @R2,R4
    00001196 343C                   ADD         R3,R4
    00001198              L1460:                            
    00001198 A00E                   BRA         L1461
    0000119A 5441                   MOV.L       @(4,R4),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000119C              L1772:                            
    0000119C 0570                   .DATA.W     H'0570
    0000119E 0000                   .DATA.W     0
    000011A0 <00000000>             .DATA.L     _symtab
    000011A4 <00000000>             .DATA.L     _eval
    000011A8 <00000000>             .DATA.L     _p1
    000011AC <00000000>             .DATA.L     _push
    000011B0              L1453:                            
    000011B0 936F                   MOV.W       L1773,R3   ; H'0570
    000011B2 D238                   MOV.L       L1773+2,R2 ; _symtab
    000011B4 6422                   MOV.L       @R2,R4
    000011B6 343C                   ADD         R3,R4
    000011B8              L1461:                            
    000011B8 8448                   MOV.B       @(8,R4),R0
    000011BA 2008                   TST         R0,R0
    000011BC 8B20                   BF          L1452
    000011BE 64E2                   MOV.L       @R14,R4
    000011C0 8448                   MOV.B       @(8,R4),R0
    000011C2 2008                   TST         R0,R0
    000011C4 8B02                   BF          L1457
    000011C6 64E2                   MOV.L       @R14,R4
    000011C8 A004                   BRA         L1462
    000011CA 5441                   MOV.L       @(4,R4),R4
    000011CC              L1457:                            
    000011CC 9361                   MOV.W       L1773,R3   ; H'0570
    000011CE D231                   MOV.L       L1773+2,R2 ; _symtab
    000011D0 6422                   MOV.L       @R2,R4
    000011D2 343C                   ADD         R3,R4
    000011D4              L1462:                            
    000011D4 8448                   MOV.B       @(8,R4),R0
    000011D6 2008                   TST         R0,R0
    000011D8 8B0C                   BF          L1456
    000011DA 64E2                   MOV.L       @R14,R4
    000011DC 8448                   MOV.B       @(8,R4),R0
    000011DE 2008                   TST         R0,R0
    000011E0 8B02                   BF          L1458
    000011E2 64E2                   MOV.L       @R14,R4
    000011E4 A004                   BRA         L1463
    000011E6 5441                   MOV.L       @(4,R4),R4
    000011E8              L1458:                            
    000011E8 9353                   MOV.W       L1773,R3   ; H'0570
    000011EA D22A                   MOV.L       L1773+2,R2 ; _symtab
    000011EC 6422                   MOV.L       @R2,R4
    000011EE 343C                   ADD         R3,R4
    000011F0              L1463:                            
    000011F0 A004                   BRA         L1464
    000011F2 5441                   MOV.L       @(4,R4),R4
    000011F4              L1456:                            
    000011F4 934D                   MOV.W       L1773,R3   ; H'0570
    000011F6 D227                   MOV.L       L1773+2,R2 ; _symtab
    000011F8 6422                   MOV.L       @R2,R4
    000011FA 343C                   ADD         R3,R4
    000011FC              L1464:                            
    000011FC A004                   BRA         L1465
    000011FE 6442                   MOV.L       @R4,R4
    00001200              L1452:                            
    00001200 9347                   MOV.W       L1773,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001202 D224                   MOV.L       L1773+2,R2 ; _symtab
    00001204 6422                   MOV.L       @R2,R4
    00001206 343C                   ADD         R3,R4
    00001208              L1465:                            
    00001208 D323                   MOV.L       L1773+6,R3 ; _push
    0000120A 430B                   JSR         @R3
    0000120C 0009                   NOP
          eval.c   341            eval();
    0000120E D223                   MOV.L       L1773+10,R2; _eval
    00001210 420B                   JSR         @R2
    00001212 0009                   NOP
          eval.c   342            hermite();
    00001214 4F26                   LDS.L       @R15+,PR
    00001216 D322                   MOV.L       L1773+14,R3; _hermite
    00001218 432B                   JMP         @R3
    0000121A 6EF6                   MOV.L       @R15+,R14
          eval.c   343    }
          eval.c   344    
          eval.c   345    void
          eval.c   346    eval_hilbert(void)
    0000121C              _eval_hilbert:                   ; function: eval_hilbert
                                                           ; frame size=8
    0000121C 2FE6                   MOV.L       R14,@-R15
    0000121E 4F22                   STS.L       PR,@-R15
          eval.c   347    {
          eval.c   348            push(cadr(p1));
    00001220 DE20                   MOV.L       L1773+18,R14; _p1
    00001222 64E2                   MOV.L       @R14,R4
    00001224 8448                   MOV.B       @(8,R4),R0
    00001226 2008                   TST         R0,R0
    00001228 8B02                   BF          L1467
    0000122A 64E2                   MOV.L       @R14,R4
    0000122C A004                   BRA         L1469
    0000122E 5441                   MOV.L       @(4,R4),R4
    00001230              L1467:                            
    00001230 932F                   MOV.W       L1773,R3   ; H'0570
    00001232 D218                   MOV.L       L1773+2,R2 ; _symtab
    00001234 6422                   MOV.L       @R2,R4
    00001236 343C                   ADD         R3,R4
    00001238              L1469:                            
    00001238 8448                   MOV.B       @(8,R4),R0
    0000123A 2008                   TST         R0,R0
    0000123C 8B0C                   BF          L1466
    0000123E 64E2                   MOV.L       @R14,R4
    00001240 8448                   MOV.B       @(8,R4),R0
    00001242 2008                   TST         R0,R0
    00001244 8B02                   BF          L1468
    00001246 64E2                   MOV.L       @R14,R4
    00001248 A004                   BRA         L1470
    0000124A 5441                   MOV.L       @(4,R4),R4
    0000124C              L1468:                            
    0000124C 9321                   MOV.W       L1773,R3   ; H'0570
    0000124E D211                   MOV.L       L1773+2,R2 ; _symtab
    00001250 6422                   MOV.L       @R2,R4
    00001252 343C                   ADD         R3,R4
    00001254              L1470:                            
    00001254 A004                   BRA         L1471




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001256 6442                   MOV.L       @R4,R4
    00001258              L1466:                            
    00001258 931B                   MOV.W       L1773,R3   ; H'0570
    0000125A D20E                   MOV.L       L1773+2,R2 ; _symtab
    0000125C 6422                   MOV.L       @R2,R4
    0000125E 343C                   ADD         R3,R4
    00001260              L1471:                            
    00001260 D30D                   MOV.L       L1773+6,R3 ; _push
    00001262 430B                   JSR         @R3
    00001264 0009                   NOP
          eval.c   349            eval();
    00001266 D20D                   MOV.L       L1773+10,R2; _eval
    00001268 420B                   JSR         @R2
    0000126A 0009                   NOP
          eval.c   350            hilbert();
    0000126C 4F26                   LDS.L       @R15+,PR
    0000126E D30E                   MOV.L       L1773+22,R3; _hilbert
    00001270 432B                   JMP         @R3
    00001272 6EF6                   MOV.L       @R15+,R14
          eval.c   351    }
          eval.c   352    
          eval.c   353    void
          eval.c   354    eval_index(void)
    00001274              _eval_index:                     ; function: eval_index
                                                           ; frame size=16
    00001274 2FE6                   MOV.L       R14,@-R15
    00001276 2FD6                   MOV.L       R13,@-R15
    00001278 4F22                   STS.L       PR,@-R15
    0000127A 7FFC                   ADD         #-4,R15
          eval.c   355    {
          eval.c   356            int h;
          eval.c   357            h = tos;
    0000127C D20B                   MOV.L       L1773+26,R2; _tos
    0000127E 6322                   MOV.L       @R2,R3
          eval.c   358            p1 = cdr(p1);
    00001280 DE08                   MOV.L       L1773+18,R14; _p1
    00001282 2F32                   MOV.L       R3,@R15
    00001284 61E2                   MOV.L       @R14,R1
    00001286 8418                   MOV.B       @(8,R1),R0
    00001288 2008                   TST         R0,R0
    0000128A 8B11                   BF          L1472
    0000128C 61E2                   MOV.L       @R14,R1
    0000128E A013                   BRA         L1473
    00001290 5311                   MOV.L       @(4,R1),R3
    00001292              L1773:                            
    00001292 0570                   .DATA.W     H'0570
    00001294 <00000000>             .DATA.L     _symtab
    00001298 <00000000>             .DATA.L     _push
    0000129C <00000000>             .DATA.L     _eval
    000012A0 <00000000>             .DATA.L     _hermite
    000012A4 <00000000>             .DATA.L     _p1
    000012A8 <00000000>             .DATA.L     _hilbert
    000012AC <00000000>             .DATA.L     _tos
    000012B0              L1472:                            
    000012B0 9166                   MOV.W       L1774,R1   ; H'0570
    000012B2 D034                   MOV.L       L1774+4,R0 ; _symtab
    000012B4 6302                   MOV.L       @R0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012B6 331C                   ADD         R1,R3
    000012B8              L1473:                            
    000012B8 2E32                   MOV.L       R3,@R14
    000012BA DD33                   MOV.L       L1774+8,R13; _push
          eval.c   359            while (iscons(p1)) {
    000012BC A01C                   BRA         L1474
    000012BE 0009                   NOP
    000012C0              L1475:                            
          eval.c   360                    push(car(p1));
    000012C0 64E2                   MOV.L       @R14,R4
    000012C2 8448                   MOV.B       @(8,R4),R0
    000012C4 2008                   TST         R0,R0
    000012C6 8B02                   BF          L1476
    000012C8 64E2                   MOV.L       @R14,R4
    000012CA A004                   BRA         L1477
    000012CC 6442                   MOV.L       @R4,R4
    000012CE              L1476:                            
    000012CE 9357                   MOV.W       L1774,R3   ; H'0570
    000012D0 D22C                   MOV.L       L1774+4,R2 ; _symtab
    000012D2 6422                   MOV.L       @R2,R4
    000012D4 343C                   ADD         R3,R4
    000012D6              L1477:                            
    000012D6 4D0B                   JSR         @R13
    000012D8 0009                   NOP
          eval.c   361                    eval();
    000012DA D32C                   MOV.L       L1774+12,R3; _eval
    000012DC 430B                   JSR         @R3
    000012DE 0009                   NOP
          eval.c   362                    p1 = cdr(p1);
    000012E0 63E2                   MOV.L       @R14,R3
    000012E2 8438                   MOV.B       @(8,R3),R0
    000012E4 2008                   TST         R0,R0
    000012E6 8B02                   BF          L1478
    000012E8 62E2                   MOV.L       @R14,R2
    000012EA A004                   BRA         L1479
    000012EC 5221                   MOV.L       @(4,R2),R2
    000012EE              L1478:                            
    000012EE 9347                   MOV.W       L1774,R3   ; H'0570
    000012F0 D124                   MOV.L       L1774+4,R1 ; _symtab
    000012F2 6212                   MOV.L       @R1,R2
    000012F4 323C                   ADD         R3,R2
    000012F6              L1479:                            
    000012F6 2E22                   MOV.L       R2,@R14
    000012F8              L1474:                            
    000012F8 63E2                   MOV.L       @R14,R3
    000012FA 8438                   MOV.B       @(8,R3),R0
    000012FC 2008                   TST         R0,R0
    000012FE 89DF                   BT          L1475
          eval.c   363            }
          eval.c   364            index_function(tos - h);
    00001300 63F2                   MOV.L       @R15,R3
    00001302 D223                   MOV.L       L1774+16,R2; _tos
    00001304 D123                   MOV.L       L1774+20,R1; _index_function
    00001306 6422                   MOV.L       @R2,R4
    00001308 3438                   SUB         R3,R4
    0000130A 7F04                   ADD         #4,R15
    0000130C 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000130E 6DF6                   MOV.L       @R15+,R13
    00001310 412B                   JMP         @R1
    00001312 6EF6                   MOV.L       @R15+,R14
          eval.c   365    }
          eval.c   366    
          eval.c   367    void
          eval.c   368    eval_inv(void)
    00001314              _eval_inv:                       ; function: eval_inv
                                                           ; frame size=8
    00001314 2FE6                   MOV.L       R14,@-R15
    00001316 4F22                   STS.L       PR,@-R15
          eval.c   369    {
          eval.c   370            push(cadr(p1));
    00001318 DE1F                   MOV.L       L1774+24,R14; _p1
    0000131A 64E2                   MOV.L       @R14,R4
    0000131C 8448                   MOV.B       @(8,R4),R0
    0000131E 2008                   TST         R0,R0
    00001320 8B02                   BF          L1481
    00001322 64E2                   MOV.L       @R14,R4
    00001324 A004                   BRA         L1483
    00001326 5441                   MOV.L       @(4,R4),R4
    00001328              L1481:                            
    00001328 932A                   MOV.W       L1774,R3   ; H'0570
    0000132A D216                   MOV.L       L1774+4,R2 ; _symtab
    0000132C 6422                   MOV.L       @R2,R4
    0000132E 343C                   ADD         R3,R4
    00001330              L1483:                            
    00001330 8448                   MOV.B       @(8,R4),R0
    00001332 2008                   TST         R0,R0
    00001334 8B0C                   BF          L1480
    00001336 64E2                   MOV.L       @R14,R4
    00001338 8448                   MOV.B       @(8,R4),R0
    0000133A 2008                   TST         R0,R0
    0000133C 8B02                   BF          L1482
    0000133E 64E2                   MOV.L       @R14,R4
    00001340 A004                   BRA         L1484
    00001342 5441                   MOV.L       @(4,R4),R4
    00001344              L1482:                            
    00001344 931C                   MOV.W       L1774,R3   ; H'0570
    00001346 D20F                   MOV.L       L1774+4,R2 ; _symtab
    00001348 6422                   MOV.L       @R2,R4
    0000134A 343C                   ADD         R3,R4
    0000134C              L1484:                            
    0000134C A004                   BRA         L1485
    0000134E 6442                   MOV.L       @R4,R4
    00001350              L1480:                            
    00001350 9316                   MOV.W       L1774,R3   ; H'0570
    00001352 D20C                   MOV.L       L1774+4,R2 ; _symtab
    00001354 6422                   MOV.L       @R2,R4
    00001356 343C                   ADD         R3,R4
    00001358              L1485:                            
    00001358 D30B                   MOV.L       L1774+8,R3 ; _push
    0000135A 430B                   JSR         @R3
    0000135C 0009                   NOP
          eval.c   371            eval();
    0000135E D20B                   MOV.L       L1774+12,R2; _eval
    00001360 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001362 0009                   NOP
          eval.c   372            inv();
    00001364 4F26                   LDS.L       @R15+,PR
    00001366 D30D                   MOV.L       L1774+28,R3; _inv
    00001368 432B                   JMP         @R3
    0000136A 6EF6                   MOV.L       @R15+,R14
          eval.c   373    }
          eval.c   374    
          eval.c   375    void
          eval.c   376    eval_invg(void)
    0000136C              _eval_invg:                      ; function: eval_invg
                                                           ; frame size=8
    0000136C 2FE6                   MOV.L       R14,@-R15
    0000136E 4F22                   STS.L       PR,@-R15
          eval.c   377    {
          eval.c   378            push(cadr(p1));
    00001370 DE09                   MOV.L       L1774+24,R14; _p1
    00001372 64E2                   MOV.L       @R14,R4
    00001374 8448                   MOV.B       @(8,R4),R0
    00001376 2008                   TST         R0,R0
    00001378 8B12                   BF          L1487
    0000137A 64E2                   MOV.L       @R14,R4
    0000137C A014                   BRA         L1489
    0000137E 5441                   MOV.L       @(4,R4),R4
    00001380              L1774:                            
    00001380 0570                   .DATA.W     H'0570
    00001382 0000                   .DATA.W     0
    00001384 <00000000>             .DATA.L     _symtab
    00001388 <00000000>             .DATA.L     _push
    0000138C <00000000>             .DATA.L     _eval
    00001390 <00000000>             .DATA.L     _tos
    00001394 <00000000>             .DATA.L     _index_function
    00001398 <00000000>             .DATA.L     _p1
    0000139C <00000000>             .DATA.L     _inv
    000013A0              L1487:                            
    000013A0 9359                   MOV.W       L1775,R3   ; H'0570
    000013A2 D22D                   MOV.L       L1775+2,R2 ; _symtab
    000013A4 6422                   MOV.L       @R2,R4
    000013A6 343C                   ADD         R3,R4
    000013A8              L1489:                            
    000013A8 8448                   MOV.B       @(8,R4),R0
    000013AA 2008                   TST         R0,R0
    000013AC 8B0C                   BF          L1486
    000013AE 64E2                   MOV.L       @R14,R4
    000013B0 8448                   MOV.B       @(8,R4),R0
    000013B2 2008                   TST         R0,R0
    000013B4 8B02                   BF          L1488
    000013B6 64E2                   MOV.L       @R14,R4
    000013B8 A004                   BRA         L1490
    000013BA 5441                   MOV.L       @(4,R4),R4
    000013BC              L1488:                            
    000013BC 934B                   MOV.W       L1775,R3   ; H'0570
    000013BE D226                   MOV.L       L1775+2,R2 ; _symtab
    000013C0 6422                   MOV.L       @R2,R4
    000013C2 343C                   ADD         R3,R4
    000013C4              L1490:                            
    000013C4 A004                   BRA         L1491




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013C6 6442                   MOV.L       @R4,R4
    000013C8              L1486:                            
    000013C8 9345                   MOV.W       L1775,R3   ; H'0570
    000013CA D223                   MOV.L       L1775+2,R2 ; _symtab
    000013CC 6422                   MOV.L       @R2,R4
    000013CE 343C                   ADD         R3,R4
    000013D0              L1491:                            
    000013D0 D322                   MOV.L       L1775+6,R3 ; _push
    000013D2 430B                   JSR         @R3
    000013D4 0009                   NOP
          eval.c   379            eval();
    000013D6 D222                   MOV.L       L1775+10,R2; _eval
    000013D8 420B                   JSR         @R2
    000013DA 0009                   NOP
          eval.c   380            invg();
    000013DC 4F26                   LDS.L       @R15+,PR
    000013DE D321                   MOV.L       L1775+14,R3; _invg
    000013E0 432B                   JMP         @R3
    000013E2 6EF6                   MOV.L       @R15+,R14
          eval.c   381    }
          eval.c   382    
          eval.c   383    void
          eval.c   384    eval_isinteger(void)
    000013E4              _eval_isinteger:                 ; function: eval_isinteger
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __dtoi, __itod, __ned
    000013E4 2FE6                   MOV.L       R14,@-R15
    000013E6 2FD6                   MOV.L       R13,@-R15
    000013E8 4F22                   STS.L       PR,@-R15
          eval.c   385    {
          eval.c   386            int n;
          eval.c   387            push(cadr(p1));
    000013EA DD1C                   MOV.L       L1775+6,R13; _push
    000013EC DE1E                   MOV.L       L1775+18,R14; _p1
    000013EE 64E2                   MOV.L       @R14,R4
    000013F0 8448                   MOV.B       @(8,R4),R0
    000013F2 2008                   TST         R0,R0
    000013F4 8B02                   BF          L1493
    000013F6 64E2                   MOV.L       @R14,R4
    000013F8 A004                   BRA         L1495
    000013FA 5441                   MOV.L       @(4,R4),R4
    000013FC              L1493:                            
    000013FC 932B                   MOV.W       L1775,R3   ; H'0570
    000013FE D216                   MOV.L       L1775+2,R2 ; _symtab
    00001400 6422                   MOV.L       @R2,R4
    00001402 343C                   ADD         R3,R4
    00001404              L1495:                            
    00001404 8448                   MOV.B       @(8,R4),R0
    00001406 2008                   TST         R0,R0
    00001408 8B0C                   BF          L1492
    0000140A 64E2                   MOV.L       @R14,R4
    0000140C 8448                   MOV.B       @(8,R4),R0
    0000140E 2008                   TST         R0,R0
    00001410 8B02                   BF          L1494
    00001412 64E2                   MOV.L       @R14,R4
    00001414 A004                   BRA         L1496




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001416 5441                   MOV.L       @(4,R4),R4
    00001418              L1494:                            
    00001418 931D                   MOV.W       L1775,R3   ; H'0570
    0000141A D20F                   MOV.L       L1775+2,R2 ; _symtab
    0000141C 6422                   MOV.L       @R2,R4
    0000141E 343C                   ADD         R3,R4
    00001420              L1496:                            
    00001420 A004                   BRA         L1497
    00001422 6442                   MOV.L       @R4,R4
    00001424              L1492:                            
    00001424 9317                   MOV.W       L1775,R3   ; H'0570
    00001426 D20C                   MOV.L       L1775+2,R2 ; _symtab
    00001428 6422                   MOV.L       @R2,R4
    0000142A 343C                   ADD         R3,R4
    0000142C              L1497:                            
    0000142C 4D0B                   JSR         @R13
    0000142E 0009                   NOP
          eval.c   388            eval();
    00001430 D30B                   MOV.L       L1775+10,R3; _eval
    00001432 430B                   JSR         @R3
    00001434 0009                   NOP
          eval.c   389            p1 = pop();
    00001436 D20D                   MOV.L       L1775+22,R2; _pop
    00001438 420B                   JSR         @R2
    0000143A 0009                   NOP
    0000143C 2E02                   MOV.L       R0,@R14
    0000143E 6403                   MOV         R0,R4
    00001440 8408                   MOV.B       @(8,R0),R0
    00001442 600C                   EXTU.B      R0,R0
    00001444 8801                   CMP/EQ      #1,R0
    00001446 8B15                   BF          L1498
          eval.c   390            if (isrational(p1)) {
          eval.c   391                    if (isinteger(p1))
    00001448 D209                   MOV.L       L1775+26,R2; _isinteger
    0000144A 420B                   JSR         @R2
    0000144C 0009                   NOP
    0000144E 2008                   TST         R0,R0
    00001450 8B27                   BF          L1125
    00001452 A029                   BRA         L1126
    00001454 0009                   NOP
    00001456              L1775:                            
    00001456 0570                   .DATA.W     H'0570
    00001458 <00000000>             .DATA.L     _symtab
    0000145C <00000000>             .DATA.L     _push
    00001460 <00000000>             .DATA.L     _eval
    00001464 <00000000>             .DATA.L     _invg
    00001468 <00000000>             .DATA.L     _p1
    0000146C <00000000>             .DATA.L     _pop
    00001470 <00000000>             .DATA.L     _isinteger
    00001474              L1498:                            
          eval.c   392                            push(one);
          eval.c   393                    else
          eval.c   394                            push(zero);
          eval.c   395                    return;
          eval.c   396            }
          eval.c   397            if (isdouble(p1)) {
    00001474 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001476 600C                   EXTU.B      R0,R0
    00001478 8802                   CMP/EQ      #2,R0
    0000147A 8B1B                   BF          L1502
          eval.c   398                    n = (int) p1->u.d;
    0000147C 5241                   MOV.L       @(4,R4),R2
    0000147E 2F26                   MOV.L       R2,@-R15
    00001480 6242                   MOV.L       @R4,R2
    00001482 D337                   MOV.L       L1776+4,R3 ; __dtoi
    00001484 430B                   JSR         @R3
    00001486 2F26                   MOV.L       R2,@-R15
          eval.c   399                    if (n == p1->u.d)
    00001488 D236                   MOV.L       L1776+8,R2 ; __itod
    0000148A 6503                   MOV         R0,R5
    0000148C 7FF8                   ADD         #-8,R15
    0000148E 420B                   JSR         @R2
    00001490 2FF6                   MOV.L       R15,@-R15
    00001492 5341                   MOV.L       @(4,R4),R3
    00001494 D234                   MOV.L       L1776+12,R2; __ned
    00001496 2F36                   MOV.L       R3,@-R15
    00001498 6342                   MOV.L       @R4,R3
    0000149A 420B                   JSR         @R2
    0000149C 2F36                   MOV.L       R3,@-R15
    0000149E 8800                   CMP/EQ      #0,R0
    000014A0 8B02                   BF          L1126
    000014A2              L1125:
          eval.c   400                            push(one);
    000014A2 D332                   MOV.L       L1776+16,R3; _one
    000014A4 A002                   BRA         L1751
    000014A6 6432                   MOV.L       @R3,R4
    000014A8              L1126:
          eval.c   401                    else
          eval.c   402                            push(zero);
    000014A8 D131                   MOV.L       L1776+20,R1; _zero
    000014AA 6412                   MOV.L       @R1,R4
    000014AC              L1751:                            
    000014AC 4D0B                   JSR         @R13
    000014AE 0009                   NOP
          eval.c   403                    return;
    000014B0 A00B                   BRA         L1501
    000014B2 0009                   NOP
    000014B4              L1502:                            
          eval.c   404            }
          eval.c   405            push_symbol(ISINTEGER);
    000014B4 D32F                   MOV.L       L1776+24,R3; _push_symbol
    000014B6 430B                   JSR         @R3
    000014B8 E442                   MOV         #66,R4
          eval.c   406            push(p1);
    000014BA 4D0B                   JSR         @R13
    000014BC 64E2                   MOV.L       @R14,R4
          eval.c   407            list(2);
    000014BE E402                   MOV         #2,R4
    000014C0 4F26                   LDS.L       @R15+,PR
    000014C2 6DF6                   MOV.L       @R15+,R13
    000014C4 D22C                   MOV.L       L1776+28,R2; _list
    000014C6 422B                   JMP         @R2
    000014C8 6EF6                   MOV.L       @R15+,R14
    000014CA              L1501:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          eval.c   408    }
    000014CA 4F26                   LDS.L       @R15+,PR
    000014CC 6DF6                   MOV.L       @R15+,R13
    000014CE 000B                   RTS
    000014D0 6EF6                   MOV.L       @R15+,R14
          eval.c   409    
          eval.c   410    void
          eval.c   411    eval_multiply(void)
    000014D2              _eval_multiply:                  ; function: eval_multiply
                                                           ; frame size=16
    000014D2 2FE6                   MOV.L       R14,@-R15
    000014D4 2FD6                   MOV.L       R13,@-R15
    000014D6 2FC6                   MOV.L       R12,@-R15
    000014D8 4F22                   STS.L       PR,@-R15
          eval.c   412    {
          eval.c   413            push(cadr(p1));
    000014DA DD28                   MOV.L       L1776+32,R13; _push
    000014DC DE28                   MOV.L       L1776+36,R14; _p1
    000014DE 64E2                   MOV.L       @R14,R4
    000014E0 8448                   MOV.B       @(8,R4),R0
    000014E2 2008                   TST         R0,R0
    000014E4 8B02                   BF          L1506
    000014E6 64E2                   MOV.L       @R14,R4
    000014E8 A004                   BRA         L1508
    000014EA 5441                   MOV.L       @(4,R4),R4
    000014EC              L1506:                            
    000014EC 9336                   MOV.W       L1776,R3   ; H'0570
    000014EE D225                   MOV.L       L1776+40,R2; _symtab
    000014F0 6422                   MOV.L       @R2,R4
    000014F2 343C                   ADD         R3,R4
    000014F4              L1508:                            
    000014F4 8448                   MOV.B       @(8,R4),R0
    000014F6 2008                   TST         R0,R0
    000014F8 8B0C                   BF          L1505
    000014FA 64E2                   MOV.L       @R14,R4
    000014FC 8448                   MOV.B       @(8,R4),R0
    000014FE 2008                   TST         R0,R0
    00001500 8B02                   BF          L1507
    00001502 64E2                   MOV.L       @R14,R4
    00001504 A004                   BRA         L1509
    00001506 5441                   MOV.L       @(4,R4),R4
    00001508              L1507:                            
    00001508 9328                   MOV.W       L1776,R3   ; H'0570
    0000150A D21E                   MOV.L       L1776+40,R2; _symtab
    0000150C 6422                   MOV.L       @R2,R4
    0000150E 343C                   ADD         R3,R4
    00001510              L1509:                            
    00001510 A004                   BRA         L1510
    00001512 6442                   MOV.L       @R4,R4
    00001514              L1505:                            
    00001514 9322                   MOV.W       L1776,R3   ; H'0570
    00001516 D21B                   MOV.L       L1776+40,R2; _symtab
    00001518 6422                   MOV.L       @R2,R4
    0000151A 343C                   ADD         R3,R4
    0000151C              L1510:                            
    0000151C 4D0B                   JSR         @R13
    0000151E 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          eval.c   414            eval();
    00001520 D319                   MOV.L       L1776+44,R3; _eval
    00001522 430B                   JSR         @R3
    00001524 0009                   NOP
          eval.c   415            p1 = cddr(p1);
    00001526 62E2                   MOV.L       @R14,R2
    00001528 8428                   MOV.B       @(8,R2),R0
    0000152A 2008                   TST         R0,R0
    0000152C 8B02                   BF          L1512
    0000152E 62E2                   MOV.L       @R14,R2
    00001530 A004                   BRA         L1514
    00001532 5321                   MOV.L       @(4,R2),R3
    00001534              L1512:                            
    00001534 9212                   MOV.W       L1776,R2   ; H'0570
    00001536 D113                   MOV.L       L1776+40,R1; _symtab
    00001538 6312                   MOV.L       @R1,R3
    0000153A 332C                   ADD         R2,R3
    0000153C              L1514:                            
    0000153C 8438                   MOV.B       @(8,R3),R0
    0000153E 2008                   TST         R0,R0
    00001540 8B24                   BF          L1511
    00001542 63E2                   MOV.L       @R14,R3
    00001544 8438                   MOV.B       @(8,R3),R0
    00001546 2008                   TST         R0,R0
    00001548 8B02                   BF          L1513
    0000154A 62E2                   MOV.L       @R14,R2
    0000154C A004                   BRA         L1515
    0000154E 5221                   MOV.L       @(4,R2),R2
    00001550              L1513:                            
    00001550 9304                   MOV.W       L1776,R3   ; H'0570
    00001552 D10C                   MOV.L       L1776+40,R1; _symtab
    00001554 6212                   MOV.L       @R1,R2
    00001556 323C                   ADD         R3,R2
    00001558              L1515:                            
    00001558 A01C                   BRA         L1516
    0000155A 5221                   MOV.L       @(4,R2),R2
    0000155C              L1776:                            
    0000155C 0570                   .DATA.W     H'0570
    0000155E 0000                   .DATA.W     0
    00001560 <00000000>             .DATA.L     __dtoi
    00001564 <00000000>             .DATA.L     __itod
    00001568 <00000000>             .DATA.L     __ned
    0000156C <00000000>             .DATA.L     _one
    00001570 <00000000>             .DATA.L     _zero
    00001574 <00000000>             .DATA.L     _push_symbol
    00001578 <00000000>             .DATA.L     _list
    0000157C <00000000>             .DATA.L     _push
    00001580 <00000000>             .DATA.L     _p1
    00001584 <00000000>             .DATA.L     _symtab
    00001588 <00000000>             .DATA.L     _eval
    0000158C              L1511:                            
    0000158C 9368                   MOV.W       L1777,R3   ; H'0570
    0000158E D135                   MOV.L       L1777+4,R1 ; _symtab
    00001590 6212                   MOV.L       @R1,R2
    00001592 323C                   ADD         R3,R2
    00001594              L1516:                            
    00001594 DC34                   MOV.L       L1777+8,R12; _multiply




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          eval.c   416            while (iscons(p1)) {
    00001596 A01E                   BRA         L1517
    00001598 2E22                   MOV.L       R2,@R14
    0000159A              L1518:                            
          eval.c   417                    push(car(p1));
    0000159A 64E2                   MOV.L       @R14,R4
    0000159C 8448                   MOV.B       @(8,R4),R0
    0000159E 2008                   TST         R0,R0
    000015A0 8B02                   BF          L1519
    000015A2 64E2                   MOV.L       @R14,R4
    000015A4 A004                   BRA         L1520
    000015A6 6442                   MOV.L       @R4,R4
    000015A8              L1519:                            
    000015A8 935A                   MOV.W       L1777,R3   ; H'0570
    000015AA D22E                   MOV.L       L1777+4,R2 ; _symtab
    000015AC 6422                   MOV.L       @R2,R4
    000015AE 343C                   ADD         R3,R4
    000015B0              L1520:                            
    000015B0 4D0B                   JSR         @R13
    000015B2 0009                   NOP
          eval.c   418                    eval();
    000015B4 D32D                   MOV.L       L1777+12,R3; _eval
    000015B6 430B                   JSR         @R3
    000015B8 0009                   NOP
          eval.c   419                    multiply();
    000015BA 4C0B                   JSR         @R12
    000015BC 0009                   NOP
          eval.c   420                    p1 = cdr(p1);
    000015BE 63E2                   MOV.L       @R14,R3
    000015C0 8438                   MOV.B       @(8,R3),R0
    000015C2 2008                   TST         R0,R0
    000015C4 8B02                   BF          L1521
    000015C6 62E2                   MOV.L       @R14,R2
    000015C8 A004                   BRA         L1522
    000015CA 5221                   MOV.L       @(4,R2),R2
    000015CC              L1521:                            
    000015CC 9348                   MOV.W       L1777,R3   ; H'0570
    000015CE D125                   MOV.L       L1777+4,R1 ; _symtab
    000015D0 6212                   MOV.L       @R1,R2
    000015D2 323C                   ADD         R3,R2
    000015D4              L1522:                            
    000015D4 2E22                   MOV.L       R2,@R14
    000015D6              L1517:                            
    000015D6 63E2                   MOV.L       @R14,R3
    000015D8 8438                   MOV.B       @(8,R3),R0
    000015DA 2008                   TST         R0,R0
    000015DC 89DD                   BT          L1518
          eval.c   421            }
          eval.c   422    }
    000015DE 4F26                   LDS.L       @R15+,PR
    000015E0 6CF6                   MOV.L       @R15+,R12
    000015E2 6DF6                   MOV.L       @R15+,R13
    000015E4 000B                   RTS
    000015E6 6EF6                   MOV.L       @R15+,R14
          eval.c   423    
          eval.c   424    void
          eval.c   425    eval_number(void)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015E8              _eval_number:                    ; function: eval_number
                                                           ; frame size=8
    000015E8 2FE6                   MOV.L       R14,@-R15
    000015EA 4F22                   STS.L       PR,@-R15
          eval.c   426    {
          eval.c   427            push(cadr(p1));
    000015EC DE20                   MOV.L       L1777+16,R14; _p1
    000015EE 64E2                   MOV.L       @R14,R4
    000015F0 8448                   MOV.B       @(8,R4),R0
    000015F2 2008                   TST         R0,R0
    000015F4 8B02                   BF          L1524
    000015F6 64E2                   MOV.L       @R14,R4
    000015F8 A004                   BRA         L1526
    000015FA 5441                   MOV.L       @(4,R4),R4
    000015FC              L1524:                            
    000015FC 9330                   MOV.W       L1777,R3   ; H'0570
    000015FE D219                   MOV.L       L1777+4,R2 ; _symtab
    00001600 6422                   MOV.L       @R2,R4
    00001602 343C                   ADD         R3,R4
    00001604              L1526:                            
    00001604 8448                   MOV.B       @(8,R4),R0
    00001606 2008                   TST         R0,R0
    00001608 8B0C                   BF          L1523
    0000160A 64E2                   MOV.L       @R14,R4
    0000160C 8448                   MOV.B       @(8,R4),R0
    0000160E 2008                   TST         R0,R0
    00001610 8B02                   BF          L1525
    00001612 64E2                   MOV.L       @R14,R4
    00001614 A004                   BRA         L1527
    00001616 5441                   MOV.L       @(4,R4),R4
    00001618              L1525:                            
    00001618 9322                   MOV.W       L1777,R3   ; H'0570
    0000161A D212                   MOV.L       L1777+4,R2 ; _symtab
    0000161C 6422                   MOV.L       @R2,R4
    0000161E 343C                   ADD         R3,R4
    00001620              L1527:                            
    00001620 A004                   BRA         L1528
    00001622 6442                   MOV.L       @R4,R4
    00001624              L1523:                            
    00001624 931C                   MOV.W       L1777,R3   ; H'0570
    00001626 D20F                   MOV.L       L1777+4,R2 ; _symtab
    00001628 6422                   MOV.L       @R2,R4
    0000162A 343C                   ADD         R3,R4
    0000162C              L1528:                            
    0000162C D311                   MOV.L       L1777+20,R3; _push
    0000162E 430B                   JSR         @R3
    00001630 0009                   NOP
          eval.c   428            eval();
    00001632 D20E                   MOV.L       L1777+12,R2; _eval
    00001634 420B                   JSR         @R2
    00001636 0009                   NOP
          eval.c   429            p1 = pop();
    00001638 D30F                   MOV.L       L1777+24,R3; _pop
    0000163A 430B                   JSR         @R3
    0000163C 0009                   NOP
          eval.c   430            if (p1->k == NUM || p1->k == DOUBLE)
    0000163E 6403                   MOV         R0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001640 2E02                   MOV.L       R0,@R14
    00001642 8448                   MOV.B       @(8,R4),R0
    00001644 600C                   EXTU.B      R0,R0
    00001646 8801                   CMP/EQ      #1,R0
    00001648 8D03                   BT/S        L1530
    0000164A 6403                   MOV         R0,R4
    0000164C 6043                   MOV         R4,R0
    0000164E 8802                   CMP/EQ      #2,R0
    00001650 8B01                   BF          L1529
    00001652              L1530:                            
          eval.c   431                    push_integer(1);
    00001652 A001                   BRA         L1752
    00001654 E401                   MOV         #1,R4
    00001656              L1529:                            
          eval.c   432            else
          eval.c   433                    push_integer(0);
    00001656 E400                   MOV         #0,R4
    00001658              L1752:                            
    00001658 4F26                   LDS.L       @R15+,PR
    0000165A D308                   MOV.L       L1777+28,R3; _push_integer
    0000165C 432B                   JMP         @R3
    0000165E 6EF6                   MOV.L       @R15+,R14
    00001660              L1777:                            
    00001660 0570                   .DATA.W     H'0570
    00001662 0000                   .DATA.W     0
    00001664 <00000000>             .DATA.L     _symtab
    00001668 <00000000>             .DATA.L     _multiply
    0000166C <00000000>             .DATA.L     _eval
    00001670 <00000000>             .DATA.L     _p1
    00001674 <00000000>             .DATA.L     _push
    00001678 <00000000>             .DATA.L     _pop
    0000167C <00000000>             .DATA.L     _push_integer
          eval.c   434    }
          eval.c   435    
          eval.c   436    void
          eval.c   437    eval_operator(void)
    00001680              _eval_operator:                  ; function: eval_operator
                                                           ; frame size=16
    00001680 2FE6                   MOV.L       R14,@-R15
    00001682 2FD6                   MOV.L       R13,@-R15
    00001684 4F22                   STS.L       PR,@-R15
    00001686 7FFC                   ADD         #-4,R15
          eval.c   438    {
          eval.c   439            int h = tos;
    00001688 D234                   MOV.L       L1778+2,R2 ; _tos
    0000168A 6322                   MOV.L       @R2,R3
    0000168C 2F32                   MOV.L       R3,@R15
          eval.c   440            push_symbol(OPERATOR);
    0000168E D334                   MOV.L       L1778+6,R3 ; _push_symbol
    00001690 430B                   JSR         @R3
    00001692 E450                   MOV         #80,R4
          eval.c   441            p1 = cdr(p1);
    00001694 DE33                   MOV.L       L1778+10,R14; _p1
    00001696 63E2                   MOV.L       @R14,R3
    00001698 8438                   MOV.B       @(8,R3),R0
    0000169A 2008                   TST         R0,R0
    0000169C 8B02                   BF          L1532




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000169E 62E2                   MOV.L       @R14,R2
    000016A0 A004                   BRA         L1533
    000016A2 5221                   MOV.L       @(4,R2),R2
    000016A4              L1532:                            
    000016A4 9359                   MOV.W       L1778,R3   ; H'0570
    000016A6 D130                   MOV.L       L1778+14,R1; _symtab
    000016A8 6212                   MOV.L       @R1,R2
    000016AA 323C                   ADD         R3,R2
    000016AC              L1533:                            
    000016AC DD2F                   MOV.L       L1778+18,R13; _push
          eval.c   442            while (iscons(p1)) {
    000016AE A01C                   BRA         L1534
    000016B0 2E22                   MOV.L       R2,@R14
    000016B2              L1535:                            
          eval.c   443                    push(car(p1));
    000016B2 64E2                   MOV.L       @R14,R4
    000016B4 8448                   MOV.B       @(8,R4),R0
    000016B6 2008                   TST         R0,R0
    000016B8 8B02                   BF          L1536
    000016BA 64E2                   MOV.L       @R14,R4
    000016BC A004                   BRA         L1537
    000016BE 6442                   MOV.L       @R4,R4
    000016C0              L1536:                            
    000016C0 934B                   MOV.W       L1778,R3   ; H'0570
    000016C2 D229                   MOV.L       L1778+14,R2; _symtab
    000016C4 6422                   MOV.L       @R2,R4
    000016C6 343C                   ADD         R3,R4
    000016C8              L1537:                            
    000016C8 4D0B                   JSR         @R13
    000016CA 0009                   NOP
          eval.c   444                    eval();
    000016CC D328                   MOV.L       L1778+22,R3; _eval
    000016CE 430B                   JSR         @R3
    000016D0 0009                   NOP
          eval.c   445                    p1 = cdr(p1);
    000016D2 63E2                   MOV.L       @R14,R3
    000016D4 8438                   MOV.B       @(8,R3),R0
    000016D6 2008                   TST         R0,R0
    000016D8 8B02                   BF          L1538
    000016DA 62E2                   MOV.L       @R14,R2
    000016DC A004                   BRA         L1539
    000016DE 5221                   MOV.L       @(4,R2),R2
    000016E0              L1538:                            
    000016E0 933B                   MOV.W       L1778,R3   ; H'0570
    000016E2 D121                   MOV.L       L1778+14,R1; _symtab
    000016E4 6212                   MOV.L       @R1,R2
    000016E6 323C                   ADD         R3,R2
    000016E8              L1539:                            
    000016E8 2E22                   MOV.L       R2,@R14
    000016EA              L1534:                            
    000016EA 63E2                   MOV.L       @R14,R3
    000016EC 8438                   MOV.B       @(8,R3),R0
    000016EE 2008                   TST         R0,R0
    000016F0 89DF                   BT          L1535
          eval.c   446            }
          eval.c   447            list(tos - h);
    000016F2 63F2                   MOV.L       @R15,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016F4 D219                   MOV.L       L1778+2,R2 ; _tos
    000016F6 6422                   MOV.L       @R2,R4
    000016F8 D11E                   MOV.L       L1778+26,R1; _list
    000016FA 3438                   SUB         R3,R4
    000016FC 7F04                   ADD         #4,R15
    000016FE 4F26                   LDS.L       @R15+,PR
    00001700 6DF6                   MOV.L       @R15+,R13
    00001702 412B                   JMP         @R1
    00001704 6EF6                   MOV.L       @R15+,R14
          eval.c   448    }
          eval.c   449    
          eval.c   450    void
          eval.c   451    eval_print(void)
    00001706              _eval_print:                     ; function: eval_print
                                                           ; frame size=12
    00001706 2FE6                   MOV.L       R14,@-R15
    00001708 2FD6                   MOV.L       R13,@-R15
    0000170A 4F22                   STS.L       PR,@-R15
          eval.c   452    {
          eval.c   453            p1 = cdr(p1);
    0000170C DE15                   MOV.L       L1778+10,R14; _p1
    0000170E 62E2                   MOV.L       @R14,R2
    00001710 8428                   MOV.B       @(8,R2),R0
    00001712 2008                   TST         R0,R0
    00001714 8B02                   BF          L1540
    00001716 62E2                   MOV.L       @R14,R2
    00001718 A004                   BRA         L1541
    0000171A 5321                   MOV.L       @(4,R2),R3
    0000171C              L1540:                            
    0000171C 921D                   MOV.W       L1778,R2   ; H'0570
    0000171E D112                   MOV.L       L1778+14,R1; _symtab
    00001720 6312                   MOV.L       @R1,R3
    00001722 332C                   ADD         R2,R3
    00001724              L1541:                            
    00001724 2E32                   MOV.L       R3,@R14
    00001726 DD11                   MOV.L       L1778+18,R13; _push
          eval.c   454            while (iscons(p1)) {
    00001728 A02B                   BRA         L1542
    0000172A 0009                   NOP
    0000172C              L1543:                            
          eval.c   455                    push(car(p1));
    0000172C 64E2                   MOV.L       @R14,R4
    0000172E 8448                   MOV.B       @(8,R4),R0
    00001730 2008                   TST         R0,R0
    00001732 8B02                   BF          L1544
    00001734 64E2                   MOV.L       @R14,R4
    00001736 A004                   BRA         L1545
    00001738 6442                   MOV.L       @R4,R4
    0000173A              L1544:                            
    0000173A 930E                   MOV.W       L1778,R3   ; H'0570
    0000173C D20A                   MOV.L       L1778+14,R2; _symtab
    0000173E 6422                   MOV.L       @R2,R4
    00001740 343C                   ADD         R3,R4
    00001742              L1545:                            
    00001742 4D0B                   JSR         @R13
    00001744 0009                   NOP
          eval.c   456                    eval();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001746 D30A                   MOV.L       L1778+22,R3; _eval
    00001748 430B                   JSR         @R3
    0000174A 0009                   NOP
          eval.c   457                    //display(pop());
          eval.c   458                    p1 = cdr(p1);
    0000174C 63E2                   MOV.L       @R14,R3
    0000174E 8438                   MOV.B       @(8,R3),R0
    00001750 2008                   TST         R0,R0
    00001752 8B11                   BF          L1546
    00001754 62E2                   MOV.L       @R14,R2
    00001756 A013                   BRA         L1547
    00001758 5221                   MOV.L       @(4,R2),R2
    0000175A              L1778:                            
    0000175A 0570                   .DATA.W     H'0570
    0000175C <00000000>             .DATA.L     _tos
    00001760 <00000000>             .DATA.L     _push_symbol
    00001764 <00000000>             .DATA.L     _p1
    00001768 <00000000>             .DATA.L     _symtab
    0000176C <00000000>             .DATA.L     _push
    00001770 <00000000>             .DATA.L     _eval
    00001774 <00000000>             .DATA.L     _list
    00001778              L1546:                            
    00001778 9371                   MOV.W       L1779,R3   ; H'0570
    0000177A D139                   MOV.L       L1779+2,R1 ; _symtab
    0000177C 6212                   MOV.L       @R1,R2
    0000177E 323C                   ADD         R3,R2
    00001780              L1547:                            
    00001780 2E22                   MOV.L       R2,@R14
    00001782              L1542:                            
    00001782 63E2                   MOV.L       @R14,R3
    00001784 8438                   MOV.B       @(8,R3),R0
    00001786 2008                   TST         R0,R0
    00001788 89D0                   BT          L1543
          eval.c   459            }
          eval.c   460            push(symbol(NIL));
    0000178A 9368                   MOV.W       L1779,R3   ; H'0570
    0000178C D234                   MOV.L       L1779+2,R2 ; _symtab
    0000178E 6422                   MOV.L       @R2,R4
    00001790 4D0B                   JSR         @R13
    00001792 343C                   ADD         R3,R4
          eval.c   461    }
    00001794 4F26                   LDS.L       @R15+,PR
    00001796 6DF6                   MOV.L       @R15+,R13
    00001798 000B                   RTS
    0000179A 6EF6                   MOV.L       @R15+,R14
          eval.c   462    
          eval.c   463    void
          eval.c   464    eval_quote(void)
    0000179C              _eval_quote:                     ; function: eval_quote
                                                           ; frame size=4
    0000179C 2FE6                   MOV.L       R14,@-R15
          eval.c   465    {
          eval.c   466            push(cadr(p1));
    0000179E DE31                   MOV.L       L1779+6,R14; _p1
    000017A0 64E2                   MOV.L       @R14,R4
    000017A2 8448                   MOV.B       @(8,R4),R0
    000017A4 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017A6 8B02                   BF          L1549
    000017A8 64E2                   MOV.L       @R14,R4
    000017AA A004                   BRA         L1551
    000017AC 5441                   MOV.L       @(4,R4),R4
    000017AE              L1549:                            
    000017AE 9356                   MOV.W       L1779,R3   ; H'0570
    000017B0 D22B                   MOV.L       L1779+2,R2 ; _symtab
    000017B2 6422                   MOV.L       @R2,R4
    000017B4 343C                   ADD         R3,R4
    000017B6              L1551:                            
    000017B6 8448                   MOV.B       @(8,R4),R0
    000017B8 2008                   TST         R0,R0
    000017BA 8B0C                   BF          L1548
    000017BC 64E2                   MOV.L       @R14,R4
    000017BE 8448                   MOV.B       @(8,R4),R0
    000017C0 2008                   TST         R0,R0
    000017C2 8B02                   BF          L1550
    000017C4 64E2                   MOV.L       @R14,R4
    000017C6 A004                   BRA         L1552
    000017C8 5441                   MOV.L       @(4,R4),R4
    000017CA              L1550:                            
    000017CA 9348                   MOV.W       L1779,R3   ; H'0570
    000017CC D224                   MOV.L       L1779+2,R2 ; _symtab
    000017CE 6422                   MOV.L       @R2,R4
    000017D0 343C                   ADD         R3,R4
    000017D2              L1552:                            
    000017D2 A004                   BRA         L1553
    000017D4 6442                   MOV.L       @R4,R4
    000017D6              L1548:                            
    000017D6 9342                   MOV.W       L1779,R3   ; H'0570
    000017D8 D221                   MOV.L       L1779+2,R2 ; _symtab
    000017DA 6422                   MOV.L       @R2,R4
    000017DC 343C                   ADD         R3,R4
    000017DE              L1553:                            
    000017DE D322                   MOV.L       L1779+10,R3; _push
    000017E0 432B                   JMP         @R3
    000017E2 6EF6                   MOV.L       @R15+,R14
          eval.c   467    }
          eval.c   468    
          eval.c   469    void
          eval.c   470    eval_rank(void)
    000017E4              _eval_rank:                      ; function: eval_rank
                                                           ; frame size=8
    000017E4 2FE6                   MOV.L       R14,@-R15
    000017E6 4F22                   STS.L       PR,@-R15
          eval.c   471    {
          eval.c   472            push(cadr(p1));
    000017E8 DE1E                   MOV.L       L1779+6,R14; _p1
    000017EA 64E2                   MOV.L       @R14,R4
    000017EC 8448                   MOV.B       @(8,R4),R0
    000017EE 2008                   TST         R0,R0
    000017F0 8B02                   BF          L1555
    000017F2 64E2                   MOV.L       @R14,R4
    000017F4 A004                   BRA         L1557
    000017F6 5441                   MOV.L       @(4,R4),R4
    000017F8              L1555:                            
    000017F8 9331                   MOV.W       L1779,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017FA D219                   MOV.L       L1779+2,R2 ; _symtab
    000017FC 6422                   MOV.L       @R2,R4
    000017FE 343C                   ADD         R3,R4
    00001800              L1557:                            
    00001800 8448                   MOV.B       @(8,R4),R0
    00001802 2008                   TST         R0,R0
    00001804 8B0C                   BF          L1554
    00001806 64E2                   MOV.L       @R14,R4
    00001808 8448                   MOV.B       @(8,R4),R0
    0000180A 2008                   TST         R0,R0
    0000180C 8B02                   BF          L1556
    0000180E 64E2                   MOV.L       @R14,R4
    00001810 A004                   BRA         L1558
    00001812 5441                   MOV.L       @(4,R4),R4
    00001814              L1556:                            
    00001814 9323                   MOV.W       L1779,R3   ; H'0570
    00001816 D212                   MOV.L       L1779+2,R2 ; _symtab
    00001818 6422                   MOV.L       @R2,R4
    0000181A 343C                   ADD         R3,R4
    0000181C              L1558:                            
    0000181C A004                   BRA         L1559
    0000181E 6442                   MOV.L       @R4,R4
    00001820              L1554:                            
    00001820 931D                   MOV.W       L1779,R3   ; H'0570
    00001822 D20F                   MOV.L       L1779+2,R2 ; _symtab
    00001824 6422                   MOV.L       @R2,R4
    00001826 343C                   ADD         R3,R4
    00001828              L1559:                            
    00001828 D30F                   MOV.L       L1779+10,R3; _push
    0000182A 430B                   JSR         @R3
    0000182C 0009                   NOP
          eval.c   473            eval();
    0000182E D20F                   MOV.L       L1779+14,R2; _eval
    00001830 420B                   JSR         @R2
    00001832 0009                   NOP
          eval.c   474            p1 = pop();
    00001834 D30E                   MOV.L       L1779+18,R3; _pop
    00001836 430B                   JSR         @R3
    00001838 0009                   NOP
    0000183A 2E02                   MOV.L       R0,@R14
          eval.c   475            if (istensor(p1))
    0000183C 8408                   MOV.B       @(8,R0),R0
    0000183E 600C                   EXTU.B      R0,R0
    00001840 8804                   CMP/EQ      #4,R0
    00001842 8B06                   BF          L1560
          eval.c   476                    push_integer(p1->u.tensor->ndim);
    00001844 64E2                   MOV.L       @R14,R4
    00001846 6442                   MOV.L       @R4,R4
    00001848 4F26                   LDS.L       @R15+,PR
    0000184A 6442                   MOV.L       @R4,R4
    0000184C D309                   MOV.L       L1779+22,R3; _push_integer
    0000184E 432B                   JMP         @R3
    00001850 6EF6                   MOV.L       @R15+,R14
    00001852              L1560:                            
          eval.c   477            else
          eval.c   478                    push(zero);
    00001852 D309                   MOV.L       L1779+26,R3; _zero




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001854 4F26                   LDS.L       @R15+,PR
    00001856 6432                   MOV.L       @R3,R4
    00001858 D203                   MOV.L       L1779+10,R2; _push
    0000185A 422B                   JMP         @R2
    0000185C 6EF6                   MOV.L       @R15+,R14
    0000185E              L1779:                            
    0000185E 0570                   .DATA.W     H'0570
    00001860 <00000000>             .DATA.L     _symtab
    00001864 <00000000>             .DATA.L     _p1
    00001868 <00000000>             .DATA.L     _push
    0000186C <00000000>             .DATA.L     _eval
    00001870 <00000000>             .DATA.L     _pop
    00001874 <00000000>             .DATA.L     _push_integer
    00001878 <00000000>             .DATA.L     _zero
          eval.c   479    }
          eval.c   480    
          eval.c   481    //-----------------------------------------------------------------------------
          eval.c   482    //
          eval.c   483    //      Example: a[1] = b
          eval.c   484    //
          eval.c   485    //      p1      *-------*-----------------------*
          eval.c   486    //              |       |                       |
          eval.c   487    //              setq    *-------*-------*       b
          eval.c   488    //                      |       |       |
          eval.c   489    //                      index   a       1
          eval.c   490    //
          eval.c   491    //      cadadr(p1) -> a
          eval.c   492    //
          eval.c   493    //-----------------------------------------------------------------------------
          eval.c   494    
          eval.c   495    void
          eval.c   496    setq_indexed(void)
    0000187C              _setq_indexed:                   ; function: setq_indexed
                                                           ; frame size=24
    0000187C 2FE6                   MOV.L       R14,@-R15
    0000187E 2FD6                   MOV.L       R13,@-R15
    00001880 2FC6                   MOV.L       R12,@-R15
    00001882 2FB6                   MOV.L       R11,@-R15
    00001884 4F22                   STS.L       PR,@-R15
    00001886 7FFC                   ADD         #-4,R15
          eval.c   497    {
          eval.c   498            int h;
          eval.c   499            p4 = cadadr(p1);
    00001888 DB30                   MOV.L       L1780+2,R11; _p4
    0000188A DE31                   MOV.L       L1780+6,R14; _p1
    0000188C 63E2                   MOV.L       @R14,R3
    0000188E 8438                   MOV.B       @(8,R3),R0
    00001890 2008                   TST         R0,R0
    00001892 8B02                   BF          L1565
    00001894 62E2                   MOV.L       @R14,R2
    00001896 A004                   BRA         L1577
    00001898 5221                   MOV.L       @(4,R2),R2
    0000189A              L1565:                            
    0000189A 9356                   MOV.W       L1780,R3   ; H'0570
    0000189C D12D                   MOV.L       L1780+10,R1; _symtab
    0000189E 6212                   MOV.L       @R1,R2
    000018A0 323C                   ADD         R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000018A2              L1577:                            
    000018A2 8428                   MOV.B       @(8,R2),R0
    000018A4 2008                   TST         R0,R0
    000018A6 8B0C                   BF          L1564
    000018A8 63E2                   MOV.L       @R14,R3
    000018AA 8438                   MOV.B       @(8,R3),R0
    000018AC 2008                   TST         R0,R0
    000018AE 8B02                   BF          L1566
    000018B0 62E2                   MOV.L       @R14,R2
    000018B2 A004                   BRA         L1578
    000018B4 5221                   MOV.L       @(4,R2),R2
    000018B6              L1566:                            
    000018B6 9348                   MOV.W       L1780,R3   ; H'0570
    000018B8 D126                   MOV.L       L1780+10,R1; _symtab
    000018BA 6212                   MOV.L       @R1,R2
    000018BC 323C                   ADD         R3,R2
    000018BE              L1578:                            
    000018BE A004                   BRA         L1579
    000018C0 6322                   MOV.L       @R2,R3
    000018C2              L1564:                            
    000018C2 9242                   MOV.W       L1780,R2   ; H'0570
    000018C4 D123                   MOV.L       L1780+10,R1; _symtab
    000018C6 6312                   MOV.L       @R1,R3
    000018C8 332C                   ADD         R2,R3
    000018CA              L1579:                            
    000018CA 8438                   MOV.B       @(8,R3),R0
    000018CC 2008                   TST         R0,R0
    000018CE 8B20                   BF          L1563
    000018D0 62E2                   MOV.L       @R14,R2
    000018D2 8428                   MOV.B       @(8,R2),R0
    000018D4 2008                   TST         R0,R0
    000018D6 8B02                   BF          L1568
    000018D8 62E2                   MOV.L       @R14,R2
    000018DA A004                   BRA         L1580
    000018DC 5321                   MOV.L       @(4,R2),R3
    000018DE              L1568:                            
    000018DE 9234                   MOV.W       L1780,R2   ; H'0570
    000018E0 D11C                   MOV.L       L1780+10,R1; _symtab
    000018E2 6312                   MOV.L       @R1,R3
    000018E4 332C                   ADD         R2,R3
    000018E6              L1580:                            
    000018E6 8438                   MOV.B       @(8,R3),R0
    000018E8 2008                   TST         R0,R0
    000018EA 8B0C                   BF          L1567
    000018EC 63E2                   MOV.L       @R14,R3
    000018EE 8438                   MOV.B       @(8,R3),R0
    000018F0 2008                   TST         R0,R0
    000018F2 8B02                   BF          L1569
    000018F4 62E2                   MOV.L       @R14,R2
    000018F6 A004                   BRA         L1581
    000018F8 5221                   MOV.L       @(4,R2),R2
    000018FA              L1569:                            
    000018FA 9326                   MOV.W       L1780,R3   ; H'0570
    000018FC D115                   MOV.L       L1780+10,R1; _symtab
    000018FE 6212                   MOV.L       @R1,R2
    00001900 323C                   ADD         R3,R2
    00001902              L1581:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001902 A004                   BRA         L1582
    00001904 6222                   MOV.L       @R2,R2
    00001906              L1567:                            
    00001906 9320                   MOV.W       L1780,R3   ; H'0570
    00001908 D112                   MOV.L       L1780+10,R1; _symtab
    0000190A 6212                   MOV.L       @R1,R2
    0000190C 323C                   ADD         R3,R2
    0000190E              L1582:                            
    0000190E A004                   BRA         L1583
    00001910 5221                   MOV.L       @(4,R2),R2
    00001912              L1563:                            
    00001912 931A                   MOV.W       L1780,R3   ; H'0570
    00001914 D10F                   MOV.L       L1780+10,R1; _symtab
    00001916 6212                   MOV.L       @R1,R2
    00001918 323C                   ADD         R3,R2
    0000191A              L1583:                            
    0000191A 8428                   MOV.B       @(8,R2),R0
    0000191C 2008                   TST         R0,R0
    0000191E 8B4F                   BF          L1562
    00001920 63E2                   MOV.L       @R14,R3
    00001922 8438                   MOV.B       @(8,R3),R0
    00001924 2008                   TST         R0,R0
    00001926 8B02                   BF          L1572
    00001928 62E2                   MOV.L       @R14,R2
    0000192A A004                   BRA         L1584
    0000192C 5221                   MOV.L       @(4,R2),R2
    0000192E              L1572:                            
    0000192E 930C                   MOV.W       L1780,R3   ; H'0570
    00001930 D108                   MOV.L       L1780+10,R1; _symtab
    00001932 6212                   MOV.L       @R1,R2
    00001934 323C                   ADD         R3,R2
    00001936              L1584:                            
    00001936 8428                   MOV.B       @(8,R2),R0
    00001938 2008                   TST         R0,R0
    0000193A 8B13                   BF          L1571
    0000193C 63E2                   MOV.L       @R14,R3
    0000193E 8438                   MOV.B       @(8,R3),R0
    00001940 2008                   TST         R0,R0
    00001942 8B09                   BF          L1573
    00001944 62E2                   MOV.L       @R14,R2
    00001946 A00B                   BRA         L1585
    00001948 5221                   MOV.L       @(4,R2),R2
    0000194A              L1780:                            
    0000194A 0570                   .DATA.W     H'0570
    0000194C <00000000>             .DATA.L     _p4
    00001950 <00000000>             .DATA.L     _p1
    00001954 <00000000>             .DATA.L     _symtab
    00001958              L1573:                            
    00001958 935F                   MOV.W       L1781,R3   ; H'0570
    0000195A D130                   MOV.L       L1781+2,R1 ; _symtab
    0000195C 6212                   MOV.L       @R1,R2
    0000195E 323C                   ADD         R3,R2
    00001960              L1585:                            
    00001960 A004                   BRA         L1586
    00001962 6322                   MOV.L       @R2,R3
    00001964              L1571:                            
    00001964 9259                   MOV.W       L1781,R2   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001966 D12D                   MOV.L       L1781+2,R1 ; _symtab
    00001968 6312                   MOV.L       @R1,R3
    0000196A 332C                   ADD         R2,R3
    0000196C              L1586:                            
    0000196C 8438                   MOV.B       @(8,R3),R0
    0000196E 2008                   TST         R0,R0
    00001970 8B20                   BF          L1570
    00001972 62E2                   MOV.L       @R14,R2
    00001974 8428                   MOV.B       @(8,R2),R0
    00001976 2008                   TST         R0,R0
    00001978 8B02                   BF          L1575
    0000197A 62E2                   MOV.L       @R14,R2
    0000197C A004                   BRA         L1587
    0000197E 5321                   MOV.L       @(4,R2),R3
    00001980              L1575:                            
    00001980 924B                   MOV.W       L1781,R2   ; H'0570
    00001982 D126                   MOV.L       L1781+2,R1 ; _symtab
    00001984 6312                   MOV.L       @R1,R3
    00001986 332C                   ADD         R2,R3
    00001988              L1587:                            
    00001988 8438                   MOV.B       @(8,R3),R0
    0000198A 2008                   TST         R0,R0
    0000198C 8B0C                   BF          L1574
    0000198E 63E2                   MOV.L       @R14,R3
    00001990 8438                   MOV.B       @(8,R3),R0
    00001992 2008                   TST         R0,R0
    00001994 8B02                   BF          L1576
    00001996 62E2                   MOV.L       @R14,R2
    00001998 A004                   BRA         L1588
    0000199A 5221                   MOV.L       @(4,R2),R2
    0000199C              L1576:                            
    0000199C 933D                   MOV.W       L1781,R3   ; H'0570
    0000199E D11F                   MOV.L       L1781+2,R1 ; _symtab
    000019A0 6212                   MOV.L       @R1,R2
    000019A2 323C                   ADD         R3,R2
    000019A4              L1588:                            
    000019A4 A004                   BRA         L1589
    000019A6 6222                   MOV.L       @R2,R2
    000019A8              L1574:                            
    000019A8 9337                   MOV.W       L1781,R3   ; H'0570
    000019AA D11C                   MOV.L       L1781+2,R1 ; _symtab
    000019AC 6212                   MOV.L       @R1,R2
    000019AE 323C                   ADD         R3,R2
    000019B0              L1589:                            
    000019B0 A004                   BRA         L1590
    000019B2 5221                   MOV.L       @(4,R2),R2
    000019B4              L1570:                            
    000019B4 9331                   MOV.W       L1781,R3   ; H'0570
    000019B6 D119                   MOV.L       L1781+2,R1 ; _symtab
    000019B8 6212                   MOV.L       @R1,R2
    000019BA 323C                   ADD         R3,R2
    000019BC              L1590:                            
    000019BC A004                   BRA         L1591
    000019BE 6322                   MOV.L       @R2,R3
    000019C0              L1562:                            
    000019C0 922B                   MOV.W       L1781,R2   ; H'0570
    000019C2 D116                   MOV.L       L1781+2,R1 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000019C4 6312                   MOV.L       @R1,R3
    000019C6 332C                   ADD         R2,R3
    000019C8              L1591:                            
    000019C8 2B32                   MOV.L       R3,@R11
          eval.c   500            if (!issymbol(p4))
    000019CA 6033                   MOV         R3,R0
    000019CC 8408                   MOV.B       @(8,R0),R0
    000019CE 600C                   EXTU.B      R0,R0
    000019D0 8805                   CMP/EQ      #5,R0
    000019D2 8903                   BT          L1592
          eval.c   501                    stop("indexed assignment: error in symbol");
    000019D4 D412                   MOV.L       L1781+6,R4 ; L1106
    000019D6 D213                   MOV.L       L1781+10,R2; _stop
    000019D8 420B                   JSR         @R2
    000019DA 0009                   NOP
    000019DC              L1592:                            
          eval.c   502            h = tos;
    000019DC D212                   MOV.L       L1781+14,R2; _tos
    000019DE 6322                   MOV.L       @R2,R3
          eval.c   503            push(caddr(p1));
    000019E0 DC12                   MOV.L       L1781+18,R12; _push
    000019E2 2F32                   MOV.L       R3,@R15
    000019E4 64E2                   MOV.L       @R14,R4
    000019E6 8448                   MOV.B       @(8,R4),R0
    000019E8 2008                   TST         R0,R0
    000019EA 8B02                   BF          L1595
    000019EC 64E2                   MOV.L       @R14,R4
    000019EE A004                   BRA         L1600
    000019F0 5441                   MOV.L       @(4,R4),R4
    000019F2              L1595:                            
    000019F2 9312                   MOV.W       L1781,R3   ; H'0570
    000019F4 D109                   MOV.L       L1781+2,R1 ; _symtab
    000019F6 6412                   MOV.L       @R1,R4
    000019F8 343C                   ADD         R3,R4
    000019FA              L1600:                            
    000019FA 8448                   MOV.B       @(8,R4),R0
    000019FC 2008                   TST         R0,R0
    000019FE 8B17                   BF          L1594
    00001A00 64E2                   MOV.L       @R14,R4
    00001A02 8448                   MOV.B       @(8,R4),R0
    00001A04 2008                   TST         R0,R0
    00001A06 8B02                   BF          L1596
    00001A08 64E2                   MOV.L       @R14,R4
    00001A0A A004                   BRA         L1601
    00001A0C 5441                   MOV.L       @(4,R4),R4
    00001A0E              L1596:                            
    00001A0E 9304                   MOV.W       L1781,R3   ; H'0570
    00001A10 D202                   MOV.L       L1781+2,R2 ; _symtab
    00001A12 6422                   MOV.L       @R2,R4
    00001A14 343C                   ADD         R3,R4
    00001A16              L1601:                            
    00001A16 A00F                   BRA         L1602
    00001A18 5441                   MOV.L       @(4,R4),R4
    00001A1A              L1781:                            
    00001A1A 0570                   .DATA.W     H'0570
    00001A1C <00000000>             .DATA.L     _symtab
    00001A20 <00000000>             .DATA.L     L1106




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A24 <00000000>             .DATA.L     _stop
    00001A28 <00000000>             .DATA.L     _tos
    00001A2C <00000000>             .DATA.L     _push
    00001A30              L1594:                            
    00001A30 9367                   MOV.W       L1782,R3   ; H'0570
    00001A32 D234                   MOV.L       L1782+2,R2 ; _symtab
    00001A34 6422                   MOV.L       @R2,R4
    00001A36 343C                   ADD         R3,R4
    00001A38              L1602:                            
    00001A38 8448                   MOV.B       @(8,R4),R0
    00001A3A 2008                   TST         R0,R0
    00001A3C 8B20                   BF          L1593
    00001A3E 64E2                   MOV.L       @R14,R4
    00001A40 8448                   MOV.B       @(8,R4),R0
    00001A42 2008                   TST         R0,R0
    00001A44 8B02                   BF          L1598
    00001A46 64E2                   MOV.L       @R14,R4
    00001A48 A004                   BRA         L1603
    00001A4A 5441                   MOV.L       @(4,R4),R4
    00001A4C              L1598:                            
    00001A4C 9359                   MOV.W       L1782,R3   ; H'0570
    00001A4E D22D                   MOV.L       L1782+2,R2 ; _symtab
    00001A50 6422                   MOV.L       @R2,R4
    00001A52 343C                   ADD         R3,R4
    00001A54              L1603:                            
    00001A54 8448                   MOV.B       @(8,R4),R0
    00001A56 2008                   TST         R0,R0
    00001A58 8B0C                   BF          L1597
    00001A5A 64E2                   MOV.L       @R14,R4
    00001A5C 8448                   MOV.B       @(8,R4),R0
    00001A5E 2008                   TST         R0,R0
    00001A60 8B02                   BF          L1599
    00001A62 64E2                   MOV.L       @R14,R4
    00001A64 A004                   BRA         L1604
    00001A66 5441                   MOV.L       @(4,R4),R4
    00001A68              L1599:                            
    00001A68 934B                   MOV.W       L1782,R3   ; H'0570
    00001A6A D226                   MOV.L       L1782+2,R2 ; _symtab
    00001A6C 6422                   MOV.L       @R2,R4
    00001A6E 343C                   ADD         R3,R4
    00001A70              L1604:                            
    00001A70 A004                   BRA         L1605
    00001A72 5441                   MOV.L       @(4,R4),R4
    00001A74              L1597:                            
    00001A74 9345                   MOV.W       L1782,R3   ; H'0570
    00001A76 D223                   MOV.L       L1782+2,R2 ; _symtab
    00001A78 6422                   MOV.L       @R2,R4
    00001A7A 343C                   ADD         R3,R4
    00001A7C              L1605:                            
    00001A7C A004                   BRA         L1606
    00001A7E 6442                   MOV.L       @R4,R4
    00001A80              L1593:                            
    00001A80 933F                   MOV.W       L1782,R3   ; H'0570
    00001A82 D220                   MOV.L       L1782+2,R2 ; _symtab
    00001A84 6422                   MOV.L       @R2,R4
    00001A86 343C                   ADD         R3,R4
    00001A88              L1606:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A88 4C0B                   JSR         @R12
    00001A8A 0009                   NOP
          eval.c   504            eval();
    00001A8C D31E                   MOV.L       L1782+6,R3 ; _eval
    00001A8E 430B                   JSR         @R3
    00001A90 0009                   NOP
          eval.c   505            p2 = cdadr(p1);
    00001A92 DD1E                   MOV.L       L1782+10,R13; _p2
    00001A94 63E2                   MOV.L       @R14,R3
    00001A96 8438                   MOV.B       @(8,R3),R0
    00001A98 2008                   TST         R0,R0
    00001A9A 8B02                   BF          L1609
    00001A9C 62E2                   MOV.L       @R14,R2
    00001A9E A004                   BRA         L1614
    00001AA0 5221                   MOV.L       @(4,R2),R2
    00001AA2              L1609:                            
    00001AA2 932E                   MOV.W       L1782,R3   ; H'0570
    00001AA4 D117                   MOV.L       L1782+2,R1 ; _symtab
    00001AA6 6212                   MOV.L       @R1,R2
    00001AA8 323C                   ADD         R3,R2
    00001AAA              L1614:                            
    00001AAA 8428                   MOV.B       @(8,R2),R0
    00001AAC 2008                   TST         R0,R0
    00001AAE 8B0C                   BF          L1608
    00001AB0 63E2                   MOV.L       @R14,R3
    00001AB2 8438                   MOV.B       @(8,R3),R0
    00001AB4 2008                   TST         R0,R0
    00001AB6 8B02                   BF          L1610
    00001AB8 62E2                   MOV.L       @R14,R2
    00001ABA A004                   BRA         L1615
    00001ABC 5221                   MOV.L       @(4,R2),R2
    00001ABE              L1610:                            
    00001ABE 9320                   MOV.W       L1782,R3   ; H'0570
    00001AC0 D110                   MOV.L       L1782+2,R1 ; _symtab
    00001AC2 6212                   MOV.L       @R1,R2
    00001AC4 323C                   ADD         R3,R2
    00001AC6              L1615:                            
    00001AC6 A004                   BRA         L1616
    00001AC8 6322                   MOV.L       @R2,R3
    00001ACA              L1608:                            
    00001ACA 921A                   MOV.W       L1782,R2   ; H'0570
    00001ACC D10D                   MOV.L       L1782+2,R1 ; _symtab
    00001ACE 6312                   MOV.L       @R1,R3
    00001AD0 332C                   ADD         R2,R3
    00001AD2              L1616:                            
    00001AD2 8438                   MOV.B       @(8,R3),R0
    00001AD4 2008                   TST         R0,R0
    00001AD6 8B27                   BF          L1607
    00001AD8 62E2                   MOV.L       @R14,R2
    00001ADA 8428                   MOV.B       @(8,R2),R0
    00001ADC 2008                   TST         R0,R0
    00001ADE 8B02                   BF          L1612
    00001AE0 62E2                   MOV.L       @R14,R2
    00001AE2 A004                   BRA         L1617
    00001AE4 5321                   MOV.L       @(4,R2),R3
    00001AE6              L1612:                            
    00001AE6 920C                   MOV.W       L1782,R2   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001AE8 D106                   MOV.L       L1782+2,R1 ; _symtab
    00001AEA 6312                   MOV.L       @R1,R3
    00001AEC 332C                   ADD         R2,R3
    00001AEE              L1617:                            
    00001AEE 8438                   MOV.B       @(8,R3),R0
    00001AF0 2008                   TST         R0,R0
    00001AF2 8B13                   BF          L1611
    00001AF4 63E2                   MOV.L       @R14,R3
    00001AF6 8438                   MOV.B       @(8,R3),R0
    00001AF8 2008                   TST         R0,R0
    00001AFA 8B09                   BF          L1613
    00001AFC 62E2                   MOV.L       @R14,R2
    00001AFE A00B                   BRA         L1618
    00001B00 5221                   MOV.L       @(4,R2),R2
    00001B02              L1782:                            
    00001B02 0570                   .DATA.W     H'0570
    00001B04 <00000000>             .DATA.L     _symtab
    00001B08 <00000000>             .DATA.L     _eval
    00001B0C <00000000>             .DATA.L     _p2
    00001B10              L1613:                            
    00001B10 9372                   MOV.W       L1783,R3   ; H'0570
    00001B12 D13A                   MOV.L       L1783+4,R1 ; _symtab
    00001B14 6212                   MOV.L       @R1,R2
    00001B16 323C                   ADD         R3,R2
    00001B18              L1618:                            
    00001B18 A004                   BRA         L1619
    00001B1A 6222                   MOV.L       @R2,R2
    00001B1C              L1611:                            
    00001B1C 936C                   MOV.W       L1783,R3   ; H'0570
    00001B1E D137                   MOV.L       L1783+4,R1 ; _symtab
    00001B20 6212                   MOV.L       @R1,R2
    00001B22 323C                   ADD         R3,R2
    00001B24              L1619:                            
    00001B24 A021                   BRA         L1753
    00001B26 5221                   MOV.L       @(4,R2),R2
    00001B28              L1607:                            
    00001B28 9366                   MOV.W       L1783,R3   ; H'0570
    00001B2A D134                   MOV.L       L1783+4,R1 ; _symtab
    00001B2C 6212                   MOV.L       @R1,R2
    00001B2E 323C                   ADD         R3,R2
          eval.c   506            while (iscons(p2)) {
    00001B30 A01B                   BRA         L1753
    00001B32 0009                   NOP
    00001B34              L1622:                            
          eval.c   507                    push(car(p2));
    00001B34 64D2                   MOV.L       @R13,R4
    00001B36 8448                   MOV.B       @(8,R4),R0
    00001B38 2008                   TST         R0,R0
    00001B3A 8B02                   BF          L1623
    00001B3C 64D2                   MOV.L       @R13,R4
    00001B3E A004                   BRA         L1624
    00001B40 6442                   MOV.L       @R4,R4
    00001B42              L1623:                            
    00001B42 9359                   MOV.W       L1783,R3   ; H'0570
    00001B44 D22D                   MOV.L       L1783+4,R2 ; _symtab
    00001B46 6422                   MOV.L       @R2,R4
    00001B48 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B4A              L1624:                            
    00001B4A 4C0B                   JSR         @R12
    00001B4C 0009                   NOP
          eval.c   508                    eval();
    00001B4E D32C                   MOV.L       L1783+8,R3 ; _eval
    00001B50 430B                   JSR         @R3
    00001B52 0009                   NOP
          eval.c   509                    p2 = cdr(p2);
    00001B54 63D2                   MOV.L       @R13,R3
    00001B56 8438                   MOV.B       @(8,R3),R0
    00001B58 2008                   TST         R0,R0
    00001B5A 8B02                   BF          L1625
    00001B5C 62D2                   MOV.L       @R13,R2
    00001B5E A004                   BRA         L1753
    00001B60 5221                   MOV.L       @(4,R2),R2
    00001B62              L1625:                            
    00001B62 9349                   MOV.W       L1783,R3   ; H'0570
    00001B64 D125                   MOV.L       L1783+4,R1 ; _symtab
    00001B66 6212                   MOV.L       @R1,R2
    00001B68 323C                   ADD         R3,R2
    00001B6A              L1753:                            
    00001B6A 6323                   MOV         R2,R3
    00001B6C 2D22                   MOV.L       R2,@R13
    00001B6E 8438                   MOV.B       @(8,R3),R0
    00001B70 2008                   TST         R0,R0
    00001B72 89DF                   BT          L1622
          eval.c   510            }
          eval.c   511            set_component(tos - h);
    00001B74 63F2                   MOV.L       @R15,R3
    00001B76 D223                   MOV.L       L1783+12,R2; _tos
    00001B78 D123                   MOV.L       L1783+16,R1; _set_component
    00001B7A 6422                   MOV.L       @R2,R4
    00001B7C 410B                   JSR         @R1
    00001B7E 3438                   SUB         R3,R4
          eval.c   512            p3 = pop();
    00001B80 D322                   MOV.L       L1783+20,R3; _pop
    00001B82 430B                   JSR         @R3
    00001B84 0009                   NOP
          eval.c   513            set_binding(p4, p3);
    00001B86 6503                   MOV         R0,R5
    00001B88 D322                   MOV.L       L1783+28,R3; _set_binding
    00001B8A D221                   MOV.L       L1783+24,R2; _p3
    00001B8C 2202                   MOV.L       R0,@R2
    00001B8E 430B                   JSR         @R3
    00001B90 64B2                   MOV.L       @R11,R4
          eval.c   514            push(symbol(NIL));
    00001B92 9331                   MOV.W       L1783,R3   ; H'0570
    00001B94 D219                   MOV.L       L1783+4,R2 ; _symtab
    00001B96 6422                   MOV.L       @R2,R4
    00001B98 4C0B                   JSR         @R12
    00001B9A 343C                   ADD         R3,R4
          eval.c   515    }
    00001B9C 7F04                   ADD         #4,R15
    00001B9E 4F26                   LDS.L       @R15+,PR
    00001BA0 6BF6                   MOV.L       @R15+,R11
    00001BA2 6CF6                   MOV.L       @R15+,R12
    00001BA4 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001BA6 000B                   RTS
    00001BA8 6EF6                   MOV.L       @R15+,R14
          eval.c   516    
          eval.c   517    void
          eval.c   518    eval_setq(void)
    00001BAA              _eval_setq:                      ; function: eval_setq
                                                           ; frame size=12
    00001BAA 2FE6                   MOV.L       R14,@-R15
    00001BAC 2FD6                   MOV.L       R13,@-R15
    00001BAE 4F22                   STS.L       PR,@-R15
    00001BB0 DD12                   MOV.L       L1783+4,R13; _symtab
    00001BB2 DE19                   MOV.L       L1783+32,R14; _p1
    00001BB4 64E2                   MOV.L       @R14,R4
    00001BB6 8448                   MOV.B       @(8,R4),R0
    00001BB8 2008                   TST         R0,R0
    00001BBA 8F02                   BF/S        L1630
    00001BBC 65D2                   MOV.L       @R13,R5
    00001BBE A003                   BRA         L1635
    00001BC0 5341                   MOV.L       @(4,R4),R3
    00001BC2              L1630:                            
    00001BC2 9219                   MOV.W       L1783,R2   ; H'0570
    00001BC4 63D2                   MOV.L       @R13,R3
    00001BC6 332C                   ADD         R2,R3
    00001BC8              L1635:                            
    00001BC8 8438                   MOV.B       @(8,R3),R0
    00001BCA 2008                   TST         R0,R0
    00001BCC 8B09                   BF          L1629
    00001BCE 8448                   MOV.B       @(8,R4),R0
    00001BD0 2008                   TST         R0,R0
    00001BD2 8B01                   BF          L1631
    00001BD4 A003                   BRA         L1636
    00001BD6 5241                   MOV.L       @(4,R4),R2
    00001BD8              L1631:                            
    00001BD8 930E                   MOV.W       L1783,R3   ; H'0570
    00001BDA 62D2                   MOV.L       @R13,R2
    00001BDC 323C                   ADD         R3,R2
    00001BDE              L1636:                            
    00001BDE A003                   BRA         L1637
    00001BE0 6222                   MOV.L       @R2,R2
    00001BE2              L1629:                            
    00001BE2 9309                   MOV.W       L1783,R3   ; H'0570
    00001BE4 62D2                   MOV.L       @R13,R2
    00001BE6 323C                   ADD         R3,R2
    00001BE8              L1637:                            
    00001BE8 8428                   MOV.B       @(8,R2),R0
    00001BEA 2008                   TST         R0,R0
    00001BEC 8B2B                   BF          L1628
    00001BEE 8448                   MOV.B       @(8,R4),R0
    00001BF0 2008                   TST         R0,R0
    00001BF2 8B13                   BF          L1633
    00001BF4 A015                   BRA         L1638
    00001BF6 5341                   MOV.L       @(4,R4),R3
    00001BF8              L1783:                            
    00001BF8 0570                   .DATA.W     H'0570
    00001BFA 0000                   .DATA.W     0
    00001BFC <00000000>             .DATA.L     _symtab
    00001C00 <00000000>             .DATA.L     _eval




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C04 <00000000>             .DATA.L     _tos
    00001C08 <00000000>             .DATA.L     _set_component
    00001C0C <00000000>             .DATA.L     _pop
    00001C10 <00000000>             .DATA.L     _p3
    00001C14 <00000000>             .DATA.L     _set_binding
    00001C18 <00000000>             .DATA.L     _p1
    00001C1C              L1633:                            
    00001C1C 9260                   MOV.W       L1784,R2   ; H'0570
    00001C1E 63D2                   MOV.L       @R13,R3
    00001C20 332C                   ADD         R2,R3
    00001C22              L1638:                            
    00001C22 8438                   MOV.B       @(8,R3),R0
    00001C24 2008                   TST         R0,R0
    00001C26 8B09                   BF          L1632
    00001C28 8448                   MOV.B       @(8,R4),R0
    00001C2A 2008                   TST         R0,R0
    00001C2C 8B01                   BF          L1634
    00001C2E A003                   BRA         L1639
    00001C30 5241                   MOV.L       @(4,R4),R2
    00001C32              L1634:                            
    00001C32 9355                   MOV.W       L1784,R3   ; H'0570
    00001C34 62D2                   MOV.L       @R13,R2
    00001C36 323C                   ADD         R3,R2
    00001C38              L1639:                            
    00001C38 A003                   BRA         L1640
    00001C3A 6222                   MOV.L       @R2,R2
    00001C3C              L1632:                            
    00001C3C 9350                   MOV.W       L1784,R3   ; H'0570
    00001C3E 62D2                   MOV.L       @R13,R2
    00001C40 323C                   ADD         R3,R2
    00001C42              L1640:                            
    00001C42 A003                   BRA         L1641
    00001C44 6322                   MOV.L       @R2,R3
    00001C46              L1628:                            
    00001C46 924B                   MOV.W       L1784,R2   ; H'0570
    00001C48 63D2                   MOV.L       @R13,R3
    00001C4A 332C                   ADD         R2,R3
    00001C4C              L1641:                            
    00001C4C 9049                   MOV.W       L1784+2,R0 ; H'02DC
    00001C4E 305C                   ADD         R5,R0
    00001C50 3300                   CMP/EQ      R0,R3
    00001C52 8B03                   BF          L1627
          eval.c   519    {
          eval.c   520            if (caadr(p1) == symbol(INDEX)) {
          eval.c   521                    setq_indexed();
    00001C54 4F26                   LDS.L       @R15+,PR
    00001C56 6DF6                   MOV.L       @R15+,R13
    00001C58 AE10                   BRA         _setq_indexed
    00001C5A 6EF6                   MOV.L       @R15+,R14
    00001C5C              L1627:                            
          eval.c   522                    return;
          eval.c   523            }
          eval.c   524    
          eval.c   525            if (iscons(cadr(p1))) {
    00001C5C 8448                   MOV.B       @(8,R4),R0
    00001C5E 2008                   TST         R0,R0
    00001C60 8B01                   BF          L1645




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C62 A002                   BRA         L1647
    00001C64 5241                   MOV.L       @(4,R4),R2
    00001C66              L1645:                            
    00001C66 923B                   MOV.W       L1784,R2   ; H'0570
    00001C68 325C                   ADD         R5,R2
    00001C6A              L1647:                            
    00001C6A 8428                   MOV.B       @(8,R2),R0
    00001C6C 2008                   TST         R0,R0
    00001C6E 8B09                   BF          L1644
    00001C70 8448                   MOV.B       @(8,R4),R0
    00001C72 2008                   TST         R0,R0
    00001C74 8B01                   BF          L1646
    00001C76 A002                   BRA         L1648
    00001C78 5241                   MOV.L       @(4,R4),R2
    00001C7A              L1646:                            
    00001C7A 9231                   MOV.W       L1784,R2   ; H'0570
    00001C7C 325C                   ADD         R5,R2
    00001C7E              L1648:                            
    00001C7E 6322                   MOV.L       @R2,R3
    00001C80 A002                   BRA         L1649
    00001C82 0009                   NOP
    00001C84              L1644:                            
    00001C84 932C                   MOV.W       L1784,R3   ; H'0570
    00001C86 335C                   ADD         R5,R3
    00001C88              L1649:                            
    00001C88 8438                   MOV.B       @(8,R3),R0
    00001C8A 2008                   TST         R0,R0
    00001C8C 8B04                   BF          L1643
          eval.c   526                    define_user_function();
    00001C8E 4F26                   LDS.L       @R15+,PR
    00001C90 D214                   MOV.L       L1784+4,R2 ; _define_user_function
    00001C92 6DF6                   MOV.L       @R15+,R13
    00001C94 422B                   JMP         @R2
    00001C96 6EF6                   MOV.L       @R15+,R14
    00001C98              L1643:                            
          eval.c   527                    return;
          eval.c   528            }
          eval.c   529    
          eval.c   530            if (!issymbol(cadr(p1)))
    00001C98 8448                   MOV.B       @(8,R4),R0
    00001C9A 2008                   TST         R0,R0
    00001C9C 8B01                   BF          L1652
    00001C9E A002                   BRA         L1654
    00001CA0 5041                   MOV.L       @(4,R4),R0
    00001CA2              L1652:                            
    00001CA2 901D                   MOV.W       L1784,R0   ; H'0570
    00001CA4 305C                   ADD         R5,R0
    00001CA6              L1654:                            
    00001CA6 8408                   MOV.B       @(8,R0),R0
    00001CA8 2008                   TST         R0,R0
    00001CAA 8B08                   BF          L1651
    00001CAC 8448                   MOV.B       @(8,R4),R0
    00001CAE 2008                   TST         R0,R0
    00001CB0 8B01                   BF          L1653
    00001CB2 A002                   BRA         L1655
    00001CB4 5041                   MOV.L       @(4,R4),R0
    00001CB6              L1653:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001CB6 9013                   MOV.W       L1784,R0   ; H'0570
    00001CB8 305C                   ADD         R5,R0
    00001CBA              L1655:                            
    00001CBA A002                   BRA         L1656
    00001CBC 6002                   MOV.L       @R0,R0
    00001CBE              L1651:                            
    00001CBE 900F                   MOV.W       L1784,R0   ; H'0570
    00001CC0 305C                   ADD         R5,R0
    00001CC2              L1656:                            
    00001CC2 8408                   MOV.B       @(8,R0),R0
    00001CC4 600C                   EXTU.B      R0,R0
    00001CC6 8805                   CMP/EQ      #5,R0
    00001CC8 8903                   BT          L1650
          eval.c   531                    stop("symbol assignment: error in symbol");
    00001CCA D407                   MOV.L       L1784+8,R4 ; L1111
    00001CCC D207                   MOV.L       L1784+12,R2; _stop
    00001CCE 420B                   JSR         @R2
    00001CD0 0009                   NOP
    00001CD2              L1650:                            
          eval.c   532    
          eval.c   533            push(caddr(p1));
    00001CD2 64E2                   MOV.L       @R14,R4
    00001CD4 8448                   MOV.B       @(8,R4),R0
    00001CD6 2008                   TST         R0,R0
    00001CD8 8B0A                   BF          L1659
    00001CDA 64E2                   MOV.L       @R14,R4
    00001CDC A00C                   BRA         L1664
    00001CDE 5441                   MOV.L       @(4,R4),R4
    00001CE0              L1784:                            
    00001CE0 0570                   .DATA.W     H'0570
    00001CE2 02DC                   .DATA.W     H'02DC
    00001CE4 <00000000>             .DATA.L     _define_user_function
    00001CE8 <00000000>             .DATA.L     L1111
    00001CEC <00000000>             .DATA.L     _stop
    00001CF0              L1659:                            
    00001CF0 9365                   MOV.W       L1785,R3   ; H'0570
    00001CF2 D233                   MOV.L       L1785+2,R2 ; _symtab
    00001CF4 6422                   MOV.L       @R2,R4
    00001CF6 343C                   ADD         R3,R4
    00001CF8              L1664:                            
    00001CF8 8448                   MOV.B       @(8,R4),R0
    00001CFA 2008                   TST         R0,R0
    00001CFC 8B0C                   BF          L1658
    00001CFE 64E2                   MOV.L       @R14,R4
    00001D00 8448                   MOV.B       @(8,R4),R0
    00001D02 2008                   TST         R0,R0
    00001D04 8B02                   BF          L1660
    00001D06 64E2                   MOV.L       @R14,R4
    00001D08 A004                   BRA         L1665
    00001D0A 5441                   MOV.L       @(4,R4),R4
    00001D0C              L1660:                            
    00001D0C 9357                   MOV.W       L1785,R3   ; H'0570
    00001D0E D22C                   MOV.L       L1785+2,R2 ; _symtab
    00001D10 6422                   MOV.L       @R2,R4
    00001D12 343C                   ADD         R3,R4
    00001D14              L1665:                            
    00001D14 A004                   BRA         L1666




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D16 5441                   MOV.L       @(4,R4),R4
    00001D18              L1658:                            
    00001D18 9351                   MOV.W       L1785,R3   ; H'0570
    00001D1A D229                   MOV.L       L1785+2,R2 ; _symtab
    00001D1C 6422                   MOV.L       @R2,R4
    00001D1E 343C                   ADD         R3,R4
    00001D20              L1666:                            
    00001D20 8448                   MOV.B       @(8,R4),R0
    00001D22 2008                   TST         R0,R0
    00001D24 8B20                   BF          L1657
    00001D26 64E2                   MOV.L       @R14,R4
    00001D28 8448                   MOV.B       @(8,R4),R0
    00001D2A 2008                   TST         R0,R0
    00001D2C 8B02                   BF          L1662
    00001D2E 64E2                   MOV.L       @R14,R4
    00001D30 A004                   BRA         L1667
    00001D32 5441                   MOV.L       @(4,R4),R4
    00001D34              L1662:                            
    00001D34 9343                   MOV.W       L1785,R3   ; H'0570
    00001D36 D222                   MOV.L       L1785+2,R2 ; _symtab
    00001D38 6422                   MOV.L       @R2,R4
    00001D3A 343C                   ADD         R3,R4
    00001D3C              L1667:                            
    00001D3C 8448                   MOV.B       @(8,R4),R0
    00001D3E 2008                   TST         R0,R0
    00001D40 8B0C                   BF          L1661
    00001D42 64E2                   MOV.L       @R14,R4
    00001D44 8448                   MOV.B       @(8,R4),R0
    00001D46 2008                   TST         R0,R0
    00001D48 8B02                   BF          L1663
    00001D4A 64E2                   MOV.L       @R14,R4
    00001D4C A004                   BRA         L1668
    00001D4E 5441                   MOV.L       @(4,R4),R4
    00001D50              L1663:                            
    00001D50 9335                   MOV.W       L1785,R3   ; H'0570
    00001D52 D21B                   MOV.L       L1785+2,R2 ; _symtab
    00001D54 6422                   MOV.L       @R2,R4
    00001D56 343C                   ADD         R3,R4
    00001D58              L1668:                            
    00001D58 A004                   BRA         L1669
    00001D5A 5441                   MOV.L       @(4,R4),R4
    00001D5C              L1661:                            
    00001D5C 932F                   MOV.W       L1785,R3   ; H'0570
    00001D5E D218                   MOV.L       L1785+2,R2 ; _symtab
    00001D60 6422                   MOV.L       @R2,R4
    00001D62 343C                   ADD         R3,R4
    00001D64              L1669:                            
    00001D64 A004                   BRA         L1670
    00001D66 6442                   MOV.L       @R4,R4
    00001D68              L1657:                            
    00001D68 9329                   MOV.W       L1785,R3   ; H'0570
    00001D6A D215                   MOV.L       L1785+2,R2 ; _symtab
    00001D6C 6422                   MOV.L       @R2,R4
    00001D6E 343C                   ADD         R3,R4
    00001D70              L1670:                            
    00001D70 D314                   MOV.L       L1785+6,R3 ; _push
    00001D72 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D74 0009                   NOP
          eval.c   534            eval();
    00001D76 D214                   MOV.L       L1785+10,R2; _eval
    00001D78 420B                   JSR         @R2
    00001D7A 0009                   NOP
          eval.c   535            p2 = pop();
    00001D7C D313                   MOV.L       L1785+14,R3; _pop
    00001D7E 430B                   JSR         @R3
    00001D80 0009                   NOP
          eval.c   536            set_binding(cadr(p1), p2);
    00001D82 6503                   MOV         R0,R5
    00001D84 D212                   MOV.L       L1785+18,R2; _p2
    00001D86 2202                   MOV.L       R0,@R2
    00001D88 64E2                   MOV.L       @R14,R4
    00001D8A 8448                   MOV.B       @(8,R4),R0
    00001D8C 2008                   TST         R0,R0
    00001D8E 8B02                   BF          L1672
    00001D90 64E2                   MOV.L       @R14,R4
    00001D92 A004                   BRA         L1674
    00001D94 5441                   MOV.L       @(4,R4),R4
    00001D96              L1672:                            
    00001D96 9312                   MOV.W       L1785,R3   ; H'0570
    00001D98 D109                   MOV.L       L1785+2,R1 ; _symtab
    00001D9A 6412                   MOV.L       @R1,R4
    00001D9C 343C                   ADD         R3,R4
    00001D9E              L1674:                            
    00001D9E 8448                   MOV.B       @(8,R4),R0
    00001DA0 2008                   TST         R0,R0
    00001DA2 8B17                   BF          L1671
    00001DA4 64E2                   MOV.L       @R14,R4
    00001DA6 8448                   MOV.B       @(8,R4),R0
    00001DA8 2008                   TST         R0,R0
    00001DAA 8B02                   BF          L1673
    00001DAC 64E2                   MOV.L       @R14,R4
    00001DAE A004                   BRA         L1675
    00001DB0 5441                   MOV.L       @(4,R4),R4
    00001DB2              L1673:                            
    00001DB2 9304                   MOV.W       L1785,R3   ; H'0570
    00001DB4 D202                   MOV.L       L1785+2,R2 ; _symtab
    00001DB6 6422                   MOV.L       @R2,R4
    00001DB8 343C                   ADD         R3,R4
    00001DBA              L1675:                            
    00001DBA A00F                   BRA         L1676
    00001DBC 6442                   MOV.L       @R4,R4
    00001DBE              L1785:                            
    00001DBE 0570                   .DATA.W     H'0570
    00001DC0 <00000000>             .DATA.L     _symtab
    00001DC4 <00000000>             .DATA.L     _push
    00001DC8 <00000000>             .DATA.L     _eval
    00001DCC <00000000>             .DATA.L     _pop
    00001DD0 <00000000>             .DATA.L     _p2
    00001DD4              L1671:                            
    00001DD4 936F                   MOV.W       L1786,R3   ; H'0570
    00001DD6 D238                   MOV.L       L1786+2,R2 ; _symtab
    00001DD8 6422                   MOV.L       @R2,R4
    00001DDA 343C                   ADD         R3,R4
    00001DDC              L1676:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001DDC D337                   MOV.L       L1786+6,R3 ; _set_binding
    00001DDE 430B                   JSR         @R3
    00001DE0 0009                   NOP
          eval.c   537    
          eval.c   538            push(symbol(NIL));
    00001DE2 9368                   MOV.W       L1786,R3   ; H'0570
    00001DE4 64D2                   MOV.L       @R13,R4
    00001DE6 343C                   ADD         R3,R4
    00001DE8 4F26                   LDS.L       @R15+,PR
    00001DEA 6DF6                   MOV.L       @R15+,R13
    00001DEC D234                   MOV.L       L1786+10,R2; _push
    00001DEE 422B                   JMP         @R2
    00001DF0 6EF6                   MOV.L       @R15+,R14
          eval.c   539    }
          eval.c   540    
          eval.c   541    void
          eval.c   542    eval_sqrt(void)
    00001DF2              _eval_sqrt:                      ; function: eval_sqrt
                                                           ; frame size=8
    00001DF2 2FE6                   MOV.L       R14,@-R15
    00001DF4 4F22                   STS.L       PR,@-R15
          eval.c   543    {
          eval.c   544            push(cadr(p1));
    00001DF6 DE33                   MOV.L       L1786+14,R14; _p1
    00001DF8 64E2                   MOV.L       @R14,R4
    00001DFA 8448                   MOV.B       @(8,R4),R0
    00001DFC 2008                   TST         R0,R0
    00001DFE 8B02                   BF          L1678
    00001E00 64E2                   MOV.L       @R14,R4
    00001E02 A004                   BRA         L1680
    00001E04 5441                   MOV.L       @(4,R4),R4
    00001E06              L1678:                            
    00001E06 9356                   MOV.W       L1786,R3   ; H'0570
    00001E08 D22B                   MOV.L       L1786+2,R2 ; _symtab
    00001E0A 6422                   MOV.L       @R2,R4
    00001E0C 343C                   ADD         R3,R4
    00001E0E              L1680:                            
    00001E0E 8448                   MOV.B       @(8,R4),R0
    00001E10 2008                   TST         R0,R0
    00001E12 8B0C                   BF          L1677
    00001E14 64E2                   MOV.L       @R14,R4
    00001E16 8448                   MOV.B       @(8,R4),R0
    00001E18 2008                   TST         R0,R0
    00001E1A 8B02                   BF          L1679
    00001E1C 64E2                   MOV.L       @R14,R4
    00001E1E A004                   BRA         L1681
    00001E20 5441                   MOV.L       @(4,R4),R4
    00001E22              L1679:                            
    00001E22 9348                   MOV.W       L1786,R3   ; H'0570
    00001E24 D224                   MOV.L       L1786+2,R2 ; _symtab
    00001E26 6422                   MOV.L       @R2,R4
    00001E28 343C                   ADD         R3,R4
    00001E2A              L1681:                            
    00001E2A A004                   BRA         L1682
    00001E2C 6442                   MOV.L       @R4,R4
    00001E2E              L1677:                            
    00001E2E 9342                   MOV.W       L1786,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E30 D221                   MOV.L       L1786+2,R2 ; _symtab
    00001E32 6422                   MOV.L       @R2,R4
    00001E34 343C                   ADD         R3,R4
    00001E36              L1682:                            
    00001E36 D322                   MOV.L       L1786+10,R3; _push
    00001E38 430B                   JSR         @R3
    00001E3A 0009                   NOP
          eval.c   545            eval();
    00001E3C D222                   MOV.L       L1786+18,R2; _eval
    00001E3E 420B                   JSR         @R2
    00001E40 0009                   NOP
          eval.c   546            push_rational(1, 2);
    00001E42 E502                   MOV         #2,R5
    00001E44 D321                   MOV.L       L1786+22,R3; _push_rational
    00001E46 430B                   JSR         @R3
    00001E48 E401                   MOV         #1,R4
          eval.c   547            power();
    00001E4A 4F26                   LDS.L       @R15+,PR
    00001E4C D220                   MOV.L       L1786+26,R2; _power
    00001E4E 422B                   JMP         @R2
    00001E50 6EF6                   MOV.L       @R15+,R14
          eval.c   548    }
          eval.c   549    
          eval.c   550    void
          eval.c   551    eval_stop(void)
    00001E52              _eval_stop:                      ; function: eval_stop
                                                           ; frame size=0
          eval.c   552    {
          eval.c   553            stop("user stop");
    00001E52 D420                   MOV.L       L1786+30,R4; L1114
    00001E54 D320                   MOV.L       L1786+34,R3; _stop
    00001E56 432B                   JMP         @R3
    00001E58 0009                   NOP
          eval.c   554    }
          eval.c   555    
          eval.c   556    void
          eval.c   557    eval_subst(void)
    00001E5A              _eval_subst:                     ; function: eval_subst
                                                           ; frame size=12
    00001E5A 2FE6                   MOV.L       R14,@-R15
    00001E5C 2FD6                   MOV.L       R13,@-R15
    00001E5E 4F22                   STS.L       PR,@-R15
          eval.c   558    {
          eval.c   559            push(cadddr(p1));
    00001E60 DD17                   MOV.L       L1786+10,R13; _push
    00001E62 DE18                   MOV.L       L1786+14,R14; _p1
    00001E64 64E2                   MOV.L       @R14,R4
    00001E66 8448                   MOV.B       @(8,R4),R0
    00001E68 2008                   TST         R0,R0
    00001E6A 8B02                   BF          L1686
    00001E6C 64E2                   MOV.L       @R14,R4
    00001E6E A004                   BRA         L1698
    00001E70 5441                   MOV.L       @(4,R4),R4
    00001E72              L1686:                            
    00001E72 9320                   MOV.W       L1786,R3   ; H'0570
    00001E74 D210                   MOV.L       L1786+2,R2 ; _symtab
    00001E76 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E78 343C                   ADD         R3,R4
    00001E7A              L1698:                            
    00001E7A 8448                   MOV.B       @(8,R4),R0
    00001E7C 2008                   TST         R0,R0
    00001E7E 8B0C                   BF          L1685
    00001E80 64E2                   MOV.L       @R14,R4
    00001E82 8448                   MOV.B       @(8,R4),R0
    00001E84 2008                   TST         R0,R0
    00001E86 8B02                   BF          L1687
    00001E88 64E2                   MOV.L       @R14,R4
    00001E8A A004                   BRA         L1699
    00001E8C 5441                   MOV.L       @(4,R4),R4
    00001E8E              L1687:                            
    00001E8E 9312                   MOV.W       L1786,R3   ; H'0570
    00001E90 D209                   MOV.L       L1786+2,R2 ; _symtab
    00001E92 6422                   MOV.L       @R2,R4
    00001E94 343C                   ADD         R3,R4
    00001E96              L1699:                            
    00001E96 A004                   BRA         L1700
    00001E98 5441                   MOV.L       @(4,R4),R4
    00001E9A              L1685:                            
    00001E9A 930C                   MOV.W       L1786,R3   ; H'0570
    00001E9C D206                   MOV.L       L1786+2,R2 ; _symtab
    00001E9E 6422                   MOV.L       @R2,R4
    00001EA0 343C                   ADD         R3,R4
    00001EA2              L1700:                            
    00001EA2 8448                   MOV.B       @(8,R4),R0
    00001EA4 2008                   TST         R0,R0
    00001EA6 8B33                   BF          L1684
    00001EA8 64E2                   MOV.L       @R14,R4
    00001EAA 8448                   MOV.B       @(8,R4),R0
    00001EAC 2008                   TST         R0,R0
    00001EAE 8B15                   BF          L1689
    00001EB0 64E2                   MOV.L       @R14,R4
    00001EB2 A017                   BRA         L1701
    00001EB4 5441                   MOV.L       @(4,R4),R4
    00001EB6              L1786:                            
    00001EB6 0570                   .DATA.W     H'0570
    00001EB8 <00000000>             .DATA.L     _symtab
    00001EBC <00000000>             .DATA.L     _set_binding
    00001EC0 <00000000>             .DATA.L     _push
    00001EC4 <00000000>             .DATA.L     _p1
    00001EC8 <00000000>             .DATA.L     _eval
    00001ECC <00000000>             .DATA.L     _push_rational
    00001ED0 <00000000>             .DATA.L     _power
    00001ED4 <00000000>             .DATA.L     L1114
    00001ED8 <00000000>             .DATA.L     _stop
    00001EDC              L1689:                            
    00001EDC 9362                   MOV.W       L1787,R3   ; H'0570
    00001EDE D232                   MOV.L       L1787+4,R2 ; _symtab
    00001EE0 6422                   MOV.L       @R2,R4
    00001EE2 343C                   ADD         R3,R4
    00001EE4              L1701:                            
    00001EE4 8448                   MOV.B       @(8,R4),R0
    00001EE6 2008                   TST         R0,R0
    00001EE8 8B0C                   BF          L1688
    00001EEA 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001EEC 8448                   MOV.B       @(8,R4),R0
    00001EEE 2008                   TST         R0,R0
    00001EF0 8B02                   BF          L1690
    00001EF2 64E2                   MOV.L       @R14,R4
    00001EF4 A004                   BRA         L1702
    00001EF6 5441                   MOV.L       @(4,R4),R4
    00001EF8              L1690:                            
    00001EF8 9354                   MOV.W       L1787,R3   ; H'0570
    00001EFA D22B                   MOV.L       L1787+4,R2 ; _symtab
    00001EFC 6422                   MOV.L       @R2,R4
    00001EFE 343C                   ADD         R3,R4
    00001F00              L1702:                            
    00001F00 A004                   BRA         L1703
    00001F02 5441                   MOV.L       @(4,R4),R4
    00001F04              L1688:                            
    00001F04 934E                   MOV.W       L1787,R3   ; H'0570
    00001F06 D228                   MOV.L       L1787+4,R2 ; _symtab
    00001F08 6422                   MOV.L       @R2,R4
    00001F0A 343C                   ADD         R3,R4
    00001F0C              L1703:                            
    00001F0C A004                   BRA         L1704
    00001F0E 5441                   MOV.L       @(4,R4),R4
    00001F10              L1684:                            
    00001F10 9348                   MOV.W       L1787,R3   ; H'0570
    00001F12 D225                   MOV.L       L1787+4,R2 ; _symtab
    00001F14 6422                   MOV.L       @R2,R4
    00001F16 343C                   ADD         R3,R4
    00001F18              L1704:                            
    00001F18 8448                   MOV.B       @(8,R4),R0
    00001F1A 2008                   TST         R0,R0
    00001F1C 8B4C                   BF          L1683
    00001F1E 64E2                   MOV.L       @R14,R4
    00001F20 8448                   MOV.B       @(8,R4),R0
    00001F22 2008                   TST         R0,R0
    00001F24 8B02                   BF          L1693
    00001F26 64E2                   MOV.L       @R14,R4
    00001F28 A004                   BRA         L1705
    00001F2A 5441                   MOV.L       @(4,R4),R4
    00001F2C              L1693:                            
    00001F2C 933A                   MOV.W       L1787,R3   ; H'0570
    00001F2E D21E                   MOV.L       L1787+4,R2 ; _symtab
    00001F30 6422                   MOV.L       @R2,R4
    00001F32 343C                   ADD         R3,R4
    00001F34              L1705:                            
    00001F34 8448                   MOV.B       @(8,R4),R0
    00001F36 2008                   TST         R0,R0
    00001F38 8B0C                   BF          L1692
    00001F3A 64E2                   MOV.L       @R14,R4
    00001F3C 8448                   MOV.B       @(8,R4),R0
    00001F3E 2008                   TST         R0,R0
    00001F40 8B02                   BF          L1694
    00001F42 64E2                   MOV.L       @R14,R4
    00001F44 A004                   BRA         L1706
    00001F46 5441                   MOV.L       @(4,R4),R4
    00001F48              L1694:                            
    00001F48 932C                   MOV.W       L1787,R3   ; H'0570
    00001F4A D217                   MOV.L       L1787+4,R2 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001F4C 6422                   MOV.L       @R2,R4
    00001F4E 343C                   ADD         R3,R4
    00001F50              L1706:                            
    00001F50 A004                   BRA         L1707
    00001F52 5441                   MOV.L       @(4,R4),R4
    00001F54              L1692:                            
    00001F54 9326                   MOV.W       L1787,R3   ; H'0570
    00001F56 D214                   MOV.L       L1787+4,R2 ; _symtab
    00001F58 6422                   MOV.L       @R2,R4
    00001F5A 343C                   ADD         R3,R4
    00001F5C              L1707:                            
    00001F5C 8448                   MOV.B       @(8,R4),R0
    00001F5E 2008                   TST         R0,R0
    00001F60 8B24                   BF          L1691
    00001F62 64E2                   MOV.L       @R14,R4
    00001F64 8448                   MOV.B       @(8,R4),R0
    00001F66 2008                   TST         R0,R0
    00001F68 8B02                   BF          L1696
    00001F6A 64E2                   MOV.L       @R14,R4
    00001F6C A004                   BRA         L1708
    00001F6E 5441                   MOV.L       @(4,R4),R4
    00001F70              L1696:                            
    00001F70 9318                   MOV.W       L1787,R3   ; H'0570
    00001F72 D20D                   MOV.L       L1787+4,R2 ; _symtab
    00001F74 6422                   MOV.L       @R2,R4
    00001F76 343C                   ADD         R3,R4
    00001F78              L1708:                            
    00001F78 8448                   MOV.B       @(8,R4),R0
    00001F7A 2008                   TST         R0,R0
    00001F7C 8B0C                   BF          L1695
    00001F7E 64E2                   MOV.L       @R14,R4
    00001F80 8448                   MOV.B       @(8,R4),R0
    00001F82 2008                   TST         R0,R0
    00001F84 8B02                   BF          L1697
    00001F86 64E2                   MOV.L       @R14,R4
    00001F88 A004                   BRA         L1709
    00001F8A 5441                   MOV.L       @(4,R4),R4
    00001F8C              L1697:                            
    00001F8C 930A                   MOV.W       L1787,R3   ; H'0570
    00001F8E D206                   MOV.L       L1787+4,R2 ; _symtab
    00001F90 6422                   MOV.L       @R2,R4
    00001F92 343C                   ADD         R3,R4
    00001F94              L1709:                            
    00001F94 A004                   BRA         L1710
    00001F96 5441                   MOV.L       @(4,R4),R4
    00001F98              L1695:                            
    00001F98 9304                   MOV.W       L1787,R3   ; H'0570
    00001F9A D203                   MOV.L       L1787+4,R2 ; _symtab
    00001F9C 6422                   MOV.L       @R2,R4
    00001F9E 343C                   ADD         R3,R4
    00001FA0              L1710:                            
    00001FA0 A008                   BRA         L1711
    00001FA2 5441                   MOV.L       @(4,R4),R4
    00001FA4              L1787:                            
    00001FA4 0570                   .DATA.W     H'0570
    00001FA6 0000                   .DATA.W     0
    00001FA8 <00000000>             .DATA.L     _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001FAC              L1691:                            
    00001FAC 9360                   MOV.W       L1788,R3   ; H'0570
    00001FAE D231                   MOV.L       L1788+4,R2 ; _symtab
    00001FB0 6422                   MOV.L       @R2,R4
    00001FB2 343C                   ADD         R3,R4
    00001FB4              L1711:                            
    00001FB4 A004                   BRA         L1712
    00001FB6 6442                   MOV.L       @R4,R4
    00001FB8              L1683:                            
    00001FB8 935A                   MOV.W       L1788,R3   ; H'0570
    00001FBA D22E                   MOV.L       L1788+4,R2 ; _symtab
    00001FBC 6422                   MOV.L       @R2,R4
    00001FBE 343C                   ADD         R3,R4
    00001FC0              L1712:                            
    00001FC0 4D0B                   JSR         @R13
    00001FC2 0009                   NOP
          eval.c   560            eval();
    00001FC4 D32C                   MOV.L       L1788+8,R3 ; _eval
    00001FC6 430B                   JSR         @R3
    00001FC8 0009                   NOP
          eval.c   561            push(caddr(p1));
    00001FCA 64E2                   MOV.L       @R14,R4
    00001FCC 8448                   MOV.B       @(8,R4),R0
    00001FCE 2008                   TST         R0,R0
    00001FD0 8B02                   BF          L1715
    00001FD2 64E2                   MOV.L       @R14,R4
    00001FD4 A004                   BRA         L1720
    00001FD6 5441                   MOV.L       @(4,R4),R4
    00001FD8              L1715:                            
    00001FD8 934A                   MOV.W       L1788,R3   ; H'0570
    00001FDA D226                   MOV.L       L1788+4,R2 ; _symtab
    00001FDC 6422                   MOV.L       @R2,R4
    00001FDE 343C                   ADD         R3,R4
    00001FE0              L1720:                            
    00001FE0 8448                   MOV.B       @(8,R4),R0
    00001FE2 2008                   TST         R0,R0
    00001FE4 8B0C                   BF          L1714
    00001FE6 64E2                   MOV.L       @R14,R4
    00001FE8 8448                   MOV.B       @(8,R4),R0
    00001FEA 2008                   TST         R0,R0
    00001FEC 8B02                   BF          L1716
    00001FEE 64E2                   MOV.L       @R14,R4
    00001FF0 A004                   BRA         L1721
    00001FF2 5441                   MOV.L       @(4,R4),R4
    00001FF4              L1716:                            
    00001FF4 933C                   MOV.W       L1788,R3   ; H'0570
    00001FF6 D21F                   MOV.L       L1788+4,R2 ; _symtab
    00001FF8 6422                   MOV.L       @R2,R4
    00001FFA 343C                   ADD         R3,R4
    00001FFC              L1721:                            
    00001FFC A004                   BRA         L1722
    00001FFE 5441                   MOV.L       @(4,R4),R4
    00002000              L1714:                            
    00002000 9336                   MOV.W       L1788,R3   ; H'0570
    00002002 D21C                   MOV.L       L1788+4,R2 ; _symtab
    00002004 6422                   MOV.L       @R2,R4
    00002006 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002008              L1722:                            
    00002008 8448                   MOV.B       @(8,R4),R0
    0000200A 2008                   TST         R0,R0
    0000200C 8B20                   BF          L1713
    0000200E 64E2                   MOV.L       @R14,R4
    00002010 8448                   MOV.B       @(8,R4),R0
    00002012 2008                   TST         R0,R0
    00002014 8B02                   BF          L1718
    00002016 64E2                   MOV.L       @R14,R4
    00002018 A004                   BRA         L1723
    0000201A 5441                   MOV.L       @(4,R4),R4
    0000201C              L1718:                            
    0000201C 9328                   MOV.W       L1788,R3   ; H'0570
    0000201E D215                   MOV.L       L1788+4,R2 ; _symtab
    00002020 6422                   MOV.L       @R2,R4
    00002022 343C                   ADD         R3,R4
    00002024              L1723:                            
    00002024 8448                   MOV.B       @(8,R4),R0
    00002026 2008                   TST         R0,R0
    00002028 8B0C                   BF          L1717
    0000202A 64E2                   MOV.L       @R14,R4
    0000202C 8448                   MOV.B       @(8,R4),R0
    0000202E 2008                   TST         R0,R0
    00002030 8B02                   BF          L1719
    00002032 64E2                   MOV.L       @R14,R4
    00002034 A004                   BRA         L1724
    00002036 5441                   MOV.L       @(4,R4),R4
    00002038              L1719:                            
    00002038 931A                   MOV.W       L1788,R3   ; H'0570
    0000203A D20E                   MOV.L       L1788+4,R2 ; _symtab
    0000203C 6422                   MOV.L       @R2,R4
    0000203E 343C                   ADD         R3,R4
    00002040              L1724:                            
    00002040 A004                   BRA         L1725
    00002042 5441                   MOV.L       @(4,R4),R4
    00002044              L1717:                            
    00002044 9314                   MOV.W       L1788,R3   ; H'0570
    00002046 D20B                   MOV.L       L1788+4,R2 ; _symtab
    00002048 6422                   MOV.L       @R2,R4
    0000204A 343C                   ADD         R3,R4
    0000204C              L1725:                            
    0000204C A004                   BRA         L1726
    0000204E 6442                   MOV.L       @R4,R4
    00002050              L1713:                            
    00002050 930E                   MOV.W       L1788,R3   ; H'0570
    00002052 D208                   MOV.L       L1788+4,R2 ; _symtab
    00002054 6422                   MOV.L       @R2,R4
    00002056 343C                   ADD         R3,R4
    00002058              L1726:                            
    00002058 4D0B                   JSR         @R13
    0000205A 0009                   NOP
          eval.c   562            eval();
    0000205C D306                   MOV.L       L1788+8,R3 ; _eval
    0000205E 430B                   JSR         @R3
    00002060 0009                   NOP
          eval.c   563            push(cadr(p1));
    00002062 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002064 8448                   MOV.B       @(8,R4),R0
    00002066 2008                   TST         R0,R0
    00002068 8B08                   BF          L1728
    0000206A 64E2                   MOV.L       @R14,R4
    0000206C A00A                   BRA         L1730
    0000206E 5441                   MOV.L       @(4,R4),R4
    00002070              L1788:                            
    00002070 0570                   .DATA.W     H'0570
    00002072 0000                   .DATA.W     0
    00002074 <00000000>             .DATA.L     _symtab
    00002078 <00000000>             .DATA.L     _eval
    0000207C              L1728:                            
    0000207C 937C                   MOV.W       L1789,R3   ; H'0570
    0000207E D23F                   MOV.L       L1789+4,R2 ; _symtab
    00002080 6422                   MOV.L       @R2,R4
    00002082 343C                   ADD         R3,R4
    00002084              L1730:                            
    00002084 8448                   MOV.B       @(8,R4),R0
    00002086 2008                   TST         R0,R0
    00002088 8B0C                   BF          L1727
    0000208A 64E2                   MOV.L       @R14,R4
    0000208C 8448                   MOV.B       @(8,R4),R0
    0000208E 2008                   TST         R0,R0
    00002090 8B02                   BF          L1729
    00002092 64E2                   MOV.L       @R14,R4
    00002094 A004                   BRA         L1731
    00002096 5441                   MOV.L       @(4,R4),R4
    00002098              L1729:                            
    00002098 936E                   MOV.W       L1789,R3   ; H'0570
    0000209A D238                   MOV.L       L1789+4,R2 ; _symtab
    0000209C 6422                   MOV.L       @R2,R4
    0000209E 343C                   ADD         R3,R4
    000020A0              L1731:                            
    000020A0 A004                   BRA         L1732
    000020A2 6442                   MOV.L       @R4,R4
    000020A4              L1727:                            
    000020A4 9368                   MOV.W       L1789,R3   ; H'0570
    000020A6 D235                   MOV.L       L1789+4,R2 ; _symtab
    000020A8 6422                   MOV.L       @R2,R4
    000020AA 343C                   ADD         R3,R4
    000020AC              L1732:                            
    000020AC 4D0B                   JSR         @R13
    000020AE 0009                   NOP
          eval.c   564            eval();
    000020B0 D333                   MOV.L       L1789+8,R3 ; _eval
    000020B2 430B                   JSR         @R3
    000020B4 0009                   NOP
          eval.c   565            subst();
    000020B6 D233                   MOV.L       L1789+12,R2; _subst
    000020B8 420B                   JSR         @R2
    000020BA 0009                   NOP
          eval.c   566            eval(); // normalize
    000020BC 4F26                   LDS.L       @R15+,PR
    000020BE 6DF6                   MOV.L       @R15+,R13
    000020C0 D32F                   MOV.L       L1789+8,R3 ; _eval
    000020C2 432B                   JMP         @R3
    000020C4 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          eval.c   567    }
          eval.c   568    
          eval.c   569    void
          eval.c   570    eval_unit(void)
    000020C6              _eval_unit:                      ; function: eval_unit
                                                           ; frame size=16
    000020C6 2FE6                   MOV.L       R14,@-R15
    000020C8 2FD6                   MOV.L       R13,@-R15
    000020CA 4F22                   STS.L       PR,@-R15
    000020CC 4F12                   STS.L       MACL,@-R15
          eval.c   571    {
          eval.c   572            int i, n;
          eval.c   573            push(cadr(p1));
    000020CE DE2E                   MOV.L       L1789+16,R14; _p1
    000020D0 64E2                   MOV.L       @R14,R4
    000020D2 8448                   MOV.B       @(8,R4),R0
    000020D4 2008                   TST         R0,R0
    000020D6 8B02                   BF          L1734
    000020D8 64E2                   MOV.L       @R14,R4
    000020DA A004                   BRA         L1736
    000020DC 5441                   MOV.L       @(4,R4),R4
    000020DE              L1734:                            
    000020DE 934B                   MOV.W       L1789,R3   ; H'0570
    000020E0 D226                   MOV.L       L1789+4,R2 ; _symtab
    000020E2 6422                   MOV.L       @R2,R4
    000020E4 343C                   ADD         R3,R4
    000020E6              L1736:                            
    000020E6 8448                   MOV.B       @(8,R4),R0
    000020E8 2008                   TST         R0,R0
    000020EA 8B0C                   BF          L1733
    000020EC 64E2                   MOV.L       @R14,R4
    000020EE 8448                   MOV.B       @(8,R4),R0
    000020F0 2008                   TST         R0,R0
    000020F2 8B02                   BF          L1735
    000020F4 64E2                   MOV.L       @R14,R4
    000020F6 A004                   BRA         L1737
    000020F8 5441                   MOV.L       @(4,R4),R4
    000020FA              L1735:                            
    000020FA 933D                   MOV.W       L1789,R3   ; H'0570
    000020FC D21F                   MOV.L       L1789+4,R2 ; _symtab
    000020FE 6422                   MOV.L       @R2,R4
    00002100 343C                   ADD         R3,R4
    00002102              L1737:                            
    00002102 A004                   BRA         L1738
    00002104 6442                   MOV.L       @R4,R4
    00002106              L1733:                            
    00002106 9337                   MOV.W       L1789,R3   ; H'0570
    00002108 D21C                   MOV.L       L1789+4,R2 ; _symtab
    0000210A 6422                   MOV.L       @R2,R4
    0000210C 343C                   ADD         R3,R4
    0000210E              L1738:                            
    0000210E D31F                   MOV.L       L1789+20,R3; _push
    00002110 430B                   JSR         @R3
    00002112 0009                   NOP
          eval.c   574            eval();
    00002114 D21A                   MOV.L       L1789+8,R2 ; _eval
    00002116 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002118 0009                   NOP
          eval.c   575            n = pop_integer();
    0000211A D31D                   MOV.L       L1789+24,R3; _pop_integer
    0000211C 430B                   JSR         @R3
    0000211E 0009                   NOP
    00002120 6D03                   MOV         R0,R13
          eval.c   576            if (n < 2) {
    00002122 E202                   MOV         #2,R2
    00002124 3D23                   CMP/GE      R2,R13
    00002126 8B20                   BF          L1127
          eval.c   577                    push(p1);
          eval.c   578                    return;
          eval.c   579            }
          eval.c   580            p1 = alloc_tensor(n * n);
    00002128 0DD7                   MUL.L       R13,R13
    0000212A D31A                   MOV.L       L1789+28,R3; _alloc_tensor
    0000212C 430B                   JSR         @R3
    0000212E 041A                   STS         MACL,R4
    00002130 2E02                   MOV.L       R0,@R14
          eval.c   581            p1->u.tensor->ndim = 2;
    00002132 6203                   MOV         R0,R2
    00002134 6322                   MOV.L       @R2,R3
    00002136 E102                   MOV         #2,R1
    00002138 2312                   MOV.L       R1,@R3
          eval.c   582            p1->u.tensor->dim[0] = n;
          eval.c   583            p1->u.tensor->dim[1] = n;
          eval.c   584            for (i = 0; i < n; i++)
    0000213A 4D15                   CMP/PL      R13
    0000213C 63E2                   MOV.L       @R14,R3
    0000213E 6232                   MOV.L       @R3,R2
    00002140 12D1                   MOV.L       R13,@(4,R2)
    00002142 63E2                   MOV.L       @R14,R3
    00002144 6232                   MOV.L       @R3,R2
    00002146 12D2                   MOV.L       R13,@(8,R2)
    00002148 8F0F                   BF/S        L1127
    0000214A E400                   MOV         #0,R4
    0000214C D512                   MOV.L       L1789+32,R5; _one
    0000214E              L1742:                            
          eval.c   585                    p1->u.tensor->elem[n * i + i] = one;
    0000214E 60E2                   MOV.L       @R14,R0
    00002150 04D7                   MUL.L       R13,R4
    00002152 6002                   MOV.L       @R0,R0
    00002154 6152                   MOV.L       @R5,R1
    00002156 031A                   STS         MACL,R3
    00002158 334C                   ADD         R4,R3
    0000215A 4308                   SHLL2       R3
    0000215C 6203                   MOV         R0,R2
    0000215E 7268                   ADD         #104,R2
    00002160 332C                   ADD         R2,R3
    00002162 7401                   ADD         #1,R4
    00002164 2312                   MOV.L       R1,@R3
    00002166 34D3                   CMP/GE      R13,R4
    00002168 8BF1                   BF          L1742
    0000216A              L1127:
          eval.c   586            push(p1);
    0000216A 64E2                   MOV.L       @R14,R4
    0000216C 4F16                   LDS.L       @R15+,MACL




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000216E 4F26                   LDS.L       @R15+,PR
    00002170 D206                   MOV.L       L1789+20,R2; _push
    00002172 6DF6                   MOV.L       @R15+,R13
    00002174 422B                   JMP         @R2
    00002176 6EF6                   MOV.L       @R15+,R14
    00002178              L1789:                            
    00002178 0570                   .DATA.W     H'0570
    0000217A 0000                   .DATA.W     0
    0000217C <00000000>             .DATA.L     _symtab
    00002180 <00000000>             .DATA.L     _eval
    00002184 <00000000>             .DATA.L     _subst
    00002188 <00000000>             .DATA.L     _p1
    0000218C <00000000>             .DATA.L     _push
    00002190 <00000000>             .DATA.L     _pop_integer
    00002194 <00000000>             .DATA.L     _alloc_tensor
    00002198 <00000000>             .DATA.L     _one
          eval.c   587    }
          eval.c   588    
          eval.c   589    void
          eval.c   590    eval_noexpand(void)
    0000219C              _eval_noexpand:                  ; function: eval_noexpand
                                                           ; frame size=12
    0000219C 2FE6                   MOV.L       R14,@-R15
          eval.c   591    {
          eval.c   592            int x = expanding;
          eval.c   593            expanding = 0;
    0000219E E200                   MOV         #0,R2
    000021A0 4F22                   STS.L       PR,@-R15
    000021A2 7FFC                   ADD         #-4,R15
    000021A4 DE1B                   MOV.L       L1790+4,R14; _expanding
    000021A6 63E2                   MOV.L       @R14,R3
    000021A8 2F32                   MOV.L       R3,@R15
          eval.c   594            eval();
    000021AA D31B                   MOV.L       L1790+8,R3 ; _eval
    000021AC 430B                   JSR         @R3
    000021AE 2E22                   MOV.L       R2,@R14
          eval.c   595            expanding = x;
    000021B0 61F2                   MOV.L       @R15,R1
    000021B2 2E12                   MOV.L       R1,@R14
          eval.c   596    }
    000021B4 7F04                   ADD         #4,R15
    000021B6 4F26                   LDS.L       @R15+,PR
    000021B8 000B                   RTS
    000021BA 6EF6                   MOV.L       @R15+,R14
          eval.c   597    
          eval.c   598    // like eval() except "=" is evaluated as "=="
          eval.c   599    
          eval.c   600    void
          eval.c   601    eval_predicate(void)
    000021BC              _eval_predicate:                 ; function: eval_predicate
                                                           ; frame size=8
    000021BC 2FE6                   MOV.L       R14,@-R15
    000021BE 4F22                   STS.L       PR,@-R15
          eval.c   602    {
          eval.c   603            save();
    000021C0 D316                   MOV.L       L1790+12,R3; _save
    000021C2 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000021C4 0009                   NOP
          eval.c   604            p1 = pop();
    000021C6 DE16                   MOV.L       L1790+16,R14; _p1
    000021C8 D216                   MOV.L       L1790+20,R2; _pop
    000021CA 420B                   JSR         @R2
    000021CC 0009                   NOP
    000021CE 6403                   MOV         R0,R4
    000021D0 2E02                   MOV.L       R0,@R14
    000021D2 8448                   MOV.B       @(8,R4),R0
    000021D4 2008                   TST         R0,R0
    000021D6 8B02                   BF          L1744
    000021D8 62E2                   MOV.L       @R14,R2
    000021DA A004                   BRA         L1745
    000021DC 6322                   MOV.L       @R2,R3
    000021DE              L1744:                            
    000021DE 9217                   MOV.W       L1790,R2   ; H'0570
    000021E0 D111                   MOV.L       L1790+24,R1; _symtab
    000021E2 6312                   MOV.L       @R1,R3
    000021E4 332C                   ADD         R2,R3
    000021E6              L1745:                            
    000021E6 9214                   MOV.W       L1790+2,R2 ; H'0474
    000021E8 D10F                   MOV.L       L1790+24,R1; _symtab
    000021EA 6012                   MOV.L       @R1,R0
    000021EC 302C                   ADD         R2,R0
    000021EE 3300                   CMP/EQ      R0,R3
    000021F0 8B04                   BF          L1743
          eval.c   605            if (car(p1) == symbol(SETQ))
          eval.c   606                    eval_testeq();
    000021F2 D10E                   MOV.L       L1790+28,R1; _eval_testeq
    000021F4 410B                   JSR         @R1
    000021F6 0009                   NOP
    000021F8 A006                   BRA         L1746
    000021FA 0009                   NOP
    000021FC              L1743:                            
          eval.c   607            else {
          eval.c   608                    push(p1);
    000021FC D10C                   MOV.L       L1790+32,R1; _push
    000021FE 410B                   JSR         @R1
    00002200 0009                   NOP
          eval.c   609                    eval();
    00002202 D305                   MOV.L       L1790+8,R3 ; _eval
    00002204 430B                   JSR         @R3
    00002206 0009                   NOP
    00002208              L1746:                            
          eval.c   610            }
          eval.c   611            restore();
    00002208 4F26                   LDS.L       @R15+,PR
    0000220A D20A                   MOV.L       L1790+36,R2; _restore
    0000220C 422B                   JMP         @R2
    0000220E 6EF6                   MOV.L       @R15+,R14
    00002210              L1790:                            
    00002210 0570                   .DATA.W     H'0570
    00002212 0474                   .DATA.W     H'0474
    00002214 <00000000>             .DATA.L     _expanding
    00002218 <00000000>             .DATA.L     _eval
    0000221C <00000000>             .DATA.L     _save
    00002220 <00000000>             .DATA.L     _p1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002224 <00000000>             .DATA.L     _pop
    00002228 <00000000>             .DATA.L     _symtab
    0000222C <00000000>             .DATA.L     _eval_testeq
    00002230 <00000000>             .DATA.L     _push
    00002234 <00000000>             .DATA.L     _restore
          eval.c   612    }
C   00000000              L1060:
    00000000 61746F6D3F             .SDATA      "atom?"
    00000005 00                     .DATA.B     H'00
    00000006 00000002               .RES.W      1
    00000008              L1064:
    00000008 636F6E733F             .SDATA      "cons?"
    0000000D 00                     .DATA.B     H'00
    0000000E 00000002               .RES.W      1
    00000010              L1068:
    00000010 636865636B             .SDATA      "check(arg): arg is zero"
             2861726729   
             3A20617267   
             206973207A   
             65726F       
    00000027 00                     .DATA.B     H'00
    00000028              L1106:
    00000028 696E646578             .SDATA      "indexed assignment: error in symbol"
             6564206173   
             7369676E6D   
             656E743A20   
             6572726F72   
             20696E2073   
             796D626F6C   
    0000004B 00                     .DATA.B     H'00
    0000004C              L1111:
    0000004C 73796D626F             .SDATA      "symbol assignment: error in symbol"
             6C20617373   
             69676E6D65   
             6E743A2065   
             72726F7220   
             696E207379   
             6D626F6C     
    0000006E 00                     .DATA.B     H'00
    0000006F 00000001               .RES.B      1
    00000070              L1114:
    00000070 7573657220             .SDATA      "user stop"
             73746F70     
    00000079 00                     .DATA.B     H'00

















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:36:57  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      612



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00002238 Byte(s)
CONSTANT SECTION (C):                               0000007A Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000022B2 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:          135
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          34
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           810






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk5D6A.tmp 

