SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\for.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           for.c     1    // 'for' function
           for.c     2    
           for.c     3    #include "stdafx.h"
           for.c     4    #include "defs.h"
           for.c     5    
           for.c     6    #define A p3
           for.c     7    #define B p4
           for.c     8    #define I p5
           for.c     9    #define X p6
           for.c    10    
           for.c    11    void
           for.c    12    eval_for(void)
P   00000000              _eval_for:                       ; function: eval_for
                                                           ; frame size=40
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A 2F96                   MOV.L       R9,@-R15
    0000000C 2F86                   MOV.L       R8,@-R15
    0000000E 4F22                   STS.L       PR,@-R15
           for.c    13    {
           for.c    14            int i, j, k;
           for.c    15    
           for.c    16            // 1st arg (quoted)
           for.c    17    
           for.c    18            X = cadr(p1);
    00000010 DC32                   MOV.L       L1162+4,R12; _p6
    00000012 7FF8                   ADD         #-8,R15
    00000014 DE32                   MOV.L       L1162+8,R14; _p1
    00000016 63E2                   MOV.L       @R14,R3
    00000018 8438                   MOV.B       @(8,R3),R0
    0000001A 2008                   TST         R0,R0
    0000001C 8B02                   BF          L1071
    0000001E 62E2                   MOV.L       @R14,R2
    00000020 A004                   BRA         L1073
    00000022 5221                   MOV.L       @(4,R2),R2
    00000024              L1071:                            
    00000024 9358                   MOV.W       L1162,R3   ; H'0570
    00000026 D12F                   MOV.L       L1162+12,R1; _symtab
    00000028 6212                   MOV.L       @R1,R2
    0000002A 323C                   ADD         R3,R2
    0000002C              L1073:                            
    0000002C 8428                   MOV.B       @(8,R2),R0
    0000002E 2008                   TST         R0,R0
    00000030 8B0C                   BF          L1070
    00000032 63E2                   MOV.L       @R14,R3
    00000034 8438                   MOV.B       @(8,R3),R0
    00000036 2008                   TST         R0,R0
    00000038 8B02                   BF          L1072
    0000003A 62E2                   MOV.L       @R14,R2
    0000003C A004                   BRA         L1074
    0000003E 5221                   MOV.L       @(4,R2),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000040              L1072:                            
    00000040 934A                   MOV.W       L1162,R3   ; H'0570
    00000042 D128                   MOV.L       L1162+12,R1; _symtab
    00000044 6212                   MOV.L       @R1,R2
    00000046 323C                   ADD         R3,R2
    00000048              L1074:                            
    00000048 A004                   BRA         L1075
    0000004A 6322                   MOV.L       @R2,R3
    0000004C              L1070:                            
    0000004C 9244                   MOV.W       L1162,R2   ; H'0570
    0000004E D125                   MOV.L       L1162+12,R1; _symtab
    00000050 6312                   MOV.L       @R1,R3
    00000052 332C                   ADD         R2,R3
    00000054              L1075:                            
    00000054 2C32                   MOV.L       R3,@R12
           for.c    19            if (!issymbol(X))
    00000056 6033                   MOV         R3,R0
    00000058 DD23                   MOV.L       L1162+16,R13; _stop
    0000005A 8408                   MOV.B       @(8,R0),R0
    0000005C 600C                   EXTU.B      R0,R0
    0000005E 8805                   CMP/EQ      #5,R0
    00000060 8902                   BT          L1076
           for.c    20                    stop("for: 1st arg?");
    00000062 D422                   MOV.L       L1162+20,R4; L1062
    00000064 4D0B                   JSR         @R13
    00000066 0009                   NOP
    00000068              L1076:                            
           for.c    21    
           for.c    22            // 2nd arg
           for.c    23    
           for.c    24            push(caddr(p1));
    00000068 DB21                   MOV.L       L1162+24,R11; _push
    0000006A 64E2                   MOV.L       @R14,R4
    0000006C 8448                   MOV.B       @(8,R4),R0
    0000006E 2008                   TST         R0,R0
    00000070 8B02                   BF          L1079
    00000072 64E2                   MOV.L       @R14,R4
    00000074 A004                   BRA         L1084
    00000076 5441                   MOV.L       @(4,R4),R4
    00000078              L1079:                            
    00000078 932E                   MOV.W       L1162,R3   ; H'0570
    0000007A D21A                   MOV.L       L1162+12,R2; _symtab
    0000007C 6422                   MOV.L       @R2,R4
    0000007E 343C                   ADD         R3,R4
    00000080              L1084:                            
    00000080 8448                   MOV.B       @(8,R4),R0
    00000082 2008                   TST         R0,R0
    00000084 8B0C                   BF          L1078
    00000086 64E2                   MOV.L       @R14,R4
    00000088 8448                   MOV.B       @(8,R4),R0
    0000008A 2008                   TST         R0,R0
    0000008C 8B02                   BF          L1080
    0000008E 64E2                   MOV.L       @R14,R4
    00000090 A004                   BRA         L1085
    00000092 5441                   MOV.L       @(4,R4),R4
    00000094              L1080:                            
    00000094 9320                   MOV.W       L1162,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000096 D213                   MOV.L       L1162+12,R2; _symtab
    00000098 6422                   MOV.L       @R2,R4
    0000009A 343C                   ADD         R3,R4
    0000009C              L1085:                            
    0000009C A004                   BRA         L1086
    0000009E 5441                   MOV.L       @(4,R4),R4
    000000A0              L1078:                            
    000000A0 931A                   MOV.W       L1162,R3   ; H'0570
    000000A2 D210                   MOV.L       L1162+12,R2; _symtab
    000000A4 6422                   MOV.L       @R2,R4
    000000A6 343C                   ADD         R3,R4
    000000A8              L1086:                            
    000000A8 8448                   MOV.B       @(8,R4),R0
    000000AA 2008                   TST         R0,R0
    000000AC 8B2E                   BF          L1077
    000000AE 64E2                   MOV.L       @R14,R4
    000000B0 8448                   MOV.B       @(8,R4),R0
    000000B2 2008                   TST         R0,R0
    000000B4 8B02                   BF          L1082
    000000B6 64E2                   MOV.L       @R14,R4
    000000B8 A004                   BRA         L1087
    000000BA 5441                   MOV.L       @(4,R4),R4
    000000BC              L1082:                            
    000000BC 930C                   MOV.W       L1162,R3   ; H'0570
    000000BE D209                   MOV.L       L1162+12,R2; _symtab
    000000C0 6422                   MOV.L       @R2,R4
    000000C2 343C                   ADD         R3,R4
    000000C4              L1087:                            
    000000C4 8448                   MOV.B       @(8,R4),R0
    000000C6 2008                   TST         R0,R0
    000000C8 8B1A                   BF          L1081
    000000CA 64E2                   MOV.L       @R14,R4
    000000CC 8448                   MOV.B       @(8,R4),R0
    000000CE 2008                   TST         R0,R0
    000000D0 8B10                   BF          L1083
    000000D2 64E2                   MOV.L       @R14,R4
    000000D4 A012                   BRA         L1088
    000000D6 5441                   MOV.L       @(4,R4),R4
    000000D8              L1162:                            
    000000D8 0570                   .DATA.W     H'0570
    000000DA 0000                   .DATA.W     0
    000000DC <00000000>             .DATA.L     _p6
    000000E0 <00000000>             .DATA.L     _p1
    000000E4 <00000000>             .DATA.L     _symtab
    000000E8 <00000000>             .DATA.L     _stop
    000000EC <00000000>             .DATA.L     L1062
    000000F0 <00000000>             .DATA.L     _push
    000000F4              L1083:                            
    000000F4 9360                   MOV.W       L1163,R3   ; H'0570
    000000F6 D231                   MOV.L       L1163+4,R2 ; _symtab
    000000F8 6422                   MOV.L       @R2,R4
    000000FA 343C                   ADD         R3,R4
    000000FC              L1088:                            
    000000FC A004                   BRA         L1089
    000000FE 5441                   MOV.L       @(4,R4),R4
    00000100              L1081:                            
    00000100 935A                   MOV.W       L1163,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000102 D22E                   MOV.L       L1163+4,R2 ; _symtab
    00000104 6422                   MOV.L       @R2,R4
    00000106 343C                   ADD         R3,R4
    00000108              L1089:                            
    00000108 A004                   BRA         L1090
    0000010A 6442                   MOV.L       @R4,R4
    0000010C              L1077:                            
    0000010C 9354                   MOV.W       L1163,R3   ; H'0570
    0000010E D22B                   MOV.L       L1163+4,R2 ; _symtab
    00000110 6422                   MOV.L       @R2,R4
    00000112 343C                   ADD         R3,R4
    00000114              L1090:                            
    00000114 4B0B                   JSR         @R11
    00000116 0009                   NOP
           for.c    25            eval();
    00000118 D929                   MOV.L       L1163+8,R9 ; _eval
    0000011A 490B                   JSR         @R9
    0000011C 0009                   NOP
           for.c    26            j = pop_integer();
    0000011E D329                   MOV.L       L1163+12,R3; _pop_integer
    00000120 430B                   JSR         @R3
    00000122 0009                   NOP
           for.c    27            if (j == (int) 0x80000000)
    00000124 D328                   MOV.L       L1163+16,R3; H'80000000
    00000126 3030                   CMP/EQ      R3,R0
    00000128 8F03                   BF/S        L1091
    0000012A 1F01                   MOV.L       R0,@(4,R15)
           for.c    28                    stop("for: 2nd arg?");
    0000012C D427                   MOV.L       L1163+20,R4; L1063
    0000012E 4D0B                   JSR         @R13
    00000130 0009                   NOP
    00000132              L1091:                            
           for.c    29    
           for.c    30            // 3rd arg
           for.c    31    
           for.c    32            push(cadddr(p1));
    00000132 64E2                   MOV.L       @R14,R4
    00000134 8448                   MOV.B       @(8,R4),R0
    00000136 2008                   TST         R0,R0
    00000138 8B02                   BF          L1095
    0000013A 64E2                   MOV.L       @R14,R4
    0000013C A004                   BRA         L1107
    0000013E 5441                   MOV.L       @(4,R4),R4
    00000140              L1095:                            
    00000140 933A                   MOV.W       L1163,R3   ; H'0570
    00000142 D21E                   MOV.L       L1163+4,R2 ; _symtab
    00000144 6422                   MOV.L       @R2,R4
    00000146 343C                   ADD         R3,R4
    00000148              L1107:                            
    00000148 8448                   MOV.B       @(8,R4),R0
    0000014A 2008                   TST         R0,R0
    0000014C 8B0C                   BF          L1094
    0000014E 64E2                   MOV.L       @R14,R4
    00000150 8448                   MOV.B       @(8,R4),R0
    00000152 2008                   TST         R0,R0
    00000154 8B02                   BF          L1096
    00000156 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000158 A004                   BRA         L1108
    0000015A 5441                   MOV.L       @(4,R4),R4
    0000015C              L1096:                            
    0000015C 932C                   MOV.W       L1163,R3   ; H'0570
    0000015E D217                   MOV.L       L1163+4,R2 ; _symtab
    00000160 6422                   MOV.L       @R2,R4
    00000162 343C                   ADD         R3,R4
    00000164              L1108:                            
    00000164 A004                   BRA         L1109
    00000166 5441                   MOV.L       @(4,R4),R4
    00000168              L1094:                            
    00000168 9326                   MOV.W       L1163,R3   ; H'0570
    0000016A D214                   MOV.L       L1163+4,R2 ; _symtab
    0000016C 6422                   MOV.L       @R2,R4
    0000016E 343C                   ADD         R3,R4
    00000170              L1109:                            
    00000170 8448                   MOV.B       @(8,R4),R0
    00000172 2008                   TST         R0,R0
    00000174 8B2C                   BF          L1093
    00000176 64E2                   MOV.L       @R14,R4
    00000178 8448                   MOV.B       @(8,R4),R0
    0000017A 2008                   TST         R0,R0
    0000017C 8B02                   BF          L1098
    0000017E 64E2                   MOV.L       @R14,R4
    00000180 A004                   BRA         L1110
    00000182 5441                   MOV.L       @(4,R4),R4
    00000184              L1098:                            
    00000184 9318                   MOV.W       L1163,R3   ; H'0570
    00000186 D20D                   MOV.L       L1163+4,R2 ; _symtab
    00000188 6422                   MOV.L       @R2,R4
    0000018A 343C                   ADD         R3,R4
    0000018C              L1110:                            
    0000018C 8448                   MOV.B       @(8,R4),R0
    0000018E 2008                   TST         R0,R0
    00000190 8B0C                   BF          L1097
    00000192 64E2                   MOV.L       @R14,R4
    00000194 8448                   MOV.B       @(8,R4),R0
    00000196 2008                   TST         R0,R0
    00000198 8B02                   BF          L1099
    0000019A 64E2                   MOV.L       @R14,R4
    0000019C A004                   BRA         L1111
    0000019E 5441                   MOV.L       @(4,R4),R4
    000001A0              L1099:                            
    000001A0 930A                   MOV.W       L1163,R3   ; H'0570
    000001A2 D206                   MOV.L       L1163+4,R2 ; _symtab
    000001A4 6422                   MOV.L       @R2,R4
    000001A6 343C                   ADD         R3,R4
    000001A8              L1111:                            
    000001A8 A004                   BRA         L1112
    000001AA 5441                   MOV.L       @(4,R4),R4
    000001AC              L1097:                            
    000001AC 9304                   MOV.W       L1163,R3   ; H'0570
    000001AE D203                   MOV.L       L1163+4,R2 ; _symtab
    000001B0 6422                   MOV.L       @R2,R4
    000001B2 343C                   ADD         R3,R4
    000001B4              L1112:                            
    000001B4 A010                   BRA         L1113




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001B6 5441                   MOV.L       @(4,R4),R4
    000001B8              L1163:                            
    000001B8 0570                   .DATA.W     H'0570
    000001BA 0000                   .DATA.W     0
    000001BC <00000000>             .DATA.L     _symtab
    000001C0 <00000000>             .DATA.L     _eval
    000001C4 <00000000>             .DATA.L     _pop_integer
    000001C8 80000000               .DATA.L     H'80000000
    000001CC <00000000>             .DATA.L     L1063
    000001D0              L1093:                            
    000001D0 9367                   MOV.W       L1164,R3   ; H'0570
    000001D2 D234                   MOV.L       L1164+2,R2 ; _symtab
    000001D4 6422                   MOV.L       @R2,R4
    000001D6 343C                   ADD         R3,R4
    000001D8              L1113:                            
    000001D8 8448                   MOV.B       @(8,R4),R0
    000001DA 2008                   TST         R0,R0
    000001DC 8B48                   BF          L1092
    000001DE 64E2                   MOV.L       @R14,R4
    000001E0 8448                   MOV.B       @(8,R4),R0
    000001E2 2008                   TST         R0,R0
    000001E4 8B02                   BF          L1102
    000001E6 64E2                   MOV.L       @R14,R4
    000001E8 A004                   BRA         L1114
    000001EA 5441                   MOV.L       @(4,R4),R4
    000001EC              L1102:                            
    000001EC 9359                   MOV.W       L1164,R3   ; H'0570
    000001EE D22D                   MOV.L       L1164+2,R2 ; _symtab
    000001F0 6422                   MOV.L       @R2,R4
    000001F2 343C                   ADD         R3,R4
    000001F4              L1114:                            
    000001F4 8448                   MOV.B       @(8,R4),R0
    000001F6 2008                   TST         R0,R0
    000001F8 8B0C                   BF          L1101
    000001FA 64E2                   MOV.L       @R14,R4
    000001FC 8448                   MOV.B       @(8,R4),R0
    000001FE 2008                   TST         R0,R0
    00000200 8B02                   BF          L1103
    00000202 64E2                   MOV.L       @R14,R4
    00000204 A004                   BRA         L1115
    00000206 5441                   MOV.L       @(4,R4),R4
    00000208              L1103:                            
    00000208 934B                   MOV.W       L1164,R3   ; H'0570
    0000020A D226                   MOV.L       L1164+2,R2 ; _symtab
    0000020C 6422                   MOV.L       @R2,R4
    0000020E 343C                   ADD         R3,R4
    00000210              L1115:                            
    00000210 A004                   BRA         L1116
    00000212 5441                   MOV.L       @(4,R4),R4
    00000214              L1101:                            
    00000214 9345                   MOV.W       L1164,R3   ; H'0570
    00000216 D223                   MOV.L       L1164+2,R2 ; _symtab
    00000218 6422                   MOV.L       @R2,R4
    0000021A 343C                   ADD         R3,R4
    0000021C              L1116:                            
    0000021C 8448                   MOV.B       @(8,R4),R0
    0000021E 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000220 8B20                   BF          L1100
    00000222 64E2                   MOV.L       @R14,R4
    00000224 8448                   MOV.B       @(8,R4),R0
    00000226 2008                   TST         R0,R0
    00000228 8B02                   BF          L1105
    0000022A 64E2                   MOV.L       @R14,R4
    0000022C A004                   BRA         L1117
    0000022E 5441                   MOV.L       @(4,R4),R4
    00000230              L1105:                            
    00000230 9337                   MOV.W       L1164,R3   ; H'0570
    00000232 D21C                   MOV.L       L1164+2,R2 ; _symtab
    00000234 6422                   MOV.L       @R2,R4
    00000236 343C                   ADD         R3,R4
    00000238              L1117:                            
    00000238 8448                   MOV.B       @(8,R4),R0
    0000023A 2008                   TST         R0,R0
    0000023C 8B0C                   BF          L1104
    0000023E 64E2                   MOV.L       @R14,R4
    00000240 8448                   MOV.B       @(8,R4),R0
    00000242 2008                   TST         R0,R0
    00000244 8B02                   BF          L1106
    00000246 64E2                   MOV.L       @R14,R4
    00000248 A004                   BRA         L1118
    0000024A 5441                   MOV.L       @(4,R4),R4
    0000024C              L1106:                            
    0000024C 9329                   MOV.W       L1164,R3   ; H'0570
    0000024E D215                   MOV.L       L1164+2,R2 ; _symtab
    00000250 6422                   MOV.L       @R2,R4
    00000252 343C                   ADD         R3,R4
    00000254              L1118:                            
    00000254 A004                   BRA         L1119
    00000256 5441                   MOV.L       @(4,R4),R4
    00000258              L1104:                            
    00000258 9323                   MOV.W       L1164,R3   ; H'0570
    0000025A D212                   MOV.L       L1164+2,R2 ; _symtab
    0000025C 6422                   MOV.L       @R2,R4
    0000025E 343C                   ADD         R3,R4
    00000260              L1119:                            
    00000260 A004                   BRA         L1120
    00000262 5441                   MOV.L       @(4,R4),R4
    00000264              L1100:                            
    00000264 931D                   MOV.W       L1164,R3   ; H'0570
    00000266 D20F                   MOV.L       L1164+2,R2 ; _symtab
    00000268 6422                   MOV.L       @R2,R4
    0000026A 343C                   ADD         R3,R4
    0000026C              L1120:                            
    0000026C A004                   BRA         L1121
    0000026E 6442                   MOV.L       @R4,R4
    00000270              L1092:                            
    00000270 9317                   MOV.W       L1164,R3   ; H'0570
    00000272 D20C                   MOV.L       L1164+2,R2 ; _symtab
    00000274 6422                   MOV.L       @R2,R4
    00000276 343C                   ADD         R3,R4
    00000278              L1121:                            
    00000278 4B0B                   JSR         @R11
    0000027A 0009                   NOP
           for.c    33            eval();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000027C 490B                   JSR         @R9
    0000027E 0009                   NOP
           for.c    34            k = pop_integer();
    00000280 D309                   MOV.L       L1164+6,R3 ; _pop_integer
    00000282 430B                   JSR         @R3
    00000284 0009                   NOP
           for.c    35            if (k == (int) 0x80000000)
    00000286 D309                   MOV.L       L1164+10,R3; H'80000000
    00000288 3030                   CMP/EQ      R3,R0
    0000028A 8F03                   BF/S        L1122
    0000028C 2F02                   MOV.L       R0,@R15
           for.c    36                    stop("for: 3rd arg?");
    0000028E D408                   MOV.L       L1164+14,R4; L1064
    00000290 4D0B                   JSR         @R13
    00000292 0009                   NOP
    00000294              L1122:                            
           for.c    37    
           for.c    38            // remaining args
           for.c    39    
           for.c    40            p1 = cddddr(p1);
    00000294 63E2                   MOV.L       @R14,R3
    00000296 8438                   MOV.B       @(8,R3),R0
    00000298 2008                   TST         R0,R0
    0000029A 8B0B                   BF          L1126
    0000029C 62E2                   MOV.L       @R14,R2
    0000029E A00D                   BRA         L1138
    000002A0 5221                   MOV.L       @(4,R2),R2
    000002A2              L1164:                            
    000002A2 0570                   .DATA.W     H'0570
    000002A4 <00000000>             .DATA.L     _symtab
    000002A8 <00000000>             .DATA.L     _pop_integer
    000002AC 80000000               .DATA.L     H'80000000
    000002B0 <00000000>             .DATA.L     L1064
    000002B4              L1126:                            
    000002B4 935C                   MOV.W       L1165,R3   ; H'0570
    000002B6 D12F                   MOV.L       L1165+4,R1 ; _symtab
    000002B8 6212                   MOV.L       @R1,R2
    000002BA 323C                   ADD         R3,R2
    000002BC              L1138:                            
    000002BC 8428                   MOV.B       @(8,R2),R0
    000002BE 2008                   TST         R0,R0
    000002C0 8B0C                   BF          L1125
    000002C2 63E2                   MOV.L       @R14,R3
    000002C4 8438                   MOV.B       @(8,R3),R0
    000002C6 2008                   TST         R0,R0
    000002C8 8B02                   BF          L1127
    000002CA 62E2                   MOV.L       @R14,R2
    000002CC A004                   BRA         L1139
    000002CE 5221                   MOV.L       @(4,R2),R2
    000002D0              L1127:                            
    000002D0 934E                   MOV.W       L1165,R3   ; H'0570
    000002D2 D128                   MOV.L       L1165+4,R1 ; _symtab
    000002D4 6212                   MOV.L       @R1,R2
    000002D6 323C                   ADD         R3,R2
    000002D8              L1139:                            
    000002D8 A004                   BRA         L1140
    000002DA 5321                   MOV.L       @(4,R2),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002DC              L1125:                            
    000002DC 9248                   MOV.W       L1165,R2   ; H'0570
    000002DE D125                   MOV.L       L1165+4,R1 ; _symtab
    000002E0 6312                   MOV.L       @R1,R3
    000002E2 332C                   ADD         R2,R3
    000002E4              L1140:                            
    000002E4 8438                   MOV.B       @(8,R3),R0
    000002E6 2008                   TST         R0,R0
    000002E8 8B20                   BF          L1124
    000002EA 62E2                   MOV.L       @R14,R2
    000002EC 8428                   MOV.B       @(8,R2),R0
    000002EE 2008                   TST         R0,R0
    000002F0 8B02                   BF          L1129
    000002F2 62E2                   MOV.L       @R14,R2
    000002F4 A004                   BRA         L1141
    000002F6 5321                   MOV.L       @(4,R2),R3
    000002F8              L1129:                            
    000002F8 923A                   MOV.W       L1165,R2   ; H'0570
    000002FA D11E                   MOV.L       L1165+4,R1 ; _symtab
    000002FC 6312                   MOV.L       @R1,R3
    000002FE 332C                   ADD         R2,R3
    00000300              L1141:                            
    00000300 8438                   MOV.B       @(8,R3),R0
    00000302 2008                   TST         R0,R0
    00000304 8B0C                   BF          L1128
    00000306 63E2                   MOV.L       @R14,R3
    00000308 8438                   MOV.B       @(8,R3),R0
    0000030A 2008                   TST         R0,R0
    0000030C 8B02                   BF          L1130
    0000030E 62E2                   MOV.L       @R14,R2
    00000310 A004                   BRA         L1142
    00000312 5221                   MOV.L       @(4,R2),R2
    00000314              L1130:                            
    00000314 932C                   MOV.W       L1165,R3   ; H'0570
    00000316 D117                   MOV.L       L1165+4,R1 ; _symtab
    00000318 6212                   MOV.L       @R1,R2
    0000031A 323C                   ADD         R3,R2
    0000031C              L1142:                            
    0000031C A004                   BRA         L1143
    0000031E 5221                   MOV.L       @(4,R2),R2
    00000320              L1128:                            
    00000320 9326                   MOV.W       L1165,R3   ; H'0570
    00000322 D114                   MOV.L       L1165+4,R1 ; _symtab
    00000324 6212                   MOV.L       @R1,R2
    00000326 323C                   ADD         R3,R2
    00000328              L1143:                            
    00000328 A004                   BRA         L1144
    0000032A 5221                   MOV.L       @(4,R2),R2
    0000032C              L1124:                            
    0000032C 9320                   MOV.W       L1165,R3   ; H'0570
    0000032E D111                   MOV.L       L1165+4,R1 ; _symtab
    00000330 6212                   MOV.L       @R1,R2
    00000332 323C                   ADD         R3,R2
    00000334              L1144:                            
    00000334 8428                   MOV.B       @(8,R2),R0
    00000336 2008                   TST         R0,R0
    00000338 8B4C                   BF          L1123




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000033A 63E2                   MOV.L       @R14,R3
    0000033C 8438                   MOV.B       @(8,R3),R0
    0000033E 2008                   TST         R0,R0
    00000340 8B02                   BF          L1133
    00000342 62E2                   MOV.L       @R14,R2
    00000344 A004                   BRA         L1145
    00000346 5221                   MOV.L       @(4,R2),R2
    00000348              L1133:                            
    00000348 9312                   MOV.W       L1165,R3   ; H'0570
    0000034A D10A                   MOV.L       L1165+4,R1 ; _symtab
    0000034C 6212                   MOV.L       @R1,R2
    0000034E 323C                   ADD         R3,R2
    00000350              L1145:                            
    00000350 8428                   MOV.B       @(8,R2),R0
    00000352 2008                   TST         R0,R0
    00000354 8B10                   BF          L1132
    00000356 63E2                   MOV.L       @R14,R3
    00000358 8438                   MOV.B       @(8,R3),R0
    0000035A 2008                   TST         R0,R0
    0000035C 8B02                   BF          L1134
    0000035E 62E2                   MOV.L       @R14,R2
    00000360 A004                   BRA         L1146
    00000362 5221                   MOV.L       @(4,R2),R2
    00000364              L1134:                            
    00000364 9304                   MOV.W       L1165,R3   ; H'0570
    00000366 D103                   MOV.L       L1165+4,R1 ; _symtab
    00000368 6212                   MOV.L       @R1,R2
    0000036A 323C                   ADD         R3,R2
    0000036C              L1146:                            
    0000036C A008                   BRA         L1147
    0000036E 5321                   MOV.L       @(4,R2),R3
    00000370              L1165:                            
    00000370 0570                   .DATA.W     H'0570
    00000372 0000                   .DATA.W     0
    00000374 <00000000>             .DATA.L     _symtab
    00000378              L1132:                            
    00000378 9264                   MOV.W       L1166,R2   ; H'0570
    0000037A D133                   MOV.L       L1166+4,R1 ; _symtab
    0000037C 6312                   MOV.L       @R1,R3
    0000037E 332C                   ADD         R2,R3
    00000380              L1147:                            
    00000380 8438                   MOV.B       @(8,R3),R0
    00000382 2008                   TST         R0,R0
    00000384 8B20                   BF          L1131
    00000386 62E2                   MOV.L       @R14,R2
    00000388 8428                   MOV.B       @(8,R2),R0
    0000038A 2008                   TST         R0,R0
    0000038C 8B02                   BF          L1136
    0000038E 62E2                   MOV.L       @R14,R2
    00000390 A004                   BRA         L1148
    00000392 5321                   MOV.L       @(4,R2),R3
    00000394              L1136:                            
    00000394 9256                   MOV.W       L1166,R2   ; H'0570
    00000396 D12C                   MOV.L       L1166+4,R1 ; _symtab
    00000398 6312                   MOV.L       @R1,R3
    0000039A 332C                   ADD         R2,R3
    0000039C              L1148:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000039C 8438                   MOV.B       @(8,R3),R0
    0000039E 2008                   TST         R0,R0
    000003A0 8B0C                   BF          L1135
    000003A2 63E2                   MOV.L       @R14,R3
    000003A4 8438                   MOV.B       @(8,R3),R0
    000003A6 2008                   TST         R0,R0
    000003A8 8B02                   BF          L1137
    000003AA 62E2                   MOV.L       @R14,R2
    000003AC A004                   BRA         L1149
    000003AE 5221                   MOV.L       @(4,R2),R2
    000003B0              L1137:                            
    000003B0 9348                   MOV.W       L1166,R3   ; H'0570
    000003B2 D125                   MOV.L       L1166+4,R1 ; _symtab
    000003B4 6212                   MOV.L       @R1,R2
    000003B6 323C                   ADD         R3,R2
    000003B8              L1149:                            
    000003B8 A004                   BRA         L1150
    000003BA 5221                   MOV.L       @(4,R2),R2
    000003BC              L1135:                            
    000003BC 9342                   MOV.W       L1166,R3   ; H'0570
    000003BE D122                   MOV.L       L1166+4,R1 ; _symtab
    000003C0 6212                   MOV.L       @R1,R2
    000003C2 323C                   ADD         R3,R2
    000003C4              L1150:                            
    000003C4 A004                   BRA         L1151
    000003C6 5221                   MOV.L       @(4,R2),R2
    000003C8              L1131:                            
    000003C8 933C                   MOV.W       L1166,R3   ; H'0570
    000003CA D11F                   MOV.L       L1166+4,R1 ; _symtab
    000003CC 6212                   MOV.L       @R1,R2
    000003CE 323C                   ADD         R3,R2
    000003D0              L1151:                            
    000003D0 A004                   BRA         L1152
    000003D2 5321                   MOV.L       @(4,R2),R3
    000003D4              L1123:                            
    000003D4 9236                   MOV.W       L1166,R2   ; H'0570
    000003D6 D11C                   MOV.L       L1166+4,R1 ; _symtab
    000003D8 6312                   MOV.L       @R1,R3
    000003DA 332C                   ADD         R2,R3
    000003DC              L1152:                            
    000003DC 2E32                   MOV.L       R3,@R14
           for.c    41    
           for.c    42            B = get_binding(X);
    000003DE D31B                   MOV.L       L1166+8,R3 ; _get_binding
    000003E0 430B                   JSR         @R3
    000003E2 64C2                   MOV.L       @R12,R4
    000003E4 D21A                   MOV.L       L1166+12,R2; _p4
    000003E6 2202                   MOV.L       R0,@R2
           for.c    43            A = get_arglist(X);
    000003E8 D31A                   MOV.L       L1166+16,R3; _get_arglist
    000003EA 430B                   JSR         @R3
    000003EC 64C2                   MOV.L       @R12,R4
    000003EE D21A                   MOV.L       L1166+20,R2; _p3
           for.c    44    
           for.c    45            for (i = j; i <= k; i++) {
    000003F0 D81A                   MOV.L       L1166+24,R8; _pop
    000003F2 2202                   MOV.L       R0,@R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003F4 DD1A                   MOV.L       L1166+28,R13; _p2
    000003F6 A045                   BRA         L1153
    000003F8 5AF1                   MOV.L       @(4,R15),R10
    000003FA              L1154:                            
           for.c    46                    push_integer(i);
    000003FA D21A                   MOV.L       L1166+32,R2; _push_integer
    000003FC 420B                   JSR         @R2
    000003FE 64A3                   MOV         R10,R4
           for.c    47                    I = pop();
    00000400 480B                   JSR         @R8
    00000402 0009                   NOP
    00000404 D318                   MOV.L       L1166+36,R3; _p5
           for.c    48                    set_binding(X, I);
    00000406 6503                   MOV         R0,R5
    00000408 D218                   MOV.L       L1166+40,R2; _set_binding
    0000040A 2302                   MOV.L       R0,@R3
    0000040C 420B                   JSR         @R2
    0000040E 64C2                   MOV.L       @R12,R4
           for.c    49                    p2 = p1;
           for.c    50                    while (iscons(p2)) {
    00000410 A032                   BRA         L1161
    00000412 63E2                   MOV.L       @R14,R3
    00000414              L1156:                            
           for.c    51                            push(car(p2));
    00000414 64D2                   MOV.L       @R13,R4
    00000416 8448                   MOV.B       @(8,R4),R0
    00000418 2008                   TST         R0,R0
    0000041A 8B02                   BF          L1157
    0000041C 64D2                   MOV.L       @R13,R4
    0000041E A004                   BRA         L1158
    00000420 6442                   MOV.L       @R4,R4
    00000422              L1157:                            
    00000422 930F                   MOV.W       L1166,R3   ; H'0570
    00000424 D208                   MOV.L       L1166+4,R2 ; _symtab
    00000426 6422                   MOV.L       @R2,R4
    00000428 343C                   ADD         R3,R4
    0000042A              L1158:                            
    0000042A 4B0B                   JSR         @R11
    0000042C 0009                   NOP
           for.c    52                            eval();
    0000042E 490B                   JSR         @R9
    00000430 0009                   NOP
           for.c    53                            pop();
    00000432 480B                   JSR         @R8
    00000434 0009                   NOP
           for.c    54                            p2 = cdr(p2);
    00000436 62D2                   MOV.L       @R13,R2
    00000438 8428                   MOV.B       @(8,R2),R0
    0000043A 2008                   TST         R0,R0
    0000043C 8B18                   BF          L1159
    0000043E 62D2                   MOV.L       @R13,R2
    00000440 A01A                   BRA         L1161
    00000442 5321                   MOV.L       @(4,R2),R3
    00000444              L1166:                            
    00000444 0570                   .DATA.W     H'0570
    00000446 0000                   .DATA.W     0
    00000448 <00000000>             .DATA.L     _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000044C <00000000>             .DATA.L     _get_binding
    00000450 <00000000>             .DATA.L     _p4
    00000454 <00000000>             .DATA.L     _get_arglist
    00000458 <00000000>             .DATA.L     _p3
    0000045C <00000000>             .DATA.L     _pop
    00000460 <00000000>             .DATA.L     _p2
    00000464 <00000000>             .DATA.L     _push_integer
    00000468 <00000000>             .DATA.L     _p5
    0000046C <00000000>             .DATA.L     _set_binding
    00000470              L1159:                            
    00000470 921E                   MOV.W       L1167,R2   ; H'0570
    00000472 D110                   MOV.L       L1167+4,R1 ; _symtab
    00000474 6312                   MOV.L       @R1,R3
    00000476 332C                   ADD         R2,R3
    00000478              L1161:                            
    00000478 2D32                   MOV.L       R3,@R13
    0000047A 6233                   MOV         R3,R2
    0000047C 8428                   MOV.B       @(8,R2),R0
    0000047E 2008                   TST         R0,R0
    00000480 89C8                   BT          L1156
    00000482 7A01                   ADD         #1,R10
    00000484              L1153:                            
    00000484 62F2                   MOV.L       @R15,R2
    00000486 3A27                   CMP/GT      R2,R10
    00000488 8BB7                   BF          L1154
           for.c    55                    }
           for.c    56            }
           for.c    57    
           for.c    58            set_binding_and_arglist(X, B, A);
    0000048A D10B                   MOV.L       L1167+8,R1 ; _p3
    0000048C D30B                   MOV.L       L1167+12,R3; _p4
    0000048E 6612                   MOV.L       @R1,R6
    00000490 6532                   MOV.L       @R3,R5
    00000492 D20B                   MOV.L       L1167+16,R2; _set_binding_and_arglist
    00000494 420B                   JSR         @R2
    00000496 64C2                   MOV.L       @R12,R4
           for.c    59    
           for.c    60            // return value
           for.c    61    
           for.c    62            push_symbol(NIL);
    00000498 D30A                   MOV.L       L1167+20,R3; _push_symbol
    0000049A E474                   MOV         #116,R4
    0000049C 7F08                   ADD         #8,R15
    0000049E 4F26                   LDS.L       @R15+,PR
    000004A0 68F6                   MOV.L       @R15+,R8
    000004A2 69F6                   MOV.L       @R15+,R9
    000004A4 6AF6                   MOV.L       @R15+,R10
    000004A6 6BF6                   MOV.L       @R15+,R11
    000004A8 6CF6                   MOV.L       @R15+,R12
    000004AA 6DF6                   MOV.L       @R15+,R13
    000004AC 432B                   JMP         @R3
    000004AE 6EF6                   MOV.L       @R15+,R14
    000004B0              L1167:                            
    000004B0 0570                   .DATA.W     H'0570
    000004B2 0000                   .DATA.W     0
    000004B4 <00000000>             .DATA.L     _symtab
    000004B8 <00000000>             .DATA.L     _p3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004BC <00000000>             .DATA.L     _p4
    000004C0 <00000000>             .DATA.L     _set_binding_and_arglist
    000004C4 <00000000>             .DATA.L     _push_symbol
           for.c    63    }
           for.c    64    
C   00000000              L1062:
    00000000 666F723A20             .SDATA      "for: 1st arg?"
             3173742061   
             72673F       
    0000000D 00                     .DATA.B     H'00
    0000000E 00000002               .RES.W      1
    00000010              L1063:
    00000010 666F723A20             .SDATA      "for: 2nd arg?"
             326E642061   
             72673F       
    0000001D 00                     .DATA.B     H'00
    0000001E 00000002               .RES.W      1
    00000020              L1064:
    00000020 666F723A20             .SDATA      "for: 3rd arg?"
             3372642061   
             72673F       
    0000002D 00                     .DATA.B     H'00







































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:01  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       64



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000004C8 Byte(s)
CONSTANT SECTION (C):                               0000002E Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000004F6 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           18
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           1
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           118






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk6C93.tmp 

