SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:02  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\guess.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         guess.c     1    // Guess which symbol to use for derivative, integral, etc.
         guess.c     2    
         guess.c     3    #include "stdafx.h"
         guess.c     4    #include "defs.h"
         guess.c     5    
         guess.c     6    void
         guess.c     7    guess(void)
P   00000000              _guess:                          ; function: guess
                                                           ; frame size=20
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 4F22                   STS.L       PR,@-R15
         guess.c     8    {
         guess.c     9            U *p;
         guess.c    10            p = pop();
    0000000A D327                   MOV.L       L1075+22,R3; _pop
    0000000C 430B                   JSR         @R3
    0000000E 0009                   NOP
         guess.c    11            push(p);
    00000010 D226                   MOV.L       L1075+26,R2; _push
    00000012 6E03                   MOV         R0,R14
    00000014 420B                   JSR         @R2
    00000016 6403                   MOV         R0,R4
         guess.c    12            if (find(p, symbol(SYMBOL_X)))
    00000018 DB25                   MOV.L       L1075+30,R11; _push_symbol
    0000001A DC26                   MOV.L       L1075+34,R12; _symtab
    0000001C DD26                   MOV.L       L1075+38,R13; _find
    0000001E 9338                   MOV.W       L1075,R3   ; H'0678
    00000020 65C2                   MOV.L       @R12,R5
    00000022 353C                   ADD         R3,R5
    00000024 4D0B                   JSR         @R13
    00000026 64E3                   MOV         R14,R4
    00000028 2008                   TST         R0,R0
    0000002A 8B29                   BF          L1060
         guess.c    13                    push_symbol(SYMBOL_X);
         guess.c    14            else if (find(p, symbol(SYMBOL_Y)))
    0000002C 9332                   MOV.W       L1075+2,R3 ; H'0684
    0000002E 65C2                   MOV.L       @R12,R5
    00000030 353C                   ADD         R3,R5
    00000032 4D0B                   JSR         @R13
    00000034 64E3                   MOV         R14,R4
    00000036 2008                   TST         R0,R0
    00000038 8902                   BT          L1064
         guess.c    15                    push_symbol(SYMBOL_Y);
    0000003A 942C                   MOV.W       L1075+4,R4 ; H'008B
    0000003C A012                   BRA         L1074
    0000003E 0009                   NOP
    00000040              L1064:                            
         guess.c    16            else if (find(p, symbol(SYMBOL_Z)))
    00000040 932A                   MOV.W       L1075+6,R3 ; H'0690
    00000042 65C2                   MOV.L       @R12,R5
    00000044 353C                   ADD         R3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:02  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000046 4D0B                   JSR         @R13
    00000048 64E3                   MOV         R14,R4
    0000004A 2008                   TST         R0,R0
    0000004C 8902                   BT          L1066
         guess.c    17                    push_symbol(SYMBOL_Z);
    0000004E 9424                   MOV.W       L1075+8,R4 ; H'008C
    00000050 A008                   BRA         L1074
    00000052 0009                   NOP
    00000054              L1066:                            
         guess.c    18            else if (find(p, symbol(SYMBOL_T)))
    00000054 9322                   MOV.W       L1075+10,R3; H'066C
    00000056 65C2                   MOV.L       @R12,R5
    00000058 353C                   ADD         R3,R5
    0000005A 4D0B                   JSR         @R13
    0000005C 64E3                   MOV         R14,R4
    0000005E 2008                   TST         R0,R0
    00000060 8904                   BT          L1068
         guess.c    19                    push_symbol(SYMBOL_T);
    00000062 941C                   MOV.W       L1075+12,R4; H'0089
    00000064              L1074:                            
    00000064 4B0B                   JSR         @R11
    00000066 0009                   NOP
    00000068 A00D                   BRA         L1063
    0000006A 0009                   NOP
    0000006C              L1068:                            
         guess.c    20            else if (find(p, symbol(SYMBOL_S)))
    0000006C 9318                   MOV.W       L1075+14,R3; H'0660
    0000006E 65C2                   MOV.L       @R12,R5
    00000070 353C                   ADD         R3,R5
    00000072 4D0B                   JSR         @R13
    00000074 64E3                   MOV         R14,R4
    00000076 2008                   TST         R0,R0
    00000078 8902                   BT          L1060
         guess.c    21                    push_symbol(SYMBOL_S);
    0000007A 9412                   MOV.W       L1075+16,R4; H'0088
    0000007C A001                   BRA         L1072
    0000007E 0009                   NOP
    00000080              L1060:
         guess.c    22            else
         guess.c    23                    push_symbol(SYMBOL_X);
    00000080 9410                   MOV.W       L1075+18,R4; H'008A
    00000082              L1072:                            
    00000082 4B0B                   JSR         @R11
    00000084 0009                   NOP
    00000086              L1063:                            
         guess.c    24    }
    00000086 4F26                   LDS.L       @R15+,PR
    00000088 6BF6                   MOV.L       @R15+,R11
    0000008A 6CF6                   MOV.L       @R15+,R12
    0000008C 6DF6                   MOV.L       @R15+,R13
    0000008E 000B                   RTS
    00000090 6EF6                   MOV.L       @R15+,R14
    00000092              L1075:                            
    00000092 0678                   .DATA.W     H'0678
    00000094 0684                   .DATA.W     H'0684
    00000096 008B                   .DATA.W     H'008B
    00000098 0690                   .DATA.W     H'0690




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:02  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000009A 008C                   .DATA.W     H'008C
    0000009C 066C                   .DATA.W     H'066C
    0000009E 0089                   .DATA.W     H'0089
    000000A0 0660                   .DATA.W     H'0660
    000000A2 0088                   .DATA.W     H'0088
    000000A4 008A                   .DATA.W     H'008A
    000000A6 0000                   .DATA.W     0
    000000A8 <00000000>             .DATA.L     _pop
    000000AC <00000000>             .DATA.L     _push
    000000B0 <00000000>             .DATA.L     _push_symbol
    000000B4 <00000000>             .DATA.L     _symtab
    000000B8 <00000000>             .DATA.L     _find

















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:02  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       24



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000000BC Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000000BC Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            5
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           1
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            14






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk705D.tmp 

