SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:02  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\imag.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          imag.c     1    /* Returns the coefficient of the imaginary part of complex z
          imag.c     2    
          imag.c     3            z               imag(z)
          imag.c     4            -               -------
          imag.c     5    
          imag.c     6            a + i b         b
          imag.c     7    
          imag.c     8            exp(i a)        sin(a)
          imag.c     9    */
          imag.c    10    
          imag.c    11    #include "stdafx.h"
          imag.c    12    #include "defs.h"
          imag.c    13    
          imag.c    14    void
          imag.c    15    eval_imag(void)
P   00000000              _eval_imag:                      ; function: eval_imag
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
          imag.c    16    {
          imag.c    17            push(cadr(p1));
    00000004 DE29                   MOV.L       L1066+4,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1061
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1063
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1061:                            
    00000014 9348                   MOV.W       L1066,R3   ; H'0570
    00000016 D226                   MOV.L       L1066+8,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1063:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1060
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1062
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1064
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1062:                            
    00000030 933A                   MOV.W       L1066,R3   ; H'0570
    00000032 D21F                   MOV.L       L1066+8,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1064:                            
    00000038 A004                   BRA         L1065
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1060:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:02  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000003C 9334                   MOV.W       L1066,R3   ; H'0570
    0000003E D21C                   MOV.L       L1066+8,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1065:                            
    00000044 D31B                   MOV.L       L1066+12,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
          imag.c    18            eval();
    0000004A D21B                   MOV.L       L1066+16,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
          imag.c    19            imag();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
          imag.c    20    }
          imag.c    21    
          imag.c    22    void
          imag.c    23    imag(void)
    00000054              _imag:                           ; function: imag
                                                           ; frame size=12
    00000054 2FE6                   MOV.L       R14,@-R15
    00000056 2FD6                   MOV.L       R13,@-R15
    00000058 4F22                   STS.L       PR,@-R15
          imag.c    24    {
          imag.c    25            save();
    0000005A D318                   MOV.L       L1066+20,R3; _save
    0000005C 430B                   JSR         @R3
    0000005E 0009                   NOP
          imag.c    26            rect();
    00000060 D217                   MOV.L       L1066+24,R2; _rect
    00000062 420B                   JSR         @R2
    00000064 0009                   NOP
          imag.c    27            p1 = pop();
    00000066 DD11                   MOV.L       L1066+4,R13; _p1
    00000068 D316                   MOV.L       L1066+28,R3; _pop
    0000006A 430B                   JSR         @R3
    0000006C 0009                   NOP
    0000006E 2D02                   MOV.L       R0,@R13
          imag.c    28            push(p1);
    00000070 DE10                   MOV.L       L1066+12,R14; _push
    00000072 4E0B                   JSR         @R14
    00000074 6403                   MOV         R0,R4
          imag.c    29            push(p1);
    00000076 4E0B                   JSR         @R14
    00000078 64D2                   MOV.L       @R13,R4
          imag.c    30            conjugate();
    0000007A D213                   MOV.L       L1066+32,R2; _conjugate
    0000007C 420B                   JSR         @R2
    0000007E 0009                   NOP
          imag.c    31            subtract();
    00000080 D312                   MOV.L       L1066+36,R3; _subtract
    00000082 430B                   JSR         @R3
    00000084 0009                   NOP
          imag.c    32            push_integer(2);
    00000086 D212                   MOV.L       L1066+40,R2; _push_integer
    00000088 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:02  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000008A E402                   MOV         #2,R4
          imag.c    33            divide();
    0000008C D311                   MOV.L       L1066+44,R3; _divide
    0000008E 430B                   JSR         @R3
    00000090 0009                   NOP
          imag.c    34            push(imaginaryunit);
    00000092 D211                   MOV.L       L1066+48,R2; _imaginaryunit
    00000094 4E0B                   JSR         @R14
    00000096 6422                   MOV.L       @R2,R4
          imag.c    35            divide();
    00000098 D30E                   MOV.L       L1066+44,R3; _divide
    0000009A 430B                   JSR         @R3
    0000009C 0009                   NOP
          imag.c    36            restore();
    0000009E 4F26                   LDS.L       @R15+,PR
    000000A0 D10E                   MOV.L       L1066+52,R1; _restore
    000000A2 6DF6                   MOV.L       @R15+,R13
    000000A4 412B                   JMP         @R1
    000000A6 6EF6                   MOV.L       @R15+,R14
    000000A8              L1066:                            
    000000A8 0570                   .DATA.W     H'0570
    000000AA 0000                   .DATA.W     0
    000000AC <00000000>             .DATA.L     _p1
    000000B0 <00000000>             .DATA.L     _symtab
    000000B4 <00000000>             .DATA.L     _push
    000000B8 <00000000>             .DATA.L     _eval
    000000BC <00000000>             .DATA.L     _save
    000000C0 <00000000>             .DATA.L     _rect
    000000C4 <00000000>             .DATA.L     _pop
    000000C8 <00000000>             .DATA.L     _conjugate
    000000CC <00000000>             .DATA.L     _subtract
    000000D0 <00000000>             .DATA.L     _push_integer
    000000D4 <00000000>             .DATA.L     _divide
    000000D8 <00000000>             .DATA.L     _imaginaryunit
    000000DC <00000000>             .DATA.L     _restore
          imag.c    37    }
          imag.c    38    
























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:02  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       38



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000000E0 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000000E0 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           13
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            22






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk73CA.tmp 

