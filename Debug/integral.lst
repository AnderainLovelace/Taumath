SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\integral.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      integral.c     1    #include "stdafx.h"
      integral.c     2    #include "defs.h"
      integral.c     3    
      integral.c     4    #define F p3
      integral.c     5    #define X p4
      integral.c     6    #define N p5
      integral.c     7    
      integral.c     8    void
      integral.c     9    eval_integral(void)
P   00000000              _eval_integral:                  ; function: eval_integral
                                                           ; frame size=36
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A 2F96                   MOV.L       R9,@-R15
    0000000C 2F86                   MOV.L       R8,@-R15
    0000000E 4F22                   STS.L       PR,@-R15
    00000010 9867                   MOV.W       L1156,R8   ; H'0570
    00000012 7FFC                   ADD         #-4,R15
    00000014 DA33                   MOV.L       L1156+2,R10; _p4
    00000016 DB34                   MOV.L       L1156+6,R11; _pop
    00000018 DC34                   MOV.L       L1156+10,R12; _p5
    0000001A DD35                   MOV.L       L1156+14,R13; _push
    0000001C DE35                   MOV.L       L1156+18,R14; _p1
      integral.c    10    {
      integral.c    11            int i, n;
      integral.c    12    
      integral.c    13            // evaluate 1st arg to get function F
      integral.c    14    
      integral.c    15            p1 = cdr(p1);
    0000001E 62E2                   MOV.L       @R14,R2
    00000020 8428                   MOV.B       @(8,R2),R0
    00000022 2008                   TST         R0,R0
    00000024 8B02                   BF          L1086
    00000026 62E2                   MOV.L       @R14,R2
    00000028 A004                   BRA         L1087
    0000002A 5321                   MOV.L       @(4,R2),R3
    0000002C              L1086:                            
    0000002C 9259                   MOV.W       L1156,R2   ; H'0570
    0000002E D132                   MOV.L       L1156+22,R1; _symtab
    00000030 6312                   MOV.L       @R1,R3
    00000032 332C                   ADD         R2,R3
    00000034              L1087:                            
    00000034 2E32                   MOV.L       R3,@R14
      integral.c    16            push(car(p1));
    00000036 6433                   MOV         R3,R4
    00000038 8448                   MOV.B       @(8,R4),R0
    0000003A 2008                   TST         R0,R0
    0000003C 8B02                   BF          L1088
    0000003E 64E2                   MOV.L       @R14,R4
    00000040 A004                   BRA         L1089
    00000042 6442                   MOV.L       @R4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000044              L1088:                            
    00000044 934D                   MOV.W       L1156,R3   ; H'0570
    00000046 D22C                   MOV.L       L1156+22,R2; _symtab
    00000048 6422                   MOV.L       @R2,R4
    0000004A 343C                   ADD         R3,R4
    0000004C              L1089:                            
    0000004C 4D0B                   JSR         @R13
    0000004E 0009                   NOP
      integral.c    17            eval();
    00000050 D32A                   MOV.L       L1156+26,R3; _eval
    00000052 430B                   JSR         @R3
    00000054 0009                   NOP
      integral.c    18    
      integral.c    19            // evaluate 2nd arg and then...
      integral.c    20    
      integral.c    21            // example              result of 2nd arg       what to do
      integral.c    22            //
      integral.c    23            // integral(f)          nil                     guess X, N = nil
      integral.c    24            // integral(f,2)        2                       guess X, N = 2
      integral.c    25            // integral(f,x)        x                       X = x, N = nil
      integral.c    26            // integral(f,x,2)      x                       X = x, N = 2
      integral.c    27            // integral(f,x,y)      x                       X = x, N = y
      integral.c    28    
      integral.c    29            p1 = cdr(p1);
    00000056 63E2                   MOV.L       @R14,R3
    00000058 8438                   MOV.B       @(8,R3),R0
    0000005A 2008                   TST         R0,R0
    0000005C 8B02                   BF          L1090
    0000005E 62E2                   MOV.L       @R14,R2
    00000060 A004                   BRA         L1091
    00000062 5221                   MOV.L       @(4,R2),R2
    00000064              L1090:                            
    00000064 933D                   MOV.W       L1156,R3   ; H'0570
    00000066 D124                   MOV.L       L1156+22,R1; _symtab
    00000068 6212                   MOV.L       @R1,R2
    0000006A 323C                   ADD         R3,R2
    0000006C              L1091:                            
    0000006C 2E22                   MOV.L       R2,@R14
      integral.c    30            push(car(p1));
    0000006E 6423                   MOV         R2,R4
    00000070 8448                   MOV.B       @(8,R4),R0
    00000072 2008                   TST         R0,R0
    00000074 8B02                   BF          L1092
    00000076 64E2                   MOV.L       @R14,R4
    00000078 A004                   BRA         L1093
    0000007A 6442                   MOV.L       @R4,R4
    0000007C              L1092:                            
    0000007C 9331                   MOV.W       L1156,R3   ; H'0570
    0000007E D21E                   MOV.L       L1156+22,R2; _symtab
    00000080 6422                   MOV.L       @R2,R4
    00000082 343C                   ADD         R3,R4
    00000084              L1093:                            
    00000084 4D0B                   JSR         @R13
    00000086 0009                   NOP
      integral.c    31            eval();
    00000088 D31C                   MOV.L       L1156+26,R3; _eval
    0000008A 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000008C 0009                   NOP
      integral.c    32    
      integral.c    33            p2 = pop();
    0000008E D91C                   MOV.L       L1156+30,R9; _p2
    00000090 4B0B                   JSR         @R11
    00000092 0009                   NOP
    00000094 2902                   MOV.L       R0,@R9
    00000096 6403                   MOV         R0,R4
    00000098 D317                   MOV.L       L1156+22,R3; _symtab
    0000009A 6232                   MOV.L       @R3,R2
    0000009C 328C                   ADD         R8,R2
    0000009E 3420                   CMP/EQ      R2,R4
    000000A0 8B06                   BF          L1094
      integral.c    34            if (p2 == symbol(NIL)) {
      integral.c    35                    guess();
    000000A2 D118                   MOV.L       L1156+34,R1; _guess
    000000A4 410B                   JSR         @R1
    000000A6 0009                   NOP
      integral.c    36                    push(symbol(NIL));
    000000A8 D313                   MOV.L       L1156+22,R3; _symtab
    000000AA 6432                   MOV.L       @R3,R4
    000000AC A00C                   BRA         L1155
    000000AE 348C                   ADD         R8,R4
    000000B0              L1094:                            
      integral.c    37            } else if (isnum(p2)) {
    000000B0 8448                   MOV.B       @(8,R4),R0
    000000B2 600C                   EXTU.B      R0,R0
    000000B4 8801                   CMP/EQ      #1,R0
    000000B6 8D03                   BT/S        L1097
    000000B8 6503                   MOV         R0,R5
    000000BA 6053                   MOV         R5,R0
    000000BC 8802                   CMP/EQ      #2,R0
    000000BE 8B07                   BF          L1096
    000000C0              L1097:                            
      integral.c    38                    guess();
    000000C0 D310                   MOV.L       L1156+34,R3; _guess
    000000C2 430B                   JSR         @R3
    000000C4 0009                   NOP
      integral.c    39                    push(p2);
    000000C6 6492                   MOV.L       @R9,R4
    000000C8              L1155:                            
    000000C8 4D0B                   JSR         @R13
    000000CA 0009                   NOP
    000000CC A031                   BRA         L1095
    000000CE 0009                   NOP
    000000D0              L1096:                            
      integral.c    40            } else {
      integral.c    41                    push(p2);
    000000D0 4D0B                   JSR         @R13
    000000D2 0009                   NOP
      integral.c    42                    p1 = cdr(p1);
    000000D4 62E2                   MOV.L       @R14,R2
    000000D6 8428                   MOV.B       @(8,R2),R0
    000000D8 2008                   TST         R0,R0
    000000DA 8B15                   BF          L1099
    000000DC 62E2                   MOV.L       @R14,R2
    000000DE A017                   BRA         L1100




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000E0 5321                   MOV.L       @(4,R2),R3
    000000E2              L1156:                            
    000000E2 0570                   .DATA.W     H'0570
    000000E4 <00000000>             .DATA.L     _p4
    000000E8 <00000000>             .DATA.L     _pop
    000000EC <00000000>             .DATA.L     _p5
    000000F0 <00000000>             .DATA.L     _push
    000000F4 <00000000>             .DATA.L     _p1
    000000F8 <00000000>             .DATA.L     _symtab
    000000FC <00000000>             .DATA.L     _eval
    00000100 <00000000>             .DATA.L     _p2
    00000104 <00000000>             .DATA.L     _guess
    00000108              L1099:                            
    00000108 9272                   MOV.W       L1157,R2   ; H'0570
    0000010A D13A                   MOV.L       L1157+4,R1 ; _symtab
    0000010C 6312                   MOV.L       @R1,R3
    0000010E 332C                   ADD         R2,R3
    00000110              L1100:                            
    00000110 2E32                   MOV.L       R3,@R14
      integral.c    43                    push(car(p1));
    00000112 6433                   MOV         R3,R4
    00000114 8448                   MOV.B       @(8,R4),R0
    00000116 2008                   TST         R0,R0
    00000118 8B02                   BF          L1101
    0000011A 64E2                   MOV.L       @R14,R4
    0000011C A004                   BRA         L1102
    0000011E 6442                   MOV.L       @R4,R4
    00000120              L1101:                            
    00000120 9366                   MOV.W       L1157,R3   ; H'0570
    00000122 D234                   MOV.L       L1157+4,R2 ; _symtab
    00000124 6422                   MOV.L       @R2,R4
    00000126 343C                   ADD         R3,R4
    00000128              L1102:                            
    00000128 4D0B                   JSR         @R13
    0000012A 0009                   NOP
      integral.c    44                    eval();
    0000012C D332                   MOV.L       L1157+8,R3 ; _eval
    0000012E 430B                   JSR         @R3
    00000130 0009                   NOP
    00000132              L1095:                            
      integral.c    45            }
      integral.c    46    
      integral.c    47            N = pop();
    00000132 4B0B                   JSR         @R11
    00000134 0009                   NOP
      integral.c    48            X = pop();
    00000136 4B0B                   JSR         @R11
    00000138 2C02                   MOV.L       R0,@R12
      integral.c    49            F = pop();
    0000013A 4B0B                   JSR         @R11
    0000013C 2A02                   MOV.L       R0,@R10
    0000013E D22F                   MOV.L       L1157+12,R2; _p3
    00000140 2202                   MOV.L       R0,@R2
      integral.c    50    
      integral.c    51            while (1) {
    00000142              L1104:                            
    00000142 64C2                   MOV.L       @R12,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000144 8448                   MOV.B       @(8,R4),R0
    00000146 600C                   EXTU.B      R0,R0
    00000148 8801                   CMP/EQ      #1,R0
    0000014A 8D03                   BT/S        L1106
    0000014C 6503                   MOV         R0,R5
    0000014E 6053                   MOV         R5,R0
    00000150 8802                   CMP/EQ      #2,R0
    00000152 8B0E                   BF          L1105
    00000154              L1106:                            
      integral.c    52    
      integral.c    53                    // N might be a symbol instead of a number
      integral.c    54    
      integral.c    55                    if (isnum(N)) {
      integral.c    56                            push(N);
    00000154 4D0B                   JSR         @R13
    00000156 0009                   NOP
      integral.c    57                            n = pop_integer();
    00000158 D929                   MOV.L       L1157+16,R9; _pop_integer
    0000015A 490B                   JSR         @R9
    0000015C 0009                   NOP
    0000015E 6903                   MOV         R0,R9
      integral.c    58                            if (n == (int) 0x80000000)
    00000160 D428                   MOV.L       L1157+20,R4; H'80000000
    00000162 3940                   CMP/EQ      R4,R9
    00000164 8B07                   BF          L1108
      integral.c    59                                    stop("nth integral: check n");
    00000166 D428                   MOV.L       L1157+24,R4; L1066
    00000168 D228                   MOV.L       L1157+28,R2; _stop
    0000016A 420B                   JSR         @R2
    0000016C 0009                   NOP
    0000016E A002                   BRA         L1108
    00000170 0009                   NOP
    00000172              L1105:                            
      integral.c    60                    } else
      integral.c    61                            n = 1;
    00000172 E401                   MOV         #1,R4
    00000174 6943                   MOV         R4,R9
    00000176              L1108:                            
      integral.c    62    
      integral.c    63                    push(F);
    00000176 D221                   MOV.L       L1157+12,R2; _p3
    00000178 4D0B                   JSR         @R13
    0000017A 6422                   MOV.L       @R2,R4
      integral.c    64    
      integral.c    65                    if (n >= 0) {
    0000017C 4911                   CMP/PZ      R9
    0000017E 8F0E                   BF/S        L1109
    00000180 E400                   MOV         #0,R4
      integral.c    66                            for (i = 0; i < n; i++) {
    00000182 4915                   CMP/PL      R9
    00000184 8F1A                   BF/S        L1112
    00000186 2F42                   MOV.L       R4,@R15
    00000188              L1111:                            
      integral.c    67                                    push(X);
    00000188 4D0B                   JSR         @R13
    0000018A 64A2                   MOV.L       @R10,R4
      integral.c    68                                    integral();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000018C B09C                   BSR         _integral
    0000018E 0009                   NOP
    00000190 63F2                   MOV.L       @R15,R3
    00000192 7301                   ADD         #1,R3
    00000194 3393                   CMP/GE      R9,R3
    00000196 8FF7                   BF/S        L1111
    00000198 2F32                   MOV.L       R3,@R15
    0000019A A00F                   BRA         L1112
    0000019C 0009                   NOP
    0000019E              L1109:                            
      integral.c    69                            }
      integral.c    70                    } else {
      integral.c    71                            n = -n;
    0000019E 699B                   NEG         R9,R9
    000001A0 2F92                   MOV.L       R9,@R15
      integral.c    72                            for (i = 0; i < n; i++) {
    000001A2 63F2                   MOV.L       @R15,R3
    000001A4 4315                   CMP/PL      R3
    000001A6 8F09                   BF/S        L1112
    000001A8 6943                   MOV         R4,R9
    000001AA              L1114:                            
      integral.c    73                                    push(X);
    000001AA 4D0B                   JSR         @R13
    000001AC 64A2                   MOV.L       @R10,R4
      integral.c    74                                    derivative();
    000001AE D318                   MOV.L       L1157+32,R3; _derivative
    000001B0 430B                   JSR         @R3
    000001B2 0009                   NOP
    000001B4 62F2                   MOV.L       @R15,R2
    000001B6 7901                   ADD         #1,R9
    000001B8 3923                   CMP/GE      R2,R9
    000001BA 8BF6                   BF          L1114
    000001BC              L1112:                            
      integral.c    75                            }
      integral.c    76                    }
      integral.c    77    
      integral.c    78                    F = pop();
    000001BC 4B0B                   JSR         @R11
    000001BE 0009                   NOP
    000001C0 D10E                   MOV.L       L1157+12,R1; _p3
    000001C2 2102                   MOV.L       R0,@R1
      integral.c    79    
      integral.c    80                    // if N is nil then arglist is exhausted
      integral.c    81    
      integral.c    82                    if (N == symbol(NIL))
    000001C4 D20B                   MOV.L       L1157+4,R2 ; _symtab
    000001C6 6322                   MOV.L       @R2,R3
    000001C8 61C2                   MOV.L       @R12,R1
    000001CA 338C                   ADD         R8,R3
    000001CC 3130                   CMP/EQ      R3,R1
    000001CE 896E                   BT          L1116
      integral.c    83                            break;
      integral.c    84    
      integral.c    85                    // otherwise...
      integral.c    86    
      integral.c    87                    // N            arg1            what to do
      integral.c    88                    //




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      integral.c    89                    // number       nil             break
      integral.c    90                    // number       number          N = arg1, continue
      integral.c    91                    // number       symbol          X = arg1, N = arg2, continue
      integral.c    92                    //
      integral.c    93                    // symbol       nil             X = N, N = nil, continue
      integral.c    94                    // symbol       number          X = N, N = arg1, continue
      integral.c    95                    // symbol       symbol          X = N, N = arg1, continue
      integral.c    96    
      integral.c    97                    if (isnum(N)) {
    000001D0 64C2                   MOV.L       @R12,R4
    000001D2 8448                   MOV.B       @(8,R4),R0
    000001D4 600C                   EXTU.B      R0,R0
    000001D6 8801                   CMP/EQ      #1,R0
    000001D8 8D03                   BT/S        L1118
    000001DA 6403                   MOV         R0,R4
    000001DC 6043                   MOV         R4,R0
    000001DE 8802                   CMP/EQ      #2,R0
    000001E0 8B43                   BF          L1082
    000001E2              L1118:                            
      integral.c    98                            p1 = cdr(p1);
    000001E2 62E2                   MOV.L       @R14,R2
    000001E4 8428                   MOV.B       @(8,R2),R0
    000001E6 2008                   TST         R0,R0
    000001E8 8B14                   BF          L1119
    000001EA 62E2                   MOV.L       @R14,R2
    000001EC A016                   BRA         L1120
    000001EE 5321                   MOV.L       @(4,R2),R3
    000001F0              L1157:                            
    000001F0 0570                   .DATA.W     H'0570
    000001F2 0000                   .DATA.W     0
    000001F4 <00000000>             .DATA.L     _symtab
    000001F8 <00000000>             .DATA.L     _eval
    000001FC <00000000>             .DATA.L     _p3
    00000200 <00000000>             .DATA.L     _pop_integer
    00000204 80000000               .DATA.L     H'80000000
    00000208 <00000000>             .DATA.L     L1066
    0000020C <00000000>             .DATA.L     _stop
    00000210 <00000000>             .DATA.L     _derivative
    00000214              L1119:                            
    00000214 9280                   MOV.W       L1158,R2   ; H'0570
    00000216 D141                   MOV.L       L1158+4,R1 ; _symtab
    00000218 6312                   MOV.L       @R1,R3
    0000021A 332C                   ADD         R2,R3
    0000021C              L1120:                            
    0000021C 2E32                   MOV.L       R3,@R14
      integral.c    99                            push(car(p1));
    0000021E 6433                   MOV         R3,R4
    00000220 8448                   MOV.B       @(8,R4),R0
    00000222 2008                   TST         R0,R0
    00000224 8B02                   BF          L1121
    00000226 64E2                   MOV.L       @R14,R4
    00000228 A004                   BRA         L1122
    0000022A 6442                   MOV.L       @R4,R4
    0000022C              L1121:                            
    0000022C 9374                   MOV.W       L1158,R3   ; H'0570
    0000022E D23B                   MOV.L       L1158+4,R2 ; _symtab
    00000230 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000232 343C                   ADD         R3,R4
    00000234              L1122:                            
    00000234 4D0B                   JSR         @R13
    00000236 0009                   NOP
      integral.c   100                            eval();
    00000238 D339                   MOV.L       L1158+8,R3 ; _eval
    0000023A 430B                   JSR         @R3
    0000023C 0009                   NOP
      integral.c   101                            N = pop();
    0000023E 4B0B                   JSR         @R11
    00000240 0009                   NOP
      integral.c   102                            if (N == symbol(NIL))
    00000242 6103                   MOV         R0,R1
    00000244 2C02                   MOV.L       R0,@R12
    00000246 D335                   MOV.L       L1158+4,R3 ; _symtab
    00000248 6232                   MOV.L       @R3,R2
    0000024A 328C                   ADD         R8,R2
    0000024C 3120                   CMP/EQ      R2,R1
    0000024E 892E                   BT          L1116
      integral.c   103                                    break;          // arglist exhausted
      integral.c   104                            if (isnum(N))
    00000250 64C2                   MOV.L       @R12,R4
    00000252 8448                   MOV.B       @(8,R4),R0
    00000254 600C                   EXTU.B      R0,R0
    00000256 8801                   CMP/EQ      #1,R0
    00000258 8F02                   BF/S        L1159
    0000025A 6403                   MOV         R0,R4
    0000025C AF71                   BRA         L1104
    0000025E 0009                   NOP
    00000260              L1159:                            
    00000260 6043                   MOV         R4,R0
    00000262 8802                   CMP/EQ      #2,R0
    00000264 8B01                   BF          L1160
    00000266 AF6C                   BRA         L1104
    00000268 0009                   NOP
    0000026A              L1160:                            
    0000026A              L1082:
      integral.c   105                                    ;               // N = arg1
      integral.c   106                            else {
      integral.c   107                                    X = N;          // X = arg1
      integral.c   108                                    p1 = cdr(p1);
      integral.c   109                                    push(car(p1));
      integral.c   110                                    eval();
      integral.c   111                                    N = pop();      // N = arg2
      integral.c   112                            }
      integral.c   113                    } else {
      integral.c   114                            X = N;                  // X = N
    0000026A 62C2                   MOV.L       @R12,R2
    0000026C 2A22                   MOV.L       R2,@R10
      integral.c   115                            p1 = cdr(p1);
    0000026E 61E2                   MOV.L       @R14,R1
    00000270 8418                   MOV.B       @(8,R1),R0
    00000272 2008                   TST         R0,R0
    00000274 8B02                   BF          L1128
    00000276 62E2                   MOV.L       @R14,R2
    00000278 A004                   BRA         L1129
    0000027A 5321                   MOV.L       @(4,R2),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000027C              L1128:                            
    0000027C 924C                   MOV.W       L1158,R2   ; H'0570
    0000027E D127                   MOV.L       L1158+4,R1 ; _symtab
    00000280 6312                   MOV.L       @R1,R3
    00000282 332C                   ADD         R2,R3
    00000284              L1129:                            
    00000284 2E32                   MOV.L       R3,@R14
      integral.c   116                            push(car(p1));
    00000286 6433                   MOV         R3,R4
    00000288 8448                   MOV.B       @(8,R4),R0
    0000028A 2008                   TST         R0,R0
    0000028C 8B02                   BF          L1130
    0000028E 64E2                   MOV.L       @R14,R4
    00000290 A004                   BRA         L1131
    00000292 6442                   MOV.L       @R4,R4
    00000294              L1130:                            
    00000294 9340                   MOV.W       L1158,R3   ; H'0570
    00000296 D221                   MOV.L       L1158+4,R2 ; _symtab
    00000298 6422                   MOV.L       @R2,R4
    0000029A 343C                   ADD         R3,R4
    0000029C              L1131:                            
    0000029C 4D0B                   JSR         @R13
    0000029E 0009                   NOP
      integral.c   117                            eval();
    000002A0 D31F                   MOV.L       L1158+8,R3 ; _eval
    000002A2 430B                   JSR         @R3
    000002A4 0009                   NOP
      integral.c   118                            N = pop();              // N = arg1
    000002A6 4B0B                   JSR         @R11
    000002A8 0009                   NOP
    000002AA AF4A                   BRA         L1104
    000002AC 2C02                   MOV.L       R0,@R12
    000002AE              L1116:                            
      integral.c   119                    }
      integral.c   120            }
      integral.c   121    
      integral.c   122            push(F);        // final result
    000002AE D31D                   MOV.L       L1158+12,R3; _p3
    000002B0 4D0B                   JSR         @R13
    000002B2 6432                   MOV.L       @R3,R4
      integral.c   123    }
    000002B4 7F04                   ADD         #4,R15
    000002B6 4F26                   LDS.L       @R15+,PR
    000002B8 68F6                   MOV.L       @R15+,R8
    000002BA 69F6                   MOV.L       @R15+,R9
    000002BC 6AF6                   MOV.L       @R15+,R10
    000002BE 6BF6                   MOV.L       @R15+,R11
    000002C0 6CF6                   MOV.L       @R15+,R12
    000002C2 6DF6                   MOV.L       @R15+,R13
    000002C4 000B                   RTS
    000002C6 6EF6                   MOV.L       @R15+,R14
      integral.c   124    
      integral.c   125    void
      integral.c   126    integral(void)
    000002C8              _integral:                       ; function: integral
                                                           ; frame size=16
    000002C8 2FE6                   MOV.L       R14,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002CA 2FD6                   MOV.L       R13,@-R15
    000002CC 2FC6                   MOV.L       R12,@-R15
    000002CE 4F22                   STS.L       PR,@-R15
      integral.c   127    {
      integral.c   128            save();
    000002D0 D215                   MOV.L       L1158+16,R2; _save
    000002D2 420B                   JSR         @R2
    000002D4 0009                   NOP
      integral.c   129            p2 = pop();
    000002D6 DD15                   MOV.L       L1158+20,R13; _pop
    000002D8 4D0B                   JSR         @R13
    000002DA 0009                   NOP
    000002DC D314                   MOV.L       L1158+24,R3; _p2
      integral.c   130            p1 = pop();
    000002DE DE15                   MOV.L       L1158+28,R14; _p1
    000002E0 4D0B                   JSR         @R13
    000002E2 2302                   MOV.L       R0,@R3
    000002E4 2E02                   MOV.L       R0,@R14
    000002E6 6403                   MOV         R0,R4
    000002E8 DC0C                   MOV.L       L1158+4,R12; _symtab
    000002EA 8448                   MOV.B       @(8,R4),R0
    000002EC 2008                   TST         R0,R0
    000002EE 8F03                   BF/S        L1133
    000002F0 65C2                   MOV.L       @R12,R5
    000002F2 62E2                   MOV.L       @R14,R2
    000002F4 A003                   BRA         L1134
    000002F6 6222                   MOV.L       @R2,R2
    000002F8              L1133:                            
    000002F8 930E                   MOV.W       L1158,R3   ; H'0570
    000002FA 62C2                   MOV.L       @R12,R2
    000002FC 323C                   ADD         R3,R2
    000002FE              L1134:                            
    000002FE 6053                   MOV         R5,R0
    00000300 700C                   ADD         #12,R0
    00000302 3200                   CMP/EQ      R0,R2
    00000304 8B03                   BF          L1132
      integral.c   131            if (car(p1) == symbol(ADD))
      integral.c   132                    integral_of_sum();
    00000306 B041                   BSR         _integral_of_sum
    00000308 0009                   NOP
    0000030A A021                   BRA         L1135
    0000030C 0009                   NOP
    0000030E              L1132:                            
      integral.c   133            else if (car(p1) == symbol(MULTIPLY))
    0000030E 8448                   MOV.B       @(8,R4),R0
    00000310 2008                   TST         R0,R0
    00000312 8B11                   BF          L1137
    00000314 A012                   BRA         L1138
    00000316 6242                   MOV.L       @R4,R2
    00000318              L1158:                            
    00000318 0570                   .DATA.W     H'0570
    0000031A 0000                   .DATA.W     0
    0000031C <00000000>             .DATA.L     _symtab
    00000320 <00000000>             .DATA.L     _eval
    00000324 <00000000>             .DATA.L     _p3
    00000328 <00000000>             .DATA.L     _save
    0000032C <00000000>             .DATA.L     _pop




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000330 <00000000>             .DATA.L     _p2
    00000334 <00000000>             .DATA.L     _p1
    00000338              L1137:                            
    00000338 9275                   MOV.W       L1161,R2   ; H'0570
    0000033A 325C                   ADD         R5,R2
    0000033C              L1138:                            
    0000033C 9374                   MOV.W       L1161+2,R3 ; H'0384
    0000033E 335C                   ADD         R5,R3
    00000340 3230                   CMP/EQ      R3,R2
    00000342 8B03                   BF          L1136
      integral.c   134                    integral_of_product();
    00000344 B097                   BSR         _integral_of_product
    00000346 0009                   NOP
    00000348 A002                   BRA         L1135
    0000034A 0009                   NOP
    0000034C              L1136:                            
      integral.c   135            else
      integral.c   136                    integral_of_form();
    0000034C B0A8                   BSR         _integral_of_form
    0000034E 0009                   NOP
    00000350              L1135:                            
      integral.c   137            p1 = pop();
    00000350 4D0B                   JSR         @R13
    00000352 0009                   NOP
    00000354 2E02                   MOV.L       R0,@R14
      integral.c   138            if (find(p1, symbol(INTEGRAL)))
    00000356 9368                   MOV.W       L1161+4,R3 ; H'02F4
    00000358 65C2                   MOV.L       @R12,R5
    0000035A 353C                   ADD         R3,R5
    0000035C D233                   MOV.L       L1161+6,R2 ; _find
    0000035E 420B                   JSR         @R2
    00000360 6403                   MOV         R0,R4
    00000362 2008                   TST         R0,R0
    00000364 8903                   BT          L1140
      integral.c   139                    stop("integral: sorry, could not find a solution");
    00000366 D432                   MOV.L       L1161+10,R4; L1075
    00000368 D232                   MOV.L       L1161+14,R2; _stop
    0000036A 420B                   JSR         @R2
    0000036C 0009                   NOP
    0000036E              L1140:                            
      integral.c   140            push(p1);
    0000036E D332                   MOV.L       L1161+18,R3; _push
    00000370 430B                   JSR         @R3
    00000372 64E2                   MOV.L       @R14,R4
      integral.c   141            simplify();     // polish the result
    00000374 D231                   MOV.L       L1161+22,R2; _simplify
    00000376 420B                   JSR         @R2
    00000378 0009                   NOP
      integral.c   142            eval();         // normalize the result
    0000037A D331                   MOV.L       L1161+26,R3; _eval
    0000037C 430B                   JSR         @R3
    0000037E 0009                   NOP
      integral.c   143            restore();
    00000380 4F26                   LDS.L       @R15+,PR
    00000382 6CF6                   MOV.L       @R15+,R12
    00000384 D22F                   MOV.L       L1161+30,R2; _restore
    00000386 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000388 422B                   JMP         @R2
    0000038A 6EF6                   MOV.L       @R15+,R14
      integral.c   144    }
      integral.c   145    
      integral.c   146    void
      integral.c   147    integral_of_sum(void)
    0000038C              _integral_of_sum:                ; function: integral_of_sum
                                                           ; frame size=20
    0000038C 2FE6                   MOV.L       R14,@-R15
    0000038E 2FD6                   MOV.L       R13,@-R15
    00000390 2FC6                   MOV.L       R12,@-R15
    00000392 2FB6                   MOV.L       R11,@-R15
    00000394 4F22                   STS.L       PR,@-R15
      integral.c   148    {
      integral.c   149            p1 = cdr(p1);
    00000396 DE2C                   MOV.L       L1161+34,R14; _p1
    00000398 62E2                   MOV.L       @R14,R2
    0000039A 8428                   MOV.B       @(8,R2),R0
    0000039C 2008                   TST         R0,R0
    0000039E 8B02                   BF          L1141
    000003A0 62E2                   MOV.L       @R14,R2
    000003A2 A004                   BRA         L1142
    000003A4 5321                   MOV.L       @(4,R2),R3
    000003A6              L1141:                            
    000003A6 923E                   MOV.W       L1161,R2   ; H'0570
    000003A8 D128                   MOV.L       L1161+38,R1; _symtab
    000003AA 6312                   MOV.L       @R1,R3
    000003AC 332C                   ADD         R2,R3
    000003AE              L1142:                            
      integral.c   150            push(car(p1));
    000003AE 6433                   MOV         R3,R4
    000003B0 2E32                   MOV.L       R3,@R14
    000003B2 DD21                   MOV.L       L1161+18,R13; _push
    000003B4 8448                   MOV.B       @(8,R4),R0
    000003B6 2008                   TST         R0,R0
    000003B8 8B02                   BF          L1143
    000003BA 64E2                   MOV.L       @R14,R4
    000003BC A004                   BRA         L1144
    000003BE 6442                   MOV.L       @R4,R4
    000003C0              L1143:                            
    000003C0 9331                   MOV.W       L1161,R3   ; H'0570
    000003C2 D222                   MOV.L       L1161+38,R2; _symtab
    000003C4 6422                   MOV.L       @R2,R4
    000003C6 343C                   ADD         R3,R4
    000003C8              L1144:                            
    000003C8 4D0B                   JSR         @R13
    000003CA 0009                   NOP
      integral.c   151            push(p2);
    000003CC DC20                   MOV.L       L1161+42,R12; _p2
    000003CE 4D0B                   JSR         @R13
    000003D0 64C2                   MOV.L       @R12,R4
      integral.c   152            integral();
    000003D2 BF79                   BSR         _integral
    000003D4 0009                   NOP
      integral.c   153            p1 = cdr(p1);
    000003D6 63E2                   MOV.L       @R14,R3
    000003D8 8438                   MOV.B       @(8,R3),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003DA 2008                   TST         R0,R0
    000003DC 8B02                   BF          L1145
    000003DE 62E2                   MOV.L       @R14,R2
    000003E0 A004                   BRA         L1146
    000003E2 5221                   MOV.L       @(4,R2),R2
    000003E4              L1145:                            
    000003E4 931F                   MOV.W       L1161,R3   ; H'0570
    000003E6 D119                   MOV.L       L1161+38,R1; _symtab
    000003E8 6212                   MOV.L       @R1,R2
    000003EA 323C                   ADD         R3,R2
    000003EC              L1146:                            
    000003EC DB19                   MOV.L       L1161+46,R11; _add
      integral.c   154            while (iscons(p1)) {
    000003EE A038                   BRA         L1147
    000003F0 2E22                   MOV.L       R2,@R14
    000003F2              L1148:                            
      integral.c   155                    push(car(p1));
    000003F2 64E2                   MOV.L       @R14,R4
    000003F4 8448                   MOV.B       @(8,R4),R0
    000003F6 2008                   TST         R0,R0
    000003F8 8B02                   BF          L1149
    000003FA 64E2                   MOV.L       @R14,R4
    000003FC A004                   BRA         L1150
    000003FE 6442                   MOV.L       @R4,R4
    00000400              L1149:                            
    00000400 9311                   MOV.W       L1161,R3   ; H'0570
    00000402 D212                   MOV.L       L1161+38,R2; _symtab
    00000404 6422                   MOV.L       @R2,R4
    00000406 343C                   ADD         R3,R4
    00000408              L1150:                            
    00000408 4D0B                   JSR         @R13
    0000040A 0009                   NOP
      integral.c   156                    push(p2);
    0000040C 4D0B                   JSR         @R13
    0000040E 64C2                   MOV.L       @R12,R4
      integral.c   157                    integral();
    00000410 BF5A                   BSR         _integral
    00000412 0009                   NOP
      integral.c   158                    add();
    00000414 4B0B                   JSR         @R11
    00000416 0009                   NOP
      integral.c   159                    p1 = cdr(p1);
    00000418 63E2                   MOV.L       @R14,R3
    0000041A 8438                   MOV.B       @(8,R3),R0
    0000041C 2008                   TST         R0,R0
    0000041E 8B1B                   BF          L1151
    00000420 62E2                   MOV.L       @R14,R2
    00000422 A01D                   BRA         L1152
    00000424 5221                   MOV.L       @(4,R2),R2
    00000426              L1161:                            
    00000426 0570                   .DATA.W     H'0570
    00000428 0384                   .DATA.W     H'0384
    0000042A 02F4                   .DATA.W     H'02F4
    0000042C <00000000>             .DATA.L     _find
    00000430 <00000000>             .DATA.L     L1075
    00000434 <00000000>             .DATA.L     _stop
    00000438 <00000000>             .DATA.L     _push




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000043C <00000000>             .DATA.L     _simplify
    00000440 <00000000>             .DATA.L     _eval
    00000444 <00000000>             .DATA.L     _restore
    00000448 <00000000>             .DATA.L     _p1
    0000044C <00000000>             .DATA.L     _symtab
    00000450 <00000000>             .DATA.L     _p2
    00000454 <00000000>             .DATA.L     _add
    00000458              L1151:                            
    00000458 934E                   MOV.W       L1162,R3   ; H'0570
    0000045A D128                   MOV.L       L1162+4,R1 ; _symtab
    0000045C 6212                   MOV.L       @R1,R2
    0000045E 323C                   ADD         R3,R2
    00000460              L1152:                            
    00000460 2E22                   MOV.L       R2,@R14
    00000462              L1147:                            
    00000462 63E2                   MOV.L       @R14,R3
    00000464 8438                   MOV.B       @(8,R3),R0
    00000466 2008                   TST         R0,R0
    00000468 89C3                   BT          L1148
      integral.c   160            }
      integral.c   161    }
    0000046A 4F26                   LDS.L       @R15+,PR
    0000046C 6BF6                   MOV.L       @R15+,R11
    0000046E 6CF6                   MOV.L       @R15+,R12
    00000470 6DF6                   MOV.L       @R15+,R13
    00000472 000B                   RTS
    00000474 6EF6                   MOV.L       @R15+,R14
      integral.c   162    
      integral.c   163    void
      integral.c   164    integral_of_product(void)
    00000476              _integral_of_product:            ; function: integral_of_product
                                                           ; frame size=4
    00000476 4F22                   STS.L       PR,@-R15
      integral.c   165    {
      integral.c   166            push(p1);
    00000478 D321                   MOV.L       L1162+8,R3 ; _p1
    0000047A D222                   MOV.L       L1162+12,R2; _push
    0000047C 420B                   JSR         @R2
    0000047E 6432                   MOV.L       @R3,R4
      integral.c   167            push(p2);
    00000480 D121                   MOV.L       L1162+16,R1; _p2
    00000482 D320                   MOV.L       L1162+12,R3; _push
    00000484 430B                   JSR         @R3
    00000486 6412                   MOV.L       @R1,R4
      integral.c   168            partition();
    00000488 D220                   MOV.L       L1162+20,R2; _partition
    0000048A 420B                   JSR         @R2
    0000048C 0009                   NOP
      integral.c   169            p1 = pop();                     // pop variable part
    0000048E D320                   MOV.L       L1162+24,R3; _pop
    00000490 430B                   JSR         @R3
    00000492 0009                   NOP
    00000494 D21A                   MOV.L       L1162+8,R2 ; _p1
      integral.c   170            integral_of_form();
    00000496 B003                   BSR         _integral_of_form
    00000498 2202                   MOV.L       R0,@R2
      integral.c   171            multiply();                     // multiply constant part




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000049A D11E                   MOV.L       L1162+28,R1; _multiply
    0000049C 412B                   JMP         @R1
    0000049E 4F26                   LDS.L       @R15+,PR
      integral.c   172    }
      integral.c   173    
      integral.c   174    extern char *itab[];
      integral.c   175    
      integral.c   176    void
      integral.c   177    integral_of_form(void)
    000004A0              _integral_of_form:               ; function: integral_of_form
                                                           ; frame size=8
    000004A0 2FE6                   MOV.L       R14,@-R15
    000004A2 4F22                   STS.L       PR,@-R15
      integral.c   178    {
      integral.c   179            push(p1);
    000004A4 DE17                   MOV.L       L1162+12,R14; _push
    000004A6 D316                   MOV.L       L1162+8,R3 ; _p1
    000004A8 4E0B                   JSR         @R14
    000004AA 6432                   MOV.L       @R3,R4
      integral.c   180            push(p2);
    000004AC D216                   MOV.L       L1162+16,R2; _p2
    000004AE 4E0B                   JSR         @R14
    000004B0 6422                   MOV.L       @R2,R4
      integral.c   181            transform(itab);
    000004B2 D419                   MOV.L       L1162+32,R4; _itab
    000004B4 D319                   MOV.L       L1162+36,R3; _transform
    000004B6 430B                   JSR         @R3
    000004B8 0009                   NOP
      integral.c   182            p3 = pop();
    000004BA D215                   MOV.L       L1162+24,R2; _pop
    000004BC 420B                   JSR         @R2
    000004BE 0009                   NOP
    000004C0 D317                   MOV.L       L1162+40,R3; _p3
    000004C2 6403                   MOV         R0,R4
    000004C4 9218                   MOV.W       L1162,R2   ; H'0570
    000004C6 2302                   MOV.L       R0,@R3
    000004C8 D30C                   MOV.L       L1162+4,R3 ; _symtab
    000004CA 6132                   MOV.L       @R3,R1
    000004CC 312C                   ADD         R2,R1
    000004CE 3410                   CMP/EQ      R1,R4
    000004D0 8B0D                   BF          L1153
      integral.c   183            if (p3 == symbol(NIL)) {
      integral.c   184                    push_symbol(INTEGRAL);
    000004D2 D314                   MOV.L       L1162+44,R3; _push_symbol
    000004D4 430B                   JSR         @R3
    000004D6 E43F                   MOV         #63,R4
      integral.c   185                    push(p1);
    000004D8 D209                   MOV.L       L1162+8,R2 ; _p1
    000004DA 4E0B                   JSR         @R14
    000004DC 6422                   MOV.L       @R2,R4
      integral.c   186                    push(p2);
    000004DE D30A                   MOV.L       L1162+16,R3; _p2
    000004E0 4E0B                   JSR         @R14
    000004E2 6432                   MOV.L       @R3,R4
      integral.c   187                    list(3);
    000004E4 4F26                   LDS.L       @R15+,PR
    000004E6 E403                   MOV         #3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004E8 D20F                   MOV.L       L1162+48,R2; _list
    000004EA 422B                   JMP         @R2
    000004EC 6EF6                   MOV.L       @R15+,R14
    000004EE              L1153:                            
      integral.c   188            } else
      integral.c   189                    push(p3);
    000004EE 4E0B                   JSR         @R14
    000004F0 0009                   NOP
      integral.c   190    }
    000004F2 4F26                   LDS.L       @R15+,PR
    000004F4 000B                   RTS
    000004F6 6EF6                   MOV.L       @R15+,R14
    000004F8              L1162:                            
    000004F8 0570                   .DATA.W     H'0570
    000004FA 0000                   .DATA.W     0
    000004FC <00000000>             .DATA.L     _symtab
    00000500 <00000000>             .DATA.L     _p1
    00000504 <00000000>             .DATA.L     _push
    00000508 <00000000>             .DATA.L     _p2
    0000050C <00000000>             .DATA.L     _partition
    00000510 <00000000>             .DATA.L     _pop
    00000514 <00000000>             .DATA.L     _multiply
    00000518 <00000000>             .DATA.L     _itab
    0000051C <00000000>             .DATA.L     _transform
    00000520 <00000000>             .DATA.L     _p3
    00000524 <00000000>             .DATA.L     _push_symbol
    00000528 <00000000>             .DATA.L     _list
C   00000000              L1066:
    00000000 6E74682069             .SDATA      "nth integral: check n"
             6E74656772   
             616C3A2063   
             6865636B20   
             6E           
    00000015 00                     .DATA.B     H'00
    00000016 00000002               .RES.W      1
    00000018              L1075:
    00000018 696E746567             .SDATA      "integral: sorry, could not find a solution"
             72616C3A20   
             736F727279   
             2C20636F75   
             6C64206E6F   
             742066696E   
             6420612073   
             6F6C757469   
             6F6E         
    00000042 00                     .DATA.B     H'00















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:04  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      190



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000052C Byte(s)
CONSTANT SECTION (C):                               00000043 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000056F Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           24
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           5
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            95






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk7A64.tmp 

