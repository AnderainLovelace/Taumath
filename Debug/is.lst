SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\is.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            is.c     1    #include "stdafx.h"
            is.c     2    #include "defs.h"
            is.c     3    
            is.c     4    int
            is.c     5    iszero(U *p)
P   00000000              _iszero:                         ; function: iszero
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __ned
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 6E43                   MOV         R4,R14
    00000004 2FD6                   MOV.L       R13,@-R15
    00000006 4F22                   STS.L       PR,@-R15
            is.c     6    {
            is.c     7            int i;
            is.c     8            switch (p->k) {
    00000008 84E8                   MOV.B       @(8,R14),R0
    0000000A 600C                   EXTU.B      R0,R0
    0000000C 8801                   CMP/EQ      #1,R0
    0000000E 8905                   BT          L1190
    00000010 8802                   CMP/EQ      #2,R0
    00000012 890E                   BT          L1191
    00000014 8804                   CMP/EQ      #4,R0
    00000016 8919                   BT          L1192
    00000018 A02B                   BRA         L1145
    0000001A 0009                   NOP
    0000001C              L1190:                           ; case label 
            is.c     9            case NUM:
            is.c    10                    if (MZERO(p->u.q.a))
    0000001C 64E2                   MOV.L       @R14,R4
    0000001E 6043                   MOV         R4,R0
    00000020 70FC                   ADD         #-4,R0
    00000022 6002                   MOV.L       @R0,R0
    00000024 8801                   CMP/EQ      #1,R0
    00000026 8B24                   BF          L1145
    00000028 6242                   MOV.L       @R4,R2
    0000002A 2228                   TST         R2,R2
    0000002C 891F                   BT          L1144
            is.c    11                            return 1;
            is.c    12                    break;
    0000002E A020                   BRA         L1145
    00000030 0009                   NOP
    00000032              L1191:                           ; case label 
            is.c    13            case DOUBLE:
            is.c    14                    if (p->u.d == 0.0)
    00000032 E300                   MOV         #0,R3
    00000034 52E1                   MOV.L       @(4,R14),R2
    00000036 2F26                   MOV.L       R2,@-R15
    00000038 62E2                   MOV.L       @R14,R2
    0000003A 2F26                   MOV.L       R2,@-R15
    0000003C 2F36                   MOV.L       R3,@-R15
    0000003E D26B                   MOV.L       L1724+2,R2 ; __ned
    00000040 420B                   JSR         @R2
    00000042 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000044 8800                   CMP/EQ      #0,R0
    00000046 8B14                   BF          L1145
    00000048 A011                   BRA         L1144
    0000004A 0009                   NOP
    0000004C              L1192:                           ; case label 
            is.c    15                            return 1;
            is.c    16                    break;
            is.c    17            case TENSOR:
            is.c    18                    for (i = 0; i < p->u.tensor->nelem; i++)
    0000004C A00A                   BRA         L1265
    0000004E ED00                   MOV         #0,R13
    00000050              L1266:                            
            is.c    19                            if (!iszero(p->u.tensor->elem[i]))
    00000050 63E2                   MOV.L       @R14,R3
    00000052 64D3                   MOV         R13,R4
    00000054 4408                   SHLL2       R4
    00000056 7368                   ADD         #104,R3
    00000058 343C                   ADD         R3,R4
    0000005A BFD1                   BSR         _iszero
    0000005C 6442                   MOV.L       @R4,R4
    0000005E 2008                   TST         R0,R0
    00000060 8907                   BT          L1145
    00000062 7D01                   ADD         #1,R13
    00000064              L1265:                            
    00000064 63E2                   MOV.L       @R14,R3
    00000066 E064                   MOV         #100,R0
    00000068 023E                   MOV.L       @(R0,R3),R2
    0000006A 3D23                   CMP/GE      R2,R13
    0000006C 8BF0                   BF          L1266
    0000006E              L1144:
            is.c    20                                    return 0;
            is.c    21                    return 1;
    0000006E A001                   BRA         L1263
    00000070 E001                   MOV         #1,R0
    00000072              L1145:
            is.c    22            default:
            is.c    23                    break;
            is.c    24            }
            is.c    25            return 0;
    00000072 E000                   MOV         #0,R0
            is.c    26    }
    00000074              L1263:                            
    00000074 4F26                   LDS.L       @R15+,PR
    00000076 6DF6                   MOV.L       @R15+,R13
    00000078 000B                   RTS
    0000007A 6EF6                   MOV.L       @R15+,R14
            is.c    27    
            is.c    28    int
            is.c    29    isnegativenumber(U *p)
    0000007C              _isnegativenumber:               ; function: isnegativenumber
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __ltd
    0000007C 4F22                   STS.L       PR,@-R15
            is.c    30    {
            is.c    31            switch (p->k) {
    0000007E 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000080 600C                   EXTU.B      R0,R0
    00000082 8801                   CMP/EQ      #1,R0
    00000084 8903                   BT          L1194
    00000086 8802                   CMP/EQ      #2,R0
    00000088 8908                   BT          L1195
    0000008A A015                   BRA         L1268
    0000008C 0009                   NOP
    0000008E              L1194:                           ; case label 
            is.c    32            case NUM:
            is.c    33                    if (MSIGN(p->u.q.a) == -1)
    0000008E E0F8                   MOV         #-8,R0
    00000090 6342                   MOV.L       @R4,R3
    00000092 003E                   MOV.L       @(R0,R3),R0
    00000094 88FF                   CMP/EQ      #-1,R0
    00000096 890C                   BT          L1146
            is.c    34                            return 1;
            is.c    35                    break;
    00000098 A00E                   BRA         L1268
    0000009A 0009                   NOP
    0000009C              L1195:                           ; case label 
            is.c    36            case DOUBLE:
            is.c    37                    if (p->u.d < 0.0)
    0000009C 5241                   MOV.L       @(4,R4),R2
    0000009E E300                   MOV         #0,R3
    000000A0 2F26                   MOV.L       R2,@-R15
    000000A2 6242                   MOV.L       @R4,R2
    000000A4 2F26                   MOV.L       R2,@-R15
    000000A6 2F36                   MOV.L       R3,@-R15
    000000A8 D251                   MOV.L       L1724+6,R2 ; __ltd
    000000AA 420B                   JSR         @R2
    000000AC 2F36                   MOV.L       R3,@-R15
    000000AE 8800                   CMP/EQ      #0,R0
    000000B0 8902                   BT          L1268
    000000B2              L1146:
            is.c    38                            return 1;
    000000B2 4F26                   LDS.L       @R15+,PR
    000000B4 000B                   RTS
    000000B6 E001                   MOV         #1,R0
    000000B8              L1268:                            
            is.c    39                    break;
            is.c    40            default:
            is.c    41                    break;
            is.c    42            }
            is.c    43            return 0;
    000000B8 E000                   MOV         #0,R0
            is.c    44    }
    000000BA              L1270:                            
    000000BA 4F26                   LDS.L       @R15+,PR
    000000BC 000B                   RTS
    000000BE 0009                   NOP
            is.c    45    
            is.c    46    int
            is.c    47    isplusone(U *p)
    000000C0              _isplusone:                      ; function: isplusone
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __ned




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000C0 4F22                   STS.L       PR,@-R15
    000000C2 4F12                   STS.L       MACL,@-R15
            is.c    48    {
            is.c    49            switch (p->k) {
    000000C4 8448                   MOV.B       @(8,R4),R0
    000000C6 600C                   EXTU.B      R0,R0
    000000C8 8801                   CMP/EQ      #1,R0
    000000CA 8903                   BT          L1197
    000000CC 8802                   CMP/EQ      #2,R0
    000000CE 891F                   BT          L1198
    000000D0 A02F                   BRA         L1272
    000000D2 0009                   NOP
    000000D4              L1197:                           ; case label 
            is.c    50            case NUM:
            is.c    51                    if (MEQUAL(p->u.q.a, 1) && MEQUAL(p->u.q.b, 1))
    000000D4 6542                   MOV.L       @R4,R5
    000000D6 6053                   MOV         R5,R0
    000000D8 70FC                   ADD         #-4,R0
    000000DA 6002                   MOV.L       @R0,R0
    000000DC 8801                   CMP/EQ      #1,R0
    000000DE 8B28                   BF          L1272
    000000E0 6352                   MOV.L       @R5,R3
    000000E2 6053                   MOV         R5,R0
    000000E4 70F8                   ADD         #-8,R0
    000000E6 6202                   MOV.L       @R0,R2
    000000E8 0237                   MUL.L       R3,R2
    000000EA 001A                   STS         MACL,R0
    000000EC 8801                   CMP/EQ      #1,R0
    000000EE 8B20                   BF          L1272
    000000F0 5241                   MOV.L       @(4,R4),R2
    000000F2 E0FC                   MOV         #-4,R0
    000000F4 002E                   MOV.L       @(R0,R2),R0
    000000F6 8801                   CMP/EQ      #1,R0
    000000F8 8B1B                   BF          L1272
    000000FA 5241                   MOV.L       @(4,R4),R2
    000000FC 6023                   MOV         R2,R0
    000000FE 6302                   MOV.L       @R0,R3
    00000100 E0F8                   MOV         #-8,R0
    00000102 022E                   MOV.L       @(R0,R2),R2
    00000104 0237                   MUL.L       R3,R2
    00000106 001A                   STS         MACL,R0
    00000108 8801                   CMP/EQ      #1,R0
    0000010A 890D                   BT          L1147
            is.c    52                            return 1;
            is.c    53                    break;
    0000010C A011                   BRA         L1272
    0000010E 0009                   NOP
    00000110              L1198:                           ; case label 
            is.c    54            case DOUBLE:
            is.c    55                    if (p->u.d == 1.0)
    00000110 5241                   MOV.L       @(4,R4),R2
    00000112 E300                   MOV         #0,R3
    00000114 2F26                   MOV.L       R2,@-R15
    00000116 6242                   MOV.L       @R4,R2
    00000118 2F26                   MOV.L       R2,@-R15
    0000011A 2F36                   MOV.L       R3,@-R15
    0000011C D335                   MOV.L       L1724+10,R3; H'3FF00000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000011E D233                   MOV.L       L1724+2,R2 ; __ned
    00000120 420B                   JSR         @R2
    00000122 2F36                   MOV.L       R3,@-R15
    00000124 8800                   CMP/EQ      #0,R0
    00000126 8B04                   BF          L1272
    00000128              L1147:
            is.c    56                            return 1;
    00000128 4F16                   LDS.L       @R15+,MACL
    0000012A E001                   MOV         #1,R0
    0000012C 4F26                   LDS.L       @R15+,PR
    0000012E 000B                   RTS
    00000130 0009                   NOP
    00000132              L1272:                            
            is.c    57                    break;
            is.c    58            default:
            is.c    59                    break;
            is.c    60            }
            is.c    61            return 0;
    00000132 E000                   MOV         #0,R0
            is.c    62    }
    00000134              L1274:                            
    00000134 4F16                   LDS.L       @R15+,MACL
    00000136 4F26                   LDS.L       @R15+,PR
    00000138 000B                   RTS
    0000013A 0009                   NOP
            is.c    63    
            is.c    64    int
            is.c    65    isminusone(U *p)
    0000013C              _isminusone:                     ; function: isminusone
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __ned
    0000013C 4F22                   STS.L       PR,@-R15
    0000013E 4F12                   STS.L       MACL,@-R15
            is.c    66    {
            is.c    67            switch (p->k) {
    00000140 8448                   MOV.B       @(8,R4),R0
    00000142 600C                   EXTU.B      R0,R0
    00000144 8801                   CMP/EQ      #1,R0
    00000146 8903                   BT          L1200
    00000148 8802                   CMP/EQ      #2,R0
    0000014A 891F                   BT          L1201
    0000014C A02F                   BRA         L1276
    0000014E 0009                   NOP
    00000150              L1200:                           ; case label 
            is.c    68            case NUM:
            is.c    69                    if (MEQUAL(p->u.q.a, -1) && MEQUAL(p->u.q.b, 1))
    00000150 6542                   MOV.L       @R4,R5
    00000152 6053                   MOV         R5,R0
    00000154 70FC                   ADD         #-4,R0
    00000156 6002                   MOV.L       @R0,R0
    00000158 8801                   CMP/EQ      #1,R0
    0000015A 8B28                   BF          L1276
    0000015C 6352                   MOV.L       @R5,R3
    0000015E 6053                   MOV         R5,R0
    00000160 70F8                   ADD         #-8,R0
    00000162 6202                   MOV.L       @R0,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000164 0237                   MUL.L       R3,R2
    00000166 001A                   STS         MACL,R0
    00000168 88FF                   CMP/EQ      #-1,R0
    0000016A 8B20                   BF          L1276
    0000016C 5241                   MOV.L       @(4,R4),R2
    0000016E E0FC                   MOV         #-4,R0
    00000170 002E                   MOV.L       @(R0,R2),R0
    00000172 8801                   CMP/EQ      #1,R0
    00000174 8B1B                   BF          L1276
    00000176 5241                   MOV.L       @(4,R4),R2
    00000178 6023                   MOV         R2,R0
    0000017A 6302                   MOV.L       @R0,R3
    0000017C E0F8                   MOV         #-8,R0
    0000017E 022E                   MOV.L       @(R0,R2),R2
    00000180 0237                   MUL.L       R3,R2
    00000182 001A                   STS         MACL,R0
    00000184 8801                   CMP/EQ      #1,R0
    00000186 890D                   BT          L1148
            is.c    70                            return 1;
            is.c    71                    break;
    00000188 A011                   BRA         L1276
    0000018A 0009                   NOP
    0000018C              L1201:                           ; case label 
            is.c    72            case DOUBLE:
            is.c    73                    if (p->u.d == -1.0)
    0000018C 5241                   MOV.L       @(4,R4),R2
    0000018E E300                   MOV         #0,R3
    00000190 2F26                   MOV.L       R2,@-R15
    00000192 6242                   MOV.L       @R4,R2
    00000194 2F26                   MOV.L       R2,@-R15
    00000196 2F36                   MOV.L       R3,@-R15
    00000198 D317                   MOV.L       L1724+14,R3; H'BFF00000
    0000019A D214                   MOV.L       L1724+2,R2 ; __ned
    0000019C 420B                   JSR         @R2
    0000019E 2F36                   MOV.L       R3,@-R15
    000001A0 8800                   CMP/EQ      #0,R0
    000001A2 8B04                   BF          L1276
    000001A4              L1148:
            is.c    74                            return 1;
    000001A4 4F16                   LDS.L       @R15+,MACL
    000001A6 E001                   MOV         #1,R0
    000001A8 4F26                   LDS.L       @R15+,PR
    000001AA 000B                   RTS
    000001AC 0009                   NOP
    000001AE              L1276:                            
            is.c    75                    break;
            is.c    76            default:
            is.c    77                    break;
            is.c    78            }
            is.c    79            return 0;
    000001AE E000                   MOV         #0,R0
            is.c    80    }
    000001B0              L1278:                            
    000001B0 4F16                   LDS.L       @R15+,MACL
    000001B2 4F26                   LDS.L       @R15+,PR
    000001B4 000B                   RTS
    000001B6 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            is.c    81    
            is.c    82    int
            is.c    83    isinteger(U *p)
    000001B8              _isinteger:                      ; function: isinteger
                                                           ; frame size=4
    000001B8 4F12                   STS.L       MACL,@-R15
            is.c    84    {
            is.c    85            if (p->k == NUM && MEQUAL(p->u.q.b, 1))
    000001BA 8448                   MOV.B       @(8,R4),R0
    000001BC 600C                   EXTU.B      R0,R0
    000001BE 8801                   CMP/EQ      #1,R0
    000001C0 8B10                   BF          L1280
    000001C2 E0FC                   MOV         #-4,R0
    000001C4 5241                   MOV.L       @(4,R4),R2
    000001C6 002E                   MOV.L       @(R0,R2),R0
    000001C8 8801                   CMP/EQ      #1,R0
    000001CA 8B0B                   BF          L1280
    000001CC 5241                   MOV.L       @(4,R4),R2
    000001CE 6023                   MOV         R2,R0
    000001D0 6302                   MOV.L       @R0,R3
    000001D2 E0F8                   MOV         #-8,R0
    000001D4 022E                   MOV.L       @(R0,R2),R2
    000001D6 0237                   MUL.L       R3,R2
    000001D8 001A                   STS         MACL,R0
    000001DA 8801                   CMP/EQ      #1,R0
    000001DC 8B02                   BF          L1280
            is.c    86                    return 1;
    000001DE E001                   MOV         #1,R0
    000001E0 000B                   RTS
    000001E2 4F16                   LDS.L       @R15+,MACL
    000001E4              L1280:                            
            is.c    87            else
            is.c    88                    return 0;
    000001E4 E000                   MOV         #0,R0
            is.c    89    }
    000001E6              L1281:                            
    000001E6 000B                   RTS
    000001E8 4F16                   LDS.L       @R15+,MACL
    000001EA              L1724:                            
    000001EA 0000                   .DATA.W     0
    000001EC <00000000>             .DATA.L     __ned
    000001F0 <00000000>             .DATA.L     __ltd
    000001F4 3FF00000               .DATA.L     H'3FF00000
    000001F8 BFF00000               .DATA.L     H'BFF00000
            is.c    90    
            is.c    91    int
            is.c    92    isnonnegativeinteger(U *p)
    000001FC              _isnonnegativeinteger:           ; function: isnonnegativeinteger
                                                           ; frame size=4
    000001FC 4F12                   STS.L       MACL,@-R15
            is.c    93    {
            is.c    94            if (isrational(p) && MEQUAL(p->u.q.b, 1) && MSIGN(p->u.q.a) == 1)
    000001FE 8448                   MOV.B       @(8,R4),R0
    00000200 600C                   EXTU.B      R0,R0
    00000202 8801                   CMP/EQ      #1,R0
    00000204 8B15                   BF          L1283
    00000206 E0FC                   MOV         #-4,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000208 5241                   MOV.L       @(4,R4),R2
    0000020A 002E                   MOV.L       @(R0,R2),R0
    0000020C 8801                   CMP/EQ      #1,R0
    0000020E 8B10                   BF          L1283
    00000210 5241                   MOV.L       @(4,R4),R2
    00000212 6023                   MOV         R2,R0
    00000214 6302                   MOV.L       @R0,R3
    00000216 E0F8                   MOV         #-8,R0
    00000218 022E                   MOV.L       @(R0,R2),R2
    0000021A 0237                   MUL.L       R3,R2
    0000021C 001A                   STS         MACL,R0
    0000021E 8801                   CMP/EQ      #1,R0
    00000220 8B07                   BF          L1283
    00000222 E0F8                   MOV         #-8,R0
    00000224 6242                   MOV.L       @R4,R2
    00000226 002E                   MOV.L       @(R0,R2),R0
    00000228 8801                   CMP/EQ      #1,R0
    0000022A 8B02                   BF          L1283
            is.c    95                    return 1;
    0000022C E001                   MOV         #1,R0
    0000022E 000B                   RTS
    00000230 4F16                   LDS.L       @R15+,MACL
    00000232              L1283:                            
            is.c    96            else
            is.c    97                    return 0;
    00000232 E000                   MOV         #0,R0
            is.c    98    }
    00000234              L1284:                            
    00000234 000B                   RTS
    00000236 4F16                   LDS.L       @R15+,MACL
            is.c    99    
            is.c   100    int
            is.c   101    isposint(U *p)
    00000238              _isposint:                       ; function: isposint
                                                           ; frame size=8
    00000238 4F22                   STS.L       PR,@-R15
    0000023A 7FFC                   ADD         #-4,R15
            is.c   102    {
            is.c   103            if (isinteger(p) && MSIGN(p->u.q.a) == 1)
    0000023C BFBC                   BSR         _isinteger
    0000023E 2F42                   MOV.L       R4,@R15
    00000240 2008                   TST         R0,R0
    00000242 8909                   BT          L1286
    00000244 60F2                   MOV.L       @R15,R0
    00000246 6302                   MOV.L       @R0,R3
    00000248 E0F8                   MOV         #-8,R0
    0000024A 003E                   MOV.L       @(R0,R3),R0
    0000024C 8801                   CMP/EQ      #1,R0
    0000024E 8B03                   BF          L1286
            is.c   104                    return 1;
    00000250 7F04                   ADD         #4,R15
    00000252 4F26                   LDS.L       @R15+,PR
    00000254 000B                   RTS
    00000256 E001                   MOV         #1,R0
    00000258              L1286:                            
            is.c   105            else
            is.c   106                    return 0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000258 E000                   MOV         #0,R0
            is.c   107    }
    0000025A              L1287:                            
    0000025A 7F04                   ADD         #4,R15
    0000025C 4F26                   LDS.L       @R15+,PR
    0000025E 000B                   RTS
    00000260 0009                   NOP
            is.c   108    
            is.c   109    int
            is.c   110    ispoly(U *p, U *x)
    00000262              _ispoly:                         ; function: ispoly
                                                           ; frame size=12
    00000262 4F22                   STS.L       PR,@-R15
            is.c   111    {
            is.c   112            if (find(p, x))
    00000264 D320                   MOV.L       L1725+4,R3 ; _find
    00000266 7FF8                   ADD         #-8,R15
    00000268 2F42                   MOV.L       R4,@R15
    0000026A 1F51                   MOV.L       R5,@(4,R15)
    0000026C 430B                   JSR         @R3
    0000026E 64F2                   MOV.L       @R15,R4
    00000270 2008                   TST         R0,R0
    00000272 8904                   BT          L1289
            is.c   113                    return ispoly_expr(p, x);
    00000274 55F1                   MOV.L       @(4,R15),R5
    00000276 64F2                   MOV.L       @R15,R4
    00000278 7F08                   ADD         #8,R15
    0000027A A004                   BRA         _ispoly_expr
    0000027C 4F26                   LDS.L       @R15+,PR
    0000027E              L1289:                            
            is.c   114            else
            is.c   115                    return 0;
            is.c   116    }
    0000027E 7F08                   ADD         #8,R15
    00000280 4F26                   LDS.L       @R15+,PR
    00000282 000B                   RTS
    00000284 E000                   MOV         #0,R0
            is.c   117    
            is.c   118    int
            is.c   119    ispoly_expr(U *p, U *x)
    00000286              _ispoly_expr:                    ; function: ispoly_expr
                                                           ; frame size=12
    00000286 2FE6                   MOV.L       R14,@-R15
    00000288 2FD6                   MOV.L       R13,@-R15
    0000028A 6D53                   MOV         R5,R13
    0000028C 4F22                   STS.L       PR,@-R15
    0000028E D517                   MOV.L       L1725+8,R5 ; _symtab
    00000290 8448                   MOV.B       @(8,R4),R0
    00000292 2008                   TST         R0,R0
    00000294 8F02                   BF/S        L1293
    00000296 6652                   MOV.L       @R5,R6
    00000298 A003                   BRA         L1294
    0000029A 6342                   MOV.L       @R4,R3
    0000029C              L1293:                            
    0000029C 9222                   MOV.W       L1725,R2   ; H'0570
    0000029E 6352                   MOV.L       @R5,R3
    000002A0 332C                   ADD         R2,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002A2              L1294:                            
    000002A2 6063                   MOV         R6,R0
    000002A4 700C                   ADD         #12,R0
    000002A6 3300                   CMP/EQ      R0,R3
    000002A8 8B2B                   BF          L1292
            is.c   120    {
            is.c   121            if (car(p) == symbol(ADD)) {
            is.c   122                    p = cdr(p);
    000002AA 8448                   MOV.B       @(8,R4),R0
    000002AC 2008                   TST         R0,R0
    000002AE 8B01                   BF          L1295
    000002B0 A022                   BRA         L1297
    000002B2 5E41                   MOV.L       @(4,R4),R14
    000002B4              L1295:                            
    000002B4 9E16                   MOV.W       L1725,R14  ; H'0570
            is.c   123                    while (iscons(p)) {
    000002B6 A01F                   BRA         L1297
    000002B8 3E6C                   ADD         R6,R14
    000002BA              L1298:                            
            is.c   124                            if (!ispoly_term(car(p), x))
    000002BA 84E8                   MOV.B       @(8,R14),R0
    000002BC 2008                   TST         R0,R0
    000002BE 8F02                   BF/S        L1300
    000002C0 65D3                   MOV         R13,R5
    000002C2 A004                   BRA         L1301
    000002C4 64E2                   MOV.L       @R14,R4
    000002C6              L1300:                            
    000002C6 930D                   MOV.W       L1725,R3   ; H'0570
    000002C8 D208                   MOV.L       L1725+8,R2 ; _symtab
    000002CA 6422                   MOV.L       @R2,R4
    000002CC 343C                   ADD         R3,R4
    000002CE              L1301:                            
    000002CE B021                   BSR         _ispoly_term
    000002D0 0009                   NOP
    000002D2 2008                   TST         R0,R0
    000002D4 8B01                   BF          L1299
            is.c   125                                    return 0;
    000002D6 A019                   BRA         L1302
    000002D8 E000                   MOV         #0,R0
    000002DA              L1299:                            
            is.c   126                            p = cdr(p);
    000002DA 84E8                   MOV.B       @(8,R14),R0
    000002DC 2008                   TST         R0,R0
    000002DE 8B07                   BF          L1303
    000002E0 A00A                   BRA         L1297
    000002E2 5EE1                   MOV.L       @(4,R14),R14
    000002E4              L1725:                            
    000002E4 0570                   .DATA.W     H'0570
    000002E6 0000                   .DATA.W     0
    000002E8 <00000000>             .DATA.L     _find
    000002EC <00000000>             .DATA.L     _symtab
    000002F0              L1303:                            
    000002F0 9363                   MOV.W       L1726,R3   ; H'0570
    000002F2 D233                   MOV.L       L1726+6,R2 ; _symtab
    000002F4 6E22                   MOV.L       @R2,R14
    000002F6 3E3C                   ADD         R3,R14
    000002F8              L1297:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002F8 84E8                   MOV.B       @(8,R14),R0
    000002FA 2008                   TST         R0,R0
    000002FC 89DD                   BT          L1298
            is.c   127                    }
            is.c   128                    return 1;
    000002FE A005                   BRA         L1302
    00000300 E001                   MOV         #1,R0
    00000302              L1292:                            
            is.c   129            } else
            is.c   130                    return ispoly_term(p, x);
    00000302 65D3                   MOV         R13,R5
    00000304 4F26                   LDS.L       @R15+,PR
    00000306 6DF6                   MOV.L       @R15+,R13
    00000308 A004                   BRA         _ispoly_term
    0000030A 6EF6                   MOV.L       @R15+,R14
    0000030C              L1302:                            
            is.c   131    }
    0000030C 4F26                   LDS.L       @R15+,PR
    0000030E 6DF6                   MOV.L       @R15+,R13
    00000310 000B                   RTS
    00000312 6EF6                   MOV.L       @R15+,R14
            is.c   132    
            is.c   133    int
            is.c   134    ispoly_term(U *p, U *x)
    00000314              _ispoly_term:                    ; function: ispoly_term
                                                           ; frame size=12
    00000314 2FE6                   MOV.L       R14,@-R15
    00000316 2FD6                   MOV.L       R13,@-R15
    00000318 4F22                   STS.L       PR,@-R15
    0000031A 6D53                   MOV         R5,R13
    0000031C 8448                   MOV.B       @(8,R4),R0
    0000031E D528                   MOV.L       L1726+6,R5 ; _symtab
    00000320 2008                   TST         R0,R0
    00000322 8F02                   BF/S        L1307
    00000324 6652                   MOV.L       @R5,R6
    00000326 A003                   BRA         L1308
    00000328 6342                   MOV.L       @R4,R3
    0000032A              L1307:                            
    0000032A 9246                   MOV.W       L1726,R2   ; H'0570
    0000032C 6352                   MOV.L       @R5,R3
    0000032E 332C                   ADD         R2,R3
    00000330              L1308:                            
    00000330 9044                   MOV.W       L1726+2,R0 ; H'0384
    00000332 306C                   ADD         R6,R0
    00000334 3300                   CMP/EQ      R0,R3
    00000336 8B25                   BF          L1306
            is.c   135    {
            is.c   136            if (car(p) == symbol(MULTIPLY)) {
            is.c   137                    p = cdr(p);
    00000338 8448                   MOV.B       @(8,R4),R0
    0000033A 2008                   TST         R0,R0
    0000033C 8B01                   BF          L1309
    0000033E A01C                   BRA         L1311
    00000340 5E41                   MOV.L       @(4,R4),R14
    00000342              L1309:                            
    00000342 9E3A                   MOV.W       L1726,R14  ; H'0570
            is.c   138                    while (iscons(p)) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000344 A019                   BRA         L1311
    00000346 3E6C                   ADD         R6,R14
    00000348              L1312:                            
            is.c   139                            if (!ispoly_factor(car(p), x))
    00000348 84E8                   MOV.B       @(8,R14),R0
    0000034A 2008                   TST         R0,R0
    0000034C 8F02                   BF/S        L1314
    0000034E 65D3                   MOV         R13,R5
    00000350 A004                   BRA         L1315
    00000352 64E2                   MOV.L       @R14,R4
    00000354              L1314:                            
    00000354 9331                   MOV.W       L1726,R3   ; H'0570
    00000356 D21A                   MOV.L       L1726+6,R2 ; _symtab
    00000358 6422                   MOV.L       @R2,R4
    0000035A 343C                   ADD         R3,R4
    0000035C              L1315:                            
    0000035C B01B                   BSR         _ispoly_factor
    0000035E 0009                   NOP
    00000360 2008                   TST         R0,R0
    00000362 8B01                   BF          L1313
            is.c   140                                    return 0;
    00000364 A013                   BRA         L1316
    00000366 E000                   MOV         #0,R0
    00000368              L1313:                            
            is.c   141                            p = cdr(p);
    00000368 84E8                   MOV.B       @(8,R14),R0
    0000036A 2008                   TST         R0,R0
    0000036C 8B01                   BF          L1317
    0000036E A004                   BRA         L1311
    00000370 5EE1                   MOV.L       @(4,R14),R14
    00000372              L1317:                            
    00000372 9322                   MOV.W       L1726,R3   ; H'0570
    00000374 D212                   MOV.L       L1726+6,R2 ; _symtab
    00000376 6E22                   MOV.L       @R2,R14
    00000378 3E3C                   ADD         R3,R14
    0000037A              L1311:                            
    0000037A 84E8                   MOV.B       @(8,R14),R0
    0000037C 2008                   TST         R0,R0
    0000037E 89E3                   BT          L1312
            is.c   142                    }
            is.c   143                    return 1;
    00000380 A005                   BRA         L1316
    00000382 E001                   MOV         #1,R0
    00000384              L1306:                            
            is.c   144            } else
            is.c   145                    return ispoly_factor(p, x);
    00000384 4F26                   LDS.L       @R15+,PR
    00000386 65D3                   MOV         R13,R5
    00000388 6DF6                   MOV.L       @R15+,R13
    0000038A A004                   BRA         _ispoly_factor
    0000038C 6EF6                   MOV.L       @R15+,R14
    0000038E              L1316:                            
            is.c   146    }
    0000038E 4F26                   LDS.L       @R15+,PR
    00000390 6DF6                   MOV.L       @R15+,R13
    00000392 000B                   RTS
    00000394 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            is.c   147    
            is.c   148    int
            is.c   149    ispoly_factor(U *p, U *x)
    00000396              _ispoly_factor:                  ; function: ispoly_factor
                                                           ; frame size=16
    00000396 2FE6                   MOV.L       R14,@-R15
    00000398 2FD6                   MOV.L       R13,@-R15
    0000039A 6E43                   MOV         R4,R14
            is.c   150    {
            is.c   151            if (equal(p, x))
    0000039C D309                   MOV.L       L1726+10,R3; _equal
    0000039E 2FC6                   MOV.L       R12,@-R15
    000003A0 4F22                   STS.L       PR,@-R15
    000003A2 430B                   JSR         @R3
    000003A4 6C53                   MOV         R5,R12
    000003A6 2008                   TST         R0,R0
    000003A8 8901                   BT          L1727
    000003AA A087                   BRA         L1152
    000003AC 0009                   NOP
    000003AE              L1727:                            
            is.c   152                    return 1;
            is.c   153            if (car(p) == symbol(POWER) && equal(cadr(p), x)) {
    000003AE DD04                   MOV.L       L1726+6,R13; _symtab
    000003B0 84E8                   MOV.B       @(8,R14),R0
    000003B2 2008                   TST         R0,R0
    000003B4 8B08                   BF          L1323
    000003B6 A00B                   BRA         L1327
    000003B8 63E2                   MOV.L       @R14,R3
    000003BA              L1726:                            
    000003BA 0570                   .DATA.W     H'0570
    000003BC 0384                   .DATA.W     H'0384
    000003BE 0000                   .DATA.W     0
    000003C0 <00000000>             .DATA.L     _symtab
    000003C4 <00000000>             .DATA.L     _equal
    000003C8              L1323:                            
    000003C8 9260                   MOV.W       L1728,R2   ; H'0570
    000003CA D131                   MOV.L       L1728+4,R1 ; _symtab
    000003CC 6312                   MOV.L       @R1,R3
    000003CE 332C                   ADD         R2,R3
    000003D0              L1327:                            
    000003D0 925D                   MOV.W       L1728+2,R2 ; H'03F0
    000003D2 60D2                   MOV.L       @R13,R0
    000003D4 302C                   ADD         R2,R0
    000003D6 3300                   CMP/EQ      R0,R3
    000003D8 8B68                   BF          L1322
    000003DA 84E8                   MOV.B       @(8,R14),R0
    000003DC 2008                   TST         R0,R0
    000003DE 8F02                   BF/S        L1325
    000003E0 65C3                   MOV         R12,R5
    000003E2 A003                   BRA         L1328
    000003E4 54E1                   MOV.L       @(4,R14),R4
    000003E6              L1325:                            
    000003E6 9351                   MOV.W       L1728,R3   ; H'0570
    000003E8 64D2                   MOV.L       @R13,R4
    000003EA 343C                   ADD         R3,R4
    000003EC              L1328:                            
    000003EC 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003EE 2008                   TST         R0,R0
    000003F0 8B09                   BF          L1324
    000003F2 84E8                   MOV.B       @(8,R14),R0
    000003F4 2008                   TST         R0,R0
    000003F6 8B01                   BF          L1326
    000003F8 A003                   BRA         L1329
    000003FA 54E1                   MOV.L       @(4,R14),R4
    000003FC              L1326:                            
    000003FC 9346                   MOV.W       L1728,R3   ; H'0570
    000003FE 64D2                   MOV.L       @R13,R4
    00000400 343C                   ADD         R3,R4
    00000402              L1329:                            
    00000402 A003                   BRA         L1330
    00000404 6442                   MOV.L       @R4,R4
    00000406              L1324:                            
    00000406 9341                   MOV.W       L1728,R3   ; H'0570
    00000408 64D2                   MOV.L       @R13,R4
    0000040A 343C                   ADD         R3,R4
    0000040C              L1330:                            
    0000040C D321                   MOV.L       L1728+8,R3 ; _equal
    0000040E 430B                   JSR         @R3
    00000410 0009                   NOP
    00000412 2008                   TST         R0,R0
    00000414 894A                   BT          L1322
            is.c   154                    if (isposint(caddr(p)))
    00000416 84E8                   MOV.B       @(8,R14),R0
    00000418 2008                   TST         R0,R0
    0000041A 8B01                   BF          L1334
    0000041C A004                   BRA         L1339
    0000041E 54E1                   MOV.L       @(4,R14),R4
    00000420              L1334:                            
    00000420 9334                   MOV.W       L1728,R3   ; H'0570
    00000422 D21B                   MOV.L       L1728+4,R2 ; _symtab
    00000424 6422                   MOV.L       @R2,R4
    00000426 343C                   ADD         R3,R4
    00000428              L1339:                            
    00000428 8448                   MOV.B       @(8,R4),R0
    0000042A 2008                   TST         R0,R0
    0000042C 8B0A                   BF          L1333
    0000042E 84E8                   MOV.B       @(8,R14),R0
    00000430 2008                   TST         R0,R0
    00000432 8B01                   BF          L1335
    00000434 A004                   BRA         L1340
    00000436 54E1                   MOV.L       @(4,R14),R4
    00000438              L1335:                            
    00000438 9328                   MOV.W       L1728,R3   ; H'0570
    0000043A D215                   MOV.L       L1728+4,R2 ; _symtab
    0000043C 6422                   MOV.L       @R2,R4
    0000043E 343C                   ADD         R3,R4
    00000440              L1340:                            
    00000440 A004                   BRA         L1341
    00000442 5441                   MOV.L       @(4,R4),R4
    00000444              L1333:                            
    00000444 9322                   MOV.W       L1728,R3   ; H'0570
    00000446 D212                   MOV.L       L1728+4,R2 ; _symtab
    00000448 6422                   MOV.L       @R2,R4
    0000044A 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000044C              L1341:                            
    0000044C 8448                   MOV.B       @(8,R4),R0
    0000044E 2008                   TST         R0,R0
    00000450 8B22                   BF          L1332
    00000452 84E8                   MOV.B       @(8,R14),R0
    00000454 2008                   TST         R0,R0
    00000456 8B01                   BF          L1337
    00000458 A004                   BRA         L1342
    0000045A 54E1                   MOV.L       @(4,R14),R4
    0000045C              L1337:                            
    0000045C 9316                   MOV.W       L1728,R3   ; H'0570
    0000045E D20C                   MOV.L       L1728+4,R2 ; _symtab
    00000460 6422                   MOV.L       @R2,R4
    00000462 343C                   ADD         R3,R4
    00000464              L1342:                            
    00000464 8448                   MOV.B       @(8,R4),R0
    00000466 2008                   TST         R0,R0
    00000468 8B0A                   BF          L1336
    0000046A 84E8                   MOV.B       @(8,R14),R0
    0000046C 2008                   TST         R0,R0
    0000046E 8B01                   BF          L1338
    00000470 A004                   BRA         L1343
    00000472 54E1                   MOV.L       @(4,R14),R4
    00000474              L1338:                            
    00000474 930A                   MOV.W       L1728,R3   ; H'0570
    00000476 D206                   MOV.L       L1728+4,R2 ; _symtab
    00000478 6422                   MOV.L       @R2,R4
    0000047A 343C                   ADD         R3,R4
    0000047C              L1343:                            
    0000047C A004                   BRA         L1344
    0000047E 5441                   MOV.L       @(4,R4),R4
    00000480              L1336:                            
    00000480 9304                   MOV.W       L1728,R3   ; H'0570
    00000482 D203                   MOV.L       L1728+4,R2 ; _symtab
    00000484 6422                   MOV.L       @R2,R4
    00000486 343C                   ADD         R3,R4
    00000488              L1344:                            
    00000488 A00A                   BRA         L1345
    0000048A 6442                   MOV.L       @R4,R4
    0000048C              L1728:                            
    0000048C 0570                   .DATA.W     H'0570
    0000048E 03F0                   .DATA.W     H'03F0
    00000490 <00000000>             .DATA.L     _symtab
    00000494 <00000000>             .DATA.L     _equal
    00000498              L1332:                            
    00000498 9357                   MOV.W       L1729,R3   ; H'0570
    0000049A D22D                   MOV.L       L1729+6,R2 ; _symtab
    0000049C 6422                   MOV.L       @R2,R4
    0000049E 343C                   ADD         R3,R4
    000004A0              L1345:                            
    000004A0 BECA                   BSR         _isposint
    000004A2 0009                   NOP
    000004A4 2008                   TST         R0,R0
    000004A6 8907                   BT          L1150
    000004A8 A008                   BRA         L1152
    000004AA 0009                   NOP
    000004AC              L1322:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            is.c   155                            return 1;
            is.c   156                    else
            is.c   157                            return 0;
            is.c   158            }
            is.c   159            if (find(p, x))
    000004AC D229                   MOV.L       L1729+10,R2; _find
    000004AE 65C3                   MOV         R12,R5
    000004B0 420B                   JSR         @R2
    000004B2 64E3                   MOV         R14,R4
    000004B4 2008                   TST         R0,R0
    000004B6 8901                   BT          L1152
    000004B8              L1150:
            is.c   160                    return 0;
    000004B8 A001                   BRA         L1321
    000004BA E000                   MOV         #0,R0
    000004BC              L1152:
            is.c   161            else
            is.c   162                    return 1;
    000004BC E001                   MOV         #1,R0
            is.c   163    }
    000004BE              L1321:                            
    000004BE 4F26                   LDS.L       @R15+,PR
    000004C0 6CF6                   MOV.L       @R15+,R12
    000004C2 6DF6                   MOV.L       @R15+,R13
    000004C4 000B                   RTS
    000004C6 6EF6                   MOV.L       @R15+,R14
            is.c   164    
            is.c   165    int
            is.c   166    isnegativeterm(U *p)
    000004C8              _isnegativeterm:                 ; function: isnegativeterm
                                                           ; frame size=12
    000004C8 2FE6                   MOV.L       R14,@-R15
    000004CA 2FD6                   MOV.L       R13,@-R15
    000004CC 4F22                   STS.L       PR,@-R15
            is.c   167    {
            is.c   168            if (isnegativenumber(p))
    000004CE BDD5                   BSR         _isnegativenumber
    000004D0 6E43                   MOV         R4,R14
    000004D2 2008                   TST         R0,R0
    000004D4 8B2A                   BF          L1153
            is.c   169                    return 1;
            is.c   170            else if (car(p) == symbol(MULTIPLY) && isnegativenumber(cadr(p)))
    000004D6 DD1E                   MOV.L       L1729+6,R13; _symtab
    000004D8 84E8                   MOV.B       @(8,R14),R0
    000004DA 2008                   TST         R0,R0
    000004DC 8B01                   BF          L1353
    000004DE A004                   BRA         L1357
    000004E0 63E2                   MOV.L       @R14,R3
    000004E2              L1353:                            
    000004E2 9232                   MOV.W       L1729,R2   ; H'0570
    000004E4 D11A                   MOV.L       L1729+6,R1 ; _symtab
    000004E6 6312                   MOV.L       @R1,R3
    000004E8 332C                   ADD         R2,R3
    000004EA              L1357:                            
    000004EA 922F                   MOV.W       L1729+2,R2 ; H'0384
    000004EC 60D2                   MOV.L       @R13,R0
    000004EE 302C                   ADD         R2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004F0 3300                   CMP/EQ      R0,R3
    000004F2 8B1D                   BF          L1352
    000004F4 84E8                   MOV.B       @(8,R14),R0
    000004F6 2008                   TST         R0,R0
    000004F8 8B01                   BF          L1355
    000004FA A003                   BRA         L1358
    000004FC 54E1                   MOV.L       @(4,R14),R4
    000004FE              L1355:                            
    000004FE 9324                   MOV.W       L1729,R3   ; H'0570
    00000500 64D2                   MOV.L       @R13,R4
    00000502 343C                   ADD         R3,R4
    00000504              L1358:                            
    00000504 8448                   MOV.B       @(8,R4),R0
    00000506 2008                   TST         R0,R0
    00000508 8B09                   BF          L1354
    0000050A 84E8                   MOV.B       @(8,R14),R0
    0000050C 2008                   TST         R0,R0
    0000050E 8B01                   BF          L1356
    00000510 A003                   BRA         L1359
    00000512 54E1                   MOV.L       @(4,R14),R4
    00000514              L1356:                            
    00000514 9319                   MOV.W       L1729,R3   ; H'0570
    00000516 64D2                   MOV.L       @R13,R4
    00000518 343C                   ADD         R3,R4
    0000051A              L1359:                            
    0000051A A003                   BRA         L1360
    0000051C 6442                   MOV.L       @R4,R4
    0000051E              L1354:                            
    0000051E 9314                   MOV.W       L1729,R3   ; H'0570
    00000520 64D2                   MOV.L       @R13,R4
    00000522 343C                   ADD         R3,R4
    00000524              L1360:                            
    00000524 BDAA                   BSR         _isnegativenumber
    00000526 0009                   NOP
    00000528 2008                   TST         R0,R0
    0000052A 8901                   BT          L1352
    0000052C              L1153:
            is.c   171                    return 1;
    0000052C A001                   BRA         L1350
    0000052E E001                   MOV         #1,R0
    00000530              L1352:                            
            is.c   172            else
            is.c   173                    return 0;
    00000530 E000                   MOV         #0,R0
            is.c   174    }
    00000532              L1350:                            
    00000532 4F26                   LDS.L       @R15+,PR
    00000534 6DF6                   MOV.L       @R15+,R13
    00000536 000B                   RTS
    00000538 6EF6                   MOV.L       @R15+,R14
            is.c   175    
            is.c   176    int
            is.c   177    isimaginarynumber(U *p)
    0000053A              _isimaginarynumber:              ; function: isimaginarynumber
                                                           ; frame size=8
    0000053A 2FE6                   MOV.L       R14,@-R15
    0000053C 4F22                   STS.L       PR,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000053E 6E43                   MOV         R4,R14
            is.c   178    {
            is.c   179            if ((car(p) == symbol(MULTIPLY)
            is.c   180            && length(p) == 3
            is.c   181            && isnum(cadr(p))
            is.c   182            && equal(caddr(p), imaginaryunit))
            is.c   183            || equal(p, imaginaryunit))
    00000540 84E8                   MOV.B       @(8,R14),R0
    00000542 2008                   TST         R0,R0
    00000544 8B08                   BF          L1365
    00000546 A00B                   BRA         L1380
    00000548 63E2                   MOV.L       @R14,R3
    0000054A              L1729:                            
    0000054A 0570                   .DATA.W     H'0570
    0000054C 0384                   .DATA.W     H'0384
    0000054E 0000                   .DATA.W     0
    00000550 <00000000>             .DATA.L     _symtab
    00000554 <00000000>             .DATA.L     _find
    00000558              L1365:                            
    00000558 9262                   MOV.W       L1730,R2   ; H'0570
    0000055A D132                   MOV.L       L1730+4,R1 ; _symtab
    0000055C 6312                   MOV.L       @R1,R3
    0000055E 332C                   ADD         R2,R3
    00000560              L1380:                            
    00000560 925F                   MOV.W       L1730+2,R2 ; H'0384
    00000562 D130                   MOV.L       L1730+4,R1 ; _symtab
    00000564 6012                   MOV.L       @R1,R0
    00000566 302C                   ADD         R2,R0
    00000568 3300                   CMP/EQ      R0,R3
    0000056A 8901                   BT          L1731
    0000056C A093                   BRA         L1364
    0000056E 0009                   NOP
    00000570              L1731:                            
    00000570 D12D                   MOV.L       L1730+8,R1 ; _length
    00000572 410B                   JSR         @R1
    00000574 64E3                   MOV         R14,R4
    00000576 8803                   CMP/EQ      #3,R0
    00000578 8901                   BT          L1732
    0000057A A08C                   BRA         L1364
    0000057C 0009                   NOP
    0000057E              L1732:                            
    0000057E 84E8                   MOV.B       @(8,R14),R0
    00000580 2008                   TST         R0,R0
    00000582 8B01                   BF          L1368
    00000584 A004                   BRA         L1381
    00000586 50E1                   MOV.L       @(4,R14),R0
    00000588              L1368:                            
    00000588 934A                   MOV.W       L1730,R3   ; H'0570
    0000058A D226                   MOV.L       L1730+4,R2 ; _symtab
    0000058C 6022                   MOV.L       @R2,R0
    0000058E 303C                   ADD         R3,R0
    00000590              L1381:                            
    00000590 8408                   MOV.B       @(8,R0),R0
    00000592 2008                   TST         R0,R0
    00000594 8B0A                   BF          L1367
    00000596 84E8                   MOV.B       @(8,R14),R0
    00000598 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000059A 8B01                   BF          L1369
    0000059C A004                   BRA         L1382
    0000059E 50E1                   MOV.L       @(4,R14),R0
    000005A0              L1369:                            
    000005A0 933E                   MOV.W       L1730,R3   ; H'0570
    000005A2 D220                   MOV.L       L1730+4,R2 ; _symtab
    000005A4 6022                   MOV.L       @R2,R0
    000005A6 303C                   ADD         R3,R0
    000005A8              L1382:                            
    000005A8 A004                   BRA         L1383
    000005AA 6002                   MOV.L       @R0,R0
    000005AC              L1367:                            
    000005AC 9338                   MOV.W       L1730,R3   ; H'0570
    000005AE D21D                   MOV.L       L1730+4,R2 ; _symtab
    000005B0 6022                   MOV.L       @R2,R0
    000005B2 303C                   ADD         R3,R0
    000005B4              L1383:                            
    000005B4 8408                   MOV.B       @(8,R0),R0
    000005B6 600C                   EXTU.B      R0,R0
    000005B8 8801                   CMP/EQ      #1,R0
    000005BA 891E                   BT          L1366
    000005BC 84E8                   MOV.B       @(8,R14),R0
    000005BE 2008                   TST         R0,R0
    000005C0 8B01                   BF          L1371
    000005C2 A004                   BRA         L1384
    000005C4 50E1                   MOV.L       @(4,R14),R0
    000005C6              L1371:                            
    000005C6 932B                   MOV.W       L1730,R3   ; H'0570
    000005C8 D216                   MOV.L       L1730+4,R2 ; _symtab
    000005CA 6022                   MOV.L       @R2,R0
    000005CC 303C                   ADD         R3,R0
    000005CE              L1384:                            
    000005CE 8408                   MOV.B       @(8,R0),R0
    000005D0 2008                   TST         R0,R0
    000005D2 8B0A                   BF          L1370
    000005D4 84E8                   MOV.B       @(8,R14),R0
    000005D6 2008                   TST         R0,R0
    000005D8 8B01                   BF          L1372
    000005DA A004                   BRA         L1385
    000005DC 50E1                   MOV.L       @(4,R14),R0
    000005DE              L1372:                            
    000005DE 931F                   MOV.W       L1730,R3   ; H'0570
    000005E0 D210                   MOV.L       L1730+4,R2 ; _symtab
    000005E2 6022                   MOV.L       @R2,R0
    000005E4 303C                   ADD         R3,R0
    000005E6              L1385:                            
    000005E6 A004                   BRA         L1386
    000005E8 6002                   MOV.L       @R0,R0
    000005EA              L1370:                            
    000005EA 9319                   MOV.W       L1730,R3   ; H'0570
    000005EC D20D                   MOV.L       L1730+4,R2 ; _symtab
    000005EE 6022                   MOV.L       @R2,R0
    000005F0 303C                   ADD         R3,R0
    000005F2              L1386:                            
    000005F2 8408                   MOV.B       @(8,R0),R0
    000005F4 600C                   EXTU.B      R0,R0
    000005F6 8802                   CMP/EQ      #2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005F8 8B4D                   BF          L1364
    000005FA              L1366:                            
    000005FA D20C                   MOV.L       L1730+12,R2; _imaginaryunit
    000005FC 84E8                   MOV.B       @(8,R14),R0
    000005FE 2008                   TST         R0,R0
    00000600 8F02                   BF/S        L1375
    00000602 6522                   MOV.L       @R2,R5
    00000604 A004                   BRA         L1387
    00000606 54E1                   MOV.L       @(4,R14),R4
    00000608              L1375:                            
    00000608 930A                   MOV.W       L1730,R3   ; H'0570
    0000060A D106                   MOV.L       L1730+4,R1 ; _symtab
    0000060C 6412                   MOV.L       @R1,R4
    0000060E 343C                   ADD         R3,R4
    00000610              L1387:                            
    00000610 8448                   MOV.B       @(8,R4),R0
    00000612 2008                   TST         R0,R0
    00000614 8B12                   BF          L1374
    00000616 84E8                   MOV.B       @(8,R14),R0
    00000618 2008                   TST         R0,R0
    0000061A 8B09                   BF          L1376
    0000061C A00C                   BRA         L1388
    0000061E 54E1                   MOV.L       @(4,R14),R4
    00000620              L1730:                            
    00000620 0570                   .DATA.W     H'0570
    00000622 0384                   .DATA.W     H'0384
    00000624 <00000000>             .DATA.L     _symtab
    00000628 <00000000>             .DATA.L     _length
    0000062C <00000000>             .DATA.L     _imaginaryunit
    00000630              L1376:                            
    00000630 936B                   MOV.W       L1733,R3   ; H'0570
    00000632 D236                   MOV.L       L1733+2,R2 ; _symtab
    00000634 6422                   MOV.L       @R2,R4
    00000636 343C                   ADD         R3,R4
    00000638              L1388:                            
    00000638 A004                   BRA         L1389
    0000063A 5441                   MOV.L       @(4,R4),R4
    0000063C              L1374:                            
    0000063C 9365                   MOV.W       L1733,R3   ; H'0570
    0000063E D233                   MOV.L       L1733+2,R2 ; _symtab
    00000640 6422                   MOV.L       @R2,R4
    00000642 343C                   ADD         R3,R4
    00000644              L1389:                            
    00000644 8448                   MOV.B       @(8,R4),R0
    00000646 2008                   TST         R0,R0
    00000648 8B1C                   BF          L1373
    0000064A 84E8                   MOV.B       @(8,R14),R0
    0000064C 2008                   TST         R0,R0
    0000064E 8B01                   BF          L1378
    00000650 A004                   BRA         L1390
    00000652 54E1                   MOV.L       @(4,R14),R4
    00000654              L1378:                            
    00000654 9359                   MOV.W       L1733,R3   ; H'0570
    00000656 D22D                   MOV.L       L1733+2,R2 ; _symtab
    00000658 6422                   MOV.L       @R2,R4
    0000065A 343C                   ADD         R3,R4
    0000065C              L1390:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000065C 8448                   MOV.B       @(8,R4),R0
    0000065E 2008                   TST         R0,R0
    00000660 8B0A                   BF          L1377
    00000662 84E8                   MOV.B       @(8,R14),R0
    00000664 2008                   TST         R0,R0
    00000666 8B01                   BF          L1379
    00000668 A004                   BRA         L1391
    0000066A 54E1                   MOV.L       @(4,R14),R4
    0000066C              L1379:                            
    0000066C 934D                   MOV.W       L1733,R3   ; H'0570
    0000066E D227                   MOV.L       L1733+2,R2 ; _symtab
    00000670 6422                   MOV.L       @R2,R4
    00000672 343C                   ADD         R3,R4
    00000674              L1391:                            
    00000674 A004                   BRA         L1392
    00000676 5441                   MOV.L       @(4,R4),R4
    00000678              L1377:                            
    00000678 9347                   MOV.W       L1733,R3   ; H'0570
    0000067A D224                   MOV.L       L1733+2,R2 ; _symtab
    0000067C 6422                   MOV.L       @R2,R4
    0000067E 343C                   ADD         R3,R4
    00000680              L1392:                            
    00000680 A004                   BRA         L1393
    00000682 6442                   MOV.L       @R4,R4
    00000684              L1373:                            
    00000684 9341                   MOV.W       L1733,R3   ; H'0570
    00000686 D221                   MOV.L       L1733+2,R2 ; _symtab
    00000688 6422                   MOV.L       @R2,R4
    0000068A 343C                   ADD         R3,R4
    0000068C              L1393:                            
    0000068C D320                   MOV.L       L1733+6,R3 ; _equal
    0000068E 430B                   JSR         @R3
    00000690 0009                   NOP
    00000692 2008                   TST         R0,R0
    00000694 8B06                   BF          L1363
    00000696              L1364:                            
    00000696 D31F                   MOV.L       L1733+10,R3; _imaginaryunit
    00000698 D21D                   MOV.L       L1733+6,R2 ; _equal
    0000069A 6532                   MOV.L       @R3,R5
    0000069C 420B                   JSR         @R2
    0000069E 64E3                   MOV         R14,R4
    000006A0 2008                   TST         R0,R0
    000006A2 8903                   BT          L1362
    000006A4              L1363:                            
            is.c   184                    return 1;
    000006A4 4F26                   LDS.L       @R15+,PR
    000006A6 E001                   MOV         #1,R0
    000006A8 000B                   RTS
    000006AA 6EF6                   MOV.L       @R15+,R14
    000006AC              L1362:                            
            is.c   185            else 
            is.c   186    
            is.c   187                    return 0;
    000006AC E000                   MOV         #0,R0
            is.c   188    }
    000006AE              L1394:                            
    000006AE 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006B0 000B                   RTS
    000006B2 6EF6                   MOV.L       @R15+,R14
            is.c   189    
            is.c   190    int
            is.c   191    iscomplexnumber(U *p)
    000006B4              _iscomplexnumber:                ; function: iscomplexnumber
                                                           ; frame size=8
    000006B4 2FE6                   MOV.L       R14,@-R15
    000006B6 6E43                   MOV         R4,R14
    000006B8 4F22                   STS.L       PR,@-R15
            is.c   192    {
            is.c   193            if ((car(p) == symbol(ADD)
            is.c   194            && length(p) == 3
            is.c   195            && isnum(cadr(p))
            is.c   196            && isimaginarynumber(caddr(p)))
            is.c   197            || isimaginarynumber(p))
    000006BA 84E8                   MOV.B       @(8,R14),R0
    000006BC 2008                   TST         R0,R0
    000006BE 8B01                   BF          L1399
    000006C0 A004                   BRA         L1414
    000006C2 63E2                   MOV.L       @R14,R3
    000006C4              L1399:                            
    000006C4 9221                   MOV.W       L1733,R2   ; H'0570
    000006C6 D111                   MOV.L       L1733+2,R1 ; _symtab
    000006C8 6312                   MOV.L       @R1,R3
    000006CA 332C                   ADD         R2,R3
    000006CC              L1414:                            
    000006CC D00F                   MOV.L       L1733+2,R0 ; _symtab
    000006CE 6202                   MOV.L       @R0,R2
    000006D0 720C                   ADD         #12,R2
    000006D2 3320                   CMP/EQ      R2,R3
    000006D4 8901                   BT          L1734
    000006D6 A095                   BRA         L1398
    000006D8 0009                   NOP
    000006DA              L1734:                            
    000006DA D20F                   MOV.L       L1733+14,R2; _length
    000006DC 420B                   JSR         @R2
    000006DE 64E3                   MOV         R14,R4
    000006E0 8803                   CMP/EQ      #3,R0
    000006E2 8901                   BT          L1735
    000006E4 A08E                   BRA         L1398
    000006E6 0009                   NOP
    000006E8              L1735:                            
    000006E8 84E8                   MOV.B       @(8,R14),R0
    000006EA 2008                   TST         R0,R0
    000006EC 8B01                   BF          L1402
    000006EE A004                   BRA         L1415
    000006F0 50E1                   MOV.L       @(4,R14),R0
    000006F2              L1402:                            
    000006F2 930A                   MOV.W       L1733,R3   ; H'0570
    000006F4 D205                   MOV.L       L1733+2,R2 ; _symtab
    000006F6 6022                   MOV.L       @R2,R0
    000006F8 303C                   ADD         R3,R0
    000006FA              L1415:                            
    000006FA 8408                   MOV.B       @(8,R0),R0
    000006FC 2008                   TST         R0,R0
    000006FE 8B13                   BF          L1401




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000700 84E8                   MOV.B       @(8,R14),R0
    00000702 2008                   TST         R0,R0
    00000704 8B0A                   BF          L1403
    00000706 A00D                   BRA         L1416
    00000708 50E1                   MOV.L       @(4,R14),R0
    0000070A              L1733:                            
    0000070A 0570                   .DATA.W     H'0570
    0000070C <00000000>             .DATA.L     _symtab
    00000710 <00000000>             .DATA.L     _equal
    00000714 <00000000>             .DATA.L     _imaginaryunit
    00000718 <00000000>             .DATA.L     _length
    0000071C              L1403:                            
    0000071C 9360                   MOV.W       L1736,R3   ; H'0570
    0000071E D231                   MOV.L       L1736+4,R2 ; _symtab
    00000720 6022                   MOV.L       @R2,R0
    00000722 303C                   ADD         R3,R0
    00000724              L1416:                            
    00000724 A004                   BRA         L1417
    00000726 6002                   MOV.L       @R0,R0
    00000728              L1401:                            
    00000728 935A                   MOV.W       L1736,R3   ; H'0570
    0000072A D22E                   MOV.L       L1736+4,R2 ; _symtab
    0000072C 6022                   MOV.L       @R2,R0
    0000072E 303C                   ADD         R3,R0
    00000730              L1417:                            
    00000730 8408                   MOV.B       @(8,R0),R0
    00000732 600C                   EXTU.B      R0,R0
    00000734 8801                   CMP/EQ      #1,R0
    00000736 891E                   BT          L1400
    00000738 84E8                   MOV.B       @(8,R14),R0
    0000073A 2008                   TST         R0,R0
    0000073C 8B01                   BF          L1405
    0000073E A004                   BRA         L1418
    00000740 50E1                   MOV.L       @(4,R14),R0
    00000742              L1405:                            
    00000742 934D                   MOV.W       L1736,R3   ; H'0570
    00000744 D227                   MOV.L       L1736+4,R2 ; _symtab
    00000746 6022                   MOV.L       @R2,R0
    00000748 303C                   ADD         R3,R0
    0000074A              L1418:                            
    0000074A 8408                   MOV.B       @(8,R0),R0
    0000074C 2008                   TST         R0,R0
    0000074E 8B0A                   BF          L1404
    00000750 84E8                   MOV.B       @(8,R14),R0
    00000752 2008                   TST         R0,R0
    00000754 8B01                   BF          L1406
    00000756 A004                   BRA         L1419
    00000758 50E1                   MOV.L       @(4,R14),R0
    0000075A              L1406:                            
    0000075A 9341                   MOV.W       L1736,R3   ; H'0570
    0000075C D221                   MOV.L       L1736+4,R2 ; _symtab
    0000075E 6022                   MOV.L       @R2,R0
    00000760 303C                   ADD         R3,R0
    00000762              L1419:                            
    00000762 A004                   BRA         L1420
    00000764 6002                   MOV.L       @R0,R0
    00000766              L1404:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000766 933B                   MOV.W       L1736,R3   ; H'0570
    00000768 D21E                   MOV.L       L1736+4,R2 ; _symtab
    0000076A 6022                   MOV.L       @R2,R0
    0000076C 303C                   ADD         R3,R0
    0000076E              L1420:                            
    0000076E 8408                   MOV.B       @(8,R0),R0
    00000770 600C                   EXTU.B      R0,R0
    00000772 8802                   CMP/EQ      #2,R0
    00000774 8B46                   BF          L1398
    00000776              L1400:                            
    00000776 84E8                   MOV.B       @(8,R14),R0
    00000778 2008                   TST         R0,R0
    0000077A 8B01                   BF          L1409
    0000077C A004                   BRA         L1421
    0000077E 54E1                   MOV.L       @(4,R14),R4
    00000780              L1409:                            
    00000780 932E                   MOV.W       L1736,R3   ; H'0570
    00000782 D218                   MOV.L       L1736+4,R2 ; _symtab
    00000784 6422                   MOV.L       @R2,R4
    00000786 343C                   ADD         R3,R4
    00000788              L1421:                            
    00000788 8448                   MOV.B       @(8,R4),R0
    0000078A 2008                   TST         R0,R0
    0000078C 8B0A                   BF          L1408
    0000078E 84E8                   MOV.B       @(8,R14),R0
    00000790 2008                   TST         R0,R0
    00000792 8B01                   BF          L1410
    00000794 A004                   BRA         L1422
    00000796 54E1                   MOV.L       @(4,R14),R4
    00000798              L1410:                            
    00000798 9322                   MOV.W       L1736,R3   ; H'0570
    0000079A D212                   MOV.L       L1736+4,R2 ; _symtab
    0000079C 6422                   MOV.L       @R2,R4
    0000079E 343C                   ADD         R3,R4
    000007A0              L1422:                            
    000007A0 A004                   BRA         L1423
    000007A2 5441                   MOV.L       @(4,R4),R4
    000007A4              L1408:                            
    000007A4 931C                   MOV.W       L1736,R3   ; H'0570
    000007A6 D20F                   MOV.L       L1736+4,R2 ; _symtab
    000007A8 6422                   MOV.L       @R2,R4
    000007AA 343C                   ADD         R3,R4
    000007AC              L1423:                            
    000007AC 8448                   MOV.B       @(8,R4),R0
    000007AE 2008                   TST         R0,R0
    000007B0 8B20                   BF          L1407
    000007B2 84E8                   MOV.B       @(8,R14),R0
    000007B4 2008                   TST         R0,R0
    000007B6 8B01                   BF          L1412
    000007B8 A004                   BRA         L1424
    000007BA 54E1                   MOV.L       @(4,R14),R4
    000007BC              L1412:                            
    000007BC 9310                   MOV.W       L1736,R3   ; H'0570
    000007BE D209                   MOV.L       L1736+4,R2 ; _symtab
    000007C0 6422                   MOV.L       @R2,R4
    000007C2 343C                   ADD         R3,R4
    000007C4              L1424:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007C4 8448                   MOV.B       @(8,R4),R0
    000007C6 2008                   TST         R0,R0
    000007C8 8B0E                   BF          L1411
    000007CA 84E8                   MOV.B       @(8,R14),R0
    000007CC 2008                   TST         R0,R0
    000007CE 8B01                   BF          L1413
    000007D0 A004                   BRA         L1425
    000007D2 54E1                   MOV.L       @(4,R14),R4
    000007D4              L1413:                            
    000007D4 9304                   MOV.W       L1736,R3   ; H'0570
    000007D6 D203                   MOV.L       L1736+4,R2 ; _symtab
    000007D8 6422                   MOV.L       @R2,R4
    000007DA 343C                   ADD         R3,R4
    000007DC              L1425:                            
    000007DC A008                   BRA         L1426
    000007DE 5441                   MOV.L       @(4,R4),R4
    000007E0              L1736:                            
    000007E0 0570                   .DATA.W     H'0570
    000007E2 0000                   .DATA.W     0
    000007E4 <00000000>             .DATA.L     _symtab
    000007E8              L1411:                            
    000007E8 936E                   MOV.W       L1737,R3   ; H'0570
    000007EA D238                   MOV.L       L1737+4,R2 ; _symtab
    000007EC 6422                   MOV.L       @R2,R4
    000007EE 343C                   ADD         R3,R4
    000007F0              L1426:                            
    000007F0 A004                   BRA         L1427
    000007F2 6442                   MOV.L       @R4,R4
    000007F4              L1407:                            
    000007F4 9368                   MOV.W       L1737,R3   ; H'0570
    000007F6 D235                   MOV.L       L1737+4,R2 ; _symtab
    000007F8 6422                   MOV.L       @R2,R4
    000007FA 343C                   ADD         R3,R4
    000007FC              L1427:                            
    000007FC BE9D                   BSR         _isimaginarynumber
    000007FE 0009                   NOP
    00000800 2008                   TST         R0,R0
    00000802 8B03                   BF          L1397
    00000804              L1398:                            
    00000804 BE99                   BSR         _isimaginarynumber
    00000806 64E3                   MOV         R14,R4
    00000808 2008                   TST         R0,R0
    0000080A 8903                   BT          L1396
    0000080C              L1397:                            
            is.c   198                    return 1;
    0000080C 4F26                   LDS.L       @R15+,PR
    0000080E E001                   MOV         #1,R0
    00000810 000B                   RTS
    00000812 6EF6                   MOV.L       @R15+,R14
    00000814              L1396:                            
            is.c   199            else
            is.c   200                    return 0;
    00000814 E000                   MOV         #0,R0
            is.c   201    }
    00000816              L1428:                            
    00000816 4F26                   LDS.L       @R15+,PR
    00000818 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000081A 6EF6                   MOV.L       @R15+,R14
            is.c   202    
            is.c   203    int
            is.c   204    iseveninteger(U *p)
    0000081C              _iseveninteger:                  ; function: iseveninteger
                                                           ; frame size=8
    0000081C 4F22                   STS.L       PR,@-R15
    0000081E 7FFC                   ADD         #-4,R15
            is.c   205    {
            is.c   206            if (isinteger(p) && (p->u.q.a[0] & 1) == 0)
    00000820 BCCA                   BSR         _isinteger
    00000822 2F42                   MOV.L       R4,@R15
    00000824 2008                   TST         R0,R0
    00000826 8908                   BT          L1430
    00000828 60F2                   MOV.L       @R15,R0
    0000082A 6002                   MOV.L       @R0,R0
    0000082C 6002                   MOV.L       @R0,R0
    0000082E C801                   TST         #1,R0
    00000830 8B03                   BF          L1430
            is.c   207                    return 1;
    00000832 7F04                   ADD         #4,R15
    00000834 4F26                   LDS.L       @R15+,PR
    00000836 000B                   RTS
    00000838 E001                   MOV         #1,R0
    0000083A              L1430:                            
            is.c   208            else
            is.c   209                    return 0;
    0000083A E000                   MOV         #0,R0
            is.c   210    }
    0000083C              L1431:                            
    0000083C 7F04                   ADD         #4,R15
    0000083E 4F26                   LDS.L       @R15+,PR
    00000840 000B                   RTS
    00000842 0009                   NOP
            is.c   211    
            is.c   212    int
            is.c   213    isnegative(U *p)
    00000844              _isnegative:                     ; function: isnegative
                                                           ; frame size=12
    00000844 2FE6                   MOV.L       R14,@-R15
    00000846 6E43                   MOV         R4,R14
    00000848 2FD6                   MOV.L       R13,@-R15
    0000084A 4F22                   STS.L       PR,@-R15
            is.c   214    {
            is.c   215            if (car(p) == symbol(ADD) && isnegativeterm(cadr(p)))
    0000084C DD1F                   MOV.L       L1737+4,R13; _symtab
    0000084E 84E8                   MOV.B       @(8,R14),R0
    00000850 2008                   TST         R0,R0
    00000852 8B01                   BF          L1434
    00000854 A004                   BRA         L1438
    00000856 63E2                   MOV.L       @R14,R3
    00000858              L1434:                            
    00000858 9236                   MOV.W       L1737,R2   ; H'0570
    0000085A D11C                   MOV.L       L1737+4,R1 ; _symtab
    0000085C 6312                   MOV.L       @R1,R3
    0000085E 332C                   ADD         R2,R3
    00000860              L1438:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000860 62D2                   MOV.L       @R13,R2
    00000862 720C                   ADD         #12,R2
    00000864 3320                   CMP/EQ      R2,R3
    00000866 8B1B                   BF          L1433
    00000868 84E8                   MOV.B       @(8,R14),R0
    0000086A 2008                   TST         R0,R0
    0000086C 8B01                   BF          L1436
    0000086E A003                   BRA         L1439
    00000870 54E1                   MOV.L       @(4,R14),R4
    00000872              L1436:                            
    00000872 9329                   MOV.W       L1737,R3   ; H'0570
    00000874 64D2                   MOV.L       @R13,R4
    00000876 343C                   ADD         R3,R4
    00000878              L1439:                            
    00000878 8448                   MOV.B       @(8,R4),R0
    0000087A 2008                   TST         R0,R0
    0000087C 8B09                   BF          L1435
    0000087E 84E8                   MOV.B       @(8,R14),R0
    00000880 2008                   TST         R0,R0
    00000882 8B01                   BF          L1437
    00000884 A003                   BRA         L1440
    00000886 54E1                   MOV.L       @(4,R14),R4
    00000888              L1437:                            
    00000888 931E                   MOV.W       L1737,R3   ; H'0570
    0000088A 64D2                   MOV.L       @R13,R4
    0000088C 343C                   ADD         R3,R4
    0000088E              L1440:                            
    0000088E A003                   BRA         L1441
    00000890 6442                   MOV.L       @R4,R4
    00000892              L1435:                            
    00000892 9319                   MOV.W       L1737,R3   ; H'0570
    00000894 64D2                   MOV.L       @R13,R4
    00000896 343C                   ADD         R3,R4
    00000898              L1441:                            
    00000898 BE16                   BSR         _isnegativeterm
    0000089A 0009                   NOP
    0000089C 2008                   TST         R0,R0
    0000089E 8B03                   BF          L1154
    000008A0              L1433:                            
            is.c   216                    return 1;
            is.c   217            else if (isnegativeterm(p))
    000008A0 BE12                   BSR         _isnegativeterm
    000008A2 64E3                   MOV         R14,R4
    000008A4 2008                   TST         R0,R0
    000008A6 8901                   BT          L1444
    000008A8              L1154:
            is.c   218                    return 1;
    000008A8 A001                   BRA         L1442
    000008AA E001                   MOV         #1,R0
    000008AC              L1444:                            
            is.c   219            else
            is.c   220                    return 0;
    000008AC E000                   MOV         #0,R0
            is.c   221    }
    000008AE              L1442:                            
    000008AE 4F26                   LDS.L       @R15+,PR
    000008B0 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008B2 000B                   RTS
    000008B4 6EF6                   MOV.L       @R15+,R14
            is.c   222    
            is.c   223    // returns 1 if there's a symbol somewhere
            is.c   224    
            is.c   225    int
            is.c   226    issymbolic(U *p)
    000008B6              _issymbolic:                     ; function: issymbolic
                                                           ; frame size=8
    000008B6 2FE6                   MOV.L       R14,@-R15
    000008B8 4F22                   STS.L       PR,@-R15
    000008BA 6E43                   MOV         R4,R14
            is.c   227    {
            is.c   228            if (issymbol(p))
    000008BC 84E8                   MOV.B       @(8,R14),R0
    000008BE 600C                   EXTU.B      R0,R0
    000008C0 8805                   CMP/EQ      #5,R0
    000008C2 8910                   BT          L1155
            is.c   229                    return 1;
            is.c   230            else {
            is.c   231                    while (iscons(p)) {
    000008C4 A01C                   BRA         L1449
    000008C6 0009                   NOP
    000008C8              L1737:                            
    000008C8 0570                   .DATA.W     H'0570
    000008CA 0000                   .DATA.W     0
    000008CC <00000000>             .DATA.L     _symtab
    000008D0              L1450:                            
            is.c   232                            if (issymbolic(car(p)))
    000008D0 8B01                   BF          L1452
    000008D2 A004                   BRA         L1453
    000008D4 64E2                   MOV.L       @R14,R4
    000008D6              L1452:                            
    000008D6 9353                   MOV.W       L1738,R3   ; H'0570
    000008D8 D22A                   MOV.L       L1738+4,R2 ; _symtab
    000008DA 6422                   MOV.L       @R2,R4
    000008DC 343C                   ADD         R3,R4
    000008DE              L1453:                            
    000008DE BFEA                   BSR         _issymbolic
    000008E0 0009                   NOP
    000008E2 2008                   TST         R0,R0
    000008E4 8903                   BT          L1451
    000008E6              L1155:
            is.c   233                                    return 1;
    000008E6 E001                   MOV         #1,R0
    000008E8 4F26                   LDS.L       @R15+,PR
    000008EA 000B                   RTS
    000008EC 6EF6                   MOV.L       @R15+,R14
    000008EE              L1451:                            
            is.c   234                            p = cdr(p);
    000008EE 84E8                   MOV.B       @(8,R14),R0
    000008F0 2008                   TST         R0,R0
    000008F2 8B01                   BF          L1454
    000008F4 A004                   BRA         L1449
    000008F6 5EE1                   MOV.L       @(4,R14),R14
    000008F8              L1454:                            
    000008F8 9342                   MOV.W       L1738,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008FA D222                   MOV.L       L1738+4,R2 ; _symtab
    000008FC 6E22                   MOV.L       @R2,R14
    000008FE 3E3C                   ADD         R3,R14
    00000900              L1449:                            
    00000900 84E8                   MOV.B       @(8,R14),R0
    00000902 2008                   TST         R0,R0
    00000904 89E4                   BT          L1450
            is.c   235                    }
            is.c   236                    return 0;
    00000906 E000                   MOV         #0,R0
            is.c   237            }
            is.c   238    }
    00000908              L1447:                            
    00000908 4F26                   LDS.L       @R15+,PR
    0000090A 000B                   RTS
    0000090C 6EF6                   MOV.L       @R15+,R14
            is.c   239    
            is.c   240    // i.e. 2, 2^3, etc.
            is.c   241    
            is.c   242    int
            is.c   243    isintegerfactor(U *p)
    0000090E              _isintegerfactor:                ; function: isintegerfactor
                                                           ; frame size=8
    0000090E 2FE6                   MOV.L       R14,@-R15
    00000910 4F22                   STS.L       PR,@-R15
            is.c   244    {
            is.c   245            if (isinteger(p) || car(p) == symbol(POWER)
            is.c   246            && isinteger(cadr(p))
            is.c   247            && isinteger(caddr(p)))
    00000912 BC51                   BSR         _isinteger
    00000914 6E43                   MOV         R4,R14
    00000916 2008                   TST         R0,R0
    00000918 8B74                   BF          L1457
    0000091A 84E8                   MOV.B       @(8,R14),R0
    0000091C 2008                   TST         R0,R0
    0000091E 8B01                   BF          L1458
    00000920 A004                   BRA         L1469
    00000922 63E2                   MOV.L       @R14,R3
    00000924              L1458:                            
    00000924 922C                   MOV.W       L1738,R2   ; H'0570
    00000926 D117                   MOV.L       L1738+4,R1 ; _symtab
    00000928 6312                   MOV.L       @R1,R3
    0000092A 332C                   ADD         R2,R3
    0000092C              L1469:                            
    0000092C 9229                   MOV.W       L1738+2,R2 ; H'03F0
    0000092E D115                   MOV.L       L1738+4,R1 ; _symtab
    00000930 6012                   MOV.L       @R1,R0
    00000932 302C                   ADD         R2,R0
    00000934 3300                   CMP/EQ      R0,R3
    00000936 8B69                   BF          L1456
    00000938 84E8                   MOV.B       @(8,R14),R0
    0000093A 2008                   TST         R0,R0
    0000093C 8B01                   BF          L1460
    0000093E A004                   BRA         L1470
    00000940 54E1                   MOV.L       @(4,R14),R4
    00000942              L1460:                            
    00000942 931D                   MOV.W       L1738,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000944 D10F                   MOV.L       L1738+4,R1 ; _symtab
    00000946 6412                   MOV.L       @R1,R4
    00000948 343C                   ADD         R3,R4
    0000094A              L1470:                            
    0000094A 8448                   MOV.B       @(8,R4),R0
    0000094C 2008                   TST         R0,R0
    0000094E 8B0A                   BF          L1459
    00000950 84E8                   MOV.B       @(8,R14),R0
    00000952 2008                   TST         R0,R0
    00000954 8B01                   BF          L1461
    00000956 A004                   BRA         L1471
    00000958 54E1                   MOV.L       @(4,R14),R4
    0000095A              L1461:                            
    0000095A 9311                   MOV.W       L1738,R3   ; H'0570
    0000095C D209                   MOV.L       L1738+4,R2 ; _symtab
    0000095E 6422                   MOV.L       @R2,R4
    00000960 343C                   ADD         R3,R4
    00000962              L1471:                            
    00000962 A004                   BRA         L1472
    00000964 6442                   MOV.L       @R4,R4
    00000966              L1459:                            
    00000966 930B                   MOV.W       L1738,R3   ; H'0570
    00000968 D206                   MOV.L       L1738+4,R2 ; _symtab
    0000096A 6422                   MOV.L       @R2,R4
    0000096C 343C                   ADD         R3,R4
    0000096E              L1472:                            
    0000096E BC23                   BSR         _isinteger
    00000970 0009                   NOP
    00000972 2008                   TST         R0,R0
    00000974 894A                   BT          L1456
    00000976 84E8                   MOV.B       @(8,R14),R0
    00000978 2008                   TST         R0,R0
    0000097A 8B05                   BF          L1464
    0000097C A008                   BRA         L1473
    0000097E 54E1                   MOV.L       @(4,R14),R4
    00000980              L1738:                            
    00000980 0570                   .DATA.W     H'0570
    00000982 03F0                   .DATA.W     H'03F0
    00000984 <00000000>             .DATA.L     _symtab
    00000988              L1464:                            
    00000988 935C                   MOV.W       L1739,R3   ; H'0570
    0000098A D22F                   MOV.L       L1739+4,R2 ; _symtab
    0000098C 6422                   MOV.L       @R2,R4
    0000098E 343C                   ADD         R3,R4
    00000990              L1473:                            
    00000990 8448                   MOV.B       @(8,R4),R0
    00000992 2008                   TST         R0,R0
    00000994 8B0A                   BF          L1463
    00000996 84E8                   MOV.B       @(8,R14),R0
    00000998 2008                   TST         R0,R0
    0000099A 8B01                   BF          L1465
    0000099C A004                   BRA         L1474
    0000099E 54E1                   MOV.L       @(4,R14),R4
    000009A0              L1465:                            
    000009A0 9350                   MOV.W       L1739,R3   ; H'0570
    000009A2 D229                   MOV.L       L1739+4,R2 ; _symtab
    000009A4 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009A6 343C                   ADD         R3,R4
    000009A8              L1474:                            
    000009A8 A004                   BRA         L1475
    000009AA 5441                   MOV.L       @(4,R4),R4
    000009AC              L1463:                            
    000009AC 934A                   MOV.W       L1739,R3   ; H'0570
    000009AE D226                   MOV.L       L1739+4,R2 ; _symtab
    000009B0 6422                   MOV.L       @R2,R4
    000009B2 343C                   ADD         R3,R4
    000009B4              L1475:                            
    000009B4 8448                   MOV.B       @(8,R4),R0
    000009B6 2008                   TST         R0,R0
    000009B8 8B1C                   BF          L1462
    000009BA 84E8                   MOV.B       @(8,R14),R0
    000009BC 2008                   TST         R0,R0
    000009BE 8B01                   BF          L1467
    000009C0 A004                   BRA         L1476
    000009C2 54E1                   MOV.L       @(4,R14),R4
    000009C4              L1467:                            
    000009C4 933E                   MOV.W       L1739,R3   ; H'0570
    000009C6 D220                   MOV.L       L1739+4,R2 ; _symtab
    000009C8 6422                   MOV.L       @R2,R4
    000009CA 343C                   ADD         R3,R4
    000009CC              L1476:                            
    000009CC 8448                   MOV.B       @(8,R4),R0
    000009CE 2008                   TST         R0,R0
    000009D0 8B0A                   BF          L1466
    000009D2 84E8                   MOV.B       @(8,R14),R0
    000009D4 2008                   TST         R0,R0
    000009D6 8B01                   BF          L1468
    000009D8 A004                   BRA         L1477
    000009DA 54E1                   MOV.L       @(4,R14),R4
    000009DC              L1468:                            
    000009DC 9332                   MOV.W       L1739,R3   ; H'0570
    000009DE D21A                   MOV.L       L1739+4,R2 ; _symtab
    000009E0 6422                   MOV.L       @R2,R4
    000009E2 343C                   ADD         R3,R4
    000009E4              L1477:                            
    000009E4 A004                   BRA         L1478
    000009E6 5441                   MOV.L       @(4,R4),R4
    000009E8              L1466:                            
    000009E8 932C                   MOV.W       L1739,R3   ; H'0570
    000009EA D217                   MOV.L       L1739+4,R2 ; _symtab
    000009EC 6422                   MOV.L       @R2,R4
    000009EE 343C                   ADD         R3,R4
    000009F0              L1478:                            
    000009F0 A004                   BRA         L1479
    000009F2 6442                   MOV.L       @R4,R4
    000009F4              L1462:                            
    000009F4 9326                   MOV.W       L1739,R3   ; H'0570
    000009F6 D214                   MOV.L       L1739+4,R2 ; _symtab
    000009F8 6422                   MOV.L       @R2,R4
    000009FA 343C                   ADD         R3,R4
    000009FC              L1479:                            
    000009FC BBDC                   BSR         _isinteger
    000009FE 0009                   NOP
    00000A00 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A02 8903                   BT          L1456
    00000A04              L1457:                            
            is.c   248                    return 1;
    00000A04 4F26                   LDS.L       @R15+,PR
    00000A06 E001                   MOV         #1,R0
    00000A08 000B                   RTS
    00000A0A 6EF6                   MOV.L       @R15+,R14
    00000A0C              L1456:                            
            is.c   249            else
            is.c   250                    return 0;
    00000A0C E000                   MOV         #0,R0
            is.c   251    }
    00000A0E              L1480:                            
    00000A0E 4F26                   LDS.L       @R15+,PR
    00000A10 000B                   RTS
    00000A12 6EF6                   MOV.L       @R15+,R14
            is.c   252    
            is.c   253    int
            is.c   254    isoneover(U *p)
    00000A14              _isoneover:                      ; function: isoneover
                                                           ; frame size=12
    00000A14 2FE6                   MOV.L       R14,@-R15
    00000A16 6E43                   MOV         R4,R14
    00000A18 2FD6                   MOV.L       R13,@-R15
    00000A1A 4F22                   STS.L       PR,@-R15
            is.c   255    {
            is.c   256            if (car(p) == symbol(POWER)
            is.c   257            && isminusone(caddr(p)))
    00000A1C DD0A                   MOV.L       L1739+4,R13; _symtab
    00000A1E 84E8                   MOV.B       @(8,R14),R0
    00000A20 2008                   TST         R0,R0
    00000A22 8B01                   BF          L1483
    00000A24 A004                   BRA         L1491
    00000A26 63E2                   MOV.L       @R14,R3
    00000A28              L1483:                            
    00000A28 920C                   MOV.W       L1739,R2   ; H'0570
    00000A2A D107                   MOV.L       L1739+4,R1 ; _symtab
    00000A2C 6312                   MOV.L       @R1,R3
    00000A2E 332C                   ADD         R2,R3
    00000A30              L1491:                            
    00000A30 9209                   MOV.W       L1739+2,R2 ; H'03F0
    00000A32 60D2                   MOV.L       @R13,R0
    00000A34 302C                   ADD         R2,R0
    00000A36 3300                   CMP/EQ      R0,R3
    00000A38 8B41                   BF          L1482
    00000A3A 84E8                   MOV.B       @(8,R14),R0
    00000A3C 2008                   TST         R0,R0
    00000A3E 8B05                   BF          L1486
    00000A40 A007                   BRA         L1492
    00000A42 54E1                   MOV.L       @(4,R14),R4
    00000A44              L1739:                            
    00000A44 0570                   .DATA.W     H'0570
    00000A46 03F0                   .DATA.W     H'03F0
    00000A48 <00000000>             .DATA.L     _symtab
    00000A4C              L1486:                            
    00000A4C 935F                   MOV.W       L1740,R3   ; H'0570
    00000A4E 64D2                   MOV.L       @R13,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A50 343C                   ADD         R3,R4
    00000A52              L1492:                            
    00000A52 8448                   MOV.B       @(8,R4),R0
    00000A54 2008                   TST         R0,R0
    00000A56 8B09                   BF          L1485
    00000A58 84E8                   MOV.B       @(8,R14),R0
    00000A5A 2008                   TST         R0,R0
    00000A5C 8B01                   BF          L1487
    00000A5E A003                   BRA         L1493
    00000A60 54E1                   MOV.L       @(4,R14),R4
    00000A62              L1487:                            
    00000A62 9354                   MOV.W       L1740,R3   ; H'0570
    00000A64 64D2                   MOV.L       @R13,R4
    00000A66 343C                   ADD         R3,R4
    00000A68              L1493:                            
    00000A68 A003                   BRA         L1494
    00000A6A 5441                   MOV.L       @(4,R4),R4
    00000A6C              L1485:                            
    00000A6C 934F                   MOV.W       L1740,R3   ; H'0570
    00000A6E 64D2                   MOV.L       @R13,R4
    00000A70 343C                   ADD         R3,R4
    00000A72              L1494:                            
    00000A72 8448                   MOV.B       @(8,R4),R0
    00000A74 2008                   TST         R0,R0
    00000A76 8B19                   BF          L1484
    00000A78 84E8                   MOV.B       @(8,R14),R0
    00000A7A 2008                   TST         R0,R0
    00000A7C 8B01                   BF          L1489
    00000A7E A003                   BRA         L1495
    00000A80 54E1                   MOV.L       @(4,R14),R4
    00000A82              L1489:                            
    00000A82 9344                   MOV.W       L1740,R3   ; H'0570
    00000A84 64D2                   MOV.L       @R13,R4
    00000A86 343C                   ADD         R3,R4
    00000A88              L1495:                            
    00000A88 8448                   MOV.B       @(8,R4),R0
    00000A8A 2008                   TST         R0,R0
    00000A8C 8B09                   BF          L1488
    00000A8E 84E8                   MOV.B       @(8,R14),R0
    00000A90 2008                   TST         R0,R0
    00000A92 8B01                   BF          L1490
    00000A94 A003                   BRA         L1496
    00000A96 54E1                   MOV.L       @(4,R14),R4
    00000A98              L1490:                            
    00000A98 9339                   MOV.W       L1740,R3   ; H'0570
    00000A9A 64D2                   MOV.L       @R13,R4
    00000A9C 343C                   ADD         R3,R4
    00000A9E              L1496:                            
    00000A9E A003                   BRA         L1497
    00000AA0 5441                   MOV.L       @(4,R4),R4
    00000AA2              L1488:                            
    00000AA2 9334                   MOV.W       L1740,R3   ; H'0570
    00000AA4 64D2                   MOV.L       @R13,R4
    00000AA6 343C                   ADD         R3,R4
    00000AA8              L1497:                            
    00000AA8 A003                   BRA         L1498
    00000AAA 6442                   MOV.L       @R4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AAC              L1484:                            
    00000AAC 932F                   MOV.W       L1740,R3   ; H'0570
    00000AAE 64D2                   MOV.L       @R13,R4
    00000AB0 343C                   ADD         R3,R4
    00000AB2              L1498:                            
    00000AB2 BB43                   BSR         _isminusone
    00000AB4 0009                   NOP
    00000AB6 2008                   TST         R0,R0
    00000AB8 8901                   BT          L1482
            is.c   258                    return 1;
    00000ABA A001                   BRA         L1499
    00000ABC E001                   MOV         #1,R0
    00000ABE              L1482:                            
            is.c   259            else
            is.c   260                    return 0;
    00000ABE E000                   MOV         #0,R0
            is.c   261    }
    00000AC0              L1499:                            
    00000AC0 4F26                   LDS.L       @R15+,PR
    00000AC2 6DF6                   MOV.L       @R15+,R13
    00000AC4 000B                   RTS
    00000AC6 6EF6                   MOV.L       @R15+,R14
            is.c   262    
            is.c   263    int
            is.c   264    isfraction(U *p)
    00000AC8              _isfraction:                     ; function: isfraction
                                                           ; frame size=4
    00000AC8 4F12                   STS.L       MACL,@-R15
            is.c   265    {
            is.c   266            if (p->k == NUM && !MEQUAL(p->u.q.b, 1))
    00000ACA 8448                   MOV.B       @(8,R4),R0
    00000ACC 600C                   EXTU.B      R0,R0
    00000ACE 8801                   CMP/EQ      #1,R0
    00000AD0 8B10                   BF          L1501
    00000AD2 E0FC                   MOV         #-4,R0
    00000AD4 5241                   MOV.L       @(4,R4),R2
    00000AD6 002E                   MOV.L       @(R0,R2),R0
    00000AD8 8801                   CMP/EQ      #1,R0
    00000ADA 8B08                   BF          L1502
    00000ADC 5241                   MOV.L       @(4,R4),R2
    00000ADE 6023                   MOV         R2,R0
    00000AE0 6302                   MOV.L       @R0,R3
    00000AE2 E0F8                   MOV         #-8,R0
    00000AE4 022E                   MOV.L       @(R0,R2),R2
    00000AE6 0237                   MUL.L       R3,R2
    00000AE8 001A                   STS         MACL,R0
    00000AEA 8801                   CMP/EQ      #1,R0
    00000AEC 8902                   BT          L1501
    00000AEE              L1502:                            
            is.c   267                    return 1;
    00000AEE E001                   MOV         #1,R0
    00000AF0 000B                   RTS
    00000AF2 4F16                   LDS.L       @R15+,MACL
    00000AF4              L1501:                            
            is.c   268            else
            is.c   269                    return 0;
    00000AF4 E000                   MOV         #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            is.c   270    }
    00000AF6              L1503:                            
    00000AF6 000B                   RTS
    00000AF8 4F16                   LDS.L       @R15+,MACL
            is.c   271    
            is.c   272    int
            is.c   273    equaln(U *p, int n)
    00000AFA              _equaln:                         ; function: equaln
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __itod, __ned
    00000AFA 4F22                   STS.L       PR,@-R15
    00000AFC 4F12                   STS.L       MACL,@-R15
            is.c   274    {
            is.c   275            switch (p->k) {
    00000AFE 8448                   MOV.B       @(8,R4),R0
    00000B00 600C                   EXTU.B      R0,R0
    00000B02 8801                   CMP/EQ      #1,R0
    00000B04 8904                   BT          L1203
    00000B06 8802                   CMP/EQ      #2,R0
    00000B08 8920                   BT          L1204
    00000B0A A032                   BRA         L1505
    00000B0C 0009                   NOP
    00000B0E              L1740:                            
    00000B0E 0570                   .DATA.W     H'0570
    00000B10              L1203:                           ; case label 
            is.c   276            case NUM:
            is.c   277                    if (MEQUAL(p->u.q.a, n) && MEQUAL(p->u.q.b, 1))
    00000B10 6642                   MOV.L       @R4,R6
    00000B12 6063                   MOV         R6,R0
    00000B14 70FC                   ADD         #-4,R0
    00000B16 6002                   MOV.L       @R0,R0
    00000B18 8801                   CMP/EQ      #1,R0
    00000B1A 8B2A                   BF          L1505
    00000B1C 6362                   MOV.L       @R6,R3
    00000B1E 6263                   MOV         R6,R2
    00000B20 72F8                   ADD         #-8,R2
    00000B22 6222                   MOV.L       @R2,R2
    00000B24 0237                   MUL.L       R3,R2
    00000B26 031A                   STS         MACL,R3
    00000B28 3350                   CMP/EQ      R5,R3
    00000B2A 8B22                   BF          L1505
    00000B2C 5341                   MOV.L       @(4,R4),R3
    00000B2E E0FC                   MOV         #-4,R0
    00000B30 003E                   MOV.L       @(R0,R3),R0
    00000B32 8801                   CMP/EQ      #1,R0
    00000B34 8B1D                   BF          L1505
    00000B36 5241                   MOV.L       @(4,R4),R2
    00000B38 6023                   MOV         R2,R0
    00000B3A 6302                   MOV.L       @R0,R3
    00000B3C E0F8                   MOV         #-8,R0
    00000B3E 022E                   MOV.L       @(R0,R2),R2
    00000B40 0237                   MUL.L       R3,R2
    00000B42 001A                   STS         MACL,R0
    00000B44 8801                   CMP/EQ      #1,R0
    00000B46 890F                   BT          L1156
            is.c   278                            return 1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            is.c   279                    break;
    00000B48 A013                   BRA         L1505
    00000B4A 0009                   NOP
    00000B4C              L1204:                           ; case label 
            is.c   280            case DOUBLE:
            is.c   281                    if (p->u.d == (double) n)
    00000B4C 5241                   MOV.L       @(4,R4),R2
    00000B4E 6053                   MOV         R5,R0
    00000B50 D334                   MOV.L       L1741,R3   ; __itod
    00000B52 2F26                   MOV.L       R2,@-R15
    00000B54 6242                   MOV.L       @R4,R2
    00000B56 2F26                   MOV.L       R2,@-R15
    00000B58 7FF8                   ADD         #-8,R15
    00000B5A 430B                   JSR         @R3
    00000B5C 2FF6                   MOV.L       R15,@-R15
    00000B5E D232                   MOV.L       L1741+4,R2 ; __ned
    00000B60 420B                   JSR         @R2
    00000B62 0009                   NOP
    00000B64 8800                   CMP/EQ      #0,R0
    00000B66 8B04                   BF          L1505
    00000B68              L1156:
            is.c   282                            return 1;
    00000B68 4F16                   LDS.L       @R15+,MACL
    00000B6A E001                   MOV         #1,R0
    00000B6C 4F26                   LDS.L       @R15+,PR
    00000B6E 000B                   RTS
    00000B70 0009                   NOP
    00000B72              L1505:                            
            is.c   283                    break;
            is.c   284            default:
            is.c   285                    break;
            is.c   286            }
            is.c   287            return 0;
    00000B72 E000                   MOV         #0,R0
            is.c   288    }
    00000B74              L1507:                            
    00000B74 4F16                   LDS.L       @R15+,MACL
    00000B76 4F26                   LDS.L       @R15+,PR
    00000B78 000B                   RTS
    00000B7A 0009                   NOP
            is.c   289    
            is.c   290    int
            is.c   291    equalq(U *p, int a, int b)
    00000B7C              _equalq:                         ; function: equalq
                                                           ; frame size=44
                                                           ; used runtime library name:
                                                           ; __divdr, __itod, __ned
    00000B7C 4F22                   STS.L       PR,@-R15
    00000B7E 4F12                   STS.L       MACL,@-R15
            is.c   292    {
            is.c   293            switch (p->k) {
    00000B80 8448                   MOV.B       @(8,R4),R0
    00000B82 600C                   EXTU.B      R0,R0
    00000B84 8801                   CMP/EQ      #1,R0
    00000B86 8903                   BT          L1206
    00000B88 8802                   CMP/EQ      #2,R0
    00000B8A 891F                   BT          L1207




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B8C A03B                   BRA         L1509
    00000B8E 0009                   NOP
    00000B90              L1206:                           ; case label 
            is.c   294            case NUM:
            is.c   295                    if (MEQUAL(p->u.q.a, a) && MEQUAL(p->u.q.b, b))
    00000B90 6742                   MOV.L       @R4,R7
    00000B92 6073                   MOV         R7,R0
    00000B94 70FC                   ADD         #-4,R0
    00000B96 6002                   MOV.L       @R0,R0
    00000B98 8801                   CMP/EQ      #1,R0
    00000B9A 8B34                   BF          L1509
    00000B9C 6372                   MOV.L       @R7,R3
    00000B9E 6273                   MOV         R7,R2
    00000BA0 72F8                   ADD         #-8,R2
    00000BA2 6222                   MOV.L       @R2,R2
    00000BA4 0237                   MUL.L       R3,R2
    00000BA6 031A                   STS         MACL,R3
    00000BA8 3350                   CMP/EQ      R5,R3
    00000BAA 8B2C                   BF          L1509
    00000BAC 5341                   MOV.L       @(4,R4),R3
    00000BAE E0FC                   MOV         #-4,R0
    00000BB0 003E                   MOV.L       @(R0,R3),R0
    00000BB2 8801                   CMP/EQ      #1,R0
    00000BB4 8B27                   BF          L1509
    00000BB6 E0F8                   MOV         #-8,R0
    00000BB8 5241                   MOV.L       @(4,R4),R2
    00000BBA 6323                   MOV         R2,R3
    00000BBC 6332                   MOV.L       @R3,R3
    00000BBE 022E                   MOV.L       @(R0,R2),R2
    00000BC0 0237                   MUL.L       R3,R2
    00000BC2 011A                   STS         MACL,R1
    00000BC4 3160                   CMP/EQ      R6,R1
    00000BC6 8919                   BT          L1157
            is.c   296                            return 1;
            is.c   297                    break;
    00000BC8 A01D                   BRA         L1509
    00000BCA 0009                   NOP
    00000BCC              L1207:                           ; case label 
            is.c   298            case DOUBLE:
            is.c   299                    if (p->u.d == (double) a / b)
    00000BCC 5241                   MOV.L       @(4,R4),R2
    00000BCE 6053                   MOV         R5,R0
    00000BD0 D314                   MOV.L       L1741,R3   ; __itod
    00000BD2 2F26                   MOV.L       R2,@-R15
    00000BD4 6242                   MOV.L       @R4,R2
    00000BD6 2F26                   MOV.L       R2,@-R15
    00000BD8 7FF0                   ADD         #-16,R15
    00000BDA 430B                   JSR         @R3
    00000BDC 2FF6                   MOV.L       R15,@-R15
    00000BDE 6063                   MOV         R6,R0
    00000BE0 D210                   MOV.L       L1741,R2   ; __itod
    00000BE2 7FF8                   ADD         #-8,R15
    00000BE4 420B                   JSR         @R2
    00000BE6 2FF6                   MOV.L       R15,@-R15
    00000BE8 D110                   MOV.L       L1741+8,R1 ; __divdr
    00000BEA 63F3                   MOV         R15,R3
    00000BEC 7310                   ADD         #16,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BEE 410B                   JSR         @R1
    00000BF0 2F36                   MOV.L       R3,@-R15
    00000BF2 D20D                   MOV.L       L1741+4,R2 ; __ned
    00000BF4 420B                   JSR         @R2
    00000BF6 0009                   NOP
    00000BF8 8800                   CMP/EQ      #0,R0
    00000BFA 8B04                   BF          L1509
    00000BFC              L1157:
            is.c   300                            return 1;
    00000BFC 4F16                   LDS.L       @R15+,MACL
    00000BFE E001                   MOV         #1,R0
    00000C00 4F26                   LDS.L       @R15+,PR
    00000C02 000B                   RTS
    00000C04 0009                   NOP
    00000C06              L1509:                            
            is.c   301                    break;
            is.c   302            default:
            is.c   303                    break;
            is.c   304            }
            is.c   305            return 0;
    00000C06 E000                   MOV         #0,R0
            is.c   306    }
    00000C08              L1511:                            
    00000C08 4F16                   LDS.L       @R15+,MACL
    00000C0A 4F26                   LDS.L       @R15+,PR
    00000C0C 000B                   RTS
    00000C0E 0009                   NOP
            is.c   307    
            is.c   308    // p == 1/sqrt(2) ?
            is.c   309    
            is.c   310    int
            is.c   311    isoneoversqrttwo(U *p)
    00000C10              _isoneoversqrttwo:               ; function: isoneoversqrttwo
                                                           ; frame size=12
    00000C10 2FE6                   MOV.L       R14,@-R15
    00000C12 6E43                   MOV         R4,R14
    00000C14 2FD6                   MOV.L       R13,@-R15
    00000C16 4F22                   STS.L       PR,@-R15
            is.c   312    {
            is.c   313            if (car(p) == symbol(POWER)
            is.c   314            && equaln(cadr(p), 2)
            is.c   315            && equalq(caddr(p), -1, 2))
    00000C18 DD05                   MOV.L       L1741+12,R13; _symtab
    00000C1A 84E8                   MOV.B       @(8,R14),R0
    00000C1C 2008                   TST         R0,R0
    00000C1E 8B09                   BF          L1514
    00000C20 A00C                   BRA         L1525
    00000C22 63E2                   MOV.L       @R14,R3
    00000C24              L1741:                            
    00000C24 <00000000>             .DATA.L     __itod
    00000C28 <00000000>             .DATA.L     __ned
    00000C2C <00000000>             .DATA.L     __divdr
    00000C30 <00000000>             .DATA.L     _symtab
    00000C34              L1514:                            
    00000C34 9261                   MOV.W       L1742,R2   ; H'0570
    00000C36 D132                   MOV.L       L1742+6,R1 ; _symtab
    00000C38 6312                   MOV.L       @R1,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C3A 332C                   ADD         R2,R3
    00000C3C              L1525:                            
    00000C3C 925E                   MOV.W       L1742+2,R2 ; H'03F0
    00000C3E 60D2                   MOV.L       @R13,R0
    00000C40 302C                   ADD         R2,R0
    00000C42 3300                   CMP/EQ      R0,R3
    00000C44 8B68                   BF          L1513
    00000C46 84E8                   MOV.B       @(8,R14),R0
    00000C48 2008                   TST         R0,R0
    00000C4A 8F02                   BF/S        L1516
    00000C4C E502                   MOV         #2,R5
    00000C4E A003                   BRA         L1526
    00000C50 54E1                   MOV.L       @(4,R14),R4
    00000C52              L1516:                            
    00000C52 9352                   MOV.W       L1742,R3   ; H'0570
    00000C54 64D2                   MOV.L       @R13,R4
    00000C56 343C                   ADD         R3,R4
    00000C58              L1526:                            
    00000C58 8448                   MOV.B       @(8,R4),R0
    00000C5A 2008                   TST         R0,R0
    00000C5C 8B09                   BF          L1515
    00000C5E 84E8                   MOV.B       @(8,R14),R0
    00000C60 2008                   TST         R0,R0
    00000C62 8B01                   BF          L1517
    00000C64 A003                   BRA         L1527
    00000C66 54E1                   MOV.L       @(4,R14),R4
    00000C68              L1517:                            
    00000C68 9347                   MOV.W       L1742,R3   ; H'0570
    00000C6A 64D2                   MOV.L       @R13,R4
    00000C6C 343C                   ADD         R3,R4
    00000C6E              L1527:                            
    00000C6E A003                   BRA         L1528
    00000C70 6442                   MOV.L       @R4,R4
    00000C72              L1515:                            
    00000C72 9342                   MOV.W       L1742,R3   ; H'0570
    00000C74 64D2                   MOV.L       @R13,R4
    00000C76 343C                   ADD         R3,R4
    00000C78              L1528:                            
    00000C78 BF3F                   BSR         _equaln
    00000C7A 0009                   NOP
    00000C7C 2008                   TST         R0,R0
    00000C7E 894B                   BT          L1513
    00000C80 84E8                   MOV.B       @(8,R14),R0
    00000C82 E602                   MOV         #2,R6
    00000C84 2008                   TST         R0,R0
    00000C86 8F02                   BF/S        L1520
    00000C88 E5FF                   MOV         #-1,R5
    00000C8A A004                   BRA         L1529
    00000C8C 54E1                   MOV.L       @(4,R14),R4
    00000C8E              L1520:                            
    00000C8E 9334                   MOV.W       L1742,R3   ; H'0570
    00000C90 D21B                   MOV.L       L1742+6,R2 ; _symtab
    00000C92 6422                   MOV.L       @R2,R4
    00000C94 343C                   ADD         R3,R4
    00000C96              L1529:                            
    00000C96 8448                   MOV.B       @(8,R4),R0
    00000C98 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C9A 8B0A                   BF          L1519
    00000C9C 84E8                   MOV.B       @(8,R14),R0
    00000C9E 2008                   TST         R0,R0
    00000CA0 8B01                   BF          L1521
    00000CA2 A004                   BRA         L1530
    00000CA4 54E1                   MOV.L       @(4,R14),R4
    00000CA6              L1521:                            
    00000CA6 9328                   MOV.W       L1742,R3   ; H'0570
    00000CA8 D215                   MOV.L       L1742+6,R2 ; _symtab
    00000CAA 6422                   MOV.L       @R2,R4
    00000CAC 343C                   ADD         R3,R4
    00000CAE              L1530:                            
    00000CAE A004                   BRA         L1531
    00000CB0 5441                   MOV.L       @(4,R4),R4
    00000CB2              L1519:                            
    00000CB2 9322                   MOV.W       L1742,R3   ; H'0570
    00000CB4 D212                   MOV.L       L1742+6,R2 ; _symtab
    00000CB6 6422                   MOV.L       @R2,R4
    00000CB8 343C                   ADD         R3,R4
    00000CBA              L1531:                            
    00000CBA 8448                   MOV.B       @(8,R4),R0
    00000CBC 2008                   TST         R0,R0
    00000CBE 8B21                   BF          L1518
    00000CC0 84E8                   MOV.B       @(8,R14),R0
    00000CC2 2008                   TST         R0,R0
    00000CC4 8B01                   BF          L1523
    00000CC6 A004                   BRA         L1532
    00000CC8 54E1                   MOV.L       @(4,R14),R4
    00000CCA              L1523:                            
    00000CCA 9316                   MOV.W       L1742,R3   ; H'0570
    00000CCC D20C                   MOV.L       L1742+6,R2 ; _symtab
    00000CCE 6422                   MOV.L       @R2,R4
    00000CD0 343C                   ADD         R3,R4
    00000CD2              L1532:                            
    00000CD2 8448                   MOV.B       @(8,R4),R0
    00000CD4 2008                   TST         R0,R0
    00000CD6 8B0A                   BF          L1522
    00000CD8 84E8                   MOV.B       @(8,R14),R0
    00000CDA 2008                   TST         R0,R0
    00000CDC 8B01                   BF          L1524
    00000CDE A004                   BRA         L1533
    00000CE0 54E1                   MOV.L       @(4,R14),R4
    00000CE2              L1524:                            
    00000CE2 930A                   MOV.W       L1742,R3   ; H'0570
    00000CE4 D206                   MOV.L       L1742+6,R2 ; _symtab
    00000CE6 6422                   MOV.L       @R2,R4
    00000CE8 343C                   ADD         R3,R4
    00000CEA              L1533:                            
    00000CEA A004                   BRA         L1534
    00000CEC 5441                   MOV.L       @(4,R4),R4
    00000CEE              L1522:                            
    00000CEE 9304                   MOV.W       L1742,R3   ; H'0570
    00000CF0 D203                   MOV.L       L1742+6,R2 ; _symtab
    00000CF2 6422                   MOV.L       @R2,R4
    00000CF4 343C                   ADD         R3,R4
    00000CF6              L1534:                            
    00000CF6 A009                   BRA         L1535




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CF8 6442                   MOV.L       @R4,R4
    00000CFA              L1742:                            
    00000CFA 0570                   .DATA.W     H'0570
    00000CFC 03F0                   .DATA.W     H'03F0
    00000CFE 0000                   .DATA.W     0
    00000D00 <00000000>             .DATA.L     _symtab
    00000D04              L1518:                            
    00000D04 9360                   MOV.W       L1743,R3   ; H'0570
    00000D06 D231                   MOV.L       L1743+4,R2 ; _symtab
    00000D08 6422                   MOV.L       @R2,R4
    00000D0A 343C                   ADD         R3,R4
    00000D0C              L1535:                            
    00000D0C BF36                   BSR         _equalq
    00000D0E 0009                   NOP
    00000D10 2008                   TST         R0,R0
    00000D12 8901                   BT          L1513
            is.c   316                    return 1;
    00000D14 A001                   BRA         L1536
    00000D16 E001                   MOV         #1,R0
    00000D18              L1513:                            
            is.c   317            else
            is.c   318                    return 0;
    00000D18 E000                   MOV         #0,R0
            is.c   319    }
    00000D1A              L1536:                            
    00000D1A 4F26                   LDS.L       @R15+,PR
    00000D1C 6DF6                   MOV.L       @R15+,R13
    00000D1E 000B                   RTS
    00000D20 6EF6                   MOV.L       @R15+,R14
            is.c   320    
            is.c   321    // p == -1/sqrt(2) ?
            is.c   322    
            is.c   323    int
            is.c   324    isminusoneoversqrttwo(U *p)
    00000D22              _isminusoneoversqrttwo:          ; function: isminusoneoversqrttwo
                                                           ; frame size=12
    00000D22 2FE6                   MOV.L       R14,@-R15
    00000D24 2FD6                   MOV.L       R13,@-R15
    00000D26 6E43                   MOV         R4,R14
    00000D28 4F22                   STS.L       PR,@-R15
            is.c   325    {
            is.c   326            if (car(p) == symbol(MULTIPLY)
            is.c   327            && equaln(cadr(p), -1)
            is.c   328            && isoneoversqrttwo(caddr(p))
            is.c   329            && length(p) == 3)
    00000D2A DD28                   MOV.L       L1743+4,R13; _symtab
    00000D2C 84E8                   MOV.B       @(8,R14),R0
    00000D2E 2008                   TST         R0,R0
    00000D30 8B01                   BF          L1539
    00000D32 A004                   BRA         L1550
    00000D34 63E2                   MOV.L       @R14,R3
    00000D36              L1539:                            
    00000D36 9247                   MOV.W       L1743,R2   ; H'0570
    00000D38 D124                   MOV.L       L1743+4,R1 ; _symtab
    00000D3A 6312                   MOV.L       @R1,R3
    00000D3C 332C                   ADD         R2,R3
    00000D3E              L1550:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D3E 9244                   MOV.W       L1743+2,R2 ; H'0384
    00000D40 60D2                   MOV.L       @R13,R0
    00000D42 302C                   ADD         R2,R0
    00000D44 3300                   CMP/EQ      R0,R3
    00000D46 8B6A                   BF          L1538
    00000D48 84E8                   MOV.B       @(8,R14),R0
    00000D4A 2008                   TST         R0,R0
    00000D4C 8F02                   BF/S        L1541
    00000D4E E5FF                   MOV         #-1,R5
    00000D50 A003                   BRA         L1551
    00000D52 54E1                   MOV.L       @(4,R14),R4
    00000D54              L1541:                            
    00000D54 9338                   MOV.W       L1743,R3   ; H'0570
    00000D56 64D2                   MOV.L       @R13,R4
    00000D58 343C                   ADD         R3,R4
    00000D5A              L1551:                            
    00000D5A 8448                   MOV.B       @(8,R4),R0
    00000D5C 2008                   TST         R0,R0
    00000D5E 8B09                   BF          L1540
    00000D60 84E8                   MOV.B       @(8,R14),R0
    00000D62 2008                   TST         R0,R0
    00000D64 8B01                   BF          L1542
    00000D66 A003                   BRA         L1552
    00000D68 54E1                   MOV.L       @(4,R14),R4
    00000D6A              L1542:                            
    00000D6A 932D                   MOV.W       L1743,R3   ; H'0570
    00000D6C 64D2                   MOV.L       @R13,R4
    00000D6E 343C                   ADD         R3,R4
    00000D70              L1552:                            
    00000D70 A003                   BRA         L1553
    00000D72 6442                   MOV.L       @R4,R4
    00000D74              L1540:                            
    00000D74 9328                   MOV.W       L1743,R3   ; H'0570
    00000D76 64D2                   MOV.L       @R13,R4
    00000D78 343C                   ADD         R3,R4
    00000D7A              L1553:                            
    00000D7A BEBE                   BSR         _equaln
    00000D7C 0009                   NOP
    00000D7E 2008                   TST         R0,R0
    00000D80 894D                   BT          L1538
    00000D82 84E8                   MOV.B       @(8,R14),R0
    00000D84 2008                   TST         R0,R0
    00000D86 8B01                   BF          L1545
    00000D88 A004                   BRA         L1554
    00000D8A 54E1                   MOV.L       @(4,R14),R4
    00000D8C              L1545:                            
    00000D8C 931C                   MOV.W       L1743,R3   ; H'0570
    00000D8E D20F                   MOV.L       L1743+4,R2 ; _symtab
    00000D90 6422                   MOV.L       @R2,R4
    00000D92 343C                   ADD         R3,R4
    00000D94              L1554:                            
    00000D94 8448                   MOV.B       @(8,R4),R0
    00000D96 2008                   TST         R0,R0
    00000D98 8B0A                   BF          L1544
    00000D9A 84E8                   MOV.B       @(8,R14),R0
    00000D9C 2008                   TST         R0,R0
    00000D9E 8B01                   BF          L1546




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DA0 A004                   BRA         L1555
    00000DA2 54E1                   MOV.L       @(4,R14),R4
    00000DA4              L1546:                            
    00000DA4 9310                   MOV.W       L1743,R3   ; H'0570
    00000DA6 D209                   MOV.L       L1743+4,R2 ; _symtab
    00000DA8 6422                   MOV.L       @R2,R4
    00000DAA 343C                   ADD         R3,R4
    00000DAC              L1555:                            
    00000DAC A004                   BRA         L1556
    00000DAE 5441                   MOV.L       @(4,R4),R4
    00000DB0              L1544:                            
    00000DB0 930A                   MOV.W       L1743,R3   ; H'0570
    00000DB2 D206                   MOV.L       L1743+4,R2 ; _symtab
    00000DB4 6422                   MOV.L       @R2,R4
    00000DB6 343C                   ADD         R3,R4
    00000DB8              L1556:                            
    00000DB8 8448                   MOV.B       @(8,R4),R0
    00000DBA 2008                   TST         R0,R0
    00000DBC 8B20                   BF          L1543
    00000DBE 84E8                   MOV.B       @(8,R14),R0
    00000DC0 2008                   TST         R0,R0
    00000DC2 8B05                   BF          L1548
    00000DC4 A008                   BRA         L1557
    00000DC6 54E1                   MOV.L       @(4,R14),R4
    00000DC8              L1743:                            
    00000DC8 0570                   .DATA.W     H'0570
    00000DCA 0384                   .DATA.W     H'0384
    00000DCC <00000000>             .DATA.L     _symtab
    00000DD0              L1548:                            
    00000DD0 936C                   MOV.W       L1744,R3   ; H'0570
    00000DD2 D237                   MOV.L       L1744+4,R2 ; _symtab
    00000DD4 6422                   MOV.L       @R2,R4
    00000DD6 343C                   ADD         R3,R4
    00000DD8              L1557:                            
    00000DD8 8448                   MOV.B       @(8,R4),R0
    00000DDA 2008                   TST         R0,R0
    00000DDC 8B0A                   BF          L1547
    00000DDE 84E8                   MOV.B       @(8,R14),R0
    00000DE0 2008                   TST         R0,R0
    00000DE2 8B01                   BF          L1549
    00000DE4 A004                   BRA         L1558
    00000DE6 54E1                   MOV.L       @(4,R14),R4
    00000DE8              L1549:                            
    00000DE8 9360                   MOV.W       L1744,R3   ; H'0570
    00000DEA D231                   MOV.L       L1744+4,R2 ; _symtab
    00000DEC 6422                   MOV.L       @R2,R4
    00000DEE 343C                   ADD         R3,R4
    00000DF0              L1558:                            
    00000DF0 A004                   BRA         L1559
    00000DF2 5441                   MOV.L       @(4,R4),R4
    00000DF4              L1547:                            
    00000DF4 935A                   MOV.W       L1744,R3   ; H'0570
    00000DF6 D22E                   MOV.L       L1744+4,R2 ; _symtab
    00000DF8 6422                   MOV.L       @R2,R4
    00000DFA 343C                   ADD         R3,R4
    00000DFC              L1559:                            
    00000DFC A004                   BRA         L1560




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DFE 6442                   MOV.L       @R4,R4
    00000E00              L1543:                            
    00000E00 9354                   MOV.W       L1744,R3   ; H'0570
    00000E02 D22B                   MOV.L       L1744+4,R2 ; _symtab
    00000E04 6422                   MOV.L       @R2,R4
    00000E06 343C                   ADD         R3,R4
    00000E08              L1560:                            
    00000E08 BF02                   BSR         _isoneoversqrttwo
    00000E0A 0009                   NOP
    00000E0C 2008                   TST         R0,R0
    00000E0E 8906                   BT          L1538
    00000E10 D328                   MOV.L       L1744+8,R3 ; _length
    00000E12 430B                   JSR         @R3
    00000E14 64E3                   MOV         R14,R4
    00000E16 8803                   CMP/EQ      #3,R0
    00000E18 8B01                   BF          L1538
            is.c   330                    return 1;
    00000E1A A001                   BRA         L1561
    00000E1C E001                   MOV         #1,R0
    00000E1E              L1538:                            
            is.c   331            else
            is.c   332                    return 0;
    00000E1E E000                   MOV         #0,R0
            is.c   333    }
    00000E20              L1561:                            
    00000E20 4F26                   LDS.L       @R15+,PR
    00000E22 6DF6                   MOV.L       @R15+,R13
    00000E24 000B                   RTS
    00000E26 6EF6                   MOV.L       @R15+,R14
            is.c   334    
            is.c   335    int
            is.c   336    isfloating(U *p)
    00000E28              _isfloating:                     ; function: isfloating
                                                           ; frame size=8
    00000E28 2FE6                   MOV.L       R14,@-R15
    00000E2A 6E43                   MOV         R4,R14
    00000E2C 4F22                   STS.L       PR,@-R15
            is.c   337    {
            is.c   338            if (p->k == DOUBLE)
    00000E2E 84E8                   MOV.B       @(8,R14),R0
    00000E30 600C                   EXTU.B      R0,R0
    00000E32 8802                   CMP/EQ      #2,R0
    00000E34 890C                   BT          L1158
            is.c   339                    return 1;
            is.c   340            while (iscons(p)) {
    00000E36 A018                   BRA         L1565
    00000E38 0009                   NOP
    00000E3A              L1566:                            
            is.c   341                    if (isfloating(car(p)))
    00000E3A 8B01                   BF          L1568
    00000E3C A004                   BRA         L1569
    00000E3E 64E2                   MOV.L       @R14,R4
    00000E40              L1568:                            
    00000E40 9334                   MOV.W       L1744,R3   ; H'0570
    00000E42 D21B                   MOV.L       L1744+4,R2 ; _symtab
    00000E44 6422                   MOV.L       @R2,R4
    00000E46 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E48              L1569:                            
    00000E48 BFEE                   BSR         _isfloating
    00000E4A 0009                   NOP
    00000E4C 2008                   TST         R0,R0
    00000E4E 8903                   BT          L1567
    00000E50              L1158:
            is.c   342                            return 1;
    00000E50 4F26                   LDS.L       @R15+,PR
    00000E52 E001                   MOV         #1,R0
    00000E54 000B                   RTS
    00000E56 6EF6                   MOV.L       @R15+,R14
    00000E58              L1567:                            
            is.c   343                    p = cdr(p);
    00000E58 84E8                   MOV.B       @(8,R14),R0
    00000E5A 2008                   TST         R0,R0
    00000E5C 8B01                   BF          L1570
    00000E5E A004                   BRA         L1565
    00000E60 5EE1                   MOV.L       @(4,R14),R14
    00000E62              L1570:                            
    00000E62 9323                   MOV.W       L1744,R3   ; H'0570
    00000E64 D212                   MOV.L       L1744+4,R2 ; _symtab
    00000E66 6E22                   MOV.L       @R2,R14
    00000E68 3E3C                   ADD         R3,R14
    00000E6A              L1565:                            
    00000E6A 84E8                   MOV.B       @(8,R14),R0
    00000E6C 2008                   TST         R0,R0
    00000E6E 89E4                   BT          L1566
            is.c   344            }
            is.c   345            return 0;
    00000E70 E000                   MOV         #0,R0
            is.c   346    }
    00000E72              L1564:                            
    00000E72 4F26                   LDS.L       @R15+,PR
    00000E74 000B                   RTS
    00000E76 6EF6                   MOV.L       @R15+,R14
            is.c   347    
            is.c   348    int
            is.c   349    isimaginaryunit(U *p)
    00000E78              _isimaginaryunit:                ; function: isimaginaryunit
                                                           ; frame size=4
    00000E78 4F22                   STS.L       PR,@-R15
            is.c   350    {
            is.c   351            if (equal(p, imaginaryunit))
    00000E7A D30F                   MOV.L       L1744+12,R3; _imaginaryunit
    00000E7C D20F                   MOV.L       L1744+16,R2; _equal
    00000E7E 420B                   JSR         @R2
    00000E80 6532                   MOV.L       @R3,R5
    00000E82 2008                   TST         R0,R0
    00000E84 8902                   BT          L1572
            is.c   352                    return 1;
    00000E86 4F26                   LDS.L       @R15+,PR
    00000E88 000B                   RTS
    00000E8A E001                   MOV         #1,R0
    00000E8C              L1572:                            
            is.c   353            else
            is.c   354                    return 0;
    00000E8C E000                   MOV         #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            is.c   355    }
    00000E8E              L1573:                            
    00000E8E 4F26                   LDS.L       @R15+,PR
    00000E90 000B                   RTS
    00000E92 0009                   NOP
            is.c   356    
            is.c   357    // n/2 * i * pi ?
            is.c   358    
            is.c   359    // return value:
            is.c   360    
            is.c   361    //      0       no
            is.c   362    
            is.c   363    //      1       1
            is.c   364    
            is.c   365    //      2       -1
            is.c   366    
            is.c   367    //      3       i
            is.c   368    
            is.c   369    //      4       -i
            is.c   370    
            is.c   371    int
            is.c   372    isquarterturn(U *p)
    00000E94              _isquarterturn:                  ; function: isquarterturn
                                                           ; frame size=16
    00000E94 2FE6                   MOV.L       R14,@-R15
    00000E96 6E43                   MOV         R4,R14
    00000E98 2FD6                   MOV.L       R13,@-R15
    00000E9A 2FC6                   MOV.L       R12,@-R15
    00000E9C 4F22                   STS.L       PR,@-R15
            is.c   373    {
            is.c   374            int n, minussign = 0;
            is.c   375    
            is.c   376            if (car(p) != symbol(MULTIPLY))
    00000E9E DC04                   MOV.L       L1744+4,R12; _symtab
    00000EA0 84E8                   MOV.B       @(8,R14),R0
    00000EA2 2008                   TST         R0,R0
    00000EA4 8F0C                   BF/S        L1576
    00000EA6 ED00                   MOV         #0,R13
    00000EA8 A00E                   BRA         L1577
    00000EAA 63E2                   MOV.L       @R14,R3
    00000EAC              L1744:                            
    00000EAC 0570                   .DATA.W     H'0570
    00000EAE 0000                   .DATA.W     0
    00000EB0 <00000000>             .DATA.L     _symtab
    00000EB4 <00000000>             .DATA.L     _length
    00000EB8 <00000000>             .DATA.L     _imaginaryunit
    00000EBC <00000000>             .DATA.L     _equal
    00000EC0              L1576:                            
    00000EC0 9260                   MOV.W       L1745,R2   ; H'0570
    00000EC2 D131                   MOV.L       L1745+4,R1 ; _symtab
    00000EC4 6312                   MOV.L       @R1,R3
    00000EC6 332C                   ADD         R2,R3
    00000EC8              L1577:                            
    00000EC8 925D                   MOV.W       L1745+2,R2 ; H'0384
    00000ECA 60C2                   MOV.L       @R12,R0
    00000ECC 302C                   ADD         R2,R0
    00000ECE 3300                   CMP/EQ      R0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000ED0 8901                   BT          L1746
    00000ED2 A1D0                   BRA         L1723
    00000ED4 0009                   NOP
    00000ED6              L1746:                            
            is.c   377                    return 0;
            is.c   378    
            is.c   379            if (equal(cadr(p), imaginaryunit)) {
    00000ED6 D32D                   MOV.L       L1745+8,R3 ; _imaginaryunit
    00000ED8 84E8                   MOV.B       @(8,R14),R0
    00000EDA 2008                   TST         R0,R0
    00000EDC 8F02                   BF/S        L1581
    00000EDE 6532                   MOV.L       @R3,R5
    00000EE0 A004                   BRA         L1583
    00000EE2 54E1                   MOV.L       @(4,R14),R4
    00000EE4              L1581:                            
    00000EE4 924E                   MOV.W       L1745,R2   ; H'0570
    00000EE6 D128                   MOV.L       L1745+4,R1 ; _symtab
    00000EE8 6412                   MOV.L       @R1,R4
    00000EEA 342C                   ADD         R2,R4
    00000EEC              L1583:                            
    00000EEC 8448                   MOV.B       @(8,R4),R0
    00000EEE 2008                   TST         R0,R0
    00000EF0 8B0A                   BF          L1580
    00000EF2 84E8                   MOV.B       @(8,R14),R0
    00000EF4 2008                   TST         R0,R0
    00000EF6 8B01                   BF          L1582
    00000EF8 A004                   BRA         L1584
    00000EFA 54E1                   MOV.L       @(4,R14),R4
    00000EFC              L1582:                            
    00000EFC 9342                   MOV.W       L1745,R3   ; H'0570
    00000EFE D222                   MOV.L       L1745+4,R2 ; _symtab
    00000F00 6422                   MOV.L       @R2,R4
    00000F02 343C                   ADD         R3,R4
    00000F04              L1584:                            
    00000F04 A004                   BRA         L1585
    00000F06 6442                   MOV.L       @R4,R4
    00000F08              L1580:                            
    00000F08 933C                   MOV.W       L1745,R3   ; H'0570
    00000F0A D21F                   MOV.L       L1745+4,R2 ; _symtab
    00000F0C 6422                   MOV.L       @R2,R4
    00000F0E 343C                   ADD         R3,R4
    00000F10              L1585:                            
    00000F10 D31F                   MOV.L       L1745+12,R3; _equal
    00000F12 430B                   JSR         @R3
    00000F14 0009                   NOP
    00000F16 2008                   TST         R0,R0
    00000F18 8956                   BT          L1579
            is.c   380    
            is.c   381                    if (caddr(p) != symbol(PI))
    00000F1A 84E8                   MOV.B       @(8,R14),R0
    00000F1C 2008                   TST         R0,R0
    00000F1E 8B01                   BF          L1589
    00000F20 A004                   BRA         L1594
    00000F22 53E1                   MOV.L       @(4,R14),R3
    00000F24              L1589:                            
    00000F24 922E                   MOV.W       L1745,R2   ; H'0570
    00000F26 D118                   MOV.L       L1745+4,R1 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F28 6312                   MOV.L       @R1,R3
    00000F2A 332C                   ADD         R2,R3
    00000F2C              L1594:                            
    00000F2C 8438                   MOV.B       @(8,R3),R0
    00000F2E 2008                   TST         R0,R0
    00000F30 8B0A                   BF          L1588
    00000F32 84E8                   MOV.B       @(8,R14),R0
    00000F34 2008                   TST         R0,R0
    00000F36 8B01                   BF          L1590
    00000F38 A004                   BRA         L1595
    00000F3A 52E1                   MOV.L       @(4,R14),R2
    00000F3C              L1590:                            
    00000F3C 9322                   MOV.W       L1745,R3   ; H'0570
    00000F3E D112                   MOV.L       L1745+4,R1 ; _symtab
    00000F40 6212                   MOV.L       @R1,R2
    00000F42 323C                   ADD         R3,R2
    00000F44              L1595:                            
    00000F44 A004                   BRA         L1596
    00000F46 5221                   MOV.L       @(4,R2),R2
    00000F48              L1588:                            
    00000F48 931C                   MOV.W       L1745,R3   ; H'0570
    00000F4A D10F                   MOV.L       L1745+4,R1 ; _symtab
    00000F4C 6212                   MOV.L       @R1,R2
    00000F4E 323C                   ADD         R3,R2
    00000F50              L1596:                            
    00000F50 8428                   MOV.B       @(8,R2),R0
    00000F52 2008                   TST         R0,R0
    00000F54 8B24                   BF          L1587
    00000F56 84E8                   MOV.B       @(8,R14),R0
    00000F58 2008                   TST         R0,R0
    00000F5A 8B01                   BF          L1592
    00000F5C A004                   BRA         L1597
    00000F5E 53E1                   MOV.L       @(4,R14),R3
    00000F60              L1592:                            
    00000F60 9210                   MOV.W       L1745,R2   ; H'0570
    00000F62 D109                   MOV.L       L1745+4,R1 ; _symtab
    00000F64 6312                   MOV.L       @R1,R3
    00000F66 332C                   ADD         R2,R3
    00000F68              L1597:                            
    00000F68 8438                   MOV.B       @(8,R3),R0
    00000F6A 2008                   TST         R0,R0
    00000F6C 8B12                   BF          L1591
    00000F6E 84E8                   MOV.B       @(8,R14),R0
    00000F70 2008                   TST         R0,R0
    00000F72 8B01                   BF          L1593
    00000F74 A004                   BRA         L1598
    00000F76 52E1                   MOV.L       @(4,R14),R2
    00000F78              L1593:                            
    00000F78 9304                   MOV.W       L1745,R3   ; H'0570
    00000F7A D103                   MOV.L       L1745+4,R1 ; _symtab
    00000F7C 6212                   MOV.L       @R1,R2
    00000F7E 323C                   ADD         R3,R2
    00000F80              L1598:                            
    00000F80 A00C                   BRA         L1599
    00000F82 5221                   MOV.L       @(4,R2),R2
    00000F84              L1745:                            
    00000F84 0570                   .DATA.W     H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F86 0384                   .DATA.W     H'0384
    00000F88 <00000000>             .DATA.L     _symtab
    00000F8C <00000000>             .DATA.L     _imaginaryunit
    00000F90 <00000000>             .DATA.L     _equal
    00000F94              L1591:                            
    00000F94 935F                   MOV.W       L1747,R3   ; H'0570
    00000F96 D131                   MOV.L       L1747+6,R1 ; _symtab
    00000F98 6212                   MOV.L       @R1,R2
    00000F9A 323C                   ADD         R3,R2
    00000F9C              L1599:                            
    00000F9C A004                   BRA         L1600
    00000F9E 6322                   MOV.L       @R2,R3
    00000FA0              L1587:                            
    00000FA0 9259                   MOV.W       L1747,R2   ; H'0570
    00000FA2 D12E                   MOV.L       L1747+6,R1 ; _symtab
    00000FA4 6312                   MOV.L       @R1,R3
    00000FA6 332C                   ADD         R2,R3
    00000FA8              L1600:                            
    00000FA8 9256                   MOV.W       L1747+2,R2 ; H'05F4
    00000FAA 60C2                   MOV.L       @R12,R0
    00000FAC 302C                   ADD         R2,R0
    00000FAE 3300                   CMP/EQ      R0,R3
    00000FB0 8901                   BT          L1748
    00000FB2 A160                   BRA         L1723
    00000FB4 0009                   NOP
    00000FB6              L1748:                            
            is.c   382                            return 0;
            is.c   383    
            is.c   384                    if (length(p) != 3)
    00000FB6 D22A                   MOV.L       L1747+10,R2; _length
    00000FB8 420B                   JSR         @R2
    00000FBA 64E3                   MOV         R14,R4
    00000FBC 8803                   CMP/EQ      #3,R0
    00000FBE 8901                   BT          L1749
    00000FC0 A159                   BRA         L1723
    00000FC2 0009                   NOP
    00000FC4              L1749:                            
            is.c   385                            return 0;
            is.c   386    
            is.c   387                    return 2;
    00000FC4 A190                   BRA         L1578
    00000FC6 E002                   MOV         #2,R0
    00000FC8              L1579:                            
            is.c   388            }
            is.c   389    
            is.c   390            if (!isnum(cadr(p)))
    00000FC8 84E8                   MOV.B       @(8,R14),R0
    00000FCA 2008                   TST         R0,R0
    00000FCC 8B01                   BF          L1604
    00000FCE A004                   BRA         L1609
    00000FD0 50E1                   MOV.L       @(4,R14),R0
    00000FD2              L1604:                            
    00000FD2 9340                   MOV.W       L1747,R3   ; H'0570
    00000FD4 D221                   MOV.L       L1747+6,R2 ; _symtab
    00000FD6 6022                   MOV.L       @R2,R0
    00000FD8 303C                   ADD         R3,R0
    00000FDA              L1609:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FDA 8408                   MOV.B       @(8,R0),R0
    00000FDC 2008                   TST         R0,R0
    00000FDE 8B0A                   BF          L1603
    00000FE0 84E8                   MOV.B       @(8,R14),R0
    00000FE2 2008                   TST         R0,R0
    00000FE4 8B01                   BF          L1605
    00000FE6 A004                   BRA         L1610
    00000FE8 50E1                   MOV.L       @(4,R14),R0
    00000FEA              L1605:                            
    00000FEA 9334                   MOV.W       L1747,R3   ; H'0570
    00000FEC D21B                   MOV.L       L1747+6,R2 ; _symtab
    00000FEE 6022                   MOV.L       @R2,R0
    00000FF0 303C                   ADD         R3,R0
    00000FF2              L1610:                            
    00000FF2 A004                   BRA         L1611
    00000FF4 6002                   MOV.L       @R0,R0
    00000FF6              L1603:                            
    00000FF6 932E                   MOV.W       L1747,R3   ; H'0570
    00000FF8 D218                   MOV.L       L1747+6,R2 ; _symtab
    00000FFA 6022                   MOV.L       @R2,R0
    00000FFC 303C                   ADD         R3,R0
    00000FFE              L1611:                            
    00000FFE 8408                   MOV.B       @(8,R0),R0
    00001000 600C                   EXTU.B      R0,R0
    00001002 8801                   CMP/EQ      #1,R0
    00001004 8920                   BT          L1602
    00001006 84E8                   MOV.B       @(8,R14),R0
    00001008 2008                   TST         R0,R0
    0000100A 8B01                   BF          L1607
    0000100C A004                   BRA         L1612
    0000100E 50E1                   MOV.L       @(4,R14),R0
    00001010              L1607:                            
    00001010 9321                   MOV.W       L1747,R3   ; H'0570
    00001012 D212                   MOV.L       L1747+6,R2 ; _symtab
    00001014 6022                   MOV.L       @R2,R0
    00001016 303C                   ADD         R3,R0
    00001018              L1612:                            
    00001018 8408                   MOV.B       @(8,R0),R0
    0000101A 2008                   TST         R0,R0
    0000101C 8B0A                   BF          L1606
    0000101E 84E8                   MOV.B       @(8,R14),R0
    00001020 2008                   TST         R0,R0
    00001022 8B01                   BF          L1608
    00001024 A004                   BRA         L1613
    00001026 50E1                   MOV.L       @(4,R14),R0
    00001028              L1608:                            
    00001028 9315                   MOV.W       L1747,R3   ; H'0570
    0000102A D20C                   MOV.L       L1747+6,R2 ; _symtab
    0000102C 6022                   MOV.L       @R2,R0
    0000102E 303C                   ADD         R3,R0
    00001030              L1613:                            
    00001030 A004                   BRA         L1614
    00001032 6002                   MOV.L       @R0,R0
    00001034              L1606:                            
    00001034 930F                   MOV.W       L1747,R3   ; H'0570
    00001036 D209                   MOV.L       L1747+6,R2 ; _symtab
    00001038 6022                   MOV.L       @R2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000103A 303C                   ADD         R3,R0
    0000103C              L1614:                            
    0000103C 8408                   MOV.B       @(8,R0),R0
    0000103E 600C                   EXTU.B      R0,R0
    00001040 8802                   CMP/EQ      #2,R0
    00001042 8901                   BT          L1750
    00001044 A117                   BRA         L1723
    00001046 0009                   NOP
    00001048              L1750:                            
    00001048              L1602:                            
            is.c   391                    return 0;
            is.c   392    
            is.c   393            if (!equal(caddr(p), imaginaryunit))
    00001048 D206                   MOV.L       L1747+14,R2; _imaginaryunit
    0000104A 84E8                   MOV.B       @(8,R14),R0
    0000104C 2008                   TST         R0,R0
    0000104E 8F0B                   BF/S        L1618
    00001050 6522                   MOV.L       @R2,R5
    00001052 A00D                   BRA         L1623
    00001054 54E1                   MOV.L       @(4,R14),R4
    00001056              L1747:                            
    00001056 0570                   .DATA.W     H'0570
    00001058 05F4                   .DATA.W     H'05F4
    0000105A 0000                   .DATA.W     0
    0000105C <00000000>             .DATA.L     _symtab
    00001060 <00000000>             .DATA.L     _length
    00001064 <00000000>             .DATA.L     _imaginaryunit
    00001068              L1618:                            
    00001068 9356                   MOV.W       L1751,R3   ; H'0570
    0000106A D12C                   MOV.L       L1751+4,R1 ; _symtab
    0000106C 6412                   MOV.L       @R1,R4
    0000106E 343C                   ADD         R3,R4
    00001070              L1623:                            
    00001070 8448                   MOV.B       @(8,R4),R0
    00001072 2008                   TST         R0,R0
    00001074 8B0A                   BF          L1617
    00001076 84E8                   MOV.B       @(8,R14),R0
    00001078 2008                   TST         R0,R0
    0000107A 8B01                   BF          L1619
    0000107C A004                   BRA         L1624
    0000107E 54E1                   MOV.L       @(4,R14),R4
    00001080              L1619:                            
    00001080 934A                   MOV.W       L1751,R3   ; H'0570
    00001082 D226                   MOV.L       L1751+4,R2 ; _symtab
    00001084 6422                   MOV.L       @R2,R4
    00001086 343C                   ADD         R3,R4
    00001088              L1624:                            
    00001088 A004                   BRA         L1625
    0000108A 5441                   MOV.L       @(4,R4),R4
    0000108C              L1617:                            
    0000108C 9344                   MOV.W       L1751,R3   ; H'0570
    0000108E D223                   MOV.L       L1751+4,R2 ; _symtab
    00001090 6422                   MOV.L       @R2,R4
    00001092 343C                   ADD         R3,R4
    00001094              L1625:                            
    00001094 8448                   MOV.B       @(8,R4),R0
    00001096 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001098 8B1C                   BF          L1616
    0000109A 84E8                   MOV.B       @(8,R14),R0
    0000109C 2008                   TST         R0,R0
    0000109E 8B01                   BF          L1621
    000010A0 A004                   BRA         L1626
    000010A2 54E1                   MOV.L       @(4,R14),R4
    000010A4              L1621:                            
    000010A4 9338                   MOV.W       L1751,R3   ; H'0570
    000010A6 D21D                   MOV.L       L1751+4,R2 ; _symtab
    000010A8 6422                   MOV.L       @R2,R4
    000010AA 343C                   ADD         R3,R4
    000010AC              L1626:                            
    000010AC 8448                   MOV.B       @(8,R4),R0
    000010AE 2008                   TST         R0,R0
    000010B0 8B0A                   BF          L1620
    000010B2 84E8                   MOV.B       @(8,R14),R0
    000010B4 2008                   TST         R0,R0
    000010B6 8B01                   BF          L1622
    000010B8 A004                   BRA         L1627
    000010BA 54E1                   MOV.L       @(4,R14),R4
    000010BC              L1622:                            
    000010BC 932C                   MOV.W       L1751,R3   ; H'0570
    000010BE D217                   MOV.L       L1751+4,R2 ; _symtab
    000010C0 6422                   MOV.L       @R2,R4
    000010C2 343C                   ADD         R3,R4
    000010C4              L1627:                            
    000010C4 A004                   BRA         L1628
    000010C6 5441                   MOV.L       @(4,R4),R4
    000010C8              L1620:                            
    000010C8 9326                   MOV.W       L1751,R3   ; H'0570
    000010CA D214                   MOV.L       L1751+4,R2 ; _symtab
    000010CC 6422                   MOV.L       @R2,R4
    000010CE 343C                   ADD         R3,R4
    000010D0              L1628:                            
    000010D0 A004                   BRA         L1629
    000010D2 6442                   MOV.L       @R4,R4
    000010D4              L1616:                            
    000010D4 9320                   MOV.W       L1751,R3   ; H'0570
    000010D6 D211                   MOV.L       L1751+4,R2 ; _symtab
    000010D8 6422                   MOV.L       @R2,R4
    000010DA 343C                   ADD         R3,R4
    000010DC              L1629:                            
    000010DC D310                   MOV.L       L1751+8,R3 ; _equal
    000010DE 430B                   JSR         @R3
    000010E0 0009                   NOP
    000010E2 2008                   TST         R0,R0
    000010E4 8B01                   BF          L1752
    000010E6 A0C6                   BRA         L1723
    000010E8 0009                   NOP
    000010EA              L1752:                            
            is.c   394                    return 0;
            is.c   395    
            is.c   396            if (cadddr(p) != symbol(PI))
    000010EA 84E8                   MOV.B       @(8,R14),R0
    000010EC 2008                   TST         R0,R0
    000010EE 8B01                   BF          L1634
    000010F0 A004                   BRA         L1646




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010F2 53E1                   MOV.L       @(4,R14),R3
    000010F4              L1634:                            
    000010F4 9210                   MOV.W       L1751,R2   ; H'0570
    000010F6 D109                   MOV.L       L1751+4,R1 ; _symtab
    000010F8 6312                   MOV.L       @R1,R3
    000010FA 332C                   ADD         R2,R3
    000010FC              L1646:                            
    000010FC 8438                   MOV.B       @(8,R3),R0
    000010FE 2008                   TST         R0,R0
    00001100 8B10                   BF          L1633
    00001102 84E8                   MOV.B       @(8,R14),R0
    00001104 2008                   TST         R0,R0
    00001106 8B01                   BF          L1635
    00001108 A004                   BRA         L1647
    0000110A 52E1                   MOV.L       @(4,R14),R2
    0000110C              L1635:                            
    0000110C 9304                   MOV.W       L1751,R3   ; H'0570
    0000110E D103                   MOV.L       L1751+4,R1 ; _symtab
    00001110 6212                   MOV.L       @R1,R2
    00001112 323C                   ADD         R3,R2
    00001114              L1647:                            
    00001114 A00A                   BRA         L1648
    00001116 5221                   MOV.L       @(4,R2),R2
    00001118              L1751:                            
    00001118 0570                   .DATA.W     H'0570
    0000111A 0000                   .DATA.W     0
    0000111C <00000000>             .DATA.L     _symtab
    00001120 <00000000>             .DATA.L     _equal
    00001124              L1633:                            
    00001124 935E                   MOV.W       L1753,R3   ; H'0570
    00001126 D130                   MOV.L       L1753+4,R1 ; _symtab
    00001128 6212                   MOV.L       @R1,R2
    0000112A 323C                   ADD         R3,R2
    0000112C              L1648:                            
    0000112C 8428                   MOV.B       @(8,R2),R0
    0000112E 2008                   TST         R0,R0
    00001130 8B1C                   BF          L1632
    00001132 84E8                   MOV.B       @(8,R14),R0
    00001134 2008                   TST         R0,R0
    00001136 8B01                   BF          L1637
    00001138 A004                   BRA         L1649
    0000113A 53E1                   MOV.L       @(4,R14),R3
    0000113C              L1637:                            
    0000113C 9252                   MOV.W       L1753,R2   ; H'0570
    0000113E D12A                   MOV.L       L1753+4,R1 ; _symtab
    00001140 6312                   MOV.L       @R1,R3
    00001142 332C                   ADD         R2,R3
    00001144              L1649:                            
    00001144 8438                   MOV.B       @(8,R3),R0
    00001146 2008                   TST         R0,R0
    00001148 8B0A                   BF          L1636
    0000114A 84E8                   MOV.B       @(8,R14),R0
    0000114C 2008                   TST         R0,R0
    0000114E 8B01                   BF          L1638
    00001150 A004                   BRA         L1650
    00001152 52E1                   MOV.L       @(4,R14),R2
    00001154              L1638:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001154 9346                   MOV.W       L1753,R3   ; H'0570
    00001156 D124                   MOV.L       L1753+4,R1 ; _symtab
    00001158 6212                   MOV.L       @R1,R2
    0000115A 323C                   ADD         R3,R2
    0000115C              L1650:                            
    0000115C A004                   BRA         L1651
    0000115E 5221                   MOV.L       @(4,R2),R2
    00001160              L1636:                            
    00001160 9340                   MOV.W       L1753,R3   ; H'0570
    00001162 D121                   MOV.L       L1753+4,R1 ; _symtab
    00001164 6212                   MOV.L       @R1,R2
    00001166 323C                   ADD         R3,R2
    00001168              L1651:                            
    00001168 A004                   BRA         L1652
    0000116A 5321                   MOV.L       @(4,R2),R3
    0000116C              L1632:                            
    0000116C 923A                   MOV.W       L1753,R2   ; H'0570
    0000116E D11E                   MOV.L       L1753+4,R1 ; _symtab
    00001170 6312                   MOV.L       @R1,R3
    00001172 332C                   ADD         R2,R3
    00001174              L1652:                            
    00001174 8438                   MOV.B       @(8,R3),R0
    00001176 2008                   TST         R0,R0
    00001178 8B44                   BF          L1631
    0000117A 84E8                   MOV.B       @(8,R14),R0
    0000117C 2008                   TST         R0,R0
    0000117E 8B01                   BF          L1641
    00001180 A004                   BRA         L1653
    00001182 52E1                   MOV.L       @(4,R14),R2
    00001184              L1641:                            
    00001184 932E                   MOV.W       L1753,R3   ; H'0570
    00001186 D118                   MOV.L       L1753+4,R1 ; _symtab
    00001188 6212                   MOV.L       @R1,R2
    0000118A 323C                   ADD         R3,R2
    0000118C              L1653:                            
    0000118C 8428                   MOV.B       @(8,R2),R0
    0000118E 2008                   TST         R0,R0
    00001190 8B0A                   BF          L1640
    00001192 84E8                   MOV.B       @(8,R14),R0
    00001194 2008                   TST         R0,R0
    00001196 8B01                   BF          L1642
    00001198 A004                   BRA         L1654
    0000119A 52E1                   MOV.L       @(4,R14),R2
    0000119C              L1642:                            
    0000119C 9322                   MOV.W       L1753,R3   ; H'0570
    0000119E D112                   MOV.L       L1753+4,R1 ; _symtab
    000011A0 6212                   MOV.L       @R1,R2
    000011A2 323C                   ADD         R3,R2
    000011A4              L1654:                            
    000011A4 A004                   BRA         L1655
    000011A6 5321                   MOV.L       @(4,R2),R3
    000011A8              L1640:                            
    000011A8 921C                   MOV.W       L1753,R2   ; H'0570
    000011AA D10F                   MOV.L       L1753+4,R1 ; _symtab
    000011AC 6312                   MOV.L       @R1,R3
    000011AE 332C                   ADD         R2,R3
    000011B0              L1655:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011B0 8438                   MOV.B       @(8,R3),R0
    000011B2 2008                   TST         R0,R0
    000011B4 8B20                   BF          L1639
    000011B6 84E8                   MOV.B       @(8,R14),R0
    000011B8 2008                   TST         R0,R0
    000011BA 8B01                   BF          L1644
    000011BC A004                   BRA         L1656
    000011BE 53E1                   MOV.L       @(4,R14),R3
    000011C0              L1644:                            
    000011C0 9210                   MOV.W       L1753,R2   ; H'0570
    000011C2 D109                   MOV.L       L1753+4,R1 ; _symtab
    000011C4 6312                   MOV.L       @R1,R3
    000011C6 332C                   ADD         R2,R3
    000011C8              L1656:                            
    000011C8 8438                   MOV.B       @(8,R3),R0
    000011CA 2008                   TST         R0,R0
    000011CC 8B0E                   BF          L1643
    000011CE 84E8                   MOV.B       @(8,R14),R0
    000011D0 2008                   TST         R0,R0
    000011D2 8B01                   BF          L1645
    000011D4 A004                   BRA         L1657
    000011D6 52E1                   MOV.L       @(4,R14),R2
    000011D8              L1645:                            
    000011D8 9304                   MOV.W       L1753,R3   ; H'0570
    000011DA D103                   MOV.L       L1753+4,R1 ; _symtab
    000011DC 6212                   MOV.L       @R1,R2
    000011DE 323C                   ADD         R3,R2
    000011E0              L1657:                            
    000011E0 A008                   BRA         L1658
    000011E2 5221                   MOV.L       @(4,R2),R2
    000011E4              L1753:                            
    000011E4 0570                   .DATA.W     H'0570
    000011E6 0000                   .DATA.W     0
    000011E8 <00000000>             .DATA.L     _symtab
    000011EC              L1643:                            
    000011EC 9360                   MOV.W       L1754,R3   ; H'0570
    000011EE D131                   MOV.L       L1754+4,R1 ; _symtab
    000011F0 6212                   MOV.L       @R1,R2
    000011F2 323C                   ADD         R3,R2
    000011F4              L1658:                            
    000011F4 A004                   BRA         L1659
    000011F6 5221                   MOV.L       @(4,R2),R2
    000011F8              L1639:                            
    000011F8 935A                   MOV.W       L1754,R3   ; H'0570
    000011FA D12E                   MOV.L       L1754+4,R1 ; _symtab
    000011FC 6212                   MOV.L       @R1,R2
    000011FE 323C                   ADD         R3,R2
    00001200              L1659:                            
    00001200 A004                   BRA         L1660
    00001202 6222                   MOV.L       @R2,R2
    00001204              L1631:                            
    00001204 9354                   MOV.W       L1754,R3   ; H'0570
    00001206 D12B                   MOV.L       L1754+4,R1 ; _symtab
    00001208 6212                   MOV.L       @R1,R2
    0000120A 323C                   ADD         R3,R2
    0000120C              L1660:                            
    0000120C 9351                   MOV.W       L1754+2,R3 ; H'05F4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000120E 60C2                   MOV.L       @R12,R0
    00001210 303C                   ADD         R3,R0
    00001212 3200                   CMP/EQ      R0,R2
    00001214 8B2F                   BF          L1723
            is.c   397                    return 0;
            is.c   398    
            is.c   399            if (length(p) != 4)
    00001216 D228                   MOV.L       L1754+8,R2 ; _length
    00001218 420B                   JSR         @R2
    0000121A 64E3                   MOV         R14,R4
    0000121C 8804                   CMP/EQ      #4,R0
    0000121E 8B2A                   BF          L1723
            is.c   400                    return 0;
            is.c   401    
            is.c   402            push(cadr(p));
    00001220 84E8                   MOV.B       @(8,R14),R0
    00001222 2008                   TST         R0,R0
    00001224 8B01                   BF          L1663
    00001226 A004                   BRA         L1665
    00001228 54E1                   MOV.L       @(4,R14),R4
    0000122A              L1663:                            
    0000122A 9341                   MOV.W       L1754,R3   ; H'0570
    0000122C D221                   MOV.L       L1754+4,R2 ; _symtab
    0000122E 6422                   MOV.L       @R2,R4
    00001230 343C                   ADD         R3,R4
    00001232              L1665:                            
    00001232 8448                   MOV.B       @(8,R4),R0
    00001234 2008                   TST         R0,R0
    00001236 8B0A                   BF          L1662
    00001238 84E8                   MOV.B       @(8,R14),R0
    0000123A 2008                   TST         R0,R0
    0000123C 8B01                   BF          L1664
    0000123E A004                   BRA         L1666
    00001240 54E1                   MOV.L       @(4,R14),R4
    00001242              L1664:                            
    00001242 9335                   MOV.W       L1754,R3   ; H'0570
    00001244 D21B                   MOV.L       L1754+4,R2 ; _symtab
    00001246 6422                   MOV.L       @R2,R4
    00001248 343C                   ADD         R3,R4
    0000124A              L1666:                            
    0000124A A004                   BRA         L1667
    0000124C 6442                   MOV.L       @R4,R4
    0000124E              L1662:                            
    0000124E 932F                   MOV.W       L1754,R3   ; H'0570
    00001250 D218                   MOV.L       L1754+4,R2 ; _symtab
    00001252 6422                   MOV.L       @R2,R4
    00001254 343C                   ADD         R3,R4
    00001256              L1667:                            
    00001256 D319                   MOV.L       L1754+12,R3; _push
    00001258 430B                   JSR         @R3
    0000125A 0009                   NOP
            is.c   403            push_integer(2);
    0000125C D218                   MOV.L       L1754+16,R2; _push_integer
    0000125E 420B                   JSR         @R2
    00001260 E402                   MOV         #2,R4
            is.c   404            multiply();
    00001262 D318                   MOV.L       L1754+20,R3; _multiply




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001264 430B                   JSR         @R3
    00001266 0009                   NOP
            is.c   405    
            is.c   406            n = pop_integer();
    00001268 D217                   MOV.L       L1754+24,R2; _pop_integer
    0000126A 420B                   JSR         @R2
    0000126C 0009                   NOP
    0000126E 6403                   MOV         R0,R4
            is.c   407    
            is.c   408            if (n == (int) 0x80000000)
    00001270 D316                   MOV.L       L1754+28,R3; H'80000000
    00001272 3430                   CMP/EQ      R3,R4
    00001274 8B01                   BF          L1668
    00001276              L1723:                            
            is.c   409                    return 0;
    00001276 A037                   BRA         L1578
    00001278 E000                   MOV         #0,R0
    0000127A              L1668:                            
            is.c   410    
            is.c   411            if (n < 1) {
    0000127A E501                   MOV         #1,R5
    0000127C 3453                   CMP/GE      R5,R4
    0000127E 8901                   BT          L1669
            is.c   412                    minussign = 1;
    00001280 6D53                   MOV         R5,R13
            is.c   413                    n = -n;
    00001282 644B                   NEG         R4,R4
    00001284              L1669:                            
            is.c   414            }
            is.c   415    
            is.c   416            switch (n % 4) {
    00001284 6043                   MOV         R4,R0
    00001286 4011                   CMP/PZ      R0
    00001288 8B01                   BF          L1670
    0000128A A005                   BRA         L1671
    0000128C C903                   AND         #3,R0
    0000128E              L1670:                            
    0000128E 6007                   NOT         R0,R0
    00001290 7001                   ADD         #1,R0
    00001292 C903                   AND         #3,R0
    00001294 6007                   NOT         R0,R0
    00001296 7001                   ADD         #1,R0
    00001298              L1671:                            
    00001298 8800                   CMP/EQ      #0,R0
    0000129A 8907                   BT          L1209
    0000129C 8801                   CMP/EQ      #1,R0
    0000129E 8917                   BT          L1210
    000012A0 8802                   CMP/EQ      #2,R0
    000012A2 8919                   BT          L1211
    000012A4 8803                   CMP/EQ      #3,R0
    000012A6 8919                   BT          L1212
    000012A8 A01D                   BRA         L1672
    000012AA 0009                   NOP
    000012AC              L1209:                           ; case label 
            is.c   417            case 0:
            is.c   418                    n = 1;
            is.c   419                    break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012AC A01B                   BRA         L1672
    000012AE 6453                   MOV         R5,R4
    000012B0              L1754:                            
    000012B0 0570                   .DATA.W     H'0570
    000012B2 05F4                   .DATA.W     H'05F4
    000012B4 <00000000>             .DATA.L     _symtab
    000012B8 <00000000>             .DATA.L     _length
    000012BC <00000000>             .DATA.L     _push
    000012C0 <00000000>             .DATA.L     _push_integer
    000012C4 <00000000>             .DATA.L     _multiply
    000012C8 <00000000>             .DATA.L     _pop_integer
    000012CC 80000000               .DATA.L     H'80000000
    000012D0              L1210:                           ; case label 
            is.c   420            case 1:
            is.c   421                    if (minussign)
    000012D0 2DD8                   TST         R13,R13
    000012D2 8B07                   BF          L1183
    000012D4 A004                   BRA         L1178
    000012D6 0009                   NOP
    000012D8              L1211:                           ; case label 
            is.c   422                            n = 4;
            is.c   423                    else
            is.c   424                            n = 3;
            is.c   425                    break;
            is.c   426            case 2:
            is.c   427                    n = 2;
            is.c   428                    break;
    000012D8 A005                   BRA         L1672
    000012DA E402                   MOV         #2,R4
    000012DC              L1212:                           ; case label 
            is.c   429            case 3:
            is.c   430                    if (minussign)
    000012DC 2DD8                   TST         R13,R13
    000012DE 8901                   BT          L1183
    000012E0              L1178:
            is.c   431                            n = 3;
    000012E0 A001                   BRA         L1672
    000012E2 E403                   MOV         #3,R4
    000012E4              L1183:
            is.c   432                    else
            is.c   433                            n = 4;
    000012E4 E404                   MOV         #4,R4
            is.c   434                    break;
    000012E6              L1672:                            
            is.c   435            }       
            is.c   436    
            is.c   437            return n;
    000012E6 6043                   MOV         R4,R0
            is.c   438    }
    000012E8              L1578:                            
    000012E8 4F26                   LDS.L       @R15+,PR
    000012EA 6CF6                   MOV.L       @R15+,R12
    000012EC 6DF6                   MOV.L       @R15+,R13
    000012EE 000B                   RTS
    000012F0 6EF6                   MOV.L       @R15+,R14
            is.c   439    
            is.c   440    // special multiple of pi?




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

            is.c   441    
            is.c   442    // returns for the following multiples of pi...
            is.c   443    
            is.c   444    //      -4/2    -3/2    -2/2    -1/2    1/2     2/2     3/2     4/2
            is.c   445    
            is.c   446    //      4       1       2       3       1       2       3       4
            is.c   447    
            is.c   448    int
            is.c   449    isnpi(U *p)
    000012F2              _isnpi:                          ; function: isnpi
                                                           ; frame size=12
    000012F2 2FE6                   MOV.L       R14,@-R15
    000012F4 2FD6                   MOV.L       R13,@-R15
    000012F6 6E43                   MOV         R4,R14
            is.c   450    {
            is.c   451            int n;
            is.c   452            if (p == symbol(PI))
    000012F8 9348                   MOV.W       L1755,R3   ; H'05F4
    000012FA 4F22                   STS.L       PR,@-R15
    000012FC DD25                   MOV.L       L1755+8,R13; _symtab
    000012FE 62D2                   MOV.L       @R13,R2
    00001300 323C                   ADD         R3,R2
    00001302 3E20                   CMP/EQ      R2,R14
    00001304 8B01                   BF          L1677
            is.c   453                    return 2;
    00001306 A0E0                   BRA         L1678
    00001308 E002                   MOV         #2,R0
    0000130A              L1677:                            
            is.c   454            if (car(p) == symbol(MULTIPLY)
            is.c   455            && isnum(cadr(p))
            is.c   456            && caddr(p) == symbol(PI)
            is.c   457            && length(p) == 3)
    0000130A 84E8                   MOV.B       @(8,R14),R0
    0000130C 2008                   TST         R0,R0
    0000130E 8B01                   BF          L1680
    00001310 A004                   BRA         L1695
    00001312 63E2                   MOV.L       @R14,R3
    00001314              L1680:                            
    00001314 923B                   MOV.W       L1755+2,R2 ; H'0570
    00001316 D11F                   MOV.L       L1755+8,R1 ; _symtab
    00001318 6312                   MOV.L       @R1,R3
    0000131A 332C                   ADD         R2,R3
    0000131C              L1695:                            
    0000131C 9238                   MOV.W       L1755+4,R2 ; H'0384
    0000131E 60D2                   MOV.L       @R13,R0
    00001320 302C                   ADD         R2,R0
    00001322 3300                   CMP/EQ      R0,R3
    00001324 8901                   BT          L1756
    00001326 A0B1                   BRA         L1189
    00001328 0009                   NOP
    0000132A              L1756:                            
    0000132A 84E8                   MOV.B       @(8,R14),R0
    0000132C 2008                   TST         R0,R0
    0000132E 8B01                   BF          L1683
    00001330 A003                   BRA         L1696
    00001332 50E1                   MOV.L       @(4,R14),R0
    00001334              L1683:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001334 932B                   MOV.W       L1755+2,R3 ; H'0570
    00001336 60D2                   MOV.L       @R13,R0
    00001338 303C                   ADD         R3,R0
    0000133A              L1696:                            
    0000133A 8408                   MOV.B       @(8,R0),R0
    0000133C 2008                   TST         R0,R0
    0000133E 8B09                   BF          L1682
    00001340 84E8                   MOV.B       @(8,R14),R0
    00001342 2008                   TST         R0,R0
    00001344 8B01                   BF          L1684
    00001346 A003                   BRA         L1697
    00001348 50E1                   MOV.L       @(4,R14),R0
    0000134A              L1684:                            
    0000134A 9320                   MOV.W       L1755+2,R3 ; H'0570
    0000134C 60D2                   MOV.L       @R13,R0
    0000134E 303C                   ADD         R3,R0
    00001350              L1697:                            
    00001350 A003                   BRA         L1698
    00001352 6002                   MOV.L       @R0,R0
    00001354              L1682:                            
    00001354 931B                   MOV.W       L1755+2,R3 ; H'0570
    00001356 60D2                   MOV.L       @R13,R0
    00001358 303C                   ADD         R3,R0
    0000135A              L1698:                            
    0000135A 8408                   MOV.B       @(8,R0),R0
    0000135C 600C                   EXTU.B      R0,R0
    0000135E 8801                   CMP/EQ      #1,R0
    00001360 8921                   BT          L1681
    00001362 84E8                   MOV.B       @(8,R14),R0
    00001364 2008                   TST         R0,R0
    00001366 8B01                   BF          L1686
    00001368 A003                   BRA         L1699
    0000136A 50E1                   MOV.L       @(4,R14),R0
    0000136C              L1686:                            
    0000136C 930F                   MOV.W       L1755+2,R3 ; H'0570
    0000136E 60D2                   MOV.L       @R13,R0
    00001370 303C                   ADD         R3,R0
    00001372              L1699:                            
    00001372 8408                   MOV.B       @(8,R0),R0
    00001374 2008                   TST         R0,R0
    00001376 8B0F                   BF          L1685
    00001378 84E8                   MOV.B       @(8,R14),R0
    0000137A 2008                   TST         R0,R0
    0000137C 8B01                   BF          L1687
    0000137E A003                   BRA         L1700
    00001380 50E1                   MOV.L       @(4,R14),R0
    00001382              L1687:                            
    00001382 9304                   MOV.W       L1755+2,R3 ; H'0570
    00001384 60D2                   MOV.L       @R13,R0
    00001386 303C                   ADD         R3,R0
    00001388              L1700:                            
    00001388 A009                   BRA         L1701
    0000138A 6002                   MOV.L       @R0,R0
    0000138C              L1755:                            
    0000138C 05F4                   .DATA.W     H'05F4
    0000138E 0570                   .DATA.W     H'0570
    00001390 0384                   .DATA.W     H'0384




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001392 0000                   .DATA.W     0
    00001394 <00000000>             .DATA.L     _symtab
    00001398              L1685:                            
    00001398 935E                   MOV.W       L1757,R3   ; H'0570
    0000139A 60D2                   MOV.L       @R13,R0
    0000139C 303C                   ADD         R3,R0
    0000139E              L1701:                            
    0000139E 8408                   MOV.B       @(8,R0),R0
    000013A0 600C                   EXTU.B      R0,R0
    000013A2 8802                   CMP/EQ      #2,R0
    000013A4 8B72                   BF          L1189
    000013A6              L1681:                            
    000013A6 84E8                   MOV.B       @(8,R14),R0
    000013A8 2008                   TST         R0,R0
    000013AA 8B01                   BF          L1690
    000013AC A003                   BRA         L1702
    000013AE 52E1                   MOV.L       @(4,R14),R2
    000013B0              L1690:                            
    000013B0 9352                   MOV.W       L1757,R3   ; H'0570
    000013B2 62D2                   MOV.L       @R13,R2
    000013B4 323C                   ADD         R3,R2
    000013B6              L1702:                            
    000013B6 8428                   MOV.B       @(8,R2),R0
    000013B8 2008                   TST         R0,R0
    000013BA 8B09                   BF          L1689
    000013BC 84E8                   MOV.B       @(8,R14),R0
    000013BE 2008                   TST         R0,R0
    000013C0 8B01                   BF          L1691
    000013C2 A003                   BRA         L1703
    000013C4 52E1                   MOV.L       @(4,R14),R2
    000013C6              L1691:                            
    000013C6 9347                   MOV.W       L1757,R3   ; H'0570
    000013C8 62D2                   MOV.L       @R13,R2
    000013CA 323C                   ADD         R3,R2
    000013CC              L1703:                            
    000013CC A003                   BRA         L1704
    000013CE 5321                   MOV.L       @(4,R2),R3
    000013D0              L1689:                            
    000013D0 9242                   MOV.W       L1757,R2   ; H'0570
    000013D2 63D2                   MOV.L       @R13,R3
    000013D4 332C                   ADD         R2,R3
    000013D6              L1704:                            
    000013D6 8438                   MOV.B       @(8,R3),R0
    000013D8 2008                   TST         R0,R0
    000013DA 8B19                   BF          L1688
    000013DC 84E8                   MOV.B       @(8,R14),R0
    000013DE 2008                   TST         R0,R0
    000013E0 8B01                   BF          L1693
    000013E2 A003                   BRA         L1705
    000013E4 53E1                   MOV.L       @(4,R14),R3
    000013E6              L1693:                            
    000013E6 9237                   MOV.W       L1757,R2   ; H'0570
    000013E8 63D2                   MOV.L       @R13,R3
    000013EA 332C                   ADD         R2,R3
    000013EC              L1705:                            
    000013EC 8438                   MOV.B       @(8,R3),R0
    000013EE 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013F0 8B09                   BF          L1692
    000013F2 84E8                   MOV.B       @(8,R14),R0
    000013F4 2008                   TST         R0,R0
    000013F6 8B01                   BF          L1694
    000013F8 A003                   BRA         L1706
    000013FA 52E1                   MOV.L       @(4,R14),R2
    000013FC              L1694:                            
    000013FC 932C                   MOV.W       L1757,R3   ; H'0570
    000013FE 62D2                   MOV.L       @R13,R2
    00001400 323C                   ADD         R3,R2
    00001402              L1706:                            
    00001402 A003                   BRA         L1707
    00001404 5221                   MOV.L       @(4,R2),R2
    00001406              L1692:                            
    00001406 9327                   MOV.W       L1757,R3   ; H'0570
    00001408 62D2                   MOV.L       @R13,R2
    0000140A 323C                   ADD         R3,R2
    0000140C              L1707:                            
    0000140C A003                   BRA         L1708
    0000140E 6222                   MOV.L       @R2,R2
    00001410              L1688:                            
    00001410 9322                   MOV.W       L1757,R3   ; H'0570
    00001412 62D2                   MOV.L       @R13,R2
    00001414 323C                   ADD         R3,R2
    00001416              L1708:                            
    00001416 9320                   MOV.W       L1757+2,R3 ; H'05F4
    00001418 61D2                   MOV.L       @R13,R1
    0000141A 313C                   ADD         R3,R1
    0000141C 3210                   CMP/EQ      R1,R2
    0000141E 8B35                   BF          L1189
    00001420 D10E                   MOV.L       L1757+4,R1 ; _length
    00001422 410B                   JSR         @R1
    00001424 64E3                   MOV         R14,R4
    00001426 8803                   CMP/EQ      #3,R0
    00001428 8B30                   BF          L1189
            is.c   458                    ;
            is.c   459            else
            is.c   460                    return 0;
            is.c   461            push(cadr(p));
    0000142A 84E8                   MOV.B       @(8,R14),R0
    0000142C 2008                   TST         R0,R0
    0000142E 8B01                   BF          L1711
    00001430 A004                   BRA         L1713
    00001432 54E1                   MOV.L       @(4,R14),R4
    00001434              L1711:                            
    00001434 9310                   MOV.W       L1757,R3   ; H'0570
    00001436 D20A                   MOV.L       L1757+8,R2 ; _symtab
    00001438 6422                   MOV.L       @R2,R4
    0000143A 343C                   ADD         R3,R4
    0000143C              L1713:                            
    0000143C 8448                   MOV.B       @(8,R4),R0
    0000143E 2008                   TST         R0,R0
    00001440 8B10                   BF          L1710
    00001442 84E8                   MOV.B       @(8,R14),R0
    00001444 2008                   TST         R0,R0
    00001446 8B01                   BF          L1712
    00001448 A004                   BRA         L1714




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000144A 54E1                   MOV.L       @(4,R14),R4
    0000144C              L1712:                            
    0000144C 9304                   MOV.W       L1757,R3   ; H'0570
    0000144E D204                   MOV.L       L1757+8,R2 ; _symtab
    00001450 6422                   MOV.L       @R2,R4
    00001452 343C                   ADD         R3,R4
    00001454              L1714:                            
    00001454 A00A                   BRA         L1715
    00001456 6442                   MOV.L       @R4,R4
    00001458              L1757:                            
    00001458 0570                   .DATA.W     H'0570
    0000145A 05F4                   .DATA.W     H'05F4
    0000145C <00000000>             .DATA.L     _length
    00001460 <00000000>             .DATA.L     _symtab
    00001464              L1710:                            
    00001464 9335                   MOV.W       L1758,R3   ; H'0570
    00001466 D21B                   MOV.L       L1758+2,R2 ; _symtab
    00001468 6422                   MOV.L       @R2,R4
    0000146A 343C                   ADD         R3,R4
    0000146C              L1715:                            
    0000146C D31A                   MOV.L       L1758+6,R3 ; _push
    0000146E 430B                   JSR         @R3
    00001470 0009                   NOP
            is.c   462            push_integer(2);
    00001472 D21A                   MOV.L       L1758+10,R2; _push_integer
    00001474 420B                   JSR         @R2
    00001476 E402                   MOV         #2,R4
            is.c   463            multiply();
    00001478 D319                   MOV.L       L1758+14,R3; _multiply
    0000147A 430B                   JSR         @R3
    0000147C 0009                   NOP
            is.c   464            n = pop_integer();
    0000147E D219                   MOV.L       L1758+18,R2; _pop_integer
    00001480 420B                   JSR         @R2
    00001482 0009                   NOP
            is.c   465            if (n == (int) 0x80000000)
    00001484 D318                   MOV.L       L1758+22,R3; H'80000000
    00001486 6403                   MOV         R0,R4
    00001488 3430                   CMP/EQ      R3,R4
    0000148A 8B01                   BF          L1716
    0000148C              L1189:
            is.c   466                    return 0;
    0000148C A01D                   BRA         L1678
    0000148E E000                   MOV         #0,R0
    00001490              L1716:                            
            is.c   467            if (n < 0)
    00001490 4411                   CMP/PZ      R4
    00001492 890C                   BT          L1717
            is.c   468                    n = 4 - (-n) % 4;
    00001494 604B                   NEG         R4,R0
    00001496 4011                   CMP/PZ      R0
    00001498 8F02                   BF/S        L1718
    0000149A E504                   MOV         #4,R5
    0000149C A005                   BRA         L1719
    0000149E C903                   AND         #3,R0
    000014A0              L1718:                            
    000014A0 6007                   NOT         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014A2 7001                   ADD         #1,R0
    000014A4 C903                   AND         #3,R0
    000014A6 6007                   NOT         R0,R0
    000014A8 7001                   ADD         #1,R0
    000014AA              L1719:                            
    000014AA A00D                   BRA         L1720
    000014AC 3508                   SUB         R0,R5
    000014AE              L1717:                            
            is.c   469            else
            is.c   470                    n = 1 + (n - 1) % 4;
    000014AE 6043                   MOV         R4,R0
    000014B0 70FF                   ADD         #-1,R0
    000014B2 4011                   CMP/PZ      R0
    000014B4 8B01                   BF          L1721
    000014B6 A005                   BRA         L1722
    000014B8 C903                   AND         #3,R0
    000014BA              L1721:                            
    000014BA 6007                   NOT         R0,R0
    000014BC 7001                   ADD         #1,R0
    000014BE C903                   AND         #3,R0
    000014C0 6007                   NOT         R0,R0
    000014C2 7001                   ADD         #1,R0
    000014C4              L1722:                            
    000014C4 6503                   MOV         R0,R5
    000014C6 7501                   ADD         #1,R5
    000014C8              L1720:                            
            is.c   471            return n;
    000014C8 6053                   MOV         R5,R0
            is.c   472    }
    000014CA              L1678:                            
    000014CA 4F26                   LDS.L       @R15+,PR
    000014CC 6DF6                   MOV.L       @R15+,R13
    000014CE 000B                   RTS
    000014D0 6EF6                   MOV.L       @R15+,R14
    000014D2              L1758:                            
    000014D2 0570                   .DATA.W     H'0570
    000014D4 <00000000>             .DATA.L     _symtab
    000014D8 <00000000>             .DATA.L     _push
    000014DC <00000000>             .DATA.L     _push_integer
    000014E0 <00000000>             .DATA.L     _multiply
    000014E4 <00000000>             .DATA.L     _pop_integer
    000014E8 80000000               .DATA.L     H'80000000



















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:05  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      472



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000014EC Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000014EC Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           13
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          28
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           511






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk7CF5.tmp 

