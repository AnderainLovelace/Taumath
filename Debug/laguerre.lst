SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\laguerre.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      laguerre.c     1    /* Laguerre function
      laguerre.c     2    
      laguerre.c     3    Example
      laguerre.c     4    
      laguerre.c     5            laguerre(x,3)
      laguerre.c     6    
      laguerre.c     7    Result
      laguerre.c     8    
      laguerre.c     9               1   3    3   2
      laguerre.c    10            - --- x  + --- x  - 3 x + 1
      laguerre.c    11               6        2
      laguerre.c    12    
      laguerre.c    13    The computation uses the following recurrence relation.
      laguerre.c    14    
      laguerre.c    15            L(x,0,k) = 1
      laguerre.c    16    
      laguerre.c    17            L(x,1,k) = -x + k + 1
      laguerre.c    18    
      laguerre.c    19            n*L(x,n,k) = (2*(n-1)+1-x+k)*L(x,n-1,k) - (n-1+k)*L(x,n-2,k)
      laguerre.c    20    
      laguerre.c    21    In the "for" loop i = n-1 so the recurrence relation becomes
      laguerre.c    22    
      laguerre.c    23            (i+1)*L(x,n,k) = (2*i+1-x+k)*L(x,n-1,k) - (i+k)*L(x,n-2,k)
      laguerre.c    24    */
      laguerre.c    25    
      laguerre.c    26    #include "stdafx.h"
      laguerre.c    27    #include "defs.h"
      laguerre.c    28    
      laguerre.c    29    void
      laguerre.c    30    eval_laguerre(void)
P   00000000              _eval_laguerre:                  ; function: eval_laguerre
                                                           ; frame size=16
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 4F22                   STS.L       PR,@-R15
      laguerre.c    31    {
      laguerre.c    32            // 1st arg
      laguerre.c    33    
      laguerre.c    34            push(cadr(p1));
    00000008 DD31                   MOV.L       L1127+2,R13; _push
    0000000A DE32                   MOV.L       L1127+6,R14; _p1
    0000000C 64E2                   MOV.L       @R14,R4
    0000000E 8448                   MOV.B       @(8,R4),R0
    00000010 2008                   TST         R0,R0
    00000012 8B02                   BF          L1070
    00000014 64E2                   MOV.L       @R14,R4
    00000016 A004                   BRA         L1072
    00000018 5441                   MOV.L       @(4,R4),R4
    0000001A              L1070:                            
    0000001A 9358                   MOV.W       L1127,R3   ; H'0570
    0000001C D22E                   MOV.L       L1127+10,R2; _symtab
    0000001E 6422                   MOV.L       @R2,R4
    00000020 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000022              L1072:                            
    00000022 8448                   MOV.B       @(8,R4),R0
    00000024 2008                   TST         R0,R0
    00000026 8B0C                   BF          L1069
    00000028 64E2                   MOV.L       @R14,R4
    0000002A 8448                   MOV.B       @(8,R4),R0
    0000002C 2008                   TST         R0,R0
    0000002E 8B02                   BF          L1071
    00000030 64E2                   MOV.L       @R14,R4
    00000032 A004                   BRA         L1073
    00000034 5441                   MOV.L       @(4,R4),R4
    00000036              L1071:                            
    00000036 934A                   MOV.W       L1127,R3   ; H'0570
    00000038 D227                   MOV.L       L1127+10,R2; _symtab
    0000003A 6422                   MOV.L       @R2,R4
    0000003C 343C                   ADD         R3,R4
    0000003E              L1073:                            
    0000003E A004                   BRA         L1074
    00000040 6442                   MOV.L       @R4,R4
    00000042              L1069:                            
    00000042 9344                   MOV.W       L1127,R3   ; H'0570
    00000044 D224                   MOV.L       L1127+10,R2; _symtab
    00000046 6422                   MOV.L       @R2,R4
    00000048 343C                   ADD         R3,R4
    0000004A              L1074:                            
    0000004A 4D0B                   JSR         @R13
    0000004C 0009                   NOP
      laguerre.c    35            eval();
    0000004E DC23                   MOV.L       L1127+14,R12; _eval
    00000050 4C0B                   JSR         @R12
    00000052 0009                   NOP
      laguerre.c    36    
      laguerre.c    37            // 2nd arg
      laguerre.c    38    
      laguerre.c    39            push(caddr(p1));
    00000054 64E2                   MOV.L       @R14,R4
    00000056 8448                   MOV.B       @(8,R4),R0
    00000058 2008                   TST         R0,R0
    0000005A 8B02                   BF          L1077
    0000005C 64E2                   MOV.L       @R14,R4
    0000005E A004                   BRA         L1082
    00000060 5441                   MOV.L       @(4,R4),R4
    00000062              L1077:                            
    00000062 9334                   MOV.W       L1127,R3   ; H'0570
    00000064 D21C                   MOV.L       L1127+10,R2; _symtab
    00000066 6422                   MOV.L       @R2,R4
    00000068 343C                   ADD         R3,R4
    0000006A              L1082:                            
    0000006A 8448                   MOV.B       @(8,R4),R0
    0000006C 2008                   TST         R0,R0
    0000006E 8B0C                   BF          L1076
    00000070 64E2                   MOV.L       @R14,R4
    00000072 8448                   MOV.B       @(8,R4),R0
    00000074 2008                   TST         R0,R0
    00000076 8B02                   BF          L1078
    00000078 64E2                   MOV.L       @R14,R4
    0000007A A004                   BRA         L1083




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000007C 5441                   MOV.L       @(4,R4),R4
    0000007E              L1078:                            
    0000007E 9326                   MOV.W       L1127,R3   ; H'0570
    00000080 D215                   MOV.L       L1127+10,R2; _symtab
    00000082 6422                   MOV.L       @R2,R4
    00000084 343C                   ADD         R3,R4
    00000086              L1083:                            
    00000086 A004                   BRA         L1084
    00000088 5441                   MOV.L       @(4,R4),R4
    0000008A              L1076:                            
    0000008A 9320                   MOV.W       L1127,R3   ; H'0570
    0000008C D212                   MOV.L       L1127+10,R2; _symtab
    0000008E 6422                   MOV.L       @R2,R4
    00000090 343C                   ADD         R3,R4
    00000092              L1084:                            
    00000092 8448                   MOV.B       @(8,R4),R0
    00000094 2008                   TST         R0,R0
    00000096 8B29                   BF          L1075
    00000098 64E2                   MOV.L       @R14,R4
    0000009A 8448                   MOV.B       @(8,R4),R0
    0000009C 2008                   TST         R0,R0
    0000009E 8B02                   BF          L1080
    000000A0 64E2                   MOV.L       @R14,R4
    000000A2 A004                   BRA         L1085
    000000A4 5441                   MOV.L       @(4,R4),R4
    000000A6              L1080:                            
    000000A6 9312                   MOV.W       L1127,R3   ; H'0570
    000000A8 D20B                   MOV.L       L1127+10,R2; _symtab
    000000AA 6422                   MOV.L       @R2,R4
    000000AC 343C                   ADD         R3,R4
    000000AE              L1085:                            
    000000AE 8448                   MOV.B       @(8,R4),R0
    000000B0 2008                   TST         R0,R0
    000000B2 8B15                   BF          L1079
    000000B4 64E2                   MOV.L       @R14,R4
    000000B6 8448                   MOV.B       @(8,R4),R0
    000000B8 2008                   TST         R0,R0
    000000BA 8B02                   BF          L1081
    000000BC 64E2                   MOV.L       @R14,R4
    000000BE A004                   BRA         L1086
    000000C0 5441                   MOV.L       @(4,R4),R4
    000000C2              L1081:                            
    000000C2 9304                   MOV.W       L1127,R3   ; H'0570
    000000C4 D204                   MOV.L       L1127+10,R2; _symtab
    000000C6 6422                   MOV.L       @R2,R4
    000000C8 343C                   ADD         R3,R4
    000000CA              L1086:                            
    000000CA A00D                   BRA         L1087
    000000CC 5441                   MOV.L       @(4,R4),R4
    000000CE              L1127:                            
    000000CE 0570                   .DATA.W     H'0570
    000000D0 <00000000>             .DATA.L     _push
    000000D4 <00000000>             .DATA.L     _p1
    000000D8 <00000000>             .DATA.L     _symtab
    000000DC <00000000>             .DATA.L     _eval
    000000E0              L1079:                            
    000000E0 935D                   MOV.W       L1128,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000E2 D22F                   MOV.L       L1128+2,R2 ; _symtab
    000000E4 6422                   MOV.L       @R2,R4
    000000E6 343C                   ADD         R3,R4
    000000E8              L1087:                            
    000000E8 A004                   BRA         L1088
    000000EA 6442                   MOV.L       @R4,R4
    000000EC              L1075:                            
    000000EC 9357                   MOV.W       L1128,R3   ; H'0570
    000000EE D22C                   MOV.L       L1128+2,R2 ; _symtab
    000000F0 6422                   MOV.L       @R2,R4
    000000F2 343C                   ADD         R3,R4
    000000F4              L1088:                            
    000000F4 4D0B                   JSR         @R13
    000000F6 0009                   NOP
      laguerre.c    40            eval();
    000000F8 4C0B                   JSR         @R12
    000000FA 0009                   NOP
      laguerre.c    41    
      laguerre.c    42            // 3rd arg
      laguerre.c    43    
      laguerre.c    44            push(cadddr(p1));
    000000FC 64E2                   MOV.L       @R14,R4
    000000FE 8448                   MOV.B       @(8,R4),R0
    00000100 2008                   TST         R0,R0
    00000102 8B02                   BF          L1092
    00000104 64E2                   MOV.L       @R14,R4
    00000106 A004                   BRA         L1104
    00000108 5441                   MOV.L       @(4,R4),R4
    0000010A              L1092:                            
    0000010A 9348                   MOV.W       L1128,R3   ; H'0570
    0000010C D224                   MOV.L       L1128+2,R2 ; _symtab
    0000010E 6422                   MOV.L       @R2,R4
    00000110 343C                   ADD         R3,R4
    00000112              L1104:                            
    00000112 8448                   MOV.B       @(8,R4),R0
    00000114 2008                   TST         R0,R0
    00000116 8B0C                   BF          L1091
    00000118 64E2                   MOV.L       @R14,R4
    0000011A 8448                   MOV.B       @(8,R4),R0
    0000011C 2008                   TST         R0,R0
    0000011E 8B02                   BF          L1093
    00000120 64E2                   MOV.L       @R14,R4
    00000122 A004                   BRA         L1105
    00000124 5441                   MOV.L       @(4,R4),R4
    00000126              L1093:                            
    00000126 933A                   MOV.W       L1128,R3   ; H'0570
    00000128 D21D                   MOV.L       L1128+2,R2 ; _symtab
    0000012A 6422                   MOV.L       @R2,R4
    0000012C 343C                   ADD         R3,R4
    0000012E              L1105:                            
    0000012E A004                   BRA         L1106
    00000130 5441                   MOV.L       @(4,R4),R4
    00000132              L1091:                            
    00000132 9334                   MOV.W       L1128,R3   ; H'0570
    00000134 D21A                   MOV.L       L1128+2,R2 ; _symtab
    00000136 6422                   MOV.L       @R2,R4
    00000138 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000013A              L1106:                            
    0000013A 8448                   MOV.B       @(8,R4),R0
    0000013C 2008                   TST         R0,R0
    0000013E 8B20                   BF          L1090
    00000140 64E2                   MOV.L       @R14,R4
    00000142 8448                   MOV.B       @(8,R4),R0
    00000144 2008                   TST         R0,R0
    00000146 8B02                   BF          L1095
    00000148 64E2                   MOV.L       @R14,R4
    0000014A A004                   BRA         L1107
    0000014C 5441                   MOV.L       @(4,R4),R4
    0000014E              L1095:                            
    0000014E 9326                   MOV.W       L1128,R3   ; H'0570
    00000150 D213                   MOV.L       L1128+2,R2 ; _symtab
    00000152 6422                   MOV.L       @R2,R4
    00000154 343C                   ADD         R3,R4
    00000156              L1107:                            
    00000156 8448                   MOV.B       @(8,R4),R0
    00000158 2008                   TST         R0,R0
    0000015A 8B0C                   BF          L1094
    0000015C 64E2                   MOV.L       @R14,R4
    0000015E 8448                   MOV.B       @(8,R4),R0
    00000160 2008                   TST         R0,R0
    00000162 8B02                   BF          L1096
    00000164 64E2                   MOV.L       @R14,R4
    00000166 A004                   BRA         L1108
    00000168 5441                   MOV.L       @(4,R4),R4
    0000016A              L1096:                            
    0000016A 9318                   MOV.W       L1128,R3   ; H'0570
    0000016C D20C                   MOV.L       L1128+2,R2 ; _symtab
    0000016E 6422                   MOV.L       @R2,R4
    00000170 343C                   ADD         R3,R4
    00000172              L1108:                            
    00000172 A004                   BRA         L1109
    00000174 5441                   MOV.L       @(4,R4),R4
    00000176              L1094:                            
    00000176 9312                   MOV.W       L1128,R3   ; H'0570
    00000178 D209                   MOV.L       L1128+2,R2 ; _symtab
    0000017A 6422                   MOV.L       @R2,R4
    0000017C 343C                   ADD         R3,R4
    0000017E              L1109:                            
    0000017E A004                   BRA         L1110
    00000180 5441                   MOV.L       @(4,R4),R4
    00000182              L1090:                            
    00000182 930C                   MOV.W       L1128,R3   ; H'0570
    00000184 D206                   MOV.L       L1128+2,R2 ; _symtab
    00000186 6422                   MOV.L       @R2,R4
    00000188 343C                   ADD         R3,R4
    0000018A              L1110:                            
    0000018A 8448                   MOV.B       @(8,R4),R0
    0000018C 2008                   TST         R0,R0
    0000018E 8B4B                   BF          L1089
    00000190 64E2                   MOV.L       @R14,R4
    00000192 8448                   MOV.B       @(8,R4),R0
    00000194 2008                   TST         R0,R0
    00000196 8B05                   BF          L1099
    00000198 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000019A A007                   BRA         L1111
    0000019C 5441                   MOV.L       @(4,R4),R4
    0000019E              L1128:                            
    0000019E 0570                   .DATA.W     H'0570
    000001A0 <00000000>             .DATA.L     _symtab
    000001A4              L1099:                            
    000001A4 9359                   MOV.W       L1129,R3   ; H'0570
    000001A6 D22D                   MOV.L       L1129+2,R2 ; _symtab
    000001A8 6422                   MOV.L       @R2,R4
    000001AA 343C                   ADD         R3,R4
    000001AC              L1111:                            
    000001AC 8448                   MOV.B       @(8,R4),R0
    000001AE 2008                   TST         R0,R0
    000001B0 8B0C                   BF          L1098
    000001B2 64E2                   MOV.L       @R14,R4
    000001B4 8448                   MOV.B       @(8,R4),R0
    000001B6 2008                   TST         R0,R0
    000001B8 8B02                   BF          L1100
    000001BA 64E2                   MOV.L       @R14,R4
    000001BC A004                   BRA         L1112
    000001BE 5441                   MOV.L       @(4,R4),R4
    000001C0              L1100:                            
    000001C0 934B                   MOV.W       L1129,R3   ; H'0570
    000001C2 D226                   MOV.L       L1129+2,R2 ; _symtab
    000001C4 6422                   MOV.L       @R2,R4
    000001C6 343C                   ADD         R3,R4
    000001C8              L1112:                            
    000001C8 A004                   BRA         L1113
    000001CA 5441                   MOV.L       @(4,R4),R4
    000001CC              L1098:                            
    000001CC 9345                   MOV.W       L1129,R3   ; H'0570
    000001CE D223                   MOV.L       L1129+2,R2 ; _symtab
    000001D0 6422                   MOV.L       @R2,R4
    000001D2 343C                   ADD         R3,R4
    000001D4              L1113:                            
    000001D4 8448                   MOV.B       @(8,R4),R0
    000001D6 2008                   TST         R0,R0
    000001D8 8B20                   BF          L1097
    000001DA 64E2                   MOV.L       @R14,R4
    000001DC 8448                   MOV.B       @(8,R4),R0
    000001DE 2008                   TST         R0,R0
    000001E0 8B02                   BF          L1102
    000001E2 64E2                   MOV.L       @R14,R4
    000001E4 A004                   BRA         L1114
    000001E6 5441                   MOV.L       @(4,R4),R4
    000001E8              L1102:                            
    000001E8 9337                   MOV.W       L1129,R3   ; H'0570
    000001EA D21C                   MOV.L       L1129+2,R2 ; _symtab
    000001EC 6422                   MOV.L       @R2,R4
    000001EE 343C                   ADD         R3,R4
    000001F0              L1114:                            
    000001F0 8448                   MOV.B       @(8,R4),R0
    000001F2 2008                   TST         R0,R0
    000001F4 8B0C                   BF          L1101
    000001F6 64E2                   MOV.L       @R14,R4
    000001F8 8448                   MOV.B       @(8,R4),R0
    000001FA 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001FC 8B02                   BF          L1103
    000001FE 64E2                   MOV.L       @R14,R4
    00000200 A004                   BRA         L1115
    00000202 5441                   MOV.L       @(4,R4),R4
    00000204              L1103:                            
    00000204 9329                   MOV.W       L1129,R3   ; H'0570
    00000206 D215                   MOV.L       L1129+2,R2 ; _symtab
    00000208 6422                   MOV.L       @R2,R4
    0000020A 343C                   ADD         R3,R4
    0000020C              L1115:                            
    0000020C A004                   BRA         L1116
    0000020E 5441                   MOV.L       @(4,R4),R4
    00000210              L1101:                            
    00000210 9323                   MOV.W       L1129,R3   ; H'0570
    00000212 D212                   MOV.L       L1129+2,R2 ; _symtab
    00000214 6422                   MOV.L       @R2,R4
    00000216 343C                   ADD         R3,R4
    00000218              L1116:                            
    00000218 A004                   BRA         L1117
    0000021A 5441                   MOV.L       @(4,R4),R4
    0000021C              L1097:                            
    0000021C 931D                   MOV.W       L1129,R3   ; H'0570
    0000021E D20F                   MOV.L       L1129+2,R2 ; _symtab
    00000220 6422                   MOV.L       @R2,R4
    00000222 343C                   ADD         R3,R4
    00000224              L1117:                            
    00000224 A004                   BRA         L1118
    00000226 6442                   MOV.L       @R4,R4
    00000228              L1089:                            
    00000228 9317                   MOV.W       L1129,R3   ; H'0570
    0000022A D20C                   MOV.L       L1129+2,R2 ; _symtab
    0000022C 6422                   MOV.L       @R2,R4
    0000022E 343C                   ADD         R3,R4
    00000230              L1118:                            
    00000230 4D0B                   JSR         @R13
    00000232 0009                   NOP
      laguerre.c    45            eval();
    00000234 4C0B                   JSR         @R12
    00000236 0009                   NOP
      laguerre.c    46    
      laguerre.c    47            p2 = pop();
    00000238 D309                   MOV.L       L1129+6,R3 ; _pop
    0000023A 430B                   JSR         @R3
    0000023C 0009                   NOP
    0000023E 6403                   MOV         R0,R4
    00000240 930B                   MOV.W       L1129,R3   ; H'0570
    00000242 D208                   MOV.L       L1129+10,R2; _p2
    00000244 2202                   MOV.L       R0,@R2
    00000246 D205                   MOV.L       L1129+2,R2 ; _symtab
    00000248 6122                   MOV.L       @R2,R1
    0000024A 313C                   ADD         R3,R1
    0000024C 3410                   CMP/EQ      R1,R4
    0000024E 8B0D                   BF          L1119
      laguerre.c    48            if (p2 == symbol(NIL))
      laguerre.c    49                    push_integer(0);
    00000250 D205                   MOV.L       L1129+14,R2; _push_integer
    00000252 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000254 E400                   MOV         #0,R4
    00000256 A00B                   BRA         L1120
    00000258 0009                   NOP
    0000025A              L1129:                            
    0000025A 0570                   .DATA.W     H'0570
    0000025C <00000000>             .DATA.L     _symtab
    00000260 <00000000>             .DATA.L     _pop
    00000264 <00000000>             .DATA.L     _p2
    00000268 <00000000>             .DATA.L     _push_integer
    0000026C              L1119:                            
      laguerre.c    50            else
      laguerre.c    51                    push(p2);
    0000026C 4D0B                   JSR         @R13
    0000026E 0009                   NOP
    00000270              L1120:                            
      laguerre.c    52    
      laguerre.c    53            laguerre();
    00000270 4F26                   LDS.L       @R15+,PR
    00000272 6CF6                   MOV.L       @R15+,R12
    00000274 6DF6                   MOV.L       @R15+,R13
    00000276 6EF6                   MOV.L       @R15+,R14
      laguerre.c    54    }
      laguerre.c    55    
      laguerre.c    56    #define X p1
      laguerre.c    57    #define N p2
      laguerre.c    58    #define K p3
      laguerre.c    59    #define Y p4
      laguerre.c    60    #define Y0 p5
      laguerre.c    61    #define Y1 p6
      laguerre.c    62    
      laguerre.c    63    void
      laguerre.c    64    laguerre(void)
    00000278              _laguerre:                       ; function: laguerre
                                                           ; frame size=16
    00000278 2FE6                   MOV.L       R14,@-R15
    0000027A 2FD6                   MOV.L       R13,@-R15
    0000027C 2FC6                   MOV.L       R12,@-R15
    0000027E 4F22                   STS.L       PR,@-R15
      laguerre.c    65    {
      laguerre.c    66            int n;
      laguerre.c    67            save();
    00000280 D326                   MOV.L       L1130+2,R3 ; _save
    00000282 430B                   JSR         @R3
    00000284 0009                   NOP
      laguerre.c    68    
      laguerre.c    69            K = pop();
    00000286 DD26                   MOV.L       L1130+6,R13; _pop
    00000288 4D0B                   JSR         @R13
    0000028A 0009                   NOP
    0000028C D225                   MOV.L       L1130+10,R2; _p3
      laguerre.c    70            N = pop();
    0000028E DC26                   MOV.L       L1130+14,R12; _p2
    00000290 4D0B                   JSR         @R13
    00000292 2202                   MOV.L       R0,@R2
      laguerre.c    71            X = pop();
    00000294 DE25                   MOV.L       L1130+18,R14; _p1
    00000296 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000298 2C02                   MOV.L       R0,@R12
    0000029A 2E02                   MOV.L       R0,@R14
      laguerre.c    72    
      laguerre.c    73            push(N);
    0000029C DD24                   MOV.L       L1130+22,R13; _push
    0000029E 4D0B                   JSR         @R13
    000002A0 64C2                   MOV.L       @R12,R4
      laguerre.c    74            n = pop_integer();
    000002A2 D324                   MOV.L       L1130+26,R3; _pop_integer
    000002A4 430B                   JSR         @R3
    000002A6 0009                   NOP
    000002A8 6403                   MOV         R0,R4
      laguerre.c    75    
      laguerre.c    76            if (n < 0) {
    000002AA 4411                   CMP/PZ      R4
    000002AC 890E                   BT          L1121
      laguerre.c    77                    push_symbol(LAGUERRE);
    000002AE D322                   MOV.L       L1130+30,R3; _push_symbol
    000002B0 430B                   JSR         @R3
    000002B2 E444                   MOV         #68,R4
      laguerre.c    78                    push(X);
    000002B4 4D0B                   JSR         @R13
    000002B6 64E2                   MOV.L       @R14,R4
      laguerre.c    79                    push(N);
    000002B8 4D0B                   JSR         @R13
    000002BA 64C2                   MOV.L       @R12,R4
      laguerre.c    80                    push(K);
    000002BC D219                   MOV.L       L1130+10,R2; _p3
    000002BE 4D0B                   JSR         @R13
    000002C0 6422                   MOV.L       @R2,R4
      laguerre.c    81                    list(4);
    000002C2 D31E                   MOV.L       L1130+34,R3; _list
    000002C4 430B                   JSR         @R3
    000002C6 E404                   MOV         #4,R4
    000002C8 A021                   BRA         L1067
    000002CA 0009                   NOP
    000002CC              L1121:                            
    000002CC 65E2                   MOV.L       @R14,R5
    000002CE 8458                   MOV.B       @(8,R5),R0
    000002D0 600C                   EXTU.B      R0,R0
    000002D2 8805                   CMP/EQ      #5,R0
    000002D4 8B03                   BF          L1123
      laguerre.c    82                    restore();
      laguerre.c    83                    return;
      laguerre.c    84            }
      laguerre.c    85    
      laguerre.c    86            if (issymbol(X))
      laguerre.c    87                    laguerre2(n);
    000002D6 B03D                   BSR         _laguerre2
    000002D8 0009                   NOP
    000002DA A018                   BRA         L1067
    000002DC 0009                   NOP
    000002DE              L1123:                            
      laguerre.c    88            else {
      laguerre.c    89                    Y = X;                  // do this when X is an expr
    000002DE D218                   MOV.L       L1130+38,R2; _p4
      laguerre.c    90                    X = symbol(SECRETX);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002E0 931B                   MOV.W       L1130,R3   ; H'05E8
    000002E2 2252                   MOV.L       R5,@R2
    000002E4 D017                   MOV.L       L1130+42,R0; _symtab
    000002E6 6102                   MOV.L       @R0,R1
    000002E8 313C                   ADD         R3,R1
      laguerre.c    91                    laguerre2(n);
    000002EA B033                   BSR         _laguerre2
    000002EC 2E12                   MOV.L       R1,@R14
      laguerre.c    92                    X = Y;
    000002EE D214                   MOV.L       L1130+38,R2; _p4
      laguerre.c    93                    push(symbol(SECRETX));
    000002F0 D114                   MOV.L       L1130+42,R1; _symtab
    000002F2 6322                   MOV.L       @R2,R3
    000002F4 2E32                   MOV.L       R3,@R14
    000002F6 9310                   MOV.W       L1130,R3   ; H'05E8
    000002F8 6412                   MOV.L       @R1,R4
    000002FA 4D0B                   JSR         @R13
    000002FC 343C                   ADD         R3,R4
      laguerre.c    94                    push(X);
    000002FE 4D0B                   JSR         @R13
    00000300 64E2                   MOV.L       @R14,R4
      laguerre.c    95                    subst();
    00000302 D311                   MOV.L       L1130+46,R3; _subst
    00000304 430B                   JSR         @R3
    00000306 0009                   NOP
      laguerre.c    96                    eval();
    00000308 D210                   MOV.L       L1130+50,R2; _eval
    0000030A 420B                   JSR         @R2
    0000030C 0009                   NOP
    0000030E              L1067:
      laguerre.c    97            }
      laguerre.c    98    
      laguerre.c    99            restore();
    0000030E 4F26                   LDS.L       @R15+,PR
    00000310 D30F                   MOV.L       L1130+54,R3; _restore
    00000312 6CF6                   MOV.L       @R15+,R12
    00000314 6DF6                   MOV.L       @R15+,R13
    00000316 432B                   JMP         @R3
    00000318 6EF6                   MOV.L       @R15+,R14
    0000031A              L1130:                            
    0000031A 05E8                   .DATA.W     H'05E8
    0000031C <00000000>             .DATA.L     _save
    00000320 <00000000>             .DATA.L     _pop
    00000324 <00000000>             .DATA.L     _p3
    00000328 <00000000>             .DATA.L     _p2
    0000032C <00000000>             .DATA.L     _p1
    00000330 <00000000>             .DATA.L     _push
    00000334 <00000000>             .DATA.L     _pop_integer
    00000338 <00000000>             .DATA.L     _push_symbol
    0000033C <00000000>             .DATA.L     _list
    00000340 <00000000>             .DATA.L     _p4
    00000344 <00000000>             .DATA.L     _symtab
    00000348 <00000000>             .DATA.L     _subst
    0000034C <00000000>             .DATA.L     _eval
    00000350 <00000000>             .DATA.L     _restore
      laguerre.c   100    }
      laguerre.c   101    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      laguerre.c   102    void
      laguerre.c   103    laguerre2(int n)
    00000354              _laguerre2:                      ; function: laguerre2
                                                           ; frame size=36
    00000354 2FE6                   MOV.L       R14,@-R15
    00000356 2FD6                   MOV.L       R13,@-R15
    00000358 2FC6                   MOV.L       R12,@-R15
    0000035A 2FB6                   MOV.L       R11,@-R15
    0000035C 2FA6                   MOV.L       R10,@-R15
    0000035E 2F96                   MOV.L       R9,@-R15
    00000360 2F86                   MOV.L       R8,@-R15
    00000362 4F22                   STS.L       PR,@-R15
      laguerre.c   104    {
      laguerre.c   105            int i;
      laguerre.c   106    
      laguerre.c   107            push_integer(1);
    00000364 DC26                   MOV.L       L1131,R12  ; _push_integer
    00000366 7FFC                   ADD         #-4,R15
    00000368 2F42                   MOV.L       R4,@R15
    0000036A 4C0B                   JSR         @R12
    0000036C E401                   MOV         #1,R4
      laguerre.c   108            push_integer(0);
    0000036E 4C0B                   JSR         @R12
    00000370 E400                   MOV         #0,R4
      laguerre.c   109    
      laguerre.c   110            Y1 = pop();
    00000372 DB24                   MOV.L       L1131+4,R11; _p6
    00000374 D324                   MOV.L       L1131+8,R3 ; _pop
    00000376 430B                   JSR         @R3
    00000378 0009                   NOP
    0000037A 2B02                   MOV.L       R0,@R11
      laguerre.c   111    
      laguerre.c   112            for (i = 0; i < n; i++) {
    0000037C D823                   MOV.L       L1131+12,R8; _p3
    0000037E D924                   MOV.L       L1131+16,R9; _p5
    00000380 DA24                   MOV.L       L1131+20,R10; _add
    00000382 DE25                   MOV.L       L1131+24,R14; _push
    00000384 62F2                   MOV.L       @R15,R2
    00000386 4215                   CMP/PL      R2
    00000388 8F30                   BF/S        L1125
    0000038A ED00                   MOV         #0,R13
    0000038C              L1126:                            
      laguerre.c   113    
      laguerre.c   114                    Y0 = Y1;
    0000038C 61B2                   MOV.L       @R11,R1
      laguerre.c   115    
      laguerre.c   116                    Y1 = pop();
    0000038E D31E                   MOV.L       L1131+8,R3 ; _pop
    00000390 430B                   JSR         @R3
    00000392 2912                   MOV.L       R1,@R9
    00000394 2B02                   MOV.L       R0,@R11
      laguerre.c   117    
      laguerre.c   118                    push_integer(2 * i + 1);
    00000396 64D3                   MOV         R13,R4
    00000398 4400                   SHLL        R4
    0000039A 4C0B                   JSR         @R12
    0000039C 7401                   ADD         #1,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      laguerre.c   119                    push(X);
    0000039E D31F                   MOV.L       L1131+28,R3; _p1
    000003A0 4E0B                   JSR         @R14
    000003A2 6432                   MOV.L       @R3,R4
      laguerre.c   120                    subtract();
    000003A4 D21E                   MOV.L       L1131+32,R2; _subtract
    000003A6 420B                   JSR         @R2
    000003A8 0009                   NOP
      laguerre.c   121                    push(K);
    000003AA 4E0B                   JSR         @R14
    000003AC 6482                   MOV.L       @R8,R4
      laguerre.c   122                    add();
    000003AE 4A0B                   JSR         @R10
    000003B0 0009                   NOP
      laguerre.c   123                    push(Y1);
    000003B2 4E0B                   JSR         @R14
    000003B4 64B2                   MOV.L       @R11,R4
      laguerre.c   124                    multiply();
    000003B6 D31B                   MOV.L       L1131+36,R3; _multiply
    000003B8 430B                   JSR         @R3
    000003BA 0009                   NOP
      laguerre.c   125    
      laguerre.c   126                    push_integer(i);
    000003BC 4C0B                   JSR         @R12
    000003BE 64D3                   MOV         R13,R4
      laguerre.c   127                    push(K);
    000003C0 4E0B                   JSR         @R14
    000003C2 6482                   MOV.L       @R8,R4
      laguerre.c   128                    add();
    000003C4 4A0B                   JSR         @R10
    000003C6 0009                   NOP
      laguerre.c   129                    push(Y0);
    000003C8 4E0B                   JSR         @R14
    000003CA 6492                   MOV.L       @R9,R4
      laguerre.c   130                    multiply();
    000003CC D215                   MOV.L       L1131+36,R2; _multiply
    000003CE 420B                   JSR         @R2
    000003D0 0009                   NOP
      laguerre.c   131    
      laguerre.c   132                    subtract();
    000003D2 D313                   MOV.L       L1131+32,R3; _subtract
    000003D4 430B                   JSR         @R3
    000003D6 0009                   NOP
      laguerre.c   133    
      laguerre.c   134                    push_integer(i + 1);
    000003D8 64D3                   MOV         R13,R4
    000003DA 4C0B                   JSR         @R12
    000003DC 7401                   ADD         #1,R4
      laguerre.c   135                    divide();
    000003DE D212                   MOV.L       L1131+40,R2; _divide
    000003E0 420B                   JSR         @R2
    000003E2 0009                   NOP
    000003E4 63F2                   MOV.L       @R15,R3
    000003E6 7D01                   ADD         #1,R13
    000003E8 3D33                   CMP/GE      R3,R13
    000003EA 8BCF                   BF          L1126
    000003EC              L1125:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      laguerre.c   136            }
      laguerre.c   137    }
    000003EC 7F04                   ADD         #4,R15
    000003EE 4F26                   LDS.L       @R15+,PR
    000003F0 68F6                   MOV.L       @R15+,R8
    000003F2 69F6                   MOV.L       @R15+,R9
    000003F4 6AF6                   MOV.L       @R15+,R10
    000003F6 6BF6                   MOV.L       @R15+,R11
    000003F8 6CF6                   MOV.L       @R15+,R12
    000003FA 6DF6                   MOV.L       @R15+,R13
    000003FC 000B                   RTS
    000003FE 6EF6                   MOV.L       @R15+,R14
    00000400              L1131:                            
    00000400 <00000000>             .DATA.L     _push_integer
    00000404 <00000000>             .DATA.L     _p6
    00000408 <00000000>             .DATA.L     _pop
    0000040C <00000000>             .DATA.L     _p3
    00000410 <00000000>             .DATA.L     _p5
    00000414 <00000000>             .DATA.L     _add
    00000418 <00000000>             .DATA.L     _push
    0000041C <00000000>             .DATA.L     _p1
    00000420 <00000000>             .DATA.L     _subtract
    00000424 <00000000>             .DATA.L     _multiply
    00000428 <00000000>             .DATA.L     _divide





































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      137



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               0000042C Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000042C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           21
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            86






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk8CE0.tmp 

