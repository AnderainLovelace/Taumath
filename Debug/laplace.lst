SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\laplace.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       laplace.c     1    // Laplace transform
       laplace.c     2    
       laplace.c     3    #include "stdafx.h"
       laplace.c     4    #include "defs.h"
       laplace.c     5    
       laplace.c     6    void
       laplace.c     7    eval_laplace(void)
P   00000000              _eval_laplace:                   ; function: eval_laplace
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
       laplace.c     8    {
       laplace.c     9            push(cadr(p1));
    00000004 DE34                   MOV.L       L1121+4,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1074
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1076
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1074:                            
    00000014 935E                   MOV.W       L1121,R3   ; H'0570
    00000016 D231                   MOV.L       L1121+8,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1076:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1073
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1075
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1077
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1075:                            
    00000030 9350                   MOV.W       L1121,R3   ; H'0570
    00000032 D22A                   MOV.L       L1121+8,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1077:                            
    00000038 A004                   BRA         L1078
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1073:                            
    0000003C 934A                   MOV.W       L1121,R3   ; H'0570
    0000003E D227                   MOV.L       L1121+8,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1078:                            
    00000044 D326                   MOV.L       L1121+12,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       laplace.c    10            eval();
    0000004A D226                   MOV.L       L1121+16,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
       laplace.c    11            push(symbol(SYMBOL_T));
    00000050 9341                   MOV.W       L1121+2,R3 ; H'066C
    00000052 D222                   MOV.L       L1121+8,R2 ; _symtab
    00000054 D122                   MOV.L       L1121+12,R1; _push
    00000056 6422                   MOV.L       @R2,R4
    00000058 410B                   JSR         @R1
    0000005A 343C                   ADD         R3,R4
       laplace.c    12            laplace();
    0000005C 4F26                   LDS.L       @R15+,PR
    0000005E 6EF6                   MOV.L       @R15+,R14
       laplace.c    13    }
       laplace.c    14    
       laplace.c    15    #define F p3
       laplace.c    16    #define T p4
       laplace.c    17    #define A p5
       laplace.c    18    
       laplace.c    19    void
       laplace.c    20    laplace(void)
    00000060              _laplace:                        ; function: laplace
                                                           ; frame size=24
    00000060 2FE6                   MOV.L       R14,@-R15
    00000062 2FD6                   MOV.L       R13,@-R15
    00000064 2FC6                   MOV.L       R12,@-R15
    00000066 2FB6                   MOV.L       R11,@-R15
    00000068 4F22                   STS.L       PR,@-R15
    0000006A 7FFC                   ADD         #-4,R15
       laplace.c    21    {
       laplace.c    22            int h;
       laplace.c    23            save();
    0000006C D31E                   MOV.L       L1121+20,R3; _save
    0000006E 430B                   JSR         @R3
    00000070 0009                   NOP
       laplace.c    24    
       laplace.c    25            T = pop();
    00000072 DE1E                   MOV.L       L1121+24,R14; _pop
    00000074 DC1E                   MOV.L       L1121+28,R12; _p4
    00000076 4E0B                   JSR         @R14
    00000078 0009                   NOP
       laplace.c    26            F = pop();
    0000007A DB1E                   MOV.L       L1121+32,R11; _p3
    0000007C 4E0B                   JSR         @R14
    0000007E 2C02                   MOV.L       R0,@R12
    00000080 2B02                   MOV.L       R0,@R11
    00000082 6403                   MOV         R0,R4
    00000084 D615                   MOV.L       L1121+8,R6 ; _symtab
    00000086 DD16                   MOV.L       L1121+12,R13; _push
    00000088 8448                   MOV.B       @(8,R4),R0
    0000008A 2008                   TST         R0,R0
    0000008C 8F03                   BF/S        L1080
    0000008E 6562                   MOV.L       @R6,R5
    00000090 62B2                   MOV.L       @R11,R2
    00000092 A003                   BRA         L1081
    00000094 6222                   MOV.L       @R2,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000096              L1080:                            
    00000096 931D                   MOV.W       L1121,R3   ; H'0570
    00000098 6262                   MOV.L       @R6,R2
    0000009A 323C                   ADD         R3,R2
    0000009C              L1081:                            
    0000009C 6053                   MOV         R5,R0
    0000009E 700C                   ADD         #12,R0
    000000A0 3200                   CMP/EQ      R0,R2
    000000A2 8B4D                   BF          L1079
       laplace.c    27    
       laplace.c    28            // L[f + g] = L[f] + L[g]
       laplace.c    29    
       laplace.c    30            if (car(F) == symbol(ADD)) {
       laplace.c    31                    p1 = cdr(F);
    000000A4 DE0C                   MOV.L       L1121+4,R14; _p1
    000000A6 63B2                   MOV.L       @R11,R3
    000000A8 8438                   MOV.B       @(8,R3),R0
    000000AA 2008                   TST         R0,R0
    000000AC 8B02                   BF          L1082
    000000AE 62B2                   MOV.L       @R11,R2
    000000B0 A004                   BRA         L1083
    000000B2 5221                   MOV.L       @(4,R2),R2
    000000B4              L1082:                            
    000000B4 930E                   MOV.W       L1121,R3   ; H'0570
    000000B6 D109                   MOV.L       L1121+8,R1 ; _symtab
    000000B8 6212                   MOV.L       @R1,R2
    000000BA 323C                   ADD         R3,R2
    000000BC              L1083:                            
    000000BC 2E22                   MOV.L       R2,@R14
       laplace.c    32                    h = tos;
    000000BE D10E                   MOV.L       L1121+36,R1; _tos
    000000C0 6312                   MOV.L       @R1,R3
       laplace.c    33                    while (iscons(p1)) {
    000000C2 A031                   BRA         L1084
    000000C4 2F32                   MOV.L       R3,@R15
    000000C6              L1085:                            
       laplace.c    34                            push(car(p1));
    000000C6 64E2                   MOV.L       @R14,R4
    000000C8 8448                   MOV.B       @(8,R4),R0
    000000CA 2008                   TST         R0,R0
    000000CC 8B16                   BF          L1086
    000000CE 64E2                   MOV.L       @R14,R4
    000000D0 A018                   BRA         L1087
    000000D2 6442                   MOV.L       @R4,R4
    000000D4              L1121:                            
    000000D4 0570                   .DATA.W     H'0570
    000000D6 066C                   .DATA.W     H'066C
    000000D8 <00000000>             .DATA.L     _p1
    000000DC <00000000>             .DATA.L     _symtab
    000000E0 <00000000>             .DATA.L     _push
    000000E4 <00000000>             .DATA.L     _eval
    000000E8 <00000000>             .DATA.L     _save
    000000EC <00000000>             .DATA.L     _pop
    000000F0 <00000000>             .DATA.L     _p4
    000000F4 <00000000>             .DATA.L     _p3
    000000F8 <00000000>             .DATA.L     _tos
    000000FC              L1086:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000FC 9374                   MOV.W       L1122,R3   ; H'0570
    000000FE D23D                   MOV.L       L1122+12,R2; _symtab
    00000100 6422                   MOV.L       @R2,R4
    00000102 343C                   ADD         R3,R4
    00000104              L1087:                            
    00000104 4D0B                   JSR         @R13
    00000106 0009                   NOP
       laplace.c    35                            push(T);
    00000108 4D0B                   JSR         @R13
    0000010A 64C2                   MOV.L       @R12,R4
       laplace.c    36                            laplace();
    0000010C BFA8                   BSR         _laplace
    0000010E 0009                   NOP
       laplace.c    37                            p1 = cdr(p1);
    00000110 63E2                   MOV.L       @R14,R3
    00000112 8438                   MOV.B       @(8,R3),R0
    00000114 2008                   TST         R0,R0
    00000116 8B02                   BF          L1088
    00000118 62E2                   MOV.L       @R14,R2
    0000011A A004                   BRA         L1089
    0000011C 5221                   MOV.L       @(4,R2),R2
    0000011E              L1088:                            
    0000011E 9363                   MOV.W       L1122,R3   ; H'0570
    00000120 D134                   MOV.L       L1122+12,R1; _symtab
    00000122 6212                   MOV.L       @R1,R2
    00000124 323C                   ADD         R3,R2
    00000126              L1089:                            
    00000126 2E22                   MOV.L       R2,@R14
    00000128              L1084:                            
    00000128 63E2                   MOV.L       @R14,R3
    0000012A 8438                   MOV.B       @(8,R3),R0
    0000012C 2008                   TST         R0,R0
    0000012E 89CA                   BT          L1085
       laplace.c    38                    }
       laplace.c    39                    add_all(tos - h);
    00000130 63F2                   MOV.L       @R15,R3
    00000132 D231                   MOV.L       L1122+16,R2; _tos
    00000134 D131                   MOV.L       L1122+20,R1; _add_all
    00000136 6422                   MOV.L       @R2,R4
    00000138 410B                   JSR         @R1
    0000013A 3438                   SUB         R3,R4
    0000013C A023                   BRA         L1070
    0000013E 0009                   NOP
    00000140              L1079:                            
       laplace.c    40                    restore();
       laplace.c    41                    return;
       laplace.c    42            }
       laplace.c    43    
       laplace.c    44            // L[Af] = A L[f]
       laplace.c    45    
       laplace.c    46            if (car(F) == symbol(MULTIPLY)) {
    00000140 8448                   MOV.B       @(8,R4),R0
    00000142 2008                   TST         R0,R0
    00000144 8B01                   BF          L1092
    00000146 A002                   BRA         L1093
    00000148 6242                   MOV.L       @R4,R2
    0000014A              L1092:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000014A 924D                   MOV.W       L1122,R2   ; H'0570
    0000014C 325C                   ADD         R5,R2
    0000014E              L1093:                            
    0000014E 934C                   MOV.W       L1122+2,R3 ; H'0384
    00000150 335C                   ADD         R5,R3
    00000152 3230                   CMP/EQ      R3,R2
    00000154 8B15                   BF          L1091
       laplace.c    47                    push(F);
    00000156 4D0B                   JSR         @R13
    00000158 0009                   NOP
       laplace.c    48                    push(T);
    0000015A 4D0B                   JSR         @R13
    0000015C 64C2                   MOV.L       @R12,R4
       laplace.c    49                    partition();
    0000015E D328                   MOV.L       L1122+24,R3; _partition
    00000160 430B                   JSR         @R3
    00000162 0009                   NOP
       laplace.c    50                    F = pop();
    00000164 4E0B                   JSR         @R14
    00000166 0009                   NOP
       laplace.c    51                    A = pop();
    00000168 4E0B                   JSR         @R14
    0000016A 2B02                   MOV.L       R0,@R11
    0000016C D225                   MOV.L       L1122+28,R2; _p5
       laplace.c    52                    laplace_main();
    0000016E B012                   BSR         _laplace_main
    00000170 2202                   MOV.L       R0,@R2
       laplace.c    53                    push(A);
    00000172 D124                   MOV.L       L1122+28,R1; _p5
    00000174 4D0B                   JSR         @R13
    00000176 6412                   MOV.L       @R1,R4
       laplace.c    54                    multiply();
    00000178 D323                   MOV.L       L1122+32,R3; _multiply
    0000017A 430B                   JSR         @R3
    0000017C 0009                   NOP
    0000017E A002                   BRA         L1070
    00000180 0009                   NOP
    00000182              L1091:                            
       laplace.c    55            } else
       laplace.c    56                    laplace_main();
    00000182 B008                   BSR         _laplace_main
    00000184 0009                   NOP
    00000186              L1070:
       laplace.c    57    
       laplace.c    58            restore();
    00000186 7F04                   ADD         #4,R15
    00000188 D220                   MOV.L       L1122+36,R2; _restore
    0000018A 4F26                   LDS.L       @R15+,PR
    0000018C 6BF6                   MOV.L       @R15+,R11
    0000018E 6CF6                   MOV.L       @R15+,R12
    00000190 6DF6                   MOV.L       @R15+,R13
    00000192 422B                   JMP         @R2
    00000194 6EF6                   MOV.L       @R15+,R14
       laplace.c    59    }
       laplace.c    60    
       laplace.c    61    void
       laplace.c    62    laplace_main(void)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000196              _laplace_main:                   ; function: laplace_main
                                                           ; frame size=12
    00000196 2FE6                   MOV.L       R14,@-R15
    00000198 2FD6                   MOV.L       R13,@-R15
    0000019A 4F22                   STS.L       PR,@-R15
    0000019C DD1C                   MOV.L       L1122+40,R13; _push_integer
    0000019E DE1D                   MOV.L       L1122+44,R14; _p3
    000001A0 D314                   MOV.L       L1122+12,R3; _symtab
    000001A2 64E2                   MOV.L       @R14,R4
    000001A4 6532                   MOV.L       @R3,R5
    000001A6 9221                   MOV.W       L1122+4,R2 ; H'066C
    000001A8 325C                   ADD         R5,R2
    000001AA 3420                   CMP/EQ      R2,R4
    000001AC 8B0A                   BF          L1095
       laplace.c    63    {
       laplace.c    64            int n;
       laplace.c    65    
       laplace.c    66            // L[t] = 1 / s^2
       laplace.c    67    
       laplace.c    68            if (F == symbol(SYMBOL_T)) {
       laplace.c    69                    push_symbol(SYMBOL_S);
    000001AE 941E                   MOV.W       L1122+6,R4 ; H'0088
    000001B0 D219                   MOV.L       L1122+48,R2; _push_symbol
    000001B2 420B                   JSR         @R2
    000001B4 0009                   NOP
       laplace.c    70                    push_integer(-2);
    000001B6 4D0B                   JSR         @R13
    000001B8 E4FE                   MOV         #-2,R4
       laplace.c    71                    power();
    000001BA 4F26                   LDS.L       @R15+,PR
    000001BC D317                   MOV.L       L1122+52,R3; _power
    000001BE 6DF6                   MOV.L       @R15+,R13
    000001C0 432B                   JMP         @R3
    000001C2 6EF6                   MOV.L       @R15+,R14
    000001C4              L1095:                            
       laplace.c    72                    return;
       laplace.c    73            }
       laplace.c    74    
       laplace.c    75            // L[t^n] = n! / s^(n+1)
       laplace.c    76    
       laplace.c    77            if (car(F) == symbol(POWER) && cadr(F) == T) {
    000001C4 8448                   MOV.B       @(8,R4),R0
    000001C6 2008                   TST         R0,R0
    000001C8 8B01                   BF          L1098
    000001CA A002                   BRA         L1102
    000001CC 6242                   MOV.L       @R4,R2
    000001CE              L1098:                            
    000001CE 920B                   MOV.W       L1122,R2   ; H'0570
    000001D0 325C                   ADD         R5,R2
    000001D2              L1102:                            
    000001D2 930D                   MOV.W       L1122+8,R3 ; H'03F0
    000001D4 335C                   ADD         R5,R3
    000001D6 3230                   CMP/EQ      R3,R2
    000001D8 8901                   BT          L1123
    000001DA A0A0                   BRA         L1097
    000001DC 0009                   NOP
    000001DE              L1123:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001DE 8448                   MOV.B       @(8,R4),R0
    000001E0 2008                   TST         R0,R0
    000001E2 8B1D                   BF          L1100
    000001E4 A01E                   BRA         L1103
    000001E6 5241                   MOV.L       @(4,R4),R2
    000001E8              L1122:                            
    000001E8 0570                   .DATA.W     H'0570
    000001EA 0384                   .DATA.W     H'0384
    000001EC 066C                   .DATA.W     H'066C
    000001EE 0088                   .DATA.W     H'0088
    000001F0 03F0                   .DATA.W     H'03F0
    000001F2 0000                   .DATA.W     0
    000001F4 <00000000>             .DATA.L     _symtab
    000001F8 <00000000>             .DATA.L     _tos
    000001FC <00000000>             .DATA.L     _add_all
    00000200 <00000000>             .DATA.L     _partition
    00000204 <00000000>             .DATA.L     _p5
    00000208 <00000000>             .DATA.L     _multiply
    0000020C <00000000>             .DATA.L     _restore
    00000210 <00000000>             .DATA.L     _push_integer
    00000214 <00000000>             .DATA.L     _p3
    00000218 <00000000>             .DATA.L     _push_symbol
    0000021C <00000000>             .DATA.L     _power
    00000220              L1100:                            
    00000220 9256                   MOV.W       L1124,R2   ; H'0570
    00000222 325C                   ADD         R5,R2
    00000224              L1103:                            
    00000224 8428                   MOV.B       @(8,R2),R0
    00000226 2008                   TST         R0,R0
    00000228 8B09                   BF          L1099
    0000022A 8448                   MOV.B       @(8,R4),R0
    0000022C 2008                   TST         R0,R0
    0000022E 8B01                   BF          L1101
    00000230 A002                   BRA         L1104
    00000232 5241                   MOV.L       @(4,R4),R2
    00000234              L1101:                            
    00000234 924C                   MOV.W       L1124,R2   ; H'0570
    00000236 325C                   ADD         R5,R2
    00000238              L1104:                            
    00000238 6322                   MOV.L       @R2,R3
    0000023A A002                   BRA         L1105
    0000023C 0009                   NOP
    0000023E              L1099:                            
    0000023E 9347                   MOV.W       L1124,R3   ; H'0570
    00000240 335C                   ADD         R5,R3
    00000242              L1105:                            
    00000242 D224                   MOV.L       L1124+4,R2 ; _p4
    00000244 6122                   MOV.L       @R2,R1
    00000246 3310                   CMP/EQ      R1,R3
    00000248 8B69                   BF          L1097
       laplace.c    78                    push(caddr(F));
    0000024A 64E2                   MOV.L       @R14,R4
    0000024C 8448                   MOV.B       @(8,R4),R0
    0000024E 2008                   TST         R0,R0
    00000250 8B02                   BF          L1108
    00000252 64E2                   MOV.L       @R14,R4
    00000254 A004                   BRA         L1113




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000256 5441                   MOV.L       @(4,R4),R4
    00000258              L1108:                            
    00000258 933A                   MOV.W       L1124,R3   ; H'0570
    0000025A D21F                   MOV.L       L1124+8,R2 ; _symtab
    0000025C 6422                   MOV.L       @R2,R4
    0000025E 343C                   ADD         R3,R4
    00000260              L1113:                            
    00000260 8448                   MOV.B       @(8,R4),R0
    00000262 2008                   TST         R0,R0
    00000264 8B0C                   BF          L1107
    00000266 64E2                   MOV.L       @R14,R4
    00000268 8448                   MOV.B       @(8,R4),R0
    0000026A 2008                   TST         R0,R0
    0000026C 8B02                   BF          L1109
    0000026E 64E2                   MOV.L       @R14,R4
    00000270 A004                   BRA         L1114
    00000272 5441                   MOV.L       @(4,R4),R4
    00000274              L1109:                            
    00000274 932C                   MOV.W       L1124,R3   ; H'0570
    00000276 D218                   MOV.L       L1124+8,R2 ; _symtab
    00000278 6422                   MOV.L       @R2,R4
    0000027A 343C                   ADD         R3,R4
    0000027C              L1114:                            
    0000027C A004                   BRA         L1115
    0000027E 5441                   MOV.L       @(4,R4),R4
    00000280              L1107:                            
    00000280 9326                   MOV.W       L1124,R3   ; H'0570
    00000282 D215                   MOV.L       L1124+8,R2 ; _symtab
    00000284 6422                   MOV.L       @R2,R4
    00000286 343C                   ADD         R3,R4
    00000288              L1115:                            
    00000288 8448                   MOV.B       @(8,R4),R0
    0000028A 2008                   TST         R0,R0
    0000028C 8B26                   BF          L1106
    0000028E 64E2                   MOV.L       @R14,R4
    00000290 8448                   MOV.B       @(8,R4),R0
    00000292 2008                   TST         R0,R0
    00000294 8B02                   BF          L1111
    00000296 64E2                   MOV.L       @R14,R4
    00000298 A004                   BRA         L1116
    0000029A 5441                   MOV.L       @(4,R4),R4
    0000029C              L1111:                            
    0000029C 9318                   MOV.W       L1124,R3   ; H'0570
    0000029E D20E                   MOV.L       L1124+8,R2 ; _symtab
    000002A0 6422                   MOV.L       @R2,R4
    000002A2 343C                   ADD         R3,R4
    000002A4              L1116:                            
    000002A4 8448                   MOV.B       @(8,R4),R0
    000002A6 2008                   TST         R0,R0
    000002A8 8B0C                   BF          L1110
    000002AA 64E2                   MOV.L       @R14,R4
    000002AC 8448                   MOV.B       @(8,R4),R0
    000002AE 2008                   TST         R0,R0
    000002B0 8B02                   BF          L1112
    000002B2 64E2                   MOV.L       @R14,R4
    000002B4 A004                   BRA         L1117
    000002B6 5441                   MOV.L       @(4,R4),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002B8              L1112:                            
    000002B8 930A                   MOV.W       L1124,R3   ; H'0570
    000002BA D207                   MOV.L       L1124+8,R2 ; _symtab
    000002BC 6422                   MOV.L       @R2,R4
    000002BE 343C                   ADD         R3,R4
    000002C0              L1117:                            
    000002C0 A004                   BRA         L1118
    000002C2 5441                   MOV.L       @(4,R4),R4
    000002C4              L1110:                            
    000002C4 9304                   MOV.W       L1124,R3   ; H'0570
    000002C6 D204                   MOV.L       L1124+8,R2 ; _symtab
    000002C8 6422                   MOV.L       @R2,R4
    000002CA 343C                   ADD         R3,R4
    000002CC              L1118:                            
    000002CC A00A                   BRA         L1119
    000002CE 6442                   MOV.L       @R4,R4
    000002D0              L1124:                            
    000002D0 0570                   .DATA.W     H'0570
    000002D2 0000                   .DATA.W     0
    000002D4 <00000000>             .DATA.L     _p4
    000002D8 <00000000>             .DATA.L     _symtab
    000002DC              L1106:                            
    000002DC 9325                   MOV.W       L1125,R3   ; H'0570
    000002DE D214                   MOV.L       L1125+6,R2 ; _symtab
    000002E0 6422                   MOV.L       @R2,R4
    000002E2 343C                   ADD         R3,R4
    000002E4              L1119:                            
    000002E4 D313                   MOV.L       L1125+10,R3; _push
    000002E6 430B                   JSR         @R3
    000002E8 0009                   NOP
       laplace.c    79                    n = pop_integer();
    000002EA D213                   MOV.L       L1125+14,R2; _pop_integer
    000002EC 420B                   JSR         @R2
    000002EE 0009                   NOP
    000002F0 6E03                   MOV         R0,R14
       laplace.c    80                    if (n > 0) {
    000002F2 4E15                   CMP/PL      R14
    000002F4 8B13                   BF          L1097
       laplace.c    81                            push_integer(n);
    000002F6 4D0B                   JSR         @R13
    000002F8 64E3                   MOV         R14,R4
       laplace.c    82                            factorial();
    000002FA D210                   MOV.L       L1125+18,R2; _factorial
    000002FC 420B                   JSR         @R2
    000002FE 0009                   NOP
       laplace.c    83                            push_symbol(SYMBOL_S);
    00000300 9414                   MOV.W       L1125+2,R4 ; H'0088
    00000302 D30F                   MOV.L       L1125+22,R3; _push_symbol
    00000304 430B                   JSR         @R3
    00000306 0009                   NOP
       laplace.c    84                            push_integer(n + 1);
    00000308 64E3                   MOV         R14,R4
    0000030A 4D0B                   JSR         @R13
    0000030C 7401                   ADD         #1,R4
       laplace.c    85                            power();
    0000030E D20D                   MOV.L       L1125+26,R2; _power
    00000310 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000312 0009                   NOP
       laplace.c    86                            divide();
    00000314 4F26                   LDS.L       @R15+,PR
    00000316 6DF6                   MOV.L       @R15+,R13
    00000318 D30B                   MOV.L       L1125+30,R3; _divide
    0000031A 432B                   JMP         @R3
    0000031C 6EF6                   MOV.L       @R15+,R14
    0000031E              L1097:                            
       laplace.c    87                            return;
       laplace.c    88                    }
       laplace.c    89            }
       laplace.c    90    
       laplace.c    91            stop("laplace: cannot solve");
    0000031E D40B                   MOV.L       L1125+34,R4; L1069
    00000320 4F26                   LDS.L       @R15+,PR
    00000322 6DF6                   MOV.L       @R15+,R13
    00000324 D20A                   MOV.L       L1125+38,R2; _stop
    00000326 422B                   JMP         @R2
    00000328 6EF6                   MOV.L       @R15+,R14
    0000032A              L1125:                            
    0000032A 0570                   .DATA.W     H'0570
    0000032C 0088                   .DATA.W     H'0088
    0000032E 0000                   .DATA.W     0
    00000330 <00000000>             .DATA.L     _symtab
    00000334 <00000000>             .DATA.L     _push
    00000338 <00000000>             .DATA.L     _pop_integer
    0000033C <00000000>             .DATA.L     _factorial
    00000340 <00000000>             .DATA.L     _push_symbol
    00000344 <00000000>             .DATA.L     _power
    00000348 <00000000>             .DATA.L     _divide
    0000034C <00000000>             .DATA.L     L1069
    00000350 <00000000>             .DATA.L     _stop
       laplace.c    92    }
C   00000000              L1069:
    00000000 6C61706C61             .SDATA      "laplace: cannot solve"
             63653A2063   
             616E6E6F74   
             20736F6C76   
             65           
    00000015 00                     .DATA.B     H'00





















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:09  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       92



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000354 Byte(s)
CONSTANT SECTION (C):                               00000016 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000036A Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           21
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            75






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk8E87.tmp 

