SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\lcm.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           lcm.c     1    // Find the least common multiple of two expressions.
           lcm.c     2    
           lcm.c     3    #include "stdafx.h"
           lcm.c     4    #include "defs.h"
           lcm.c     5    
           lcm.c     6    void
           lcm.c     7    eval_lcm(void)
P   00000000              _eval_lcm:                       ; function: eval_lcm
                                                           ; frame size=16
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 4F22                   STS.L       PR,@-R15
           lcm.c     8    {
           lcm.c     9            p1 = cdr(p1);
    00000008 DE32                   MOV.L       L1075+4,R14; _p1
    0000000A 62E2                   MOV.L       @R14,R2
    0000000C 8428                   MOV.B       @(8,R2),R0
    0000000E 2008                   TST         R0,R0
    00000010 8B02                   BF          L1063
    00000012 62E2                   MOV.L       @R14,R2
    00000014 A004                   BRA         L1064
    00000016 5321                   MOV.L       @(4,R2),R3
    00000018              L1063:                            
    00000018 925A                   MOV.W       L1075,R2   ; H'0570
    0000001A D12F                   MOV.L       L1075+8,R1 ; _symtab
    0000001C 6312                   MOV.L       @R1,R3
    0000001E 332C                   ADD         R2,R3
    00000020              L1064:                            
    00000020 2E32                   MOV.L       R3,@R14
           lcm.c    10            push(car(p1));
    00000022 6433                   MOV         R3,R4
    00000024 DD2D                   MOV.L       L1075+12,R13; _push
    00000026 8448                   MOV.B       @(8,R4),R0
    00000028 2008                   TST         R0,R0
    0000002A 8B02                   BF          L1065
    0000002C 64E2                   MOV.L       @R14,R4
    0000002E A004                   BRA         L1066
    00000030 6442                   MOV.L       @R4,R4
    00000032              L1065:                            
    00000032 934D                   MOV.W       L1075,R3   ; H'0570
    00000034 D228                   MOV.L       L1075+8,R2 ; _symtab
    00000036 6422                   MOV.L       @R2,R4
    00000038 343C                   ADD         R3,R4
    0000003A              L1066:                            
    0000003A 4D0B                   JSR         @R13
    0000003C 0009                   NOP
           lcm.c    11            eval();
    0000003E DC28                   MOV.L       L1075+16,R12; _eval
    00000040 4C0B                   JSR         @R12
    00000042 0009                   NOP
           lcm.c    12            p1 = cdr(p1);
    00000044 62E2                   MOV.L       @R14,R2
    00000046 8428                   MOV.B       @(8,R2),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000048 2008                   TST         R0,R0
    0000004A 8B02                   BF          L1067
    0000004C 62E2                   MOV.L       @R14,R2
    0000004E A004                   BRA         L1068
    00000050 5321                   MOV.L       @(4,R2),R3
    00000052              L1067:                            
    00000052 923D                   MOV.W       L1075,R2   ; H'0570
    00000054 D120                   MOV.L       L1075+8,R1 ; _symtab
    00000056 6312                   MOV.L       @R1,R3
    00000058 332C                   ADD         R2,R3
    0000005A              L1068:                            
           lcm.c    13            while (iscons(p1)) {
    0000005A A01D                   BRA         L1069
    0000005C 2E32                   MOV.L       R3,@R14
    0000005E              L1070:                            
           lcm.c    14                    push(car(p1));
    0000005E 64E2                   MOV.L       @R14,R4
    00000060 8448                   MOV.B       @(8,R4),R0
    00000062 2008                   TST         R0,R0
    00000064 8B02                   BF          L1071
    00000066 64E2                   MOV.L       @R14,R4
    00000068 A004                   BRA         L1072
    0000006A 6442                   MOV.L       @R4,R4
    0000006C              L1071:                            
    0000006C 9330                   MOV.W       L1075,R3   ; H'0570
    0000006E D21A                   MOV.L       L1075+8,R2 ; _symtab
    00000070 6422                   MOV.L       @R2,R4
    00000072 343C                   ADD         R3,R4
    00000074              L1072:                            
    00000074 4D0B                   JSR         @R13
    00000076 0009                   NOP
           lcm.c    15                    eval();
    00000078 4C0B                   JSR         @R12
    0000007A 0009                   NOP
           lcm.c    16                    lcm();
    0000007C B015                   BSR         _lcm
    0000007E 0009                   NOP
           lcm.c    17                    p1 = cdr(p1);
    00000080 63E2                   MOV.L       @R14,R3
    00000082 8438                   MOV.B       @(8,R3),R0
    00000084 2008                   TST         R0,R0
    00000086 8B02                   BF          L1073
    00000088 62E2                   MOV.L       @R14,R2
    0000008A A004                   BRA         L1074
    0000008C 5221                   MOV.L       @(4,R2),R2
    0000008E              L1073:                            
    0000008E 931F                   MOV.W       L1075,R3   ; H'0570
    00000090 D111                   MOV.L       L1075+8,R1 ; _symtab
    00000092 6212                   MOV.L       @R1,R2
    00000094 323C                   ADD         R3,R2
    00000096              L1074:                            
    00000096 2E22                   MOV.L       R2,@R14
    00000098              L1069:                            
    00000098 63E2                   MOV.L       @R14,R3
    0000009A 8438                   MOV.B       @(8,R3),R0
    0000009C 2008                   TST         R0,R0
    0000009E 89DE                   BT          L1070




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           lcm.c    18            }
           lcm.c    19    }
    000000A0 4F26                   LDS.L       @R15+,PR
    000000A2 6CF6                   MOV.L       @R15+,R12
    000000A4 6DF6                   MOV.L       @R15+,R13
    000000A6 000B                   RTS
    000000A8 6EF6                   MOV.L       @R15+,R14
           lcm.c    20    
           lcm.c    21    void
           lcm.c    22    lcm(void)
    000000AA              _lcm:                            ; function: lcm
                                                           ; frame size=8
    000000AA 4F22                   STS.L       PR,@-R15
           lcm.c    23    {
           lcm.c    24            int x;
           lcm.c    25            x = expanding;
    000000AC D20D                   MOV.L       L1075+20,R2; _expanding
    000000AE 7FFC                   ADD         #-4,R15
           lcm.c    26            save();
    000000B0 D10D                   MOV.L       L1075+24,R1; _save
    000000B2 6322                   MOV.L       @R2,R3
    000000B4 410B                   JSR         @R1
    000000B6 2F32                   MOV.L       R3,@R15
           lcm.c    27            yylcm();
    000000B8 B01A                   BSR         _yylcm
    000000BA 0009                   NOP
           lcm.c    28            restore();
    000000BC D10B                   MOV.L       L1075+28,R1; _restore
    000000BE 410B                   JSR         @R1
    000000C0 0009                   NOP
           lcm.c    29            expanding = x;
    000000C2 63F2                   MOV.L       @R15,R3
    000000C4 D107                   MOV.L       L1075+20,R1; _expanding
    000000C6 2132                   MOV.L       R3,@R1
           lcm.c    30    }
    000000C8 7F04                   ADD         #4,R15
    000000CA 4F26                   LDS.L       @R15+,PR
    000000CC 000B                   RTS
    000000CE 0009                   NOP
    000000D0              L1075:                            
    000000D0 0570                   .DATA.W     H'0570
    000000D2 0000                   .DATA.W     0
    000000D4 <00000000>             .DATA.L     _p1
    000000D8 <00000000>             .DATA.L     _symtab
    000000DC <00000000>             .DATA.L     _push
    000000E0 <00000000>             .DATA.L     _eval
    000000E4 <00000000>             .DATA.L     _expanding
    000000E8 <00000000>             .DATA.L     _save
    000000EC <00000000>             .DATA.L     _restore
           lcm.c    31    
           lcm.c    32    void
           lcm.c    33    yylcm(void)
    000000F0              _yylcm:                          ; function: yylcm
                                                           ; frame size=16
    000000F0 2FE6                   MOV.L       R14,@-R15
           lcm.c    34    {
           lcm.c    35            expanding = 1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000F2 E201                   MOV         #1,R2
    000000F4 D312                   MOV.L       L1076,R3   ; _expanding
    000000F6 2FD6                   MOV.L       R13,@-R15
    000000F8 2FC6                   MOV.L       R12,@-R15
    000000FA 4F22                   STS.L       PR,@-R15
    000000FC 2322                   MOV.L       R2,@R3
           lcm.c    36    
           lcm.c    37            p2 = pop();
    000000FE DD11                   MOV.L       L1076+4,R13; _p2
    00000100 D211                   MOV.L       L1076+8,R2 ; _pop
    00000102 420B                   JSR         @R2
    00000104 0009                   NOP
           lcm.c    38            p1 = pop();
    00000106 DC11                   MOV.L       L1076+12,R12; _p1
    00000108 D30F                   MOV.L       L1076+8,R3 ; _pop
    0000010A 430B                   JSR         @R3
    0000010C 2D02                   MOV.L       R0,@R13
    0000010E 2C02                   MOV.L       R0,@R12
           lcm.c    39    
           lcm.c    40            push(p1);
    00000110 DE0F                   MOV.L       L1076+16,R14; _push
    00000112 4E0B                   JSR         @R14
    00000114 6403                   MOV         R0,R4
           lcm.c    41            push(p2);
    00000116 4E0B                   JSR         @R14
    00000118 64D2                   MOV.L       @R13,R4
           lcm.c    42            gcd();
    0000011A D20E                   MOV.L       L1076+20,R2; _gcd
    0000011C 420B                   JSR         @R2
    0000011E 0009                   NOP
           lcm.c    43    
           lcm.c    44            push(p1);
    00000120 4E0B                   JSR         @R14
    00000122 64C2                   MOV.L       @R12,R4
           lcm.c    45            divide();
    00000124 D30C                   MOV.L       L1076+24,R3; _divide
    00000126 430B                   JSR         @R3
    00000128 0009                   NOP
           lcm.c    46    
           lcm.c    47            push(p2);
    0000012A 4E0B                   JSR         @R14
    0000012C 64D2                   MOV.L       @R13,R4
           lcm.c    48            divide();
    0000012E D20A                   MOV.L       L1076+24,R2; _divide
    00000130 420B                   JSR         @R2
    00000132 0009                   NOP
           lcm.c    49    
           lcm.c    50            inverse();
    00000134 4F26                   LDS.L       @R15+,PR
    00000136 6CF6                   MOV.L       @R15+,R12
    00000138 D308                   MOV.L       L1076+28,R3; _inverse
    0000013A 6DF6                   MOV.L       @R15+,R13
    0000013C 432B                   JMP         @R3
    0000013E 6EF6                   MOV.L       @R15+,R14
    00000140              L1076:                            
    00000140 <00000000>             .DATA.L     _expanding
    00000144 <00000000>             .DATA.L     _p2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000148 <00000000>             .DATA.L     _pop
    0000014C <00000000>             .DATA.L     _p1
    00000150 <00000000>             .DATA.L     _push
    00000154 <00000000>             .DATA.L     _gcd
    00000158 <00000000>             .DATA.L     _divide
    0000015C <00000000>             .DATA.L     _inverse
           lcm.c    51    }
           lcm.c    52    





















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       52



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000160 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000160 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           12
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            29






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk907B.tmp 

