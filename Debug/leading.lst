SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\leading.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       leading.c     1    /* Return the leading coefficient of a polynomial.
       leading.c     2    
       leading.c     3    Example
       leading.c     4    
       leading.c     5            leading(5x^2+x+1,x)
       leading.c     6    
       leading.c     7    Result
       leading.c     8    
       leading.c     9            5
       leading.c    10    
       leading.c    11    The result is undefined if P is not a polynomial. */
       leading.c    12    
       leading.c    13    #include "stdafx.h"
       leading.c    14    #include "defs.h"
       leading.c    15    
       leading.c    16    void
       leading.c    17    eval_leading(void)
P   00000000              _eval_leading:                   ; function: eval_leading
                                                           ; frame size=12
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 4F22                   STS.L       PR,@-R15
       leading.c    18    {
       leading.c    19            push(cadr(p1));
    00000006 DD35                   MOV.L       L1082+4,R13; _push
    00000008 DE35                   MOV.L       L1082+8,R14; _p1
    0000000A 64E2                   MOV.L       @R14,R4
    0000000C 8448                   MOV.B       @(8,R4),R0
    0000000E 2008                   TST         R0,R0
    00000010 8B02                   BF          L1061
    00000012 64E2                   MOV.L       @R14,R4
    00000014 A004                   BRA         L1063
    00000016 5441                   MOV.L       @(4,R4),R4
    00000018              L1061:                            
    00000018 935E                   MOV.W       L1082,R3   ; H'0570
    0000001A D232                   MOV.L       L1082+12,R2; _symtab
    0000001C 6422                   MOV.L       @R2,R4
    0000001E 343C                   ADD         R3,R4
    00000020              L1063:                            
    00000020 8448                   MOV.B       @(8,R4),R0
    00000022 2008                   TST         R0,R0
    00000024 8B0C                   BF          L1060
    00000026 64E2                   MOV.L       @R14,R4
    00000028 8448                   MOV.B       @(8,R4),R0
    0000002A 2008                   TST         R0,R0
    0000002C 8B02                   BF          L1062
    0000002E 64E2                   MOV.L       @R14,R4
    00000030 A004                   BRA         L1064
    00000032 5441                   MOV.L       @(4,R4),R4
    00000034              L1062:                            
    00000034 9350                   MOV.W       L1082,R3   ; H'0570
    00000036 D22B                   MOV.L       L1082+12,R2; _symtab
    00000038 6422                   MOV.L       @R2,R4
    0000003A 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000003C              L1064:                            
    0000003C A004                   BRA         L1065
    0000003E 6442                   MOV.L       @R4,R4
    00000040              L1060:                            
    00000040 934A                   MOV.W       L1082,R3   ; H'0570
    00000042 D228                   MOV.L       L1082+12,R2; _symtab
    00000044 6422                   MOV.L       @R2,R4
    00000046 343C                   ADD         R3,R4
    00000048              L1065:                            
    00000048 4D0B                   JSR         @R13
    0000004A 0009                   NOP
       leading.c    20            eval();
    0000004C D326                   MOV.L       L1082+16,R3; _eval
    0000004E 430B                   JSR         @R3
    00000050 0009                   NOP
       leading.c    21            push(caddr(p1));
    00000052 64E2                   MOV.L       @R14,R4
    00000054 8448                   MOV.B       @(8,R4),R0
    00000056 2008                   TST         R0,R0
    00000058 8B02                   BF          L1068
    0000005A 64E2                   MOV.L       @R14,R4
    0000005C A004                   BRA         L1073
    0000005E 5441                   MOV.L       @(4,R4),R4
    00000060              L1068:                            
    00000060 933A                   MOV.W       L1082,R3   ; H'0570
    00000062 D220                   MOV.L       L1082+12,R2; _symtab
    00000064 6422                   MOV.L       @R2,R4
    00000066 343C                   ADD         R3,R4
    00000068              L1073:                            
    00000068 8448                   MOV.B       @(8,R4),R0
    0000006A 2008                   TST         R0,R0
    0000006C 8B0C                   BF          L1067
    0000006E 64E2                   MOV.L       @R14,R4
    00000070 8448                   MOV.B       @(8,R4),R0
    00000072 2008                   TST         R0,R0
    00000074 8B02                   BF          L1069
    00000076 64E2                   MOV.L       @R14,R4
    00000078 A004                   BRA         L1074
    0000007A 5441                   MOV.L       @(4,R4),R4
    0000007C              L1069:                            
    0000007C 932C                   MOV.W       L1082,R3   ; H'0570
    0000007E D219                   MOV.L       L1082+12,R2; _symtab
    00000080 6422                   MOV.L       @R2,R4
    00000082 343C                   ADD         R3,R4
    00000084              L1074:                            
    00000084 A004                   BRA         L1075
    00000086 5441                   MOV.L       @(4,R4),R4
    00000088              L1067:                            
    00000088 9326                   MOV.W       L1082,R3   ; H'0570
    0000008A D216                   MOV.L       L1082+12,R2; _symtab
    0000008C 6422                   MOV.L       @R2,R4
    0000008E 343C                   ADD         R3,R4
    00000090              L1075:                            
    00000090 8448                   MOV.B       @(8,R4),R0
    00000092 2008                   TST         R0,R0
    00000094 8B2A                   BF          L1066
    00000096 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000098 8448                   MOV.B       @(8,R4),R0
    0000009A 2008                   TST         R0,R0
    0000009C 8B02                   BF          L1071
    0000009E 64E2                   MOV.L       @R14,R4
    000000A0 A004                   BRA         L1076
    000000A2 5441                   MOV.L       @(4,R4),R4
    000000A4              L1071:                            
    000000A4 9318                   MOV.W       L1082,R3   ; H'0570
    000000A6 D20F                   MOV.L       L1082+12,R2; _symtab
    000000A8 6422                   MOV.L       @R2,R4
    000000AA 343C                   ADD         R3,R4
    000000AC              L1076:                            
    000000AC 8448                   MOV.B       @(8,R4),R0
    000000AE 2008                   TST         R0,R0
    000000B0 8B0C                   BF          L1070
    000000B2 64E2                   MOV.L       @R14,R4
    000000B4 8448                   MOV.B       @(8,R4),R0
    000000B6 2008                   TST         R0,R0
    000000B8 8B02                   BF          L1072
    000000BA 64E2                   MOV.L       @R14,R4
    000000BC A004                   BRA         L1077
    000000BE 5441                   MOV.L       @(4,R4),R4
    000000C0              L1072:                            
    000000C0 930A                   MOV.W       L1082,R3   ; H'0570
    000000C2 D208                   MOV.L       L1082+12,R2; _symtab
    000000C4 6422                   MOV.L       @R2,R4
    000000C6 343C                   ADD         R3,R4
    000000C8              L1077:                            
    000000C8 A004                   BRA         L1078
    000000CA 5441                   MOV.L       @(4,R4),R4
    000000CC              L1070:                            
    000000CC 9304                   MOV.W       L1082,R3   ; H'0570
    000000CE D205                   MOV.L       L1082+12,R2; _symtab
    000000D0 6422                   MOV.L       @R2,R4
    000000D2 343C                   ADD         R3,R4
    000000D4              L1078:                            
    000000D4 A00E                   BRA         L1079
    000000D6 6442                   MOV.L       @R4,R4
    000000D8              L1082:                            
    000000D8 0570                   .DATA.W     H'0570
    000000DA 0000                   .DATA.W     0
    000000DC <00000000>             .DATA.L     _push
    000000E0 <00000000>             .DATA.L     _p1
    000000E4 <00000000>             .DATA.L     _symtab
    000000E8 <00000000>             .DATA.L     _eval
    000000EC              L1066:                            
    000000EC 9350                   MOV.W       L1083,R3   ; H'0570
    000000EE D229                   MOV.L       L1083+4,R2 ; _symtab
    000000F0 6422                   MOV.L       @R2,R4
    000000F2 343C                   ADD         R3,R4
    000000F4              L1079:                            
    000000F4 4D0B                   JSR         @R13
    000000F6 0009                   NOP
       leading.c    22            eval();
    000000F8 D327                   MOV.L       L1083+8,R3 ; _eval
    000000FA 430B                   JSR         @R3
    000000FC 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

       leading.c    23            p1 = pop();
    000000FE D227                   MOV.L       L1083+12,R2; _pop
    00000100 420B                   JSR         @R2
    00000102 0009                   NOP
    00000104 2E02                   MOV.L       R0,@R14
       leading.c    24            if (p1 == symbol(NIL))
    00000106 9343                   MOV.W       L1083,R3   ; H'0570
    00000108 D122                   MOV.L       L1083+4,R1 ; _symtab
    0000010A 6212                   MOV.L       @R1,R2
    0000010C 323C                   ADD         R3,R2
    0000010E 3020                   CMP/EQ      R2,R0
    00000110 8B04                   BF          L1080
       leading.c    25                    guess();
    00000112 D123                   MOV.L       L1083+16,R1; _guess
    00000114 410B                   JSR         @R1
    00000116 0009                   NOP
    00000118 A002                   BRA         L1081
    0000011A 0009                   NOP
    0000011C              L1080:                            
       leading.c    26            else
       leading.c    27                    push(p1);
    0000011C 4D0B                   JSR         @R13
    0000011E 64E2                   MOV.L       @R14,R4
    00000120              L1081:                            
       leading.c    28            leading();
    00000120 4F26                   LDS.L       @R15+,PR
    00000122 6DF6                   MOV.L       @R15+,R13
    00000124 6EF6                   MOV.L       @R15+,R14
       leading.c    29    }
       leading.c    30    
       leading.c    31    #define P p1
       leading.c    32    #define X p2
       leading.c    33    #define N p3
       leading.c    34    
       leading.c    35    void
       leading.c    36    leading(void)
    00000126              _leading:                        ; function: leading
                                                           ; frame size=20
    00000126 2FE6                   MOV.L       R14,@-R15
    00000128 2FD6                   MOV.L       R13,@-R15
    0000012A 2FC6                   MOV.L       R12,@-R15
    0000012C 2FB6                   MOV.L       R11,@-R15
    0000012E 4F22                   STS.L       PR,@-R15
       leading.c    37    {
       leading.c    38            save();
    00000130 D31C                   MOV.L       L1083+20,R3; _save
    00000132 430B                   JSR         @R3
    00000134 0009                   NOP
       leading.c    39    
       leading.c    40            X = pop();
    00000136 DB19                   MOV.L       L1083+12,R11; _pop
    00000138 DD1B                   MOV.L       L1083+24,R13; _p2
    0000013A 4B0B                   JSR         @R11
    0000013C 0009                   NOP
       leading.c    41            P = pop();
    0000013E DC1B                   MOV.L       L1083+28,R12; _p1
    00000140 4B0B                   JSR         @R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000142 2D02                   MOV.L       R0,@R13
    00000144 2C02                   MOV.L       R0,@R12
       leading.c    42    
       leading.c    43            push(P);        // N = degree of P
    00000146 DE1A                   MOV.L       L1083+32,R14; _push
    00000148 4E0B                   JSR         @R14
    0000014A 6403                   MOV         R0,R4
       leading.c    44            push(X);
    0000014C 4E0B                   JSR         @R14
    0000014E 64D2                   MOV.L       @R13,R4
       leading.c    45            degree();
    00000150 D218                   MOV.L       L1083+36,R2; _degree
    00000152 420B                   JSR         @R2
    00000154 0009                   NOP
       leading.c    46            N = pop();
    00000156 4B0B                   JSR         @R11
    00000158 0009                   NOP
    0000015A D317                   MOV.L       L1083+40,R3; _p3
    0000015C 2302                   MOV.L       R0,@R3
       leading.c    47    
       leading.c    48            push(P);        // divide through by X ^ N
    0000015E 4E0B                   JSR         @R14
    00000160 64C2                   MOV.L       @R12,R4
       leading.c    49            push(X);
    00000162 4E0B                   JSR         @R14
    00000164 64D2                   MOV.L       @R13,R4
       leading.c    50            push(N);
    00000166 D214                   MOV.L       L1083+40,R2; _p3
    00000168 4E0B                   JSR         @R14
    0000016A 6422                   MOV.L       @R2,R4
       leading.c    51            power();
    0000016C D313                   MOV.L       L1083+44,R3; _power
    0000016E 430B                   JSR         @R3
    00000170 0009                   NOP
       leading.c    52            divide();
    00000172 D113                   MOV.L       L1083+48,R1; _divide
    00000174 410B                   JSR         @R1
    00000176 0009                   NOP
       leading.c    53    
       leading.c    54            push(X);        // remove terms that depend on X
    00000178 4E0B                   JSR         @R14
    0000017A 64D2                   MOV.L       @R13,R4
       leading.c    55            filter();
    0000017C D311                   MOV.L       L1083+52,R3; _filter
    0000017E 430B                   JSR         @R3
    00000180 0009                   NOP
       leading.c    56    
       leading.c    57            restore();
    00000182 4F26                   LDS.L       @R15+,PR
    00000184 D210                   MOV.L       L1083+56,R2; _restore
    00000186 6BF6                   MOV.L       @R15+,R11
    00000188 6CF6                   MOV.L       @R15+,R12
    0000018A 6DF6                   MOV.L       @R15+,R13
    0000018C 422B                   JMP         @R2
    0000018E 6EF6                   MOV.L       @R15+,R14
    00000190              L1083:                            
    00000190 0570                   .DATA.W     H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000192 0000                   .DATA.W     0
    00000194 <00000000>             .DATA.L     _symtab
    00000198 <00000000>             .DATA.L     _eval
    0000019C <00000000>             .DATA.L     _pop
    000001A0 <00000000>             .DATA.L     _guess
    000001A4 <00000000>             .DATA.L     _save
    000001A8 <00000000>             .DATA.L     _p2
    000001AC <00000000>             .DATA.L     _p1
    000001B0 <00000000>             .DATA.L     _push
    000001B4 <00000000>             .DATA.L     _degree
    000001B8 <00000000>             .DATA.L     _p3
    000001BC <00000000>             .DATA.L     _power
    000001C0 <00000000>             .DATA.L     _divide
    000001C4 <00000000>             .DATA.L     _filter
    000001C8 <00000000>             .DATA.L     _restore
       leading.c    58    }













































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:10  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       58



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000001CC Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000001CC Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           14
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            40






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk9211.tmp 

