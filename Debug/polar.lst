SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:21  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\polar.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         polar.c     1    /* Convert complex z to polar form
         polar.c     2    
         polar.c     3            Input:          push    z
         polar.c     4    
         polar.c     5            Output:         Result on stack
         polar.c     6    
         polar.c     7            polar(z) = mag(z) * exp(i * arg(z))
         polar.c     8    */
         polar.c     9    
         polar.c    10    #include "stdafx.h"
         polar.c    11    #include "defs.h"
         polar.c    12    
         polar.c    13    void
         polar.c    14    eval_polar(void)
P   00000000              _eval_polar:                     ; function: eval_polar
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
         polar.c    15    {
         polar.c    16            push(cadr(p1));
    00000004 DE27                   MOV.L       L1066+2,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1061
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1063
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1061:                            
    00000014 9345                   MOV.W       L1066,R3   ; H'0570
    00000016 D224                   MOV.L       L1066+6,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1063:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1060
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1062
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1064
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1062:                            
    00000030 9337                   MOV.W       L1066,R3   ; H'0570
    00000032 D21D                   MOV.L       L1066+6,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1064:                            
    00000038 A004                   BRA         L1065
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1060:                            
    0000003C 9331                   MOV.W       L1066,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:21  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000003E D21A                   MOV.L       L1066+6,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1065:                            
    00000044 D319                   MOV.L       L1066+10,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
         polar.c    17            eval();
    0000004A D219                   MOV.L       L1066+14,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
         polar.c    18            polar();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
         polar.c    19    }
         polar.c    20    
         polar.c    21    void
         polar.c    22    polar(void)
    00000054              _polar:                          ; function: polar
                                                           ; frame size=12
    00000054 2FE6                   MOV.L       R14,@-R15
    00000056 2FD6                   MOV.L       R13,@-R15
    00000058 4F22                   STS.L       PR,@-R15
         polar.c    23    {
         polar.c    24            save();
    0000005A D316                   MOV.L       L1066+18,R3; _save
    0000005C 430B                   JSR         @R3
    0000005E 0009                   NOP
         polar.c    25            p1 = pop();
    00000060 DE10                   MOV.L       L1066+2,R14; _p1
    00000062 D215                   MOV.L       L1066+22,R2; _pop
    00000064 420B                   JSR         @R2
    00000066 0009                   NOP
    00000068 2E02                   MOV.L       R0,@R14
         polar.c    26            push(p1);
    0000006A DD10                   MOV.L       L1066+10,R13; _push
    0000006C 4D0B                   JSR         @R13
    0000006E 6403                   MOV         R0,R4
         polar.c    27            mag();
    00000070 D312                   MOV.L       L1066+26,R3; _mag
    00000072 430B                   JSR         @R3
    00000074 0009                   NOP
         polar.c    28            push(imaginaryunit);
    00000076 D212                   MOV.L       L1066+30,R2; _imaginaryunit
    00000078 4D0B                   JSR         @R13
    0000007A 6422                   MOV.L       @R2,R4
         polar.c    29            push(p1);
    0000007C 4D0B                   JSR         @R13
    0000007E 64E2                   MOV.L       @R14,R4
         polar.c    30            arg();
    00000080 D310                   MOV.L       L1066+34,R3; _arg
    00000082 430B                   JSR         @R3
    00000084 0009                   NOP
         polar.c    31            multiply();
    00000086 D210                   MOV.L       L1066+38,R2; _multiply
    00000088 420B                   JSR         @R2
    0000008A 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:21  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         polar.c    32            exponential();
    0000008C D30F                   MOV.L       L1066+42,R3; _exponential
    0000008E 430B                   JSR         @R3
    00000090 0009                   NOP
         polar.c    33            multiply();
    00000092 D20D                   MOV.L       L1066+38,R2; _multiply
    00000094 420B                   JSR         @R2
    00000096 0009                   NOP
         polar.c    34            restore();
    00000098 4F26                   LDS.L       @R15+,PR
    0000009A 6DF6                   MOV.L       @R15+,R13
    0000009C D30C                   MOV.L       L1066+46,R3; _restore
    0000009E 432B                   JMP         @R3
    000000A0 6EF6                   MOV.L       @R15+,R14
    000000A2              L1066:                            
    000000A2 0570                   .DATA.W     H'0570
    000000A4 <00000000>             .DATA.L     _p1
    000000A8 <00000000>             .DATA.L     _symtab
    000000AC <00000000>             .DATA.L     _push
    000000B0 <00000000>             .DATA.L     _eval
    000000B4 <00000000>             .DATA.L     _save
    000000B8 <00000000>             .DATA.L     _pop
    000000BC <00000000>             .DATA.L     _mag
    000000C0 <00000000>             .DATA.L     _imaginaryunit
    000000C4 <00000000>             .DATA.L     _arg
    000000C8 <00000000>             .DATA.L     _multiply
    000000CC <00000000>             .DATA.L     _exponential
    000000D0 <00000000>             .DATA.L     _restore
         polar.c    35    }
































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:21  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       35



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000000D4 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000000D4 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           12
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            21






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkBDEA.tmp 

