SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:22  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\prime.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         prime.c     1    //-----------------------------------------------------------------------------
         prime.c     2    //
         prime.c     3    //      Look up the nth prime
         prime.c     4    //
         prime.c     5    //      Input:          n on stack (0 < n < 10001)
         prime.c     6    //
         prime.c     7    //      Output:         nth prime on stack
         prime.c     8    //
         prime.c     9    //-----------------------------------------------------------------------------
         prime.c    10    
         prime.c    11    #include "stdafx.h"
         prime.c    12    #include "defs.h"
         prime.c    13    
         prime.c    14    void
         prime.c    15    eval_prime(void)
P   00000000              _eval_prime:                     ; function: eval_prime
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
         prime.c    16    {
         prime.c    17            push(cadr(p1));
    00000004 DE21                   MOV.L       L1071+6,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1064
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1066
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1064:                            
    00000014 9337                   MOV.W       L1071,R3   ; H'0570
    00000016 D21E                   MOV.L       L1071+10,R2; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1066:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1063
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1065
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1067
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1065:                            
    00000030 9329                   MOV.W       L1071,R3   ; H'0570
    00000032 D217                   MOV.L       L1071+10,R2; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1067:                            
    00000038 A004                   BRA         L1068
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1063:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:22  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000003C 9323                   MOV.W       L1071,R3   ; H'0570
    0000003E D214                   MOV.L       L1071+10,R2; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1068:                            
    00000044 D313                   MOV.L       L1071+14,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
         prime.c    18            eval();
    0000004A D213                   MOV.L       L1071+18,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
         prime.c    19            prime();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
         prime.c    20    }
         prime.c    21    
         prime.c    22    void
         prime.c    23    prime(void)
    00000054              _prime:                          ; function: prime
                                                           ; frame size=8
    00000054 2FE6                   MOV.L       R14,@-R15
    00000056 4F22                   STS.L       PR,@-R15
         prime.c    24    {
         prime.c    25            int n;
         prime.c    26            n = pop_integer();
    00000058 D310                   MOV.L       L1071+22,R3; _pop_integer
    0000005A 430B                   JSR         @R3
    0000005C 0009                   NOP
    0000005E 6E03                   MOV         R0,R14
         prime.c    27            if (n < 1 || n > MAXPRIMETAB)
    00000060 E201                   MOV         #1,R2
    00000062 3E23                   CMP/GE      R2,R14
    00000064 8B02                   BF          L1070
    00000066 910F                   MOV.W       L1071+2,R1 ; H'2710
    00000068 3E17                   CMP/GT      R1,R14
    0000006A 8B03                   BF          L1069
    0000006C              L1070:                            
         prime.c    28                    stop("prime: Argument out of range.");
    0000006C D40C                   MOV.L       L1071+26,R4; L1061
    0000006E D20D                   MOV.L       L1071+30,R2; _stop
    00000070 420B                   JSR         @R2
    00000072 0009                   NOP
    00000074              L1069:                            
         prime.c    29            n = primetab[n - 1];
    00000074 D00C                   MOV.L       L1071+34,R0; _primetab
    00000076 64E3                   MOV         R14,R4
         prime.c    30            push_integer(n);
    00000078 4F26                   LDS.L       @R15+,PR
    0000007A 74FF                   ADD         #-1,R4
    0000007C D30B                   MOV.L       L1071+38,R3; _push_integer
    0000007E 4408                   SHLL2       R4
    00000080 044E                   MOV.L       @(R0,R4),R4
    00000082 432B                   JMP         @R3
    00000084 6EF6                   MOV.L       @R15+,R14
    00000086              L1071:                            
    00000086 0570                   .DATA.W     H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:22  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000088 2710                   .DATA.W     H'2710
    0000008A 0000                   .DATA.W     0
    0000008C <00000000>             .DATA.L     _p1
    00000090 <00000000>             .DATA.L     _symtab
    00000094 <00000000>             .DATA.L     _push
    00000098 <00000000>             .DATA.L     _eval
    0000009C <00000000>             .DATA.L     _pop_integer
    000000A0 <00000000>             .DATA.L     L1061
    000000A4 <00000000>             .DATA.L     _stop
    000000A8 <00000000>             .DATA.L     _primetab
    000000AC <00000000>             .DATA.L     _push_integer
         prime.c    31    }
C   00000000              L1061:
    00000000 7072696D65             .SDATA      "prime: Argument out of range."
             3A20417267   
             756D656E74   
             206F757420   
             6F66207261   
             6E67652E     
    0000001D 00                     .DATA.B     H'00









































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:22  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       31



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000000B0 Byte(s)
CONSTANT SECTION (C):                               0000001E Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000000CE Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            8
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            20






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkC1F3.tmp 

