SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\print.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c     1    // tty style printing
         print.c     2    
         print.c     3    #include "stdafx.h"
         print.c     4    #include "defs.h"
         print.c     5    
         print.c     6    int out_index, out_length;
         print.c     7    char *out_str;
         print.c     8    static int char_count, last_char;
         print.c     9    
         print.c    10    char *power_str = "^";
         print.c    11    
         print.c    12    void
         print.c    13    print(U *p)
P   00000000              _print:                          ; function: print
                                                           ; frame size=0
         print.c    14    {
         print.c    15            print_expr(p);
    00000000 A013                   BRA         _print_expr
    00000002 0009                   NOP
         print.c    16    }
         print.c    17    
         print.c    18    void
         print.c    19    printline(U *p)
    00000004              _printline:                      ; function: printline
                                                           ; frame size=4
    00000004 4F22                   STS.L       PR,@-R15
         print.c    20    {
         print.c    21            print_expr(p);
    00000006 B010                   BSR         _print_expr
    00000008 0009                   NOP
         print.c    22            print_char('\n');
    0000000A E40A                   MOV         #10,R4
    0000000C D22F                   MOV.L       L1892+4,R2 ; _print_char
    0000000E 422B                   JMP         @R2
    00000010 4F26                   LDS.L       @R15+,PR
         print.c    23    }
         print.c    24    
         print.c    25    void
         print.c    26    print_subexpr(U *p)
    00000012              _print_subexpr:                  ; function: print_subexpr
                                                           ; frame size=8
    00000012 4F22                   STS.L       PR,@-R15
    00000014 2F46                   MOV.L       R4,@-R15
         print.c    27    {
         print.c    28            print_char('(');
    00000016 D32D                   MOV.L       L1892+4,R3 ; _print_char
    00000018 430B                   JSR         @R3
    0000001A E428                   MOV         #40,R4
         print.c    29            print_expr(p);
    0000001C B005                   BSR         _print_expr
    0000001E 64F2                   MOV.L       @R15,R4
         print.c    30            print_char(')');
    00000020 D22A                   MOV.L       L1892+4,R2 ; _print_char
    00000022 E429                   MOV         #41,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000024 7F04                   ADD         #4,R15
    00000026 422B                   JMP         @R2
    00000028 4F26                   LDS.L       @R15+,PR
         print.c    31    }
         print.c    32    
         print.c    33    void
         print.c    34    print_expr(U *p)
    0000002A              _print_expr:                     ; function: print_expr
                                                           ; frame size=28
    0000002A 2FE6                   MOV.L       R14,@-R15
    0000002C 2FD6                   MOV.L       R13,@-R15
    0000002E 6E43                   MOV         R4,R14
    00000030 2FC6                   MOV.L       R12,@-R15
    00000032 2FB6                   MOV.L       R11,@-R15
    00000034 2FA6                   MOV.L       R10,@-R15
    00000036 2F96                   MOV.L       R9,@-R15
    00000038 4F22                   STS.L       PR,@-R15
         print.c    35    {
         print.c    36            if (isadd(p)) {
    0000003A DC25                   MOV.L       L1892+8,R12; L1074
    0000003C 84E8                   MOV.B       @(8,R14),R0
    0000003E 2008                   TST         R0,R0
    00000040 8B01                   BF          L1250
    00000042 A004                   BRA         L1251
    00000044 63E2                   MOV.L       @R14,R3
    00000046              L1250:                            
    00000046 923F                   MOV.W       L1892,R2   ; H'0570
    00000048 D122                   MOV.L       L1892+12,R1; _symtab
    0000004A 6312                   MOV.L       @R1,R3
    0000004C 332C                   ADD         R2,R3
    0000004E              L1251:                            
    0000004E D021                   MOV.L       L1892+12,R0; _symtab
    00000050 6202                   MOV.L       @R0,R2
    00000052 720C                   ADD         #12,R2
    00000054 3320                   CMP/EQ      R2,R3
    00000056 8901                   BT          L1893
    00000058 A07D                   BRA         L1249
    0000005A 0009                   NOP
    0000005C              L1893:                            
         print.c    37                    p = cdr(p);
    0000005C 84E8                   MOV.B       @(8,R14),R0
    0000005E 2008                   TST         R0,R0
    00000060 8B01                   BF          L1252
    00000062 A004                   BRA         L1253
    00000064 5DE1                   MOV.L       @(4,R14),R13
    00000066              L1252:                            
    00000066 932F                   MOV.W       L1892,R3   ; H'0570
    00000068 D21A                   MOV.L       L1892+12,R2; _symtab
    0000006A 6D22                   MOV.L       @R2,R13
    0000006C 3D3C                   ADD         R3,R13
    0000006E              L1253:                            
         print.c    38                    if (sign_of_term(car(p)) == '-')
    0000006E 84D8                   MOV.B       @(8,R13),R0
    00000070 2008                   TST         R0,R0
    00000072 8B01                   BF          L1255
    00000074 A004                   BRA         L1256
    00000076 64D2                   MOV.L       @R13,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000078              L1255:                            
    00000078 9326                   MOV.W       L1892,R3   ; H'0570
    0000007A D216                   MOV.L       L1892+12,R2; _symtab
    0000007C 6422                   MOV.L       @R2,R4
    0000007E 343C                   ADD         R3,R4
    00000080              L1256:                            
    00000080 B081                   BSR         _sign_of_term
    00000082 0009                   NOP
    00000084 882D                   CMP/EQ      #45,R0
    00000086 8B02                   BF          L1254
         print.c    39                            print_str("-");
    00000088 D313                   MOV.L       L1892+16,R3; _print_str
    0000008A 430B                   JSR         @R3
    0000008C 64C3                   MOV         R12,R4
    0000008E              L1254:                            
         print.c    40                    print_term(car(p));
    0000008E 84D8                   MOV.B       @(8,R13),R0
    00000090 2008                   TST         R0,R0
    00000092 8B01                   BF          L1257
    00000094 A004                   BRA         L1258
    00000096 64D2                   MOV.L       @R13,R4
    00000098              L1257:                            
    00000098 9316                   MOV.W       L1892,R3   ; H'0570
    0000009A D20E                   MOV.L       L1892+12,R2; _symtab
    0000009C 6422                   MOV.L       @R2,R4
    0000009E 343C                   ADD         R3,R4
    000000A0              L1258:                            
    000000A0 B26A                   BSR         _print_term
    000000A2 0009                   NOP
         print.c    41                    p = cdr(p);
    000000A4 84D8                   MOV.B       @(8,R13),R0
    000000A6 2008                   TST         R0,R0
    000000A8 8B01                   BF          L1259
    000000AA A004                   BRA         L1260
    000000AC 5ED1                   MOV.L       @(4,R13),R14
    000000AE              L1259:                            
    000000AE 930B                   MOV.W       L1892,R3   ; H'0570
    000000B0 D208                   MOV.L       L1892+12,R2; _symtab
    000000B2 6E22                   MOV.L       @R2,R14
    000000B4 3E3C                   ADD         R3,R14
    000000B6              L1260:                            
    000000B6 D909                   MOV.L       L1892+20,R9; L1077
    000000B8 DA09                   MOV.L       L1892+24,R10; L1076
    000000BA DB0A                   MOV.L       L1892+28,R11; L1078
    000000BC DD0A                   MOV.L       L1892+32,R13; _test_flag
         print.c    42                    while (iscons(p)) {
    000000BE A045                   BRA         L1261
    000000C0 0009                   NOP
    000000C2              L1262:                            
         print.c    43                            if (sign_of_term(car(p)) == '+')
    000000C2 8B13                   BF          L1264
    000000C4 A016                   BRA         L1265
    000000C6 64E2                   MOV.L       @R14,R4
    000000C8              L1892:                            
    000000C8 0570                   .DATA.W     H'0570
    000000CA 0000                   .DATA.W     0
    000000CC <00000000>             .DATA.L     _print_char




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000D0 <00000000>             .DATA.L     L1074
    000000D4 <00000000>             .DATA.L     _symtab
    000000D8 <00000000>             .DATA.L     _print_str
    000000DC <00000000>             .DATA.L     L1077
    000000E0 <00000000>             .DATA.L     L1076
    000000E4 <00000000>             .DATA.L     L1078
    000000E8 <00000000>             .DATA.L     _test_flag
    000000EC              L1264:                            
    000000EC 9364                   MOV.W       L1894,R3   ; H'0570
    000000EE D233                   MOV.L       L1894+4,R2 ; _symtab
    000000F0 6422                   MOV.L       @R2,R4
    000000F2 343C                   ADD         R3,R4
    000000F4              L1265:                            
    000000F4 B047                   BSR         _sign_of_term
    000000F6 0009                   NOP
    000000F8 882B                   CMP/EQ      #43,R0
    000000FA 8B0A                   BF          L1263
         print.c    44                                    if (test_flag == 0)
    000000FC 63D2                   MOV.L       @R13,R3
    000000FE 2338                   TST         R3,R3
    00000100 8B01                   BF          L1266
         print.c    45                                            print_str(" + ");
    00000102 A001                   BRA         L1881
    00000104 64A3                   MOV         R10,R4
    00000106              L1266:                            
         print.c    46                                    else
         print.c    47                                            print_str("+");
    00000106 6493                   MOV         R9,R4
    00000108              L1881:                            
    00000108 D32D                   MOV.L       L1894+8,R3 ; _print_str
    0000010A 430B                   JSR         @R3
    0000010C 0009                   NOP
    0000010E A009                   BRA         L1268
    00000110 0009                   NOP
    00000112              L1263:                            
         print.c    48                            else
         print.c    49                                    if (test_flag == 0)
    00000112 63D2                   MOV.L       @R13,R3
    00000114 2338                   TST         R3,R3
    00000116 8B01                   BF          L1269
         print.c    50                                            print_str(" - ");
    00000118 A001                   BRA         L1882
    0000011A 64B3                   MOV         R11,R4
    0000011C              L1269:                            
         print.c    51                                    else
         print.c    52                                            print_str("-");
    0000011C 64C3                   MOV         R12,R4
    0000011E              L1882:                            
    0000011E D328                   MOV.L       L1894+8,R3 ; _print_str
    00000120 430B                   JSR         @R3
    00000122 0009                   NOP
    00000124              L1268:                            
         print.c    53                            print_term(car(p));
    00000124 84E8                   MOV.B       @(8,R14),R0
    00000126 2008                   TST         R0,R0
    00000128 8B01                   BF          L1271
    0000012A A004                   BRA         L1272




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000012C 64E2                   MOV.L       @R14,R4
    0000012E              L1271:                            
    0000012E 9343                   MOV.W       L1894,R3   ; H'0570
    00000130 D222                   MOV.L       L1894+4,R2 ; _symtab
    00000132 6422                   MOV.L       @R2,R4
    00000134 343C                   ADD         R3,R4
    00000136              L1272:                            
    00000136 B21F                   BSR         _print_term
    00000138 0009                   NOP
         print.c    54                            p = cdr(p);
    0000013A 84E8                   MOV.B       @(8,R14),R0
    0000013C 2008                   TST         R0,R0
    0000013E 8B01                   BF          L1273
    00000140 A004                   BRA         L1261
    00000142 5EE1                   MOV.L       @(4,R14),R14
    00000144              L1273:                            
    00000144 9338                   MOV.W       L1894,R3   ; H'0570
    00000146 D21D                   MOV.L       L1894+4,R2 ; _symtab
    00000148 6E22                   MOV.L       @R2,R14
    0000014A 3E3C                   ADD         R3,R14
    0000014C              L1261:                            
    0000014C 84E8                   MOV.B       @(8,R14),R0
    0000014E 2008                   TST         R0,R0
    00000150 89B7                   BT          L1262
    00000152 A010                   BRA         L1275
    00000154 0009                   NOP
    00000156              L1249:                            
         print.c    55                    }
         print.c    56            } else {
         print.c    57                    if (sign_of_term(p) == '-')
    00000156 B016                   BSR         _sign_of_term
    00000158 64E3                   MOV         R14,R4
    0000015A 882D                   CMP/EQ      #45,R0
    0000015C 8B02                   BF          L1276
         print.c    58                            print_str("-");
    0000015E D318                   MOV.L       L1894+8,R3 ; _print_str
    00000160 430B                   JSR         @R3
    00000162 64C3                   MOV         R12,R4
    00000164              L1276:                            
         print.c    59                    print_term(p);
    00000164 4F26                   LDS.L       @R15+,PR
    00000166 64E3                   MOV         R14,R4
    00000168 69F6                   MOV.L       @R15+,R9
    0000016A 6AF6                   MOV.L       @R15+,R10
    0000016C 6BF6                   MOV.L       @R15+,R11
    0000016E 6CF6                   MOV.L       @R15+,R12
    00000170 6DF6                   MOV.L       @R15+,R13
    00000172 A201                   BRA         _print_term
    00000174 6EF6                   MOV.L       @R15+,R14
    00000176              L1275:                            
         print.c    60            }
         print.c    61    }
    00000176 4F26                   LDS.L       @R15+,PR
    00000178 69F6                   MOV.L       @R15+,R9
    0000017A 6AF6                   MOV.L       @R15+,R10
    0000017C 6BF6                   MOV.L       @R15+,R11
    0000017E 6CF6                   MOV.L       @R15+,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000180 6DF6                   MOV.L       @R15+,R13
    00000182 000B                   RTS
    00000184 6EF6                   MOV.L       @R15+,R14
         print.c    62    
         print.c    63    int
         print.c    64    sign_of_term(U *p)
    00000186              _sign_of_term:                   ; function: sign_of_term
                                                           ; frame size=16
    00000186 2FE6                   MOV.L       R14,@-R15
    00000188 2FD6                   MOV.L       R13,@-R15
    0000018A 6E43                   MOV         R4,R14
    0000018C 4F22                   STS.L       PR,@-R15
    0000018E 7FFC                   ADD         #-4,R15
         print.c    65    {
         print.c    66            if (car(p) == symbol(MULTIPLY) && isnum(cadr(p)) && lessp(cadr(p), zero))
    00000190 DD0A                   MOV.L       L1894+4,R13; _symtab
    00000192 84E8                   MOV.B       @(8,R14),R0
    00000194 2008                   TST         R0,R0
    00000196 8B01                   BF          L1278
    00000198 A004                   BRA         L1289
    0000019A 63E2                   MOV.L       @R14,R3
    0000019C              L1278:                            
    0000019C 920C                   MOV.W       L1894,R2   ; H'0570
    0000019E D107                   MOV.L       L1894+4,R1 ; _symtab
    000001A0 6312                   MOV.L       @R1,R3
    000001A2 332C                   ADD         R2,R3
    000001A4              L1289:                            
    000001A4 9209                   MOV.W       L1894+2,R2 ; H'0384
    000001A6 60D2                   MOV.L       @R13,R0
    000001A8 302C                   ADD         R2,R0
    000001AA 3300                   CMP/EQ      R0,R3
    000001AC 8B5C                   BF          L1277
    000001AE 84E8                   MOV.B       @(8,R14),R0
    000001B0 2008                   TST         R0,R0
    000001B2 8B07                   BF          L1281
    000001B4 A009                   BRA         L1290
    000001B6 50E1                   MOV.L       @(4,R14),R0
    000001B8              L1894:                            
    000001B8 0570                   .DATA.W     H'0570
    000001BA 0384                   .DATA.W     H'0384
    000001BC <00000000>             .DATA.L     _symtab
    000001C0 <00000000>             .DATA.L     _print_str
    000001C4              L1281:                            
    000001C4 9366                   MOV.W       L1895,R3   ; H'0570
    000001C6 60D2                   MOV.L       @R13,R0
    000001C8 303C                   ADD         R3,R0
    000001CA              L1290:                            
    000001CA 8408                   MOV.B       @(8,R0),R0
    000001CC 2008                   TST         R0,R0
    000001CE 8B09                   BF          L1280
    000001D0 84E8                   MOV.B       @(8,R14),R0
    000001D2 2008                   TST         R0,R0
    000001D4 8B01                   BF          L1282
    000001D6 A003                   BRA         L1291
    000001D8 50E1                   MOV.L       @(4,R14),R0
    000001DA              L1282:                            
    000001DA 935B                   MOV.W       L1895,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001DC 60D2                   MOV.L       @R13,R0
    000001DE 303C                   ADD         R3,R0
    000001E0              L1291:                            
    000001E0 A003                   BRA         L1292
    000001E2 6002                   MOV.L       @R0,R0
    000001E4              L1280:                            
    000001E4 9356                   MOV.W       L1895,R3   ; H'0570
    000001E6 60D2                   MOV.L       @R13,R0
    000001E8 303C                   ADD         R3,R0
    000001EA              L1292:                            
    000001EA 8408                   MOV.B       @(8,R0),R0
    000001EC 600C                   EXTU.B      R0,R0
    000001EE 8801                   CMP/EQ      #1,R0
    000001F0 891B                   BT          L1279
    000001F2 84E8                   MOV.B       @(8,R14),R0
    000001F4 2008                   TST         R0,R0
    000001F6 8B01                   BF          L1284
    000001F8 A003                   BRA         L1293
    000001FA 50E1                   MOV.L       @(4,R14),R0
    000001FC              L1284:                            
    000001FC 934A                   MOV.W       L1895,R3   ; H'0570
    000001FE 60D2                   MOV.L       @R13,R0
    00000200 303C                   ADD         R3,R0
    00000202              L1293:                            
    00000202 8408                   MOV.B       @(8,R0),R0
    00000204 2008                   TST         R0,R0
    00000206 8B09                   BF          L1283
    00000208 84E8                   MOV.B       @(8,R14),R0
    0000020A 2008                   TST         R0,R0
    0000020C 8B01                   BF          L1285
    0000020E A003                   BRA         L1294
    00000210 50E1                   MOV.L       @(4,R14),R0
    00000212              L1285:                            
    00000212 933F                   MOV.W       L1895,R3   ; H'0570
    00000214 60D2                   MOV.L       @R13,R0
    00000216 303C                   ADD         R3,R0
    00000218              L1294:                            
    00000218 A003                   BRA         L1295
    0000021A 6002                   MOV.L       @R0,R0
    0000021C              L1283:                            
    0000021C 933A                   MOV.W       L1895,R3   ; H'0570
    0000021E 60D2                   MOV.L       @R13,R0
    00000220 303C                   ADD         R3,R0
    00000222              L1295:                            
    00000222 8408                   MOV.B       @(8,R0),R0
    00000224 600C                   EXTU.B      R0,R0
    00000226 8802                   CMP/EQ      #2,R0
    00000228 8B1E                   BF          L1277
    0000022A              L1279:                            
    0000022A D21B                   MOV.L       L1895+4,R2 ; _zero
    0000022C 84E8                   MOV.B       @(8,R14),R0
    0000022E 2008                   TST         R0,R0
    00000230 8F02                   BF/S        L1287
    00000232 6522                   MOV.L       @R2,R5
    00000234 A003                   BRA         L1296
    00000236 54E1                   MOV.L       @(4,R14),R4
    00000238              L1287:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000238 932C                   MOV.W       L1895,R3   ; H'0570
    0000023A 64D2                   MOV.L       @R13,R4
    0000023C 343C                   ADD         R3,R4
    0000023E              L1296:                            
    0000023E 8448                   MOV.B       @(8,R4),R0
    00000240 2008                   TST         R0,R0
    00000242 8B09                   BF          L1286
    00000244 84E8                   MOV.B       @(8,R14),R0
    00000246 2008                   TST         R0,R0
    00000248 8B01                   BF          L1288
    0000024A A003                   BRA         L1297
    0000024C 54E1                   MOV.L       @(4,R14),R4
    0000024E              L1288:                            
    0000024E 9321                   MOV.W       L1895,R3   ; H'0570
    00000250 64D2                   MOV.L       @R13,R4
    00000252 343C                   ADD         R3,R4
    00000254              L1297:                            
    00000254 A003                   BRA         L1298
    00000256 6442                   MOV.L       @R4,R4
    00000258              L1286:                            
    00000258 931C                   MOV.W       L1895,R3   ; H'0570
    0000025A 64D2                   MOV.L       @R13,R4
    0000025C 343C                   ADD         R3,R4
    0000025E              L1298:                            
    0000025E D30F                   MOV.L       L1895+8,R3 ; _lessp
    00000260 430B                   JSR         @R3
    00000262 0009                   NOP
    00000264 2008                   TST         R0,R0
    00000266 8B0D                   BF          L1190
    00000268              L1277:                            
         print.c    67                    return '-';
         print.c    68            else if (isnum(p) && lessp(p, zero))
    00000268 84E8                   MOV.B       @(8,R14),R0
    0000026A 600C                   EXTU.B      R0,R0
    0000026C 8801                   CMP/EQ      #1,R0
    0000026E 8D02                   BT/S        L1302
    00000270 2F02                   MOV.L       R0,@R15
    00000272 8802                   CMP/EQ      #2,R0
    00000274 8B08                   BF          L1301
    00000276              L1302:                            
    00000276 D308                   MOV.L       L1895+4,R3 ; _zero
    00000278 D208                   MOV.L       L1895+8,R2 ; _lessp
    0000027A 6532                   MOV.L       @R3,R5
    0000027C 420B                   JSR         @R2
    0000027E 64E3                   MOV         R14,R4
    00000280 2008                   TST         R0,R0
    00000282 8901                   BT          L1301
    00000284              L1190:
         print.c    69                    return '-';
    00000284 A001                   BRA         L1299
    00000286 E02D                   MOV         #45,R0
    00000288              L1301:                            
         print.c    70            else
         print.c    71                    return '+';
    00000288 E02B                   MOV         #43,R0
         print.c    72    }
    0000028A              L1299:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000028A 7F04                   ADD         #4,R15
    0000028C 4F26                   LDS.L       @R15+,PR
    0000028E 6DF6                   MOV.L       @R15+,R13
    00000290 000B                   RTS
    00000292 6EF6                   MOV.L       @R15+,R14
    00000294              L1895:                            
    00000294 0570                   .DATA.W     H'0570
    00000296 0000                   .DATA.W     0
    00000298 <00000000>             .DATA.L     _zero
    0000029C <00000000>             .DATA.L     _lessp
         print.c    73    
         print.c    74    #define A p3
         print.c    75    #define B p4
         print.c    76    
         print.c    77    void
         print.c    78    print_a_over_b(U *p)
    000002A0              _print_a_over_b:                 ; function: print_a_over_b
                                                           ; frame size=32
    000002A0 2FE6                   MOV.L       R14,@-R15
    000002A2 2FD6                   MOV.L       R13,@-R15
    000002A4 2FC6                   MOV.L       R12,@-R15
    000002A6 2FB6                   MOV.L       R11,@-R15
    000002A8 2FA6                   MOV.L       R10,@-R15
    000002AA 2F96                   MOV.L       R9,@-R15
    000002AC 2F86                   MOV.L       R8,@-R15
    000002AE 4F22                   STS.L       PR,@-R15
         print.c    79    {
         print.c    80            int flag, n, d;
         print.c    81            U *p1, *p2;
         print.c    82    
         print.c    83            save();
    000002B0 D332                   MOV.L       L1896+2,R3 ; _save
    000002B2 430B                   JSR         @R3
    000002B4 6B43                   MOV         R4,R11
         print.c    84    
         print.c    85            // count numerators and denominators
         print.c    86    
         print.c    87            n = 0;
    000002B6 E800                   MOV         #0,R8
         print.c    88            d = 0;
         print.c    89    
         print.c    90            p1 = cdr(p);
    000002B8 84B8                   MOV.B       @(8,R11),R0
    000002BA 6A83                   MOV         R8,R10
    000002BC 2008                   TST         R0,R0
    000002BE 8F02                   BF/S        L1304
    000002C0 6C83                   MOV         R8,R12
    000002C2 A004                   BRA         L1305
    000002C4 5EB1                   MOV.L       @(4,R11),R14
    000002C6              L1304:                            
    000002C6 9358                   MOV.W       L1896,R3   ; H'0570
    000002C8 D22D                   MOV.L       L1896+6,R2 ; _symtab
    000002CA 6E22                   MOV.L       @R2,R14
    000002CC 3E3C                   ADD         R3,R14
    000002CE              L1305:                            
         print.c    91            p2 = car(p1);
    000002CE 84E8                   MOV.B       @(8,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002D0 2008                   TST         R0,R0
    000002D2 8B01                   BF          L1306
    000002D4 A004                   BRA         L1307
    000002D6 6DE2                   MOV.L       @R14,R13
    000002D8              L1306:                            
    000002D8 934F                   MOV.W       L1896,R3   ; H'0570
    000002DA D229                   MOV.L       L1896+6,R2 ; _symtab
    000002DC 6D22                   MOV.L       @R2,R13
    000002DE 3D3C                   ADD         R3,R13
    000002E0              L1307:                            
         print.c    92    
         print.c    93            if (isrational(p2)) {
    000002E0 D928                   MOV.L       L1896+10,R9; _p3
    000002E2 84D8                   MOV.B       @(8,R13),R0
    000002E4 600C                   EXTU.B      R0,R0
    000002E6 8801                   CMP/EQ      #1,R0
    000002E8 8B2C                   BF          L1308
         print.c    94                    push(p2);
    000002EA D227                   MOV.L       L1896+14,R2; _push
    000002EC 420B                   JSR         @R2
    000002EE 64D3                   MOV         R13,R4
         print.c    95                    mp_numerator();
    000002F0 D326                   MOV.L       L1896+18,R3; _mp_numerator
    000002F2 430B                   JSR         @R3
    000002F4 0009                   NOP
         print.c    96                    absval();
    000002F6 D226                   MOV.L       L1896+22,R2; _absval
    000002F8 420B                   JSR         @R2
    000002FA 0009                   NOP
         print.c    97                    A = pop();
    000002FC D325                   MOV.L       L1896+26,R3; _pop
    000002FE 430B                   JSR         @R3
    00000300 0009                   NOP
    00000302 2902                   MOV.L       R0,@R9
         print.c    98                    push(p2);
    00000304 D220                   MOV.L       L1896+14,R2; _push
    00000306 420B                   JSR         @R2
    00000308 64D3                   MOV         R13,R4
         print.c    99                    mp_denominator();
    0000030A D323                   MOV.L       L1896+30,R3; _mp_denominator
    0000030C 430B                   JSR         @R3
    0000030E 0009                   NOP
         print.c   100                    B = pop();
    00000310 D220                   MOV.L       L1896+26,R2; _pop
    00000312 420B                   JSR         @R2
    00000314 0009                   NOP
    00000316 D321                   MOV.L       L1896+34,R3; _p4
         print.c   101                    if (!isplusone(A))
    00000318 D221                   MOV.L       L1896+38,R2; _isplusone
    0000031A 2302                   MOV.L       R0,@R3
    0000031C 420B                   JSR         @R2
    0000031E 6492                   MOV.L       @R9,R4
    00000320 2008                   TST         R0,R0
    00000322 8B00                   BF          L1309
         print.c   102                            n++;
    00000324 7A01                   ADD         #1,R10
    00000326              L1309:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   103                    if (!isplusone(B))
    00000326 D21D                   MOV.L       L1896+34,R2; _p4
    00000328 D31D                   MOV.L       L1896+38,R3; _isplusone
    0000032A 430B                   JSR         @R3
    0000032C 6422                   MOV.L       @R2,R4
    0000032E 2008                   TST         R0,R0
    00000330 8F01                   BF/S        L1310
         print.c   104                            d++;
         print.c   105                    p1 = cdr(p1);
    00000332 84E8                   MOV.B       @(8,R14),R0
    00000334 7C01                   ADD         #1,R12
    00000336              L1310:                            
    00000336 2008                   TST         R0,R0
    00000338 891D                   BT          L1884
    0000033A 931E                   MOV.W       L1896,R3   ; H'0570
    0000033C D210                   MOV.L       L1896+6,R2 ; _symtab
    0000033E 6E22                   MOV.L       @R2,R14
    00000340 A038                   BRA         L1314
    00000342 3E3C                   ADD         R3,R14
    00000344              L1308:                            
         print.c   106            } else {
         print.c   107                    A = one;
    00000344 D417                   MOV.L       L1896+42,R4; _one
    00000346 6342                   MOV.L       @R4,R3
         print.c   108                    B = one;
    00000348 D114                   MOV.L       L1896+34,R1; _p4
    0000034A 2932                   MOV.L       R3,@R9
    0000034C 6242                   MOV.L       @R4,R2
         print.c   109            }
         print.c   110    
         print.c   111            while (iscons(p1)) {
    0000034E A031                   BRA         L1314
    00000350 2122                   MOV.L       R2,@R1
    00000352              L1315:                            
         print.c   112                    p2 = car(p1);
    00000352 8B01                   BF          L1316
    00000354 A004                   BRA         L1317
    00000356 64E2                   MOV.L       @R14,R4
    00000358              L1316:                            
    00000358 930F                   MOV.W       L1896,R3   ; H'0570
    0000035A D209                   MOV.L       L1896+6,R2 ; _symtab
    0000035C 6422                   MOV.L       @R2,R4
    0000035E 343C                   ADD         R3,R4
    00000360              L1317:                            
         print.c   113                    if (is_denominator(p2))
    00000360 D311                   MOV.L       L1896+46,R3; _is_denominator
    00000362 430B                   JSR         @R3
    00000364 0009                   NOP
    00000366 2008                   TST         R0,R0
    00000368 8D02                   BT/S        L1318
         print.c   114                            d++;
         print.c   115                    else
         print.c   116                            n++;
         print.c   117                    p1 = cdr(p1);
    0000036A 84E8                   MOV.B       @(8,R14),R0
    0000036C A001                   BRA         L1319
    0000036E 7C01                   ADD         #1,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000370              L1318:                            
    00000370 7A01                   ADD         #1,R10
    00000372              L1319:                            
    00000372 2008                   TST         R0,R0
    00000374 8B1A                   BF          L1320
    00000376              L1884:                            
    00000376 A01D                   BRA         L1314
    00000378 5EE1                   MOV.L       @(4,R14),R14
    0000037A              L1896:                            
    0000037A 0570                   .DATA.W     H'0570
    0000037C <00000000>             .DATA.L     _save
    00000380 <00000000>             .DATA.L     _symtab
    00000384 <00000000>             .DATA.L     _p3
    00000388 <00000000>             .DATA.L     _push
    0000038C <00000000>             .DATA.L     _mp_numerator
    00000390 <00000000>             .DATA.L     _absval
    00000394 <00000000>             .DATA.L     _pop
    00000398 <00000000>             .DATA.L     _mp_denominator
    0000039C <00000000>             .DATA.L     _p4
    000003A0 <00000000>             .DATA.L     _isplusone
    000003A4 <00000000>             .DATA.L     _one
    000003A8 <00000000>             .DATA.L     _is_denominator
    000003AC              L1320:                            
    000003AC 935D                   MOV.W       L1897,R3   ; H'0570
    000003AE D22F                   MOV.L       L1897+2,R2 ; _symtab
    000003B0 6E22                   MOV.L       @R2,R14
    000003B2 3E3C                   ADD         R3,R14
    000003B4              L1314:                            
    000003B4 84E8                   MOV.B       @(8,R14),R0
    000003B6 2008                   TST         R0,R0
    000003B8 89CB                   BT          L1315
         print.c   118            }
         print.c   119    
         print.c   120            if (n == 0)
    000003BA 2AA8                   TST         R10,R10
    000003BC 8F05                   BF/S        L1322
    000003BE ED01                   MOV         #1,R13
         print.c   121                    print_char('1');
    000003C0 D32B                   MOV.L       L1897+6,R3 ; _print_char
    000003C2 430B                   JSR         @R3
    000003C4 E431                   MOV         #49,R4
    000003C6 A049                   BRA         L1323
    000003C8 0009                   NOP
    000003CA              L1322:                            
         print.c   122            else {
         print.c   123                    flag = 0;
         print.c   124                    p1 = cdr(p);
    000003CA 84B8                   MOV.B       @(8,R11),R0
    000003CC 2008                   TST         R0,R0
    000003CE 8F02                   BF/S        L1324
    000003D0 6A83                   MOV         R8,R10
    000003D2 A004                   BRA         L1325
    000003D4 5EB1                   MOV.L       @(4,R11),R14
    000003D6              L1324:                            
    000003D6 9348                   MOV.W       L1897,R3   ; H'0570
    000003D8 D224                   MOV.L       L1897+2,R2 ; _symtab
    000003DA 6E22                   MOV.L       @R2,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003DC 3E3C                   ADD         R3,R14
    000003DE              L1325:                            
         print.c   125                    if (isrational(car(p1)))
    000003DE 84E8                   MOV.B       @(8,R14),R0
    000003E0 2008                   TST         R0,R0
    000003E2 8B01                   BF          L1327
    000003E4 A004                   BRA         L1328
    000003E6 60E2                   MOV.L       @R14,R0
    000003E8              L1327:                            
    000003E8 933F                   MOV.W       L1897,R3   ; H'0570
    000003EA D220                   MOV.L       L1897+2,R2 ; _symtab
    000003EC 6022                   MOV.L       @R2,R0
    000003EE 303C                   ADD         R3,R0
    000003F0              L1328:                            
    000003F0 8408                   MOV.B       @(8,R0),R0
    000003F2 600C                   EXTU.B      R0,R0
    000003F4 8801                   CMP/EQ      #1,R0
    000003F6 8B08                   BF          L1326
         print.c   126                            p1 = cdr(p1);
    000003F8 84E8                   MOV.B       @(8,R14),R0
    000003FA 2008                   TST         R0,R0
    000003FC 8B01                   BF          L1329
    000003FE A004                   BRA         L1326
    00000400 5EE1                   MOV.L       @(4,R14),R14
    00000402              L1329:                            
    00000402 9332                   MOV.W       L1897,R3   ; H'0570
    00000404 D219                   MOV.L       L1897+2,R2 ; _symtab
    00000406 6E22                   MOV.L       @R2,R14
    00000408 3E3C                   ADD         R3,R14
    0000040A              L1326:                            
         print.c   127                    if (!isplusone(A)) {
    0000040A D31A                   MOV.L       L1897+10,R3; _isplusone
    0000040C 430B                   JSR         @R3
    0000040E 6492                   MOV.L       @R9,R4
    00000410 2008                   TST         R0,R0
    00000412 8B20                   BF          L1332
         print.c   128                            print_factor(A);
    00000414 B2AC                   BSR         _print_factor
    00000416 6492                   MOV.L       @R9,R4
         print.c   129                            flag = 1;
         print.c   130                    } 
         print.c   131                    while (iscons(p1)) {
    00000418 A01D                   BRA         L1332
    0000041A 6AD3                   MOV         R13,R10
    0000041C              L1333:                            
         print.c   132                            p2 = car(p1);
    0000041C 8B01                   BF          L1334
    0000041E A004                   BRA         L1335
    00000420 69E2                   MOV.L       @R14,R9
    00000422              L1334:                            
    00000422 9322                   MOV.W       L1897,R3   ; H'0570
    00000424 D211                   MOV.L       L1897+2,R2 ; _symtab
    00000426 6922                   MOV.L       @R2,R9
    00000428 393C                   ADD         R3,R9
    0000042A              L1335:                            
         print.c   133                            if (is_denominator(p2))
    0000042A D313                   MOV.L       L1897+14,R3; _is_denominator




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000042C 430B                   JSR         @R3
    0000042E 6493                   MOV         R9,R4
    00000430 2008                   TST         R0,R0
    00000432 8B07                   BF          L1337
         print.c   134                                    ;
         print.c   135                            else {
         print.c   136                                    if (flag)
    00000434 2AA8                   TST         R10,R10
    00000436 8902                   BT          L1338
         print.c   137                                            print_multiply_sign();
    00000438 D310                   MOV.L       L1897+18,R3; _print_multiply_sign
    0000043A 430B                   JSR         @R3
    0000043C 0009                   NOP
    0000043E              L1338:                            
         print.c   138                                    print_factor(p2);
    0000043E B297                   BSR         _print_factor
    00000440 6493                   MOV         R9,R4
         print.c   139                                    flag = 1;
    00000442 6AD3                   MOV         R13,R10
    00000444              L1337:                            
         print.c   140                            }
         print.c   141                            p1 = cdr(p1);
    00000444 84E8                   MOV.B       @(8,R14),R0
    00000446 2008                   TST         R0,R0
    00000448 8B01                   BF          L1339
    0000044A A004                   BRA         L1332
    0000044C 5EE1                   MOV.L       @(4,R14),R14
    0000044E              L1339:                            
    0000044E 930C                   MOV.W       L1897,R3   ; H'0570
    00000450 D206                   MOV.L       L1897+2,R2 ; _symtab
    00000452 6E22                   MOV.L       @R2,R14
    00000454 3E3C                   ADD         R3,R14
    00000456              L1332:                            
    00000456 84E8                   MOV.B       @(8,R14),R0
    00000458 2008                   TST         R0,R0
    0000045A 89DF                   BT          L1333
    0000045C              L1323:                            
         print.c   142                    }
         print.c   143            }
         print.c   144    
         print.c   145            if (test_flag == 0)
    0000045C D308                   MOV.L       L1897+22,R3; _test_flag
    0000045E 6232                   MOV.L       @R3,R2
    00000460 2228                   TST         R2,R2
    00000462 8B11                   BF          L1341
         print.c   146                    print_str(" / ");
    00000464 D407                   MOV.L       L1897+26,R4; L1096
    00000466 A010                   BRA         L1883
    00000468 0009                   NOP
    0000046A              L1897:                            
    0000046A 0570                   .DATA.W     H'0570
    0000046C <00000000>             .DATA.L     _symtab
    00000470 <00000000>             .DATA.L     _print_char
    00000474 <00000000>             .DATA.L     _isplusone
    00000478 <00000000>             .DATA.L     _is_denominator
    0000047C <00000000>             .DATA.L     _print_multiply_sign
    00000480 <00000000>             .DATA.L     _test_flag




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000484 <00000000>             .DATA.L     L1096
    00000488              L1341:                            
         print.c   147            else
         print.c   148                    print_str("/");
    00000488 D432                   MOV.L       L1898+4,R4 ; L1097
    0000048A              L1883:                            
    0000048A D233                   MOV.L       L1898+8,R2 ; _print_str
    0000048C 420B                   JSR         @R2
    0000048E 0009                   NOP
         print.c   149    
         print.c   150            if (d > 1)
    00000490 3CD7                   CMP/GT      R13,R12
    00000492 8B02                   BF          L1343
         print.c   151                    print_char('(');
    00000494 D231                   MOV.L       L1898+12,R2; _print_char
    00000496 420B                   JSR         @R2
    00000498 E428                   MOV         #40,R4
    0000049A              L1343:                            
         print.c   152    
         print.c   153    
         print.c   154            flag = 0;
         print.c   155            p1 = cdr(p);
    0000049A 84B8                   MOV.B       @(8,R11),R0
    0000049C 2008                   TST         R0,R0
    0000049E 8F02                   BF/S        L1344
    000004A0 6A83                   MOV         R8,R10
    000004A2 A004                   BRA         L1345
    000004A4 5EB1                   MOV.L       @(4,R11),R14
    000004A6              L1344:                            
    000004A6 9353                   MOV.W       L1898,R3   ; H'0570
    000004A8 D22D                   MOV.L       L1898+16,R2; _symtab
    000004AA 6E22                   MOV.L       @R2,R14
    000004AC 3E3C                   ADD         R3,R14
    000004AE              L1345:                            
         print.c   156    
         print.c   157            if (isrational(car(p1)))
    000004AE 84E8                   MOV.B       @(8,R14),R0
    000004B0 2008                   TST         R0,R0
    000004B2 8B01                   BF          L1347
    000004B4 A004                   BRA         L1348
    000004B6 60E2                   MOV.L       @R14,R0
    000004B8              L1347:                            
    000004B8 934A                   MOV.W       L1898,R3   ; H'0570
    000004BA D229                   MOV.L       L1898+16,R2; _symtab
    000004BC 6022                   MOV.L       @R2,R0
    000004BE 303C                   ADD         R3,R0
    000004C0              L1348:                            
    000004C0 8408                   MOV.B       @(8,R0),R0
    000004C2 600C                   EXTU.B      R0,R0
    000004C4 8801                   CMP/EQ      #1,R0
    000004C6 8B08                   BF          L1346
         print.c   158                    p1 = cdr(p1);
    000004C8 84E8                   MOV.B       @(8,R14),R0
    000004CA 2008                   TST         R0,R0
    000004CC 8B01                   BF          L1349
    000004CE A004                   BRA         L1346
    000004D0 5EE1                   MOV.L       @(4,R14),R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004D2              L1349:                            
    000004D2 933D                   MOV.W       L1898,R3   ; H'0570
    000004D4 D222                   MOV.L       L1898+16,R2; _symtab
    000004D6 6E22                   MOV.L       @R2,R14
    000004D8 3E3C                   ADD         R3,R14
    000004DA              L1346:                            
         print.c   159    
         print.c   160            if (!isplusone(B)) {
    000004DA D022                   MOV.L       L1898+20,R0; _p4
    000004DC D322                   MOV.L       L1898+24,R3; _isplusone
    000004DE 430B                   JSR         @R3
    000004E0 6402                   MOV.L       @R0,R4
    000004E2 2008                   TST         R0,R0
    000004E4 8B22                   BF          L1352
         print.c   161                    print_factor(B);
    000004E6 D31F                   MOV.L       L1898+20,R3; _p4
    000004E8 B242                   BSR         _print_factor
    000004EA 6432                   MOV.L       @R3,R4
         print.c   162                    flag = 1;
         print.c   163            }
         print.c   164    
         print.c   165            while (iscons(p1)) {
    000004EC A01E                   BRA         L1352
    000004EE 6AD3                   MOV         R13,R10
    000004F0              L1353:                            
         print.c   166                    p2 = car(p1);
    000004F0 8B01                   BF          L1354
    000004F2 A004                   BRA         L1355
    000004F4 6BE2                   MOV.L       @R14,R11
    000004F6              L1354:                            
    000004F6 932B                   MOV.W       L1898,R3   ; H'0570
    000004F8 D219                   MOV.L       L1898+16,R2; _symtab
    000004FA 6B22                   MOV.L       @R2,R11
    000004FC 3B3C                   ADD         R3,R11
    000004FE              L1355:                            
         print.c   167                    if (is_denominator(p2)) {
    000004FE D31B                   MOV.L       L1898+28,R3; _is_denominator
    00000500 430B                   JSR         @R3
    00000502 64B3                   MOV         R11,R4
    00000504 2008                   TST         R0,R0
    00000506 8908                   BT          L1356
         print.c   168                            if (flag)
    00000508 2AA8                   TST         R10,R10
    0000050A 8902                   BT          L1357
         print.c   169                                    print_multiply_sign();
    0000050C D218                   MOV.L       L1898+32,R2; _print_multiply_sign
    0000050E 420B                   JSR         @R2
    00000510 0009                   NOP
    00000512              L1357:                            
         print.c   170                            print_denom(p2, d);
    00000512 65C3                   MOV         R12,R5
    00000514 B0BF                   BSR         _print_denom
    00000516 64B3                   MOV         R11,R4
         print.c   171                            flag = 1;
    00000518 6AD3                   MOV         R13,R10
    0000051A              L1356:                            
         print.c   172                    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   173                    p1 = cdr(p1);
    0000051A 84E8                   MOV.B       @(8,R14),R0
    0000051C 2008                   TST         R0,R0
    0000051E 8B01                   BF          L1358
    00000520 A004                   BRA         L1352
    00000522 5EE1                   MOV.L       @(4,R14),R14
    00000524              L1358:                            
    00000524 9314                   MOV.W       L1898,R3   ; H'0570
    00000526 D20E                   MOV.L       L1898+16,R2; _symtab
    00000528 6E22                   MOV.L       @R2,R14
    0000052A 3E3C                   ADD         R3,R14
    0000052C              L1352:                            
    0000052C 84E8                   MOV.B       @(8,R14),R0
    0000052E 2008                   TST         R0,R0
    00000530 89DE                   BT          L1353
         print.c   174            }
         print.c   175    
         print.c   176            if (d > 1)
    00000532 3CD7                   CMP/GT      R13,R12
    00000534 8B02                   BF          L1360
         print.c   177                    print_char(')');
    00000536 D309                   MOV.L       L1898+12,R3; _print_char
    00000538 430B                   JSR         @R3
    0000053A E429                   MOV         #41,R4
    0000053C              L1360:                            
         print.c   178    
         print.c   179            restore();
    0000053C 4F26                   LDS.L       @R15+,PR
    0000053E 68F6                   MOV.L       @R15+,R8
    00000540 D20C                   MOV.L       L1898+36,R2; _restore
    00000542 69F6                   MOV.L       @R15+,R9
    00000544 6AF6                   MOV.L       @R15+,R10
    00000546 6BF6                   MOV.L       @R15+,R11
    00000548 6CF6                   MOV.L       @R15+,R12
    0000054A 6DF6                   MOV.L       @R15+,R13
    0000054C 422B                   JMP         @R2
    0000054E 6EF6                   MOV.L       @R15+,R14
    00000550              L1898:                            
    00000550 0570                   .DATA.W     H'0570
    00000552 0000                   .DATA.W     0
    00000554 <00000000>             .DATA.L     L1097
    00000558 <00000000>             .DATA.L     _print_str
    0000055C <00000000>             .DATA.L     _print_char
    00000560 <00000000>             .DATA.L     _symtab
    00000564 <00000000>             .DATA.L     _p4
    00000568 <00000000>             .DATA.L     _isplusone
    0000056C <00000000>             .DATA.L     _is_denominator
    00000570 <00000000>             .DATA.L     _print_multiply_sign
    00000574 <00000000>             .DATA.L     _restore
         print.c   180    }
         print.c   181    
         print.c   182    void
         print.c   183    print_term(U *p)
    00000578              _print_term:                     ; function: print_term
                                                           ; frame size=12
    00000578 2FE6                   MOV.L       R14,@-R15
    0000057A 6E43                   MOV         R4,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000057C 2FD6                   MOV.L       R13,@-R15
    0000057E 4F22                   STS.L       PR,@-R15
         print.c   184    {
         print.c   185            if (car(p) == symbol(MULTIPLY) && any_denominators(p)) {
    00000580 84E8                   MOV.B       @(8,R14),R0
    00000582 2008                   TST         R0,R0
    00000584 8B01                   BF          L1362
    00000586 A004                   BRA         L1363
    00000588 63E2                   MOV.L       @R14,R3
    0000058A              L1362:                            
    0000058A 9256                   MOV.W       L1899,R2   ; H'0570
    0000058C D12C                   MOV.L       L1899+6,R1 ; _symtab
    0000058E 6312                   MOV.L       @R1,R3
    00000590 332C                   ADD         R2,R3
    00000592              L1363:                            
    00000592 9253                   MOV.W       L1899+2,R2 ; H'0384
    00000594 D12A                   MOV.L       L1899+6,R1 ; _symtab
    00000596 6012                   MOV.L       @R1,R0
    00000598 302C                   ADD         R2,R0
    0000059A 3300                   CMP/EQ      R0,R3
    0000059C 8B09                   BF          L1361
    0000059E D129                   MOV.L       L1899+10,R1; _any_denominators
    000005A0 410B                   JSR         @R1
    000005A2 64E3                   MOV         R14,R4
    000005A4 2008                   TST         R0,R0
    000005A6 8904                   BT          L1361
         print.c   186                    print_a_over_b(p);
    000005A8 4F26                   LDS.L       @R15+,PR
    000005AA 64E3                   MOV         R14,R4
    000005AC 6DF6                   MOV.L       @R15+,R13
    000005AE AE77                   BRA         _print_a_over_b
    000005B0 6EF6                   MOV.L       @R15+,R14
    000005B2              L1361:                            
         print.c   187                    return;
         print.c   188            }
         print.c   189    
         print.c   190            if (car(p) == symbol(MULTIPLY)) {
    000005B2 84E8                   MOV.B       @(8,R14),R0
    000005B4 2008                   TST         R0,R0
    000005B6 8B01                   BF          L1366
    000005B8 A004                   BRA         L1367
    000005BA 63E2                   MOV.L       @R14,R3
    000005BC              L1366:                            
    000005BC 923D                   MOV.W       L1899,R2   ; H'0570
    000005BE D120                   MOV.L       L1899+6,R1 ; _symtab
    000005C0 6312                   MOV.L       @R1,R3
    000005C2 332C                   ADD         R2,R3
    000005C4              L1367:                            
    000005C4 923A                   MOV.W       L1899+2,R2 ; H'0384
    000005C6 D11E                   MOV.L       L1899+6,R1 ; _symtab
    000005C8 6012                   MOV.L       @R1,R0
    000005CA 302C                   ADD         R2,R0
    000005CC 3300                   CMP/EQ      R0,R3
    000005CE 8B59                   BF          L1365
         print.c   191                    p = cdr(p);
    000005D0 84E8                   MOV.B       @(8,R14),R0
    000005D2 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005D4 8B01                   BF          L1368
    000005D6 A004                   BRA         L1369
    000005D8 5DE1                   MOV.L       @(4,R14),R13
    000005DA              L1368:                            
    000005DA 932E                   MOV.W       L1899,R3   ; H'0570
    000005DC D118                   MOV.L       L1899+6,R1 ; _symtab
    000005DE 6D12                   MOV.L       @R1,R13
    000005E0 3D3C                   ADD         R3,R13
    000005E2              L1369:                            
         print.c   192    
         print.c   193                    // coeff -1?
         print.c   194    
         print.c   195                    if (isminusone(car(p))) {
    000005E2 84D8                   MOV.B       @(8,R13),R0
    000005E4 2008                   TST         R0,R0
    000005E6 8B01                   BF          L1371
    000005E8 A004                   BRA         L1372
    000005EA 64D2                   MOV.L       @R13,R4
    000005EC              L1371:                            
    000005EC 9325                   MOV.W       L1899,R3   ; H'0570
    000005EE D214                   MOV.L       L1899+6,R2 ; _symtab
    000005F0 6422                   MOV.L       @R2,R4
    000005F2 343C                   ADD         R3,R4
    000005F4              L1372:                            
    000005F4 D314                   MOV.L       L1899+14,R3; _isminusone
    000005F6 430B                   JSR         @R3
    000005F8 0009                   NOP
    000005FA 2008                   TST         R0,R0
    000005FC 8908                   BT          L1370
         print.c   196    //                      print_char('-');
         print.c   197                            p = cdr(p);
    000005FE 84D8                   MOV.B       @(8,R13),R0
    00000600 2008                   TST         R0,R0
    00000602 8B01                   BF          L1373
    00000604 A004                   BRA         L1370
    00000606 5DD1                   MOV.L       @(4,R13),R13
    00000608              L1373:                            
    00000608 9317                   MOV.W       L1899,R3   ; H'0570
    0000060A D20D                   MOV.L       L1899+6,R2 ; _symtab
    0000060C 6D22                   MOV.L       @R2,R13
    0000060E 3D3C                   ADD         R3,R13
    00000610              L1370:                            
         print.c   198                    }
         print.c   199    
         print.c   200                    print_factor(car(p));
    00000610 84D8                   MOV.B       @(8,R13),R0
    00000612 2008                   TST         R0,R0
    00000614 8B01                   BF          L1375
    00000616 A004                   BRA         L1376
    00000618 64D2                   MOV.L       @R13,R4
    0000061A              L1375:                            
    0000061A 930E                   MOV.W       L1899,R3   ; H'0570
    0000061C D208                   MOV.L       L1899+6,R2 ; _symtab
    0000061E 6422                   MOV.L       @R2,R4
    00000620 343C                   ADD         R3,R4
    00000622              L1376:                            
    00000622 B1A5                   BSR         _print_factor




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000624 0009                   NOP
         print.c   201                    p = cdr(p);
    00000626 84D8                   MOV.B       @(8,R13),R0
    00000628 2008                   TST         R0,R0
    0000062A 8B01                   BF          L1377
    0000062C A025                   BRA         L1379
    0000062E 5ED1                   MOV.L       @(4,R13),R14
    00000630              L1377:                            
    00000630 9303                   MOV.W       L1899,R3   ; H'0570
    00000632 D203                   MOV.L       L1899+6,R2 ; _symtab
    00000634 6E22                   MOV.L       @R2,R14
         print.c   202                    while (iscons(p)) {
    00000636 A020                   BRA         L1379
    00000638 3E3C                   ADD         R3,R14
    0000063A              L1899:                            
    0000063A 0570                   .DATA.W     H'0570
    0000063C 0384                   .DATA.W     H'0384
    0000063E 0000                   .DATA.W     0
    00000640 <00000000>             .DATA.L     _symtab
    00000644 <00000000>             .DATA.L     _any_denominators
    00000648 <00000000>             .DATA.L     _isminusone
    0000064C              L1380:                            
         print.c   203                            print_multiply_sign();
    0000064C D131                   MOV.L       L1900+2,R1 ; _print_multiply_sign
    0000064E 410B                   JSR         @R1
    00000650 0009                   NOP
         print.c   204                            print_factor(car(p));
    00000652 84E8                   MOV.B       @(8,R14),R0
    00000654 2008                   TST         R0,R0
    00000656 8B01                   BF          L1381
    00000658 A004                   BRA         L1382
    0000065A 64E2                   MOV.L       @R14,R4
    0000065C              L1381:                            
    0000065C 9359                   MOV.W       L1900,R3   ; H'0570
    0000065E D22E                   MOV.L       L1900+6,R2 ; _symtab
    00000660 6422                   MOV.L       @R2,R4
    00000662 343C                   ADD         R3,R4
    00000664              L1382:                            
    00000664 B184                   BSR         _print_factor
    00000666 0009                   NOP
         print.c   205                            p = cdr(p);
    00000668 84E8                   MOV.B       @(8,R14),R0
    0000066A 2008                   TST         R0,R0
    0000066C 8B01                   BF          L1383
    0000066E A004                   BRA         L1379
    00000670 5EE1                   MOV.L       @(4,R14),R14
    00000672              L1383:                            
    00000672 934E                   MOV.W       L1900,R3   ; H'0570
    00000674 D228                   MOV.L       L1900+6,R2 ; _symtab
    00000676 6E22                   MOV.L       @R2,R14
    00000678 3E3C                   ADD         R3,R14
    0000067A              L1379:                            
    0000067A 84E8                   MOV.B       @(8,R14),R0
    0000067C 2008                   TST         R0,R0
    0000067E 89E5                   BT          L1380
    00000680 A005                   BRA         L1364
    00000682 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000684              L1365:                            
         print.c   206                    }
         print.c   207            } else
         print.c   208                    print_factor(p);
    00000684 4F26                   LDS.L       @R15+,PR
    00000686 64E3                   MOV         R14,R4
    00000688 6DF6                   MOV.L       @R15+,R13
    0000068A A171                   BRA         _print_factor
    0000068C 6EF6                   MOV.L       @R15+,R14
    0000068E              L1364:                            
         print.c   209    }
    0000068E 4F26                   LDS.L       @R15+,PR
    00000690 6DF6                   MOV.L       @R15+,R13
    00000692 000B                   RTS
    00000694 6EF6                   MOV.L       @R15+,R14
         print.c   210    
         print.c   211    // prints stuff after the divide symbol "/"
         print.c   212    
         print.c   213    // d is the number of denominators
         print.c   214    
         print.c   215    #define BASE p1
         print.c   216    #define EXPO p2
         print.c   217    
         print.c   218    void
         print.c   219    print_denom(U *p, int d)
    00000696              _print_denom:                    ; function: print_denom
                                                           ; frame size=20
    00000696 2FE6                   MOV.L       R14,@-R15
    00000698 2FD6                   MOV.L       R13,@-R15
    0000069A 6E43                   MOV         R4,R14
         print.c   220    {
         print.c   221            save();
    0000069C D31F                   MOV.L       L1900+10,R3; _save
    0000069E 2FC6                   MOV.L       R12,@-R15
    000006A0 4F22                   STS.L       PR,@-R15
    000006A2 7FFC                   ADD         #-4,R15
    000006A4 430B                   JSR         @R3
    000006A6 2F52                   MOV.L       R5,@R15
         print.c   222    
         print.c   223            BASE = cadr(p);
    000006A8 DC1D                   MOV.L       L1900+14,R12; _p1
    000006AA 84E8                   MOV.B       @(8,R14),R0
    000006AC 2008                   TST         R0,R0
    000006AE 8B01                   BF          L1387
    000006B0 A004                   BRA         L1389
    000006B2 53E1                   MOV.L       @(4,R14),R3
    000006B4              L1387:                            
    000006B4 922D                   MOV.W       L1900,R2   ; H'0570
    000006B6 D118                   MOV.L       L1900+6,R1 ; _symtab
    000006B8 6312                   MOV.L       @R1,R3
    000006BA 332C                   ADD         R2,R3
    000006BC              L1389:                            
    000006BC 8438                   MOV.B       @(8,R3),R0
    000006BE 2008                   TST         R0,R0
    000006C0 8B0A                   BF          L1386
    000006C2 84E8                   MOV.B       @(8,R14),R0
    000006C4 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006C6 8B01                   BF          L1388
    000006C8 A004                   BRA         L1390
    000006CA 52E1                   MOV.L       @(4,R14),R2
    000006CC              L1388:                            
    000006CC 9321                   MOV.W       L1900,R3   ; H'0570
    000006CE D112                   MOV.L       L1900+6,R1 ; _symtab
    000006D0 6212                   MOV.L       @R1,R2
    000006D2 323C                   ADD         R3,R2
    000006D4              L1390:                            
    000006D4 A004                   BRA         L1391
    000006D6 6222                   MOV.L       @R2,R2
    000006D8              L1386:                            
    000006D8 931B                   MOV.W       L1900,R3   ; H'0570
    000006DA D10F                   MOV.L       L1900+6,R1 ; _symtab
    000006DC 6212                   MOV.L       @R1,R2
    000006DE 323C                   ADD         R3,R2
    000006E0              L1391:                            
    000006E0 2C22                   MOV.L       R2,@R12
         print.c   224            EXPO = caddr(p);
    000006E2 DD10                   MOV.L       L1900+18,R13; _p2
    000006E4 84E8                   MOV.B       @(8,R14),R0
    000006E6 2008                   TST         R0,R0
    000006E8 8B01                   BF          L1394
    000006EA A004                   BRA         L1399
    000006EC 53E1                   MOV.L       @(4,R14),R3
    000006EE              L1394:                            
    000006EE 9210                   MOV.W       L1900,R2   ; H'0570
    000006F0 D109                   MOV.L       L1900+6,R1 ; _symtab
    000006F2 6312                   MOV.L       @R1,R3
    000006F4 332C                   ADD         R2,R3
    000006F6              L1399:                            
    000006F6 8438                   MOV.B       @(8,R3),R0
    000006F8 2008                   TST         R0,R0
    000006FA 8B15                   BF          L1393
    000006FC 84E8                   MOV.B       @(8,R14),R0
    000006FE 2008                   TST         R0,R0
    00000700 8B01                   BF          L1395
    00000702 A004                   BRA         L1400
    00000704 52E1                   MOV.L       @(4,R14),R2
    00000706              L1395:                            
    00000706 9304                   MOV.W       L1900,R3   ; H'0570
    00000708 D103                   MOV.L       L1900+6,R1 ; _symtab
    0000070A 6212                   MOV.L       @R1,R2
    0000070C 323C                   ADD         R3,R2
    0000070E              L1400:                            
    0000070E A00F                   BRA         L1401
    00000710 5221                   MOV.L       @(4,R2),R2
    00000712              L1900:                            
    00000712 0570                   .DATA.W     H'0570
    00000714 <00000000>             .DATA.L     _print_multiply_sign
    00000718 <00000000>             .DATA.L     _symtab
    0000071C <00000000>             .DATA.L     _save
    00000720 <00000000>             .DATA.L     _p1
    00000724 <00000000>             .DATA.L     _p2
    00000728              L1393:                            
    00000728 9365                   MOV.W       L1901,R3   ; H'0570
    0000072A D134                   MOV.L       L1901+6,R1 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000072C 6212                   MOV.L       @R1,R2
    0000072E 323C                   ADD         R3,R2
    00000730              L1401:                            
    00000730 8428                   MOV.B       @(8,R2),R0
    00000732 2008                   TST         R0,R0
    00000734 8B1C                   BF          L1392
    00000736 84E8                   MOV.B       @(8,R14),R0
    00000738 2008                   TST         R0,R0
    0000073A 8B01                   BF          L1397
    0000073C A004                   BRA         L1402
    0000073E 53E1                   MOV.L       @(4,R14),R3
    00000740              L1397:                            
    00000740 9259                   MOV.W       L1901,R2   ; H'0570
    00000742 D12E                   MOV.L       L1901+6,R1 ; _symtab
    00000744 6312                   MOV.L       @R1,R3
    00000746 332C                   ADD         R2,R3
    00000748              L1402:                            
    00000748 8438                   MOV.B       @(8,R3),R0
    0000074A 2008                   TST         R0,R0
    0000074C 8B0A                   BF          L1396
    0000074E 84E8                   MOV.B       @(8,R14),R0
    00000750 2008                   TST         R0,R0
    00000752 8B01                   BF          L1398
    00000754 A004                   BRA         L1403
    00000756 52E1                   MOV.L       @(4,R14),R2
    00000758              L1398:                            
    00000758 934D                   MOV.W       L1901,R3   ; H'0570
    0000075A D128                   MOV.L       L1901+6,R1 ; _symtab
    0000075C 6212                   MOV.L       @R1,R2
    0000075E 323C                   ADD         R3,R2
    00000760              L1403:                            
    00000760 A004                   BRA         L1404
    00000762 5221                   MOV.L       @(4,R2),R2
    00000764              L1396:                            
    00000764 9347                   MOV.W       L1901,R3   ; H'0570
    00000766 D125                   MOV.L       L1901+6,R1 ; _symtab
    00000768 6212                   MOV.L       @R1,R2
    0000076A 323C                   ADD         R3,R2
    0000076C              L1404:                            
    0000076C A004                   BRA         L1405
    0000076E 6322                   MOV.L       @R2,R3
    00000770              L1392:                            
    00000770 9241                   MOV.W       L1901,R2   ; H'0570
    00000772 D122                   MOV.L       L1901+6,R1 ; _symtab
    00000774 6312                   MOV.L       @R1,R3
    00000776 332C                   ADD         R2,R3
    00000778              L1405:                            
    00000778 2D32                   MOV.L       R3,@R13
         print.c   225    
         print.c   226            // i.e. 1 / (2^(1/3))
         print.c   227    
         print.c   228            if (d == 1 && !isminusone(EXPO))
    0000077A 60F2                   MOV.L       @R15,R0
    0000077C 8801                   CMP/EQ      #1,R0
    0000077E 8B07                   BF          L1406
    00000780 D21F                   MOV.L       L1901+10,R2; _isminusone
    00000782 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000784 64D2                   MOV.L       @R13,R4
    00000786 2008                   TST         R0,R0
    00000788 8B02                   BF          L1406
         print.c   229                    print_char('(');
    0000078A D21E                   MOV.L       L1901+14,R2; _print_char
    0000078C 420B                   JSR         @R2
    0000078E E428                   MOV         #40,R4
    00000790              L1406:                            
         print.c   230    
         print.c   231            if (isfraction(BASE) || car(BASE) == symbol(ADD) || car(BASE) == symbol(MULTIPLY) || car(BASE) == 
                         +symbol(POWER) || lessp(BASE, zero)) {
    00000790 D31D                   MOV.L       L1901+18,R3; _isfraction
    00000792 430B                   JSR         @R3
    00000794 64C2                   MOV.L       @R12,R4
    00000796 2008                   TST         R0,R0
    00000798 8B4C                   BF          L1408
    0000079A D31C                   MOV.L       L1901+22,R3; _p1
    0000079C 6232                   MOV.L       @R3,R2
    0000079E 8428                   MOV.B       @(8,R2),R0
    000007A0 2008                   TST         R0,R0
    000007A2 8B03                   BF          L1409
    000007A4 6132                   MOV.L       @R3,R1
    000007A6 6312                   MOV.L       @R1,R3
    000007A8 A004                   BRA         L1412
    000007AA 0009                   NOP
    000007AC              L1409:                            
    000007AC 9223                   MOV.W       L1901,R2   ; H'0570
    000007AE D013                   MOV.L       L1901+6,R0 ; _symtab
    000007B0 6302                   MOV.L       @R0,R3
    000007B2 332C                   ADD         R2,R3
    000007B4              L1412:                            
    000007B4 D111                   MOV.L       L1901+6,R1 ; _symtab
    000007B6 6212                   MOV.L       @R1,R2
    000007B8 720C                   ADD         #12,R2
    000007BA 3320                   CMP/EQ      R2,R3
    000007BC 893A                   BT          L1408
    000007BE D213                   MOV.L       L1901+22,R2; _p1
    000007C0 6322                   MOV.L       @R2,R3
    000007C2 8438                   MOV.B       @(8,R3),R0
    000007C4 2008                   TST         R0,R0
    000007C6 8B03                   BF          L1410
    000007C8 D310                   MOV.L       L1901+22,R3; _p1
    000007CA 6232                   MOV.L       @R3,R2
    000007CC A004                   BRA         L1413
    000007CE 6222                   MOV.L       @R2,R2
    000007D0              L1410:                            
    000007D0 9311                   MOV.W       L1901,R3   ; H'0570
    000007D2 D10A                   MOV.L       L1901+6,R1 ; _symtab
    000007D4 6212                   MOV.L       @R1,R2
    000007D6 323C                   ADD         R3,R2
    000007D8              L1413:                            
    000007D8 930E                   MOV.W       L1901+2,R3 ; H'0384
    000007DA D108                   MOV.L       L1901+6,R1 ; _symtab
    000007DC 6012                   MOV.L       @R1,R0
    000007DE 303C                   ADD         R3,R0
    000007E0 3200                   CMP/EQ      R0,R2
    000007E2 8927                   BT          L1408




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007E4 D209                   MOV.L       L1901+22,R2; _p1
    000007E6 6322                   MOV.L       @R2,R3
    000007E8 8438                   MOV.B       @(8,R3),R0
    000007EA 2008                   TST         R0,R0
    000007EC 8B10                   BF          L1411
    000007EE D307                   MOV.L       L1901+22,R3; _p1
    000007F0 6232                   MOV.L       @R3,R2
    000007F2 A011                   BRA         L1414
    000007F4 6222                   MOV.L       @R2,R2
    000007F6              L1901:                            
    000007F6 0570                   .DATA.W     H'0570
    000007F8 0384                   .DATA.W     H'0384
    000007FA 0000                   .DATA.W     0
    000007FC <00000000>             .DATA.L     _symtab
    00000800 <00000000>             .DATA.L     _isminusone
    00000804 <00000000>             .DATA.L     _print_char
    00000808 <00000000>             .DATA.L     _isfraction
    0000080C <00000000>             .DATA.L     _p1
    00000810              L1411:                            
    00000810 935A                   MOV.W       L1902,R3   ; H'0570
    00000812 D12E                   MOV.L       L1902+4,R1 ; _symtab
    00000814 6212                   MOV.L       @R1,R2
    00000816 323C                   ADD         R3,R2
    00000818              L1414:                            
    00000818 9357                   MOV.W       L1902+2,R3 ; H'03F0
    0000081A D12C                   MOV.L       L1902+4,R1 ; _symtab
    0000081C 6012                   MOV.L       @R1,R0
    0000081E 303C                   ADD         R3,R0
    00000820 3200                   CMP/EQ      R0,R2
    00000822 8907                   BT          L1408
    00000824 D22A                   MOV.L       L1902+8,R2 ; _zero
    00000826 6522                   MOV.L       @R2,R5
    00000828 D32A                   MOV.L       L1902+12,R3; _p1
    0000082A D22B                   MOV.L       L1902+16,R2; _lessp
    0000082C 420B                   JSR         @R2
    0000082E 6432                   MOV.L       @R3,R4
    00000830 2008                   TST         R0,R0
    00000832 8909                   BT          L1407
    00000834              L1408:                            
         print.c   232                            print_char('(');
    00000834 D329                   MOV.L       L1902+20,R3; _print_char
    00000836 430B                   JSR         @R3
    00000838 E428                   MOV         #40,R4
         print.c   233                            print_expr(BASE);
    0000083A BBF6                   BSR         _print_expr
    0000083C 64C2                   MOV.L       @R12,R4
         print.c   234                            print_char(')');
    0000083E D327                   MOV.L       L1902+20,R3; _print_char
    00000840 430B                   JSR         @R3
    00000842 E429                   MOV         #41,R4
    00000844 A002                   BRA         L1415
    00000846 0009                   NOP
    00000848              L1407:                            
         print.c   235            } else
         print.c   236                    print_expr(BASE);
    00000848 BBEF                   BSR         _print_expr
    0000084A 64C2                   MOV.L       @R12,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000084C              L1415:                            
         print.c   237    
         print.c   238            if (isminusone(EXPO)) {
    0000084C D224                   MOV.L       L1902+24,R2; _isminusone
    0000084E 420B                   JSR         @R2
    00000850 64D2                   MOV.L       @R13,R4
    00000852 2008                   TST         R0,R0
    00000854 8901                   BT          L1903
    00000856 A084                   BRA         L1191
    00000858 0009                   NOP
    0000085A              L1903:                            
         print.c   239                    restore();
         print.c   240                    return;
         print.c   241            }
         print.c   242    
         print.c   243            if (test_flag == 0)
    0000085A D222                   MOV.L       L1902+28,R2; _test_flag
    0000085C 6322                   MOV.L       @R2,R3
    0000085E 2338                   TST         R3,R3
    00000860 8B05                   BF          L1418
         print.c   244                    print_str(power_str);
    00000862 D321                   MOV.L       L1902+32,R3; _power_str
    00000864 D121                   MOV.L       L1902+36,R1; _print_str
    00000866 410B                   JSR         @R1
    00000868 6432                   MOV.L       @R3,R4
    0000086A A003                   BRA         L1419
    0000086C 0009                   NOP
    0000086E              L1418:                            
         print.c   245            else
         print.c   246                    print_char('^');
    0000086E D31B                   MOV.L       L1902+20,R3; _print_char
    00000870 430B                   JSR         @R3
    00000872 E45E                   MOV         #94,R4
    00000874              L1419:                            
         print.c   247    
         print.c   248            push(EXPO);
    00000874 D21E                   MOV.L       L1902+40,R2; _push
    00000876 420B                   JSR         @R2
    00000878 64D2                   MOV.L       @R13,R4
         print.c   249            negate();
    0000087A D31E                   MOV.L       L1902+44,R3; _negate
    0000087C 430B                   JSR         @R3
    0000087E 0009                   NOP
         print.c   250            EXPO = pop();
    00000880 D21D                   MOV.L       L1902+48,R2; _pop
    00000882 420B                   JSR         @R2
    00000884 0009                   NOP
    00000886 2D02                   MOV.L       R0,@R13
         print.c   251    
         print.c   252            if (isfraction(EXPO) || car(EXPO) == symbol(ADD) || car(EXPO) == symbol(MULTIPLY) || car(EXPO) == 
                         +symbol(POWER)) {
    00000888 D31C                   MOV.L       L1902+52,R3; _isfraction
    0000088A 430B                   JSR         @R3
    0000088C 6403                   MOV         R0,R4
    0000088E 2008                   TST         R0,R0
    00000890 8B55                   BF          L1421
    00000892 D31B                   MOV.L       L1902+56,R3; _p2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000894 6232                   MOV.L       @R3,R2
    00000896 8428                   MOV.B       @(8,R2),R0
    00000898 2008                   TST         R0,R0
    0000089A 8B03                   BF          L1422
    0000089C 6132                   MOV.L       @R3,R1
    0000089E 6312                   MOV.L       @R1,R3
    000008A0 A004                   BRA         L1425
    000008A2 0009                   NOP
    000008A4              L1422:                            
    000008A4 9210                   MOV.W       L1902,R2   ; H'0570
    000008A6 D009                   MOV.L       L1902+4,R0 ; _symtab
    000008A8 6302                   MOV.L       @R0,R3
    000008AA 332C                   ADD         R2,R3
    000008AC              L1425:                            
    000008AC D107                   MOV.L       L1902+4,R1 ; _symtab
    000008AE 6212                   MOV.L       @R1,R2
    000008B0 720C                   ADD         #12,R2
    000008B2 3320                   CMP/EQ      R2,R3
    000008B4 8943                   BT          L1421
    000008B6 D212                   MOV.L       L1902+56,R2; _p2
    000008B8 6322                   MOV.L       @R2,R3
    000008BA 8438                   MOV.B       @(8,R3),R0
    000008BC 2008                   TST         R0,R0
    000008BE 8B21                   BF          L1423
    000008C0 D30F                   MOV.L       L1902+56,R3; _p2
    000008C2 6232                   MOV.L       @R3,R2
    000008C4 A022                   BRA         L1426
    000008C6 6222                   MOV.L       @R2,R2
    000008C8              L1902:                            
    000008C8 0570                   .DATA.W     H'0570
    000008CA 03F0                   .DATA.W     H'03F0
    000008CC <00000000>             .DATA.L     _symtab
    000008D0 <00000000>             .DATA.L     _zero
    000008D4 <00000000>             .DATA.L     _p1
    000008D8 <00000000>             .DATA.L     _lessp
    000008DC <00000000>             .DATA.L     _print_char
    000008E0 <00000000>             .DATA.L     _isminusone
    000008E4 <00000000>             .DATA.L     _test_flag
    000008E8 <00000000>             .DATA.L     _power_str
    000008EC <00000000>             .DATA.L     _print_str
    000008F0 <00000000>             .DATA.L     _push
    000008F4 <00000000>             .DATA.L     _negate
    000008F8 <00000000>             .DATA.L     _pop
    000008FC <00000000>             .DATA.L     _isfraction
    00000900 <00000000>             .DATA.L     _p2
    00000904              L1423:                            
    00000904 9371                   MOV.W       L1904,R3   ; H'0570
    00000906 D13A                   MOV.L       L1904+6,R1 ; _symtab
    00000908 6212                   MOV.L       @R1,R2
    0000090A 323C                   ADD         R3,R2
    0000090C              L1426:                            
    0000090C 936E                   MOV.W       L1904+2,R3 ; H'0384
    0000090E D138                   MOV.L       L1904+6,R1 ; _symtab
    00000910 6012                   MOV.L       @R1,R0
    00000912 303C                   ADD         R3,R0
    00000914 3200                   CMP/EQ      R0,R2
    00000916 8912                   BT          L1421




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000918 D236                   MOV.L       L1904+10,R2; _p2
    0000091A 6322                   MOV.L       @R2,R3
    0000091C 8438                   MOV.B       @(8,R3),R0
    0000091E 2008                   TST         R0,R0
    00000920 8B03                   BF          L1424
    00000922 D334                   MOV.L       L1904+10,R3; _p2
    00000924 6232                   MOV.L       @R3,R2
    00000926 A004                   BRA         L1427
    00000928 6222                   MOV.L       @R2,R2
    0000092A              L1424:                            
    0000092A 935E                   MOV.W       L1904,R3   ; H'0570
    0000092C D130                   MOV.L       L1904+6,R1 ; _symtab
    0000092E 6212                   MOV.L       @R1,R2
    00000930 323C                   ADD         R3,R2
    00000932              L1427:                            
    00000932 935C                   MOV.W       L1904+4,R3 ; H'03F0
    00000934 D12E                   MOV.L       L1904+6,R1 ; _symtab
    00000936 6012                   MOV.L       @R1,R0
    00000938 303C                   ADD         R3,R0
    0000093A 3200                   CMP/EQ      R0,R2
    0000093C 8B09                   BF          L1420
    0000093E              L1421:                            
         print.c   253                    print_char('(');
    0000093E D22E                   MOV.L       L1904+14,R2; _print_char
    00000940 420B                   JSR         @R2
    00000942 E428                   MOV         #40,R4
         print.c   254                    print_expr(EXPO);
    00000944 BB71                   BSR         _print_expr
    00000946 64D2                   MOV.L       @R13,R4
         print.c   255                    print_char(')');
    00000948 D22B                   MOV.L       L1904+14,R2; _print_char
    0000094A 420B                   JSR         @R2
    0000094C E429                   MOV         #41,R4
    0000094E A002                   BRA         L1428
    00000950 0009                   NOP
    00000952              L1420:                            
         print.c   256            } else
         print.c   257                    print_expr(EXPO);
    00000952 BB6A                   BSR         _print_expr
    00000954 64D2                   MOV.L       @R13,R4
    00000956              L1428:                            
         print.c   258    
         print.c   259            if (d == 1)
    00000956 60F2                   MOV.L       @R15,R0
    00000958 8801                   CMP/EQ      #1,R0
    0000095A 8B02                   BF          L1191
         print.c   260                    print_char(')');
    0000095C D226                   MOV.L       L1904+14,R2; _print_char
    0000095E 420B                   JSR         @R2
    00000960 E429                   MOV         #41,R4
    00000962              L1191:
         print.c   261    
         print.c   262            restore();
    00000962 7F04                   ADD         #4,R15
    00000964 D325                   MOV.L       L1904+18,R3; _restore
    00000966 4F26                   LDS.L       @R15+,PR
    00000968 6CF6                   MOV.L       @R15+,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000096A 6DF6                   MOV.L       @R15+,R13
    0000096C 432B                   JMP         @R3
    0000096E 6EF6                   MOV.L       @R15+,R14
         print.c   263    }
         print.c   264    
         print.c   265    void
         print.c   266    print_factor(U *p)
    00000970              _print_factor:                   ; function: print_factor
                                                           ; frame size=28
    00000970 2FE6                   MOV.L       R14,@-R15
    00000972 6E43                   MOV         R4,R14
    00000974 2FD6                   MOV.L       R13,@-R15
    00000976 2FC6                   MOV.L       R12,@-R15
    00000978 2FB6                   MOV.L       R11,@-R15
    0000097A 4F22                   STS.L       PR,@-R15
    0000097C DB20                   MOV.L       L1904+22,R11; _test_flag
    0000097E 7FF8                   ADD         #-8,R15
    00000980 DC20                   MOV.L       L1904+26,R12; L1119
    00000982              L1430:                            
         print.c   267    {
         print.c   268            if (isnum(p)) {
    00000982 84E8                   MOV.B       @(8,R14),R0
    00000984 600C                   EXTU.B      R0,R0
    00000986 8801                   CMP/EQ      #1,R0
    00000988 8D03                   BT/S        L1432
    0000098A 6403                   MOV         R0,R4
    0000098C 6043                   MOV         R4,R0
    0000098E 8802                   CMP/EQ      #2,R0
    00000990 8B08                   BF          L1431
    00000992              L1432:                            
         print.c   269                    print_number(p);
    00000992 64E3                   MOV         R14,R4
    00000994 D31C                   MOV.L       L1904+30,R3; _print_number
    00000996 7F08                   ADD         #8,R15
    00000998 4F26                   LDS.L       @R15+,PR
    0000099A 6BF6                   MOV.L       @R15+,R11
    0000099C 6CF6                   MOV.L       @R15+,R12
    0000099E 6DF6                   MOV.L       @R15+,R13
    000009A0 432B                   JMP         @R3
    000009A2 6EF6                   MOV.L       @R15+,R14
    000009A4              L1431:                            
         print.c   270                    return;
         print.c   271            }
         print.c   272    
         print.c   273            if (isstr(p)) {
    000009A4 84E8                   MOV.B       @(8,R14),R0
    000009A6 600C                   EXTU.B      R0,R0
    000009A8 8803                   CMP/EQ      #3,R0
    000009AA 8B01                   BF          L1434
         print.c   274                    //print_str("\"");
         print.c   275                    print_str(p->u.str);
         print.c   276                    //print_str("\"");
         print.c   277                    return;
    000009AC A5B7                   BRA         L1887
    000009AE 64E2                   MOV.L       @R14,R4
    000009B0              L1434:                            
         print.c   278            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   279    
         print.c   280            if (istensor(p)) {
    000009B0 8804                   CMP/EQ      #4,R0
    000009B2 8B07                   BF          L1435
         print.c   281                    print_tensor(p);
    000009B4 64E3                   MOV         R14,R4
    000009B6 7F08                   ADD         #8,R15
    000009B8 4F26                   LDS.L       @R15+,PR
    000009BA 6BF6                   MOV.L       @R15+,R11
    000009BC 6CF6                   MOV.L       @R15+,R12
    000009BE 6DF6                   MOV.L       @R15+,R13
    000009C0 A72D                   BRA         _print_tensor
    000009C2 6EF6                   MOV.L       @R15+,R14
    000009C4              L1435:                            
         print.c   282                    return;
         print.c   283            }
         print.c   284    
         print.c   285            if (isadd(p) || car(p) == symbol(MULTIPLY)) {
    000009C4 DD0A                   MOV.L       L1904+6,R13; _symtab
    000009C6 84E8                   MOV.B       @(8,R14),R0
    000009C8 2008                   TST         R0,R0
    000009CA 8B01                   BF          L1438
    000009CC A004                   BRA         L1440
    000009CE 63E2                   MOV.L       @R14,R3
    000009D0              L1438:                            
    000009D0 920B                   MOV.W       L1904,R2   ; H'0570
    000009D2 D107                   MOV.L       L1904+6,R1 ; _symtab
    000009D4 6312                   MOV.L       @R1,R3
    000009D6 332C                   ADD         R2,R3
    000009D8              L1440:                            
    000009D8 62D2                   MOV.L       @R13,R2
    000009DA 720C                   ADD         #12,R2
    000009DC 3320                   CMP/EQ      R2,R3
    000009DE 891D                   BT          L1437
    000009E0 84E8                   MOV.B       @(8,R14),R0
    000009E2 2008                   TST         R0,R0
    000009E4 8B12                   BF          L1439
    000009E6 A014                   BRA         L1441
    000009E8 62E2                   MOV.L       @R14,R2
    000009EA              L1904:                            
    000009EA 0570                   .DATA.W     H'0570
    000009EC 0384                   .DATA.W     H'0384
    000009EE 03F0                   .DATA.W     H'03F0
    000009F0 <00000000>             .DATA.L     _symtab
    000009F4 <00000000>             .DATA.L     _p2
    000009F8 <00000000>             .DATA.L     _print_char
    000009FC <00000000>             .DATA.L     _restore
    00000A00 <00000000>             .DATA.L     _test_flag
    00000A04 <00000000>             .DATA.L     L1119
    00000A08 <00000000>             .DATA.L     _print_number
    00000A0C              L1439:                            
    00000A0C 9362                   MOV.W       L1905,R3   ; H'0570
    00000A0E 62D2                   MOV.L       @R13,R2
    00000A10 323C                   ADD         R3,R2
    00000A12              L1441:                            
    00000A12 9360                   MOV.W       L1905+2,R3 ; H'0384
    00000A14 61D2                   MOV.L       @R13,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A16 313C                   ADD         R3,R1
    00000A18 3210                   CMP/EQ      R1,R2
    00000A1A 8B05                   BF          L1436
    00000A1C              L1437:                            
         print.c   286                    print_str("(");
    00000A1C B751                   BSR         _print_str
    00000A1E 64C3                   MOV         R12,R4
         print.c   287                    print_expr(p);
    00000A20 BB03                   BSR         _print_expr
    00000A22 64E3                   MOV         R14,R4
    00000A24 A57A                   BRA         L1203
    00000A26 0009                   NOP
    00000A28              L1436:                            
    00000A28 9356                   MOV.W       L1905+4,R3 ; H'05AC
    00000A2A 64D2                   MOV.L       @R13,R4
    00000A2C 84E8                   MOV.B       @(8,R14),R0
    00000A2E 2008                   TST         R0,R0
    00000A30 8F02                   BF/S        L1443
    00000A32 343C                   ADD         R3,R4
    00000A34 A003                   BRA         L1444
    00000A36 62E2                   MOV.L       @R14,R2
    00000A38              L1443:                            
    00000A38 914C                   MOV.W       L1905,R1   ; H'0570
    00000A3A 62D2                   MOV.L       @R13,R2
    00000A3C 321C                   ADD         R1,R2
    00000A3E              L1444:                            
    00000A3E 934C                   MOV.W       L1905+6,R3 ; H'03F0
    00000A40 60D2                   MOV.L       @R13,R0
    00000A42 303C                   ADD         R3,R0
    00000A44 3200                   CMP/EQ      R0,R2
    00000A46 8901                   BT          L1906
    00000A48 A4CA                   BRA         L1442
    00000A4A 0009                   NOP
    00000A4C              L1906:                            
         print.c   288                    print_str(")");
         print.c   289                    return;
         print.c   290            }
         print.c   291    
         print.c   292            if (car(p) == symbol(POWER)) {
         print.c   293    
         print.c   294                    if (cadr(p) == symbol(E)) {
    00000A4C 84E8                   MOV.B       @(8,R14),R0
    00000A4E 2008                   TST         R0,R0
    00000A50 8B01                   BF          L1447
    00000A52 A004                   BRA         L1449
    00000A54 52E1                   MOV.L       @(4,R14),R2
    00000A56              L1447:                            
    00000A56 913D                   MOV.W       L1905,R1   ; H'0570
    00000A58 D020                   MOV.L       L1905+8,R0 ; _symtab
    00000A5A 6202                   MOV.L       @R0,R2
    00000A5C 321C                   ADD         R1,R2
    00000A5E              L1449:                            
    00000A5E 8428                   MOV.B       @(8,R2),R0
    00000A60 2008                   TST         R0,R0
    00000A62 8B0B                   BF          L1446
    00000A64 84E8                   MOV.B       @(8,R14),R0
    00000A66 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A68 8B01                   BF          L1448
    00000A6A A004                   BRA         L1450
    00000A6C 52E1                   MOV.L       @(4,R14),R2
    00000A6E              L1448:                            
    00000A6E 9331                   MOV.W       L1905,R3   ; H'0570
    00000A70 D11A                   MOV.L       L1905+8,R1 ; _symtab
    00000A72 6212                   MOV.L       @R1,R2
    00000A74 323C                   ADD         R3,R2
    00000A76              L1450:                            
    00000A76 6122                   MOV.L       @R2,R1
    00000A78 A004                   BRA         L1451
    00000A7A 0009                   NOP
    00000A7C              L1446:                            
    00000A7C 932A                   MOV.W       L1905,R3   ; H'0570
    00000A7E D017                   MOV.L       L1905+8,R0 ; _symtab
    00000A80 6102                   MOV.L       @R0,R1
    00000A82 313C                   ADD         R3,R1
    00000A84              L1451:                            
    00000A84 3140                   CMP/EQ      R4,R1
    00000A86 8B02                   BF          L1445
         print.c   295    #ifdef ARM9
         print.c   296                            print_str("\235(");
         print.c   297    #else
         print.c   298                            print_str("exp(");
    00000A88 D415                   MOV.L       L1905+12,R4; L1123
    00000A8A A415                   BRA         L1886
    00000A8C 0009                   NOP
    00000A8E              L1445:                            
         print.c   299    #endif                  
         print.c   300                            print_expr(caddr(p));
         print.c   301                            print_str(")");
         print.c   302                            return;
         print.c   303                    }
         print.c   304    
         print.c   305                    if (isminusone(caddr(p))) {
    00000A8E 84E8                   MOV.B       @(8,R14),R0
    00000A90 2008                   TST         R0,R0
    00000A92 8B01                   BF          L1455
    00000A94 A004                   BRA         L1460
    00000A96 54E1                   MOV.L       @(4,R14),R4
    00000A98              L1455:                            
    00000A98 931C                   MOV.W       L1905,R3   ; H'0570
    00000A9A D210                   MOV.L       L1905+8,R2 ; _symtab
    00000A9C 6422                   MOV.L       @R2,R4
    00000A9E 343C                   ADD         R3,R4
    00000AA0              L1460:                            
    00000AA0 8448                   MOV.B       @(8,R4),R0
    00000AA2 2008                   TST         R0,R0
    00000AA4 8B0A                   BF          L1454
    00000AA6 84E8                   MOV.B       @(8,R14),R0
    00000AA8 2008                   TST         R0,R0
    00000AAA 8B01                   BF          L1456
    00000AAC A004                   BRA         L1461
    00000AAE 54E1                   MOV.L       @(4,R14),R4
    00000AB0              L1456:                            
    00000AB0 9310                   MOV.W       L1905,R3   ; H'0570
    00000AB2 D20A                   MOV.L       L1905+8,R2 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AB4 6422                   MOV.L       @R2,R4
    00000AB6 343C                   ADD         R3,R4
    00000AB8              L1461:                            
    00000AB8 A004                   BRA         L1462
    00000ABA 5441                   MOV.L       @(4,R4),R4
    00000ABC              L1454:                            
    00000ABC 930A                   MOV.W       L1905,R3   ; H'0570
    00000ABE D207                   MOV.L       L1905+8,R2 ; _symtab
    00000AC0 6422                   MOV.L       @R2,R4
    00000AC2 343C                   ADD         R3,R4
    00000AC4              L1462:                            
    00000AC4 8448                   MOV.B       @(8,R4),R0
    00000AC6 2008                   TST         R0,R0
    00000AC8 8B24                   BF          L1453
    00000ACA 84E8                   MOV.B       @(8,R14),R0
    00000ACC 2008                   TST         R0,R0
    00000ACE 8B09                   BF          L1458
    00000AD0 A00C                   BRA         L1463
    00000AD2 54E1                   MOV.L       @(4,R14),R4
    00000AD4              L1905:                            
    00000AD4 0570                   .DATA.W     H'0570
    00000AD6 0384                   .DATA.W     H'0384
    00000AD8 05AC                   .DATA.W     H'05AC
    00000ADA 03F0                   .DATA.W     H'03F0
    00000ADC <00000000>             .DATA.L     _symtab
    00000AE0 <00000000>             .DATA.L     L1123
    00000AE4              L1458:                            
    00000AE4 9359                   MOV.W       L1907,R3   ; H'0570
    00000AE6 D22D                   MOV.L       L1907+2,R2 ; _symtab
    00000AE8 6422                   MOV.L       @R2,R4
    00000AEA 343C                   ADD         R3,R4
    00000AEC              L1463:                            
    00000AEC 8448                   MOV.B       @(8,R4),R0
    00000AEE 2008                   TST         R0,R0
    00000AF0 8B0A                   BF          L1457
    00000AF2 84E8                   MOV.B       @(8,R14),R0
    00000AF4 2008                   TST         R0,R0
    00000AF6 8B01                   BF          L1459
    00000AF8 A004                   BRA         L1464
    00000AFA 54E1                   MOV.L       @(4,R14),R4
    00000AFC              L1459:                            
    00000AFC 934D                   MOV.W       L1907,R3   ; H'0570
    00000AFE D227                   MOV.L       L1907+2,R2 ; _symtab
    00000B00 6422                   MOV.L       @R2,R4
    00000B02 343C                   ADD         R3,R4
    00000B04              L1464:                            
    00000B04 A004                   BRA         L1465
    00000B06 5441                   MOV.L       @(4,R4),R4
    00000B08              L1457:                            
    00000B08 9347                   MOV.W       L1907,R3   ; H'0570
    00000B0A D224                   MOV.L       L1907+2,R2 ; _symtab
    00000B0C 6422                   MOV.L       @R2,R4
    00000B0E 343C                   ADD         R3,R4
    00000B10              L1465:                            
    00000B10 A004                   BRA         L1466
    00000B12 6442                   MOV.L       @R4,R4
    00000B14              L1453:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B14 9341                   MOV.W       L1907,R3   ; H'0570
    00000B16 D221                   MOV.L       L1907+2,R2 ; _symtab
    00000B18 6422                   MOV.L       @R2,R4
    00000B1A 343C                   ADD         R3,R4
    00000B1C              L1466:                            
    00000B1C D320                   MOV.L       L1907+6,R3 ; _isminusone
    00000B1E 430B                   JSR         @R3
    00000B20 0009                   NOP
    00000B22 2008                   TST         R0,R0
    00000B24 8972                   BT          L1452
         print.c   306                            if (test_flag == 0)
    00000B26 63B2                   MOV.L       @R11,R3
    00000B28 2338                   TST         R3,R3
    00000B2A 8B02                   BF          L1467
         print.c   307                                    print_str("1 / ");
    00000B2C D41D                   MOV.L       L1907+10,R4; L1125
    00000B2E A001                   BRA         L1885
    00000B30 0009                   NOP
    00000B32              L1467:                            
         print.c   308                            else
         print.c   309                                    print_str("1/");
    00000B32 D41D                   MOV.L       L1907+14,R4; L1126
    00000B34              L1885:                            
    00000B34 B6C5                   BSR         _print_str
    00000B36 0009                   NOP
         print.c   310                            if (iscons(cadr(p))) {
    00000B38 84E8                   MOV.B       @(8,R14),R0
    00000B3A 2008                   TST         R0,R0
    00000B3C 8B01                   BF          L1471
    00000B3E A004                   BRA         L1473
    00000B40 53E1                   MOV.L       @(4,R14),R3
    00000B42              L1471:                            
    00000B42 922A                   MOV.W       L1907,R2   ; H'0570
    00000B44 D115                   MOV.L       L1907+2,R1 ; _symtab
    00000B46 6312                   MOV.L       @R1,R3
    00000B48 332C                   ADD         R2,R3
    00000B4A              L1473:                            
    00000B4A 8438                   MOV.B       @(8,R3),R0
    00000B4C 2008                   TST         R0,R0
    00000B4E 8B0A                   BF          L1470
    00000B50 84E8                   MOV.B       @(8,R14),R0
    00000B52 2008                   TST         R0,R0
    00000B54 8B01                   BF          L1472
    00000B56 A004                   BRA         L1474
    00000B58 52E1                   MOV.L       @(4,R14),R2
    00000B5A              L1472:                            
    00000B5A 931E                   MOV.W       L1907,R3   ; H'0570
    00000B5C D10F                   MOV.L       L1907+2,R1 ; _symtab
    00000B5E 6212                   MOV.L       @R1,R2
    00000B60 323C                   ADD         R3,R2
    00000B62              L1474:                            
    00000B62 A004                   BRA         L1475
    00000B64 6222                   MOV.L       @R2,R2
    00000B66              L1470:                            
    00000B66 9318                   MOV.W       L1907,R3   ; H'0570
    00000B68 D10C                   MOV.L       L1907+2,R1 ; _symtab
    00000B6A 6212                   MOV.L       @R1,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B6C 323C                   ADD         R3,R2
    00000B6E              L1475:                            
    00000B6E 8428                   MOV.B       @(8,R2),R0
    00000B70 2008                   TST         R0,R0
    00000B72 8B29                   BF          L1469
         print.c   311                                    print_str("(");
    00000B74 B6A5                   BSR         _print_str
    00000B76 64C3                   MOV         R12,R4
         print.c   312                                    print_expr(cadr(p));
    00000B78 84E8                   MOV.B       @(8,R14),R0
    00000B7A 2008                   TST         R0,R0
    00000B7C 8B01                   BF          L1477
    00000B7E A004                   BRA         L1479
    00000B80 54E1                   MOV.L       @(4,R14),R4
    00000B82              L1477:                            
    00000B82 930A                   MOV.W       L1907,R3   ; H'0570
    00000B84 D205                   MOV.L       L1907+2,R2 ; _symtab
    00000B86 6422                   MOV.L       @R2,R4
    00000B88 343C                   ADD         R3,R4
    00000B8A              L1479:                            
    00000B8A 8448                   MOV.B       @(8,R4),R0
    00000B8C 2008                   TST         R0,R0
    00000B8E 8B13                   BF          L1476
    00000B90 84E8                   MOV.B       @(8,R14),R0
    00000B92 2008                   TST         R0,R0
    00000B94 8B0A                   BF          L1478
    00000B96 A00D                   BRA         L1480
    00000B98 54E1                   MOV.L       @(4,R14),R4
    00000B9A              L1907:                            
    00000B9A 0570                   .DATA.W     H'0570
    00000B9C <00000000>             .DATA.L     _symtab
    00000BA0 <00000000>             .DATA.L     _isminusone
    00000BA4 <00000000>             .DATA.L     L1125
    00000BA8 <00000000>             .DATA.L     L1126
    00000BAC              L1478:                            
    00000BAC 9363                   MOV.W       L1908,R3   ; H'0570
    00000BAE D232                   MOV.L       L1908+2,R2 ; _symtab
    00000BB0 6422                   MOV.L       @R2,R4
    00000BB2 343C                   ADD         R3,R4
    00000BB4              L1480:                            
    00000BB4 A004                   BRA         L1481
    00000BB6 6442                   MOV.L       @R4,R4
    00000BB8              L1476:                            
    00000BB8 935D                   MOV.W       L1908,R3   ; H'0570
    00000BBA D22F                   MOV.L       L1908+2,R2 ; _symtab
    00000BBC 6422                   MOV.L       @R2,R4
    00000BBE 343C                   ADD         R3,R4
    00000BC0              L1481:                            
    00000BC0 BA33                   BSR         _print_expr
    00000BC2 0009                   NOP
    00000BC4 A4AA                   BRA         L1203
    00000BC6 0009                   NOP
    00000BC8              L1469:                            
         print.c   313                                    print_str(")");
         print.c   314                            } else
         print.c   315                                    print_expr(cadr(p));
    00000BC8 84E8                   MOV.B       @(8,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BCA 2008                   TST         R0,R0
    00000BCC 8B01                   BF          L1484
    00000BCE A004                   BRA         L1486
    00000BD0 54E1                   MOV.L       @(4,R14),R4
    00000BD2              L1484:                            
    00000BD2 9350                   MOV.W       L1908,R3   ; H'0570
    00000BD4 D228                   MOV.L       L1908+2,R2 ; _symtab
    00000BD6 6422                   MOV.L       @R2,R4
    00000BD8 343C                   ADD         R3,R4
    00000BDA              L1486:                            
    00000BDA 8448                   MOV.B       @(8,R4),R0
    00000BDC 2008                   TST         R0,R0
    00000BDE 8B0A                   BF          L1483
    00000BE0 84E8                   MOV.B       @(8,R14),R0
    00000BE2 2008                   TST         R0,R0
    00000BE4 8B01                   BF          L1485
    00000BE6 A004                   BRA         L1487
    00000BE8 54E1                   MOV.L       @(4,R14),R4
    00000BEA              L1485:                            
    00000BEA 9344                   MOV.W       L1908,R3   ; H'0570
    00000BEC D222                   MOV.L       L1908+2,R2 ; _symtab
    00000BEE 6422                   MOV.L       @R2,R4
    00000BF0 343C                   ADD         R3,R4
    00000BF2              L1487:                            
    00000BF2 A004                   BRA         L1488
    00000BF4 6442                   MOV.L       @R4,R4
    00000BF6              L1483:                            
    00000BF6 933E                   MOV.W       L1908,R3   ; H'0570
    00000BF8 D21F                   MOV.L       L1908+2,R2 ; _symtab
    00000BFA 6422                   MOV.L       @R2,R4
    00000BFC 343C                   ADD         R3,R4
    00000BFE              L1488:                            
    00000BFE 7F08                   ADD         #8,R15
    00000C00 4F26                   LDS.L       @R15+,PR
    00000C02 6BF6                   MOV.L       @R15+,R11
    00000C04 6CF6                   MOV.L       @R15+,R12
    00000C06 6DF6                   MOV.L       @R15+,R13
    00000C08 AA0F                   BRA         _print_expr
    00000C0A 6EF6                   MOV.L       @R15+,R14
    00000C0C              L1452:                            
         print.c   316                            return;
         print.c   317                    }
         print.c   318    
         print.c   319                    if (isadd(cadr(p)) || caadr(p) == symbol(MULTIPLY) || caadr(p) == symbol(POWER) || isnegat
                         +ivenumber(cadr(p))) {
    00000C0C 84E8                   MOV.B       @(8,R14),R0
    00000C0E 2008                   TST         R0,R0
    00000C10 8B01                   BF          L1493
    00000C12 A004                   BRA         L1515
    00000C14 52E1                   MOV.L       @(4,R14),R2
    00000C16              L1493:                            
    00000C16 932E                   MOV.W       L1908,R3   ; H'0570
    00000C18 D117                   MOV.L       L1908+2,R1 ; _symtab
    00000C1A 6212                   MOV.L       @R1,R2
    00000C1C 323C                   ADD         R3,R2
    00000C1E              L1515:                            
    00000C1E 8428                   MOV.B       @(8,R2),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C20 2008                   TST         R0,R0
    00000C22 8B0A                   BF          L1492
    00000C24 84E8                   MOV.B       @(8,R14),R0
    00000C26 2008                   TST         R0,R0
    00000C28 8B01                   BF          L1494
    00000C2A A004                   BRA         L1516
    00000C2C 52E1                   MOV.L       @(4,R14),R2
    00000C2E              L1494:                            
    00000C2E 9322                   MOV.W       L1908,R3   ; H'0570
    00000C30 D111                   MOV.L       L1908+2,R1 ; _symtab
    00000C32 6212                   MOV.L       @R1,R2
    00000C34 323C                   ADD         R3,R2
    00000C36              L1516:                            
    00000C36 A004                   BRA         L1517
    00000C38 6322                   MOV.L       @R2,R3
    00000C3A              L1492:                            
    00000C3A 921C                   MOV.W       L1908,R2   ; H'0570
    00000C3C D10E                   MOV.L       L1908+2,R1 ; _symtab
    00000C3E 6312                   MOV.L       @R1,R3
    00000C40 332C                   ADD         R2,R3
    00000C42              L1517:                            
    00000C42 8438                   MOV.B       @(8,R3),R0
    00000C44 2008                   TST         R0,R0
    00000C46 8B1F                   BF          L1491
    00000C48 84E8                   MOV.B       @(8,R14),R0
    00000C4A 2008                   TST         R0,R0
    00000C4C 8B01                   BF          L1496
    00000C4E A004                   BRA         L1518
    00000C50 53E1                   MOV.L       @(4,R14),R3
    00000C52              L1496:                            
    00000C52 9210                   MOV.W       L1908,R2   ; H'0570
    00000C54 D108                   MOV.L       L1908+2,R1 ; _symtab
    00000C56 6312                   MOV.L       @R1,R3
    00000C58 332C                   ADD         R2,R3
    00000C5A              L1518:                            
    00000C5A 8438                   MOV.B       @(8,R3),R0
    00000C5C 2008                   TST         R0,R0
    00000C5E 8B0D                   BF          L1495
    00000C60 84E8                   MOV.B       @(8,R14),R0
    00000C62 2008                   TST         R0,R0
    00000C64 8B01                   BF          L1497
    00000C66 A004                   BRA         L1519
    00000C68 52E1                   MOV.L       @(4,R14),R2
    00000C6A              L1497:                            
    00000C6A 9304                   MOV.W       L1908,R3   ; H'0570
    00000C6C D102                   MOV.L       L1908+2,R1 ; _symtab
    00000C6E 6212                   MOV.L       @R1,R2
    00000C70 323C                   ADD         R3,R2
    00000C72              L1519:                            
    00000C72 A007                   BRA         L1520
    00000C74 6222                   MOV.L       @R2,R2
    00000C76              L1908:                            
    00000C76 0570                   .DATA.W     H'0570
    00000C78 <00000000>             .DATA.L     _symtab
    00000C7C              L1495:                            
    00000C7C 9360                   MOV.W       L1909,R3   ; H'0570
    00000C7E D131                   MOV.L       L1909+4,R1 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C80 6212                   MOV.L       @R1,R2
    00000C82 323C                   ADD         R3,R2
    00000C84              L1520:                            
    00000C84 A004                   BRA         L1521
    00000C86 6222                   MOV.L       @R2,R2
    00000C88              L1491:                            
    00000C88 935A                   MOV.W       L1909,R3   ; H'0570
    00000C8A D12E                   MOV.L       L1909+4,R1 ; _symtab
    00000C8C 6212                   MOV.L       @R1,R2
    00000C8E 323C                   ADD         R3,R2
    00000C90              L1521:                            
    00000C90 63D2                   MOV.L       @R13,R3
    00000C92 730C                   ADD         #12,R3
    00000C94 3230                   CMP/EQ      R3,R2
    00000C96 8B01                   BF          L1910
    00000C98 A09C                   BRA         L1490
    00000C9A 0009                   NOP
    00000C9C              L1910:                            
    00000C9C 84E8                   MOV.B       @(8,R14),R0
    00000C9E 2008                   TST         R0,R0
    00000CA0 8B01                   BF          L1500
    00000CA2 A003                   BRA         L1522
    00000CA4 53E1                   MOV.L       @(4,R14),R3
    00000CA6              L1500:                            
    00000CA6 924B                   MOV.W       L1909,R2   ; H'0570
    00000CA8 63D2                   MOV.L       @R13,R3
    00000CAA 332C                   ADD         R2,R3
    00000CAC              L1522:                            
    00000CAC 8438                   MOV.B       @(8,R3),R0
    00000CAE 2008                   TST         R0,R0
    00000CB0 8B09                   BF          L1499
    00000CB2 84E8                   MOV.B       @(8,R14),R0
    00000CB4 2008                   TST         R0,R0
    00000CB6 8B01                   BF          L1501
    00000CB8 A003                   BRA         L1523
    00000CBA 52E1                   MOV.L       @(4,R14),R2
    00000CBC              L1501:                            
    00000CBC 9340                   MOV.W       L1909,R3   ; H'0570
    00000CBE 62D2                   MOV.L       @R13,R2
    00000CC0 323C                   ADD         R3,R2
    00000CC2              L1523:                            
    00000CC2 A003                   BRA         L1524
    00000CC4 6222                   MOV.L       @R2,R2
    00000CC6              L1499:                            
    00000CC6 933B                   MOV.W       L1909,R3   ; H'0570
    00000CC8 62D2                   MOV.L       @R13,R2
    00000CCA 323C                   ADD         R3,R2
    00000CCC              L1524:                            
    00000CCC 8428                   MOV.B       @(8,R2),R0
    00000CCE 2008                   TST         R0,R0
    00000CD0 8B19                   BF          L1498
    00000CD2 84E8                   MOV.B       @(8,R14),R0
    00000CD4 2008                   TST         R0,R0
    00000CD6 8B01                   BF          L1503
    00000CD8 A003                   BRA         L1525
    00000CDA 53E1                   MOV.L       @(4,R14),R3
    00000CDC              L1503:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CDC 9230                   MOV.W       L1909,R2   ; H'0570
    00000CDE 63D2                   MOV.L       @R13,R3
    00000CE0 332C                   ADD         R2,R3
    00000CE2              L1525:                            
    00000CE2 8438                   MOV.B       @(8,R3),R0
    00000CE4 2008                   TST         R0,R0
    00000CE6 8B09                   BF          L1502
    00000CE8 84E8                   MOV.B       @(8,R14),R0
    00000CEA 2008                   TST         R0,R0
    00000CEC 8B01                   BF          L1504
    00000CEE A003                   BRA         L1526
    00000CF0 52E1                   MOV.L       @(4,R14),R2
    00000CF2              L1504:                            
    00000CF2 9325                   MOV.W       L1909,R3   ; H'0570
    00000CF4 62D2                   MOV.L       @R13,R2
    00000CF6 323C                   ADD         R3,R2
    00000CF8              L1526:                            
    00000CF8 A003                   BRA         L1527
    00000CFA 6222                   MOV.L       @R2,R2
    00000CFC              L1502:                            
    00000CFC 9320                   MOV.W       L1909,R3   ; H'0570
    00000CFE 62D2                   MOV.L       @R13,R2
    00000D00 323C                   ADD         R3,R2
    00000D02              L1527:                            
    00000D02 A003                   BRA         L1528
    00000D04 6322                   MOV.L       @R2,R3
    00000D06              L1498:                            
    00000D06 921B                   MOV.W       L1909,R2   ; H'0570
    00000D08 63D2                   MOV.L       @R13,R3
    00000D0A 332C                   ADD         R2,R3
    00000D0C              L1528:                            
    00000D0C 9219                   MOV.W       L1909+2,R2 ; H'0384
    00000D0E 61D2                   MOV.L       @R13,R1
    00000D10 312C                   ADD         R2,R1
    00000D12 3310                   CMP/EQ      R1,R3
    00000D14 895E                   BT          L1490
    00000D16 84E8                   MOV.B       @(8,R14),R0
    00000D18 2008                   TST         R0,R0
    00000D1A 8B01                   BF          L1507
    00000D1C A003                   BRA         L1529
    00000D1E 51E1                   MOV.L       @(4,R14),R1
    00000D20              L1507:                            
    00000D20 930E                   MOV.W       L1909,R3   ; H'0570
    00000D22 61D2                   MOV.L       @R13,R1
    00000D24 313C                   ADD         R3,R1
    00000D26              L1529:                            
    00000D26 8418                   MOV.B       @(8,R1),R0
    00000D28 2008                   TST         R0,R0
    00000D2A 8B0D                   BF          L1506
    00000D2C 84E8                   MOV.B       @(8,R14),R0
    00000D2E 2008                   TST         R0,R0
    00000D30 8B01                   BF          L1508
    00000D32 A003                   BRA         L1530
    00000D34 52E1                   MOV.L       @(4,R14),R2
    00000D36              L1508:                            
    00000D36 9303                   MOV.W       L1909,R3   ; H'0570
    00000D38 62D2                   MOV.L       @R13,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D3A 323C                   ADD         R3,R2
    00000D3C              L1530:                            
    00000D3C A007                   BRA         L1531
    00000D3E 6322                   MOV.L       @R2,R3
    00000D40              L1909:                            
    00000D40 0570                   .DATA.W     H'0570
    00000D42 0384                   .DATA.W     H'0384
    00000D44 <00000000>             .DATA.L     _symtab
    00000D48              L1506:                            
    00000D48 925D                   MOV.W       L1911,R2   ; H'0570
    00000D4A 63D2                   MOV.L       @R13,R3
    00000D4C 332C                   ADD         R2,R3
    00000D4E              L1531:                            
    00000D4E 8438                   MOV.B       @(8,R3),R0
    00000D50 2008                   TST         R0,R0
    00000D52 8B1A                   BF          L1505
    00000D54 84E8                   MOV.B       @(8,R14),R0
    00000D56 2008                   TST         R0,R0
    00000D58 8B01                   BF          L1510
    00000D5A A003                   BRA         L1532
    00000D5C 53E1                   MOV.L       @(4,R14),R3
    00000D5E              L1510:                            
    00000D5E 9252                   MOV.W       L1911,R2   ; H'0570
    00000D60 63D2                   MOV.L       @R13,R3
    00000D62 332C                   ADD         R2,R3
    00000D64              L1532:                            
    00000D64 8438                   MOV.B       @(8,R3),R0
    00000D66 2008                   TST         R0,R0
    00000D68 8B09                   BF          L1509
    00000D6A 84E8                   MOV.B       @(8,R14),R0
    00000D6C 2008                   TST         R0,R0
    00000D6E 8B01                   BF          L1511
    00000D70 A003                   BRA         L1533
    00000D72 52E1                   MOV.L       @(4,R14),R2
    00000D74              L1511:                            
    00000D74 9347                   MOV.W       L1911,R3   ; H'0570
    00000D76 62D2                   MOV.L       @R13,R2
    00000D78 323C                   ADD         R3,R2
    00000D7A              L1533:                            
    00000D7A A003                   BRA         L1534
    00000D7C 6222                   MOV.L       @R2,R2
    00000D7E              L1509:                            
    00000D7E 9342                   MOV.W       L1911,R3   ; H'0570
    00000D80 62D2                   MOV.L       @R13,R2
    00000D82 323C                   ADD         R3,R2
    00000D84              L1534:                            
    00000D84 6122                   MOV.L       @R2,R1
    00000D86 A003                   BRA         L1535
    00000D88 0009                   NOP
    00000D8A              L1505:                            
    00000D8A 933C                   MOV.W       L1911,R3   ; H'0570
    00000D8C 61D2                   MOV.L       @R13,R1
    00000D8E 313C                   ADD         R3,R1
    00000D90              L1535:                            
    00000D90 933A                   MOV.W       L1911+2,R3 ; H'03F0
    00000D92 62D2                   MOV.L       @R13,R2
    00000D94 323C                   ADD         R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D96 3120                   CMP/EQ      R2,R1
    00000D98 891C                   BT          L1490
    00000D9A 84E8                   MOV.B       @(8,R14),R0
    00000D9C 2008                   TST         R0,R0
    00000D9E 8B01                   BF          L1513
    00000DA0 A003                   BRA         L1536
    00000DA2 54E1                   MOV.L       @(4,R14),R4
    00000DA4              L1513:                            
    00000DA4 922F                   MOV.W       L1911,R2   ; H'0570
    00000DA6 64D2                   MOV.L       @R13,R4
    00000DA8 342C                   ADD         R2,R4
    00000DAA              L1536:                            
    00000DAA 8448                   MOV.B       @(8,R4),R0
    00000DAC 2008                   TST         R0,R0
    00000DAE 8B09                   BF          L1512
    00000DB0 84E8                   MOV.B       @(8,R14),R0
    00000DB2 2008                   TST         R0,R0
    00000DB4 8B01                   BF          L1514
    00000DB6 A003                   BRA         L1537
    00000DB8 54E1                   MOV.L       @(4,R14),R4
    00000DBA              L1514:                            
    00000DBA 9324                   MOV.W       L1911,R3   ; H'0570
    00000DBC 64D2                   MOV.L       @R13,R4
    00000DBE 343C                   ADD         R3,R4
    00000DC0              L1537:                            
    00000DC0 A003                   BRA         L1538
    00000DC2 6442                   MOV.L       @R4,R4
    00000DC4              L1512:                            
    00000DC4 931F                   MOV.W       L1911,R3   ; H'0570
    00000DC6 64D2                   MOV.L       @R13,R4
    00000DC8 343C                   ADD         R3,R4
    00000DCA              L1538:                            
    00000DCA D310                   MOV.L       L1911+6,R3 ; _isnegativenumber
    00000DCC 430B                   JSR         @R3
    00000DCE 0009                   NOP
    00000DD0 2008                   TST         R0,R0
    00000DD2 8927                   BT          L1489
    00000DD4              L1490:                            
         print.c   320                            print_str("(");
    00000DD4 B575                   BSR         _print_str
    00000DD6 64C3                   MOV         R12,R4
         print.c   321                            print_expr(cadr(p));
    00000DD8 84E8                   MOV.B       @(8,R14),R0
    00000DDA 2008                   TST         R0,R0
    00000DDC 8B01                   BF          L1540
    00000DDE A004                   BRA         L1542
    00000DE0 54E1                   MOV.L       @(4,R14),R4
    00000DE2              L1540:                            
    00000DE2 9310                   MOV.W       L1911,R3   ; H'0570
    00000DE4 D20A                   MOV.L       L1911+10,R2; _symtab
    00000DE6 6422                   MOV.L       @R2,R4
    00000DE8 343C                   ADD         R3,R4
    00000DEA              L1542:                            
    00000DEA 8448                   MOV.B       @(8,R4),R0
    00000DEC 2008                   TST         R0,R0
    00000DEE 8B11                   BF          L1539
    00000DF0 84E8                   MOV.B       @(8,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DF2 2008                   TST         R0,R0
    00000DF4 8B01                   BF          L1541
    00000DF6 A004                   BRA         L1543
    00000DF8 54E1                   MOV.L       @(4,R14),R4
    00000DFA              L1541:                            
    00000DFA 9304                   MOV.W       L1911,R3   ; H'0570
    00000DFC D204                   MOV.L       L1911+10,R2; _symtab
    00000DFE 6422                   MOV.L       @R2,R4
    00000E00 343C                   ADD         R3,R4
    00000E02              L1543:                            
    00000E02 A00B                   BRA         L1544
    00000E04 6442                   MOV.L       @R4,R4
    00000E06              L1911:                            
    00000E06 0570                   .DATA.W     H'0570
    00000E08 03F0                   .DATA.W     H'03F0
    00000E0A 0000                   .DATA.W     0
    00000E0C <00000000>             .DATA.L     _isnegativenumber
    00000E10 <00000000>             .DATA.L     _symtab
    00000E14              L1539:                            
    00000E14 935D                   MOV.W       L1912,R3   ; H'0570
    00000E16 D22F                   MOV.L       L1912+2,R2 ; _symtab
    00000E18 6422                   MOV.L       @R2,R4
    00000E1A 343C                   ADD         R3,R4
    00000E1C              L1544:                            
    00000E1C B905                   BSR         _print_expr
    00000E1E 0009                   NOP
    00000E20 A0A4                   BRA         L1194
    00000E22 0009                   NOP
    00000E24              L1489:                            
         print.c   322                            print_str(")");
         print.c   323                    } else if (isnum(cadr(p)) && (lessp(cadr(p), zero) || isfraction(cadr(p)))) {
    00000E24 84E8                   MOV.B       @(8,R14),R0
    00000E26 2008                   TST         R0,R0
    00000E28 8B01                   BF          L1549
    00000E2A A004                   BRA         L1561
    00000E2C 50E1                   MOV.L       @(4,R14),R0
    00000E2E              L1549:                            
    00000E2E 9350                   MOV.W       L1912,R3   ; H'0570
    00000E30 D228                   MOV.L       L1912+2,R2 ; _symtab
    00000E32 6022                   MOV.L       @R2,R0
    00000E34 303C                   ADD         R3,R0
    00000E36              L1561:                            
    00000E36 8408                   MOV.B       @(8,R0),R0
    00000E38 2008                   TST         R0,R0
    00000E3A 8B0A                   BF          L1548
    00000E3C 84E8                   MOV.B       @(8,R14),R0
    00000E3E 2008                   TST         R0,R0
    00000E40 8B01                   BF          L1550
    00000E42 A004                   BRA         L1562
    00000E44 50E1                   MOV.L       @(4,R14),R0
    00000E46              L1550:                            
    00000E46 9344                   MOV.W       L1912,R3   ; H'0570
    00000E48 D222                   MOV.L       L1912+2,R2 ; _symtab
    00000E4A 6022                   MOV.L       @R2,R0
    00000E4C 303C                   ADD         R3,R0
    00000E4E              L1562:                            
    00000E4E A004                   BRA         L1563




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E50 6002                   MOV.L       @R0,R0
    00000E52              L1548:                            
    00000E52 933E                   MOV.W       L1912,R3   ; H'0570
    00000E54 D21F                   MOV.L       L1912+2,R2 ; _symtab
    00000E56 6022                   MOV.L       @R2,R0
    00000E58 303C                   ADD         R3,R0
    00000E5A              L1563:                            
    00000E5A 8408                   MOV.B       @(8,R0),R0
    00000E5C 600C                   EXTU.B      R0,R0
    00000E5E 8801                   CMP/EQ      #1,R0
    00000E60 891E                   BT          L1547
    00000E62 84E8                   MOV.B       @(8,R14),R0
    00000E64 2008                   TST         R0,R0
    00000E66 8B01                   BF          L1552
    00000E68 A004                   BRA         L1564
    00000E6A 50E1                   MOV.L       @(4,R14),R0
    00000E6C              L1552:                            
    00000E6C 9331                   MOV.W       L1912,R3   ; H'0570
    00000E6E D219                   MOV.L       L1912+2,R2 ; _symtab
    00000E70 6022                   MOV.L       @R2,R0
    00000E72 303C                   ADD         R3,R0
    00000E74              L1564:                            
    00000E74 8408                   MOV.B       @(8,R0),R0
    00000E76 2008                   TST         R0,R0
    00000E78 8B0A                   BF          L1551
    00000E7A 84E8                   MOV.B       @(8,R14),R0
    00000E7C 2008                   TST         R0,R0
    00000E7E 8B01                   BF          L1553
    00000E80 A004                   BRA         L1565
    00000E82 50E1                   MOV.L       @(4,R14),R0
    00000E84              L1553:                            
    00000E84 9325                   MOV.W       L1912,R3   ; H'0570
    00000E86 D213                   MOV.L       L1912+2,R2 ; _symtab
    00000E88 6022                   MOV.L       @R2,R0
    00000E8A 303C                   ADD         R3,R0
    00000E8C              L1565:                            
    00000E8C A004                   BRA         L1566
    00000E8E 6002                   MOV.L       @R0,R0
    00000E90              L1551:                            
    00000E90 931F                   MOV.W       L1912,R3   ; H'0570
    00000E92 D210                   MOV.L       L1912+2,R2 ; _symtab
    00000E94 6022                   MOV.L       @R2,R0
    00000E96 303C                   ADD         R3,R0
    00000E98              L1566:                            
    00000E98 8408                   MOV.B       @(8,R0),R0
    00000E9A 600C                   EXTU.B      R0,R0
    00000E9C 8802                   CMP/EQ      #2,R0
    00000E9E 8B6A                   BF          L1546
    00000EA0              L1547:                            
    00000EA0 D20D                   MOV.L       L1912+6,R2 ; _zero
    00000EA2 84E8                   MOV.B       @(8,R14),R0
    00000EA4 2008                   TST         R0,R0
    00000EA6 8F02                   BF/S        L1556
    00000EA8 6522                   MOV.L       @R2,R5
    00000EAA A004                   BRA         L1567
    00000EAC 54E1                   MOV.L       @(4,R14),R4
    00000EAE              L1556:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EAE 9310                   MOV.W       L1912,R3   ; H'0570
    00000EB0 D108                   MOV.L       L1912+2,R1 ; _symtab
    00000EB2 6412                   MOV.L       @R1,R4
    00000EB4 343C                   ADD         R3,R4
    00000EB6              L1567:                            
    00000EB6 8448                   MOV.B       @(8,R4),R0
    00000EB8 2008                   TST         R0,R0
    00000EBA 8B0F                   BF          L1555
    00000EBC 84E8                   MOV.B       @(8,R14),R0
    00000EBE 2008                   TST         R0,R0
    00000EC0 8B01                   BF          L1557
    00000EC2 A004                   BRA         L1568
    00000EC4 54E1                   MOV.L       @(4,R14),R4
    00000EC6              L1557:                            
    00000EC6 9304                   MOV.W       L1912,R3   ; H'0570
    00000EC8 D202                   MOV.L       L1912+2,R2 ; _symtab
    00000ECA 6422                   MOV.L       @R2,R4
    00000ECC 343C                   ADD         R3,R4
    00000ECE              L1568:                            
    00000ECE A009                   BRA         L1569
    00000ED0 6442                   MOV.L       @R4,R4
    00000ED2              L1912:                            
    00000ED2 0570                   .DATA.W     H'0570
    00000ED4 <00000000>             .DATA.L     _symtab
    00000ED8 <00000000>             .DATA.L     _zero
    00000EDC              L1555:                            
    00000EDC 935C                   MOV.W       L1913,R3   ; H'0570
    00000EDE D22F                   MOV.L       L1913+4,R2 ; _symtab
    00000EE0 6422                   MOV.L       @R2,R4
    00000EE2 343C                   ADD         R3,R4
    00000EE4              L1569:                            
    00000EE4 D32E                   MOV.L       L1913+8,R3 ; _lessp
    00000EE6 430B                   JSR         @R3
    00000EE8 0009                   NOP
    00000EEA 2008                   TST         R0,R0
    00000EEC 8B1F                   BF          L1554
    00000EEE 84E8                   MOV.B       @(8,R14),R0
    00000EF0 2008                   TST         R0,R0
    00000EF2 8B01                   BF          L1559
    00000EF4 A004                   BRA         L1570
    00000EF6 54E1                   MOV.L       @(4,R14),R4
    00000EF8              L1559:                            
    00000EF8 934E                   MOV.W       L1913,R3   ; H'0570
    00000EFA D228                   MOV.L       L1913+4,R2 ; _symtab
    00000EFC 6422                   MOV.L       @R2,R4
    00000EFE 343C                   ADD         R3,R4
    00000F00              L1570:                            
    00000F00 8448                   MOV.B       @(8,R4),R0
    00000F02 2008                   TST         R0,R0
    00000F04 8B0A                   BF          L1558
    00000F06 84E8                   MOV.B       @(8,R14),R0
    00000F08 2008                   TST         R0,R0
    00000F0A 8B01                   BF          L1560
    00000F0C A004                   BRA         L1571
    00000F0E 54E1                   MOV.L       @(4,R14),R4
    00000F10              L1560:                            
    00000F10 9342                   MOV.W       L1913,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F12 D222                   MOV.L       L1913+4,R2 ; _symtab
    00000F14 6422                   MOV.L       @R2,R4
    00000F16 343C                   ADD         R3,R4
    00000F18              L1571:                            
    00000F18 A004                   BRA         L1572
    00000F1A 6442                   MOV.L       @R4,R4
    00000F1C              L1558:                            
    00000F1C 933C                   MOV.W       L1913,R3   ; H'0570
    00000F1E D21F                   MOV.L       L1913+4,R2 ; _symtab
    00000F20 6422                   MOV.L       @R2,R4
    00000F22 343C                   ADD         R3,R4
    00000F24              L1572:                            
    00000F24 D31F                   MOV.L       L1913+12,R3; _isfraction
    00000F26 430B                   JSR         @R3
    00000F28 0009                   NOP
    00000F2A 2008                   TST         R0,R0
    00000F2C 8923                   BT          L1546
    00000F2E              L1554:                            
         print.c   324                            print_str("(");
    00000F2E B4C8                   BSR         _print_str
    00000F30 64C3                   MOV         R12,R4
         print.c   325                            print_factor(cadr(p));
    00000F32 84E8                   MOV.B       @(8,R14),R0
    00000F34 2008                   TST         R0,R0
    00000F36 8B01                   BF          L1574
    00000F38 A004                   BRA         L1576
    00000F3A 54E1                   MOV.L       @(4,R14),R4
    00000F3C              L1574:                            
    00000F3C 932C                   MOV.W       L1913,R3   ; H'0570
    00000F3E D217                   MOV.L       L1913+4,R2 ; _symtab
    00000F40 6422                   MOV.L       @R2,R4
    00000F42 343C                   ADD         R3,R4
    00000F44              L1576:                            
    00000F44 8448                   MOV.B       @(8,R4),R0
    00000F46 2008                   TST         R0,R0
    00000F48 8B0A                   BF          L1573
    00000F4A 84E8                   MOV.B       @(8,R14),R0
    00000F4C 2008                   TST         R0,R0
    00000F4E 8B01                   BF          L1575
    00000F50 A004                   BRA         L1577
    00000F52 54E1                   MOV.L       @(4,R14),R4
    00000F54              L1575:                            
    00000F54 9320                   MOV.W       L1913,R3   ; H'0570
    00000F56 D211                   MOV.L       L1913+4,R2 ; _symtab
    00000F58 6422                   MOV.L       @R2,R4
    00000F5A 343C                   ADD         R3,R4
    00000F5C              L1577:                            
    00000F5C A004                   BRA         L1578
    00000F5E 6442                   MOV.L       @R4,R4
    00000F60              L1573:                            
    00000F60 931A                   MOV.W       L1913,R3   ; H'0570
    00000F62 D20E                   MOV.L       L1913+4,R2 ; _symtab
    00000F64 6422                   MOV.L       @R2,R4
    00000F66 343C                   ADD         R3,R4
    00000F68              L1578:                            
    00000F68 BD02                   BSR         _print_factor
    00000F6A 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F6C              L1194:
         print.c   326                            print_str(")");
    00000F6C D40E                   MOV.L       L1913+16,R4; L1120
    00000F6E B4A8                   BSR         _print_str
    00000F70 0009                   NOP
    00000F72 A027                   BRA         L1545
    00000F74 0009                   NOP
    00000F76              L1546:                            
         print.c   327                    } else
         print.c   328                            print_factor(cadr(p));
    00000F76 84E8                   MOV.B       @(8,R14),R0
    00000F78 2008                   TST         R0,R0
    00000F7A 8B01                   BF          L1581
    00000F7C A004                   BRA         L1583
    00000F7E 54E1                   MOV.L       @(4,R14),R4
    00000F80              L1581:                            
    00000F80 930A                   MOV.W       L1913,R3   ; H'0570
    00000F82 D206                   MOV.L       L1913+4,R2 ; _symtab
    00000F84 6422                   MOV.L       @R2,R4
    00000F86 343C                   ADD         R3,R4
    00000F88              L1583:                            
    00000F88 8448                   MOV.B       @(8,R4),R0
    00000F8A 2008                   TST         R0,R0
    00000F8C 8B14                   BF          L1580
    00000F8E 84E8                   MOV.B       @(8,R14),R0
    00000F90 2008                   TST         R0,R0
    00000F92 8B0B                   BF          L1582
    00000F94 A00E                   BRA         L1584
    00000F96 54E1                   MOV.L       @(4,R14),R4
    00000F98              L1913:                            
    00000F98 0570                   .DATA.W     H'0570
    00000F9A 0000                   .DATA.W     0
    00000F9C <00000000>             .DATA.L     _symtab
    00000FA0 <00000000>             .DATA.L     _lessp
    00000FA4 <00000000>             .DATA.L     _isfraction
    00000FA8 <00000000>             .DATA.L     L1120
    00000FAC              L1582:                            
    00000FAC 935E                   MOV.W       L1914,R3   ; H'0570
    00000FAE D230                   MOV.L       L1914+4,R2 ; _symtab
    00000FB0 6422                   MOV.L       @R2,R4
    00000FB2 343C                   ADD         R3,R4
    00000FB4              L1584:                            
    00000FB4 A004                   BRA         L1585
    00000FB6 6442                   MOV.L       @R4,R4
    00000FB8              L1580:                            
    00000FB8 9358                   MOV.W       L1914,R3   ; H'0570
    00000FBA D22D                   MOV.L       L1914+4,R2 ; _symtab
    00000FBC 6422                   MOV.L       @R2,R4
    00000FBE 343C                   ADD         R3,R4
    00000FC0              L1585:                            
    00000FC0 BCD6                   BSR         _print_factor
    00000FC2 0009                   NOP
    00000FC4              L1545:                            
         print.c   329                    if (test_flag == 0)
    00000FC4 62B2                   MOV.L       @R11,R2
    00000FC6 2228                   TST         R2,R2
    00000FC8 8B04                   BF          L1586




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   330                            //print_str(" ^ ");
         print.c   331                            print_str(power_str);
    00000FCA D32A                   MOV.L       L1914+8,R3 ; _power_str
    00000FCC B479                   BSR         _print_str
    00000FCE 6432                   MOV.L       @R3,R4
    00000FD0 A003                   BRA         L1587
    00000FD2 0009                   NOP
    00000FD4              L1586:                            
         print.c   332                    else
         print.c   333                            print_str("^");
    00000FD4 D428                   MOV.L       L1914+12,R4; L1064
    00000FD6 B474                   BSR         _print_str
    00000FD8 0009                   NOP
    00000FDA              L1587:                            
         print.c   334                    {
         print.c   335                            int a,b,c;
         print.c   336    
         print.c   337                            a = iscons(caddr(p));
    00000FDA 84E8                   MOV.B       @(8,R14),R0
    00000FDC 2008                   TST         R0,R0
    00000FDE 8B01                   BF          L1591
    00000FE0 A004                   BRA         L1596
    00000FE2 52E1                   MOV.L       @(4,R14),R2
    00000FE4              L1591:                            
    00000FE4 9342                   MOV.W       L1914,R3   ; H'0570
    00000FE6 D122                   MOV.L       L1914+4,R1 ; _symtab
    00000FE8 6212                   MOV.L       @R1,R2
    00000FEA 323C                   ADD         R3,R2
    00000FEC              L1596:                            
    00000FEC 8428                   MOV.B       @(8,R2),R0
    00000FEE 2008                   TST         R0,R0
    00000FF0 8B0A                   BF          L1590
    00000FF2 84E8                   MOV.B       @(8,R14),R0
    00000FF4 2008                   TST         R0,R0
    00000FF6 8B01                   BF          L1592
    00000FF8 A004                   BRA         L1597
    00000FFA 52E1                   MOV.L       @(4,R14),R2
    00000FFC              L1592:                            
    00000FFC 9336                   MOV.W       L1914,R3   ; H'0570
    00000FFE D11C                   MOV.L       L1914+4,R1 ; _symtab
    00001000 6212                   MOV.L       @R1,R2
    00001002 323C                   ADD         R3,R2
    00001004              L1597:                            
    00001004 A004                   BRA         L1598
    00001006 5321                   MOV.L       @(4,R2),R3
    00001008              L1590:                            
    00001008 9230                   MOV.W       L1914,R2   ; H'0570
    0000100A D119                   MOV.L       L1914+4,R1 ; _symtab
    0000100C 6312                   MOV.L       @R1,R3
    0000100E 332C                   ADD         R2,R3
    00001010              L1598:                            
    00001010 8438                   MOV.B       @(8,R3),R0
    00001012 2008                   TST         R0,R0
    00001014 8B1C                   BF          L1589
    00001016 84E8                   MOV.B       @(8,R14),R0
    00001018 2008                   TST         R0,R0
    0000101A 8B01                   BF          L1594




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000101C A004                   BRA         L1599
    0000101E 53E1                   MOV.L       @(4,R14),R3
    00001020              L1594:                            
    00001020 9224                   MOV.W       L1914,R2   ; H'0570
    00001022 D113                   MOV.L       L1914+4,R1 ; _symtab
    00001024 6312                   MOV.L       @R1,R3
    00001026 332C                   ADD         R2,R3
    00001028              L1599:                            
    00001028 8438                   MOV.B       @(8,R3),R0
    0000102A 2008                   TST         R0,R0
    0000102C 8B0A                   BF          L1593
    0000102E 84E8                   MOV.B       @(8,R14),R0
    00001030 2008                   TST         R0,R0
    00001032 8B01                   BF          L1595
    00001034 A004                   BRA         L1600
    00001036 52E1                   MOV.L       @(4,R14),R2
    00001038              L1595:                            
    00001038 9318                   MOV.W       L1914,R3   ; H'0570
    0000103A D10D                   MOV.L       L1914+4,R1 ; _symtab
    0000103C 6212                   MOV.L       @R1,R2
    0000103E 323C                   ADD         R3,R2
    00001040              L1600:                            
    00001040 A004                   BRA         L1601
    00001042 5221                   MOV.L       @(4,R2),R2
    00001044              L1593:                            
    00001044 9312                   MOV.W       L1914,R3   ; H'0570
    00001046 D10A                   MOV.L       L1914+4,R1 ; _symtab
    00001048 6212                   MOV.L       @R1,R2
    0000104A 323C                   ADD         R3,R2
    0000104C              L1601:                            
    0000104C A004                   BRA         L1602
    0000104E 6222                   MOV.L       @R2,R2
    00001050              L1589:                            
    00001050 930C                   MOV.W       L1914,R3   ; H'0570
    00001052 D107                   MOV.L       L1914+4,R1 ; _symtab
    00001054 6212                   MOV.L       @R1,R2
    00001056 323C                   ADD         R3,R2
    00001058              L1602:                            
    00001058 8428                   MOV.B       @(8,R2),R0
    0000105A 600C                   EXTU.B      R0,R0
    0000105C 2008                   TST         R0,R0
    0000105E 0029                   MOVT        R0
    00001060 2F02                   MOV.L       R0,@R15
         print.c   338                            b = isfraction(caddr(p));
    00001062 84E8                   MOV.B       @(8,R14),R0
    00001064 2008                   TST         R0,R0
    00001066 8B09                   BF          L1605
    00001068 A00C                   BRA         L1610
    0000106A 54E1                   MOV.L       @(4,R14),R4
    0000106C              L1914:                            
    0000106C 0570                   .DATA.W     H'0570
    0000106E 0000                   .DATA.W     0
    00001070 <00000000>             .DATA.L     _symtab
    00001074 <00000000>             .DATA.L     _power_str
    00001078 <00000000>             .DATA.L     L1064
    0000107C              L1605:                            
    0000107C 935F                   MOV.W       L1915,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000107E D230                   MOV.L       L1915+2,R2 ; _symtab
    00001080 6422                   MOV.L       @R2,R4
    00001082 343C                   ADD         R3,R4
    00001084              L1610:                            
    00001084 8448                   MOV.B       @(8,R4),R0
    00001086 2008                   TST         R0,R0
    00001088 8B0A                   BF          L1604
    0000108A 84E8                   MOV.B       @(8,R14),R0
    0000108C 2008                   TST         R0,R0
    0000108E 8B01                   BF          L1606
    00001090 A004                   BRA         L1611
    00001092 54E1                   MOV.L       @(4,R14),R4
    00001094              L1606:                            
    00001094 9353                   MOV.W       L1915,R3   ; H'0570
    00001096 D22A                   MOV.L       L1915+2,R2 ; _symtab
    00001098 6422                   MOV.L       @R2,R4
    0000109A 343C                   ADD         R3,R4
    0000109C              L1611:                            
    0000109C A004                   BRA         L1612
    0000109E 5441                   MOV.L       @(4,R4),R4
    000010A0              L1604:                            
    000010A0 934D                   MOV.W       L1915,R3   ; H'0570
    000010A2 D227                   MOV.L       L1915+2,R2 ; _symtab
    000010A4 6422                   MOV.L       @R2,R4
    000010A6 343C                   ADD         R3,R4
    000010A8              L1612:                            
    000010A8 8448                   MOV.B       @(8,R4),R0
    000010AA 2008                   TST         R0,R0
    000010AC 8B1C                   BF          L1603
    000010AE 84E8                   MOV.B       @(8,R14),R0
    000010B0 2008                   TST         R0,R0
    000010B2 8B01                   BF          L1608
    000010B4 A004                   BRA         L1613
    000010B6 54E1                   MOV.L       @(4,R14),R4
    000010B8              L1608:                            
    000010B8 9341                   MOV.W       L1915,R3   ; H'0570
    000010BA D221                   MOV.L       L1915+2,R2 ; _symtab
    000010BC 6422                   MOV.L       @R2,R4
    000010BE 343C                   ADD         R3,R4
    000010C0              L1613:                            
    000010C0 8448                   MOV.B       @(8,R4),R0
    000010C2 2008                   TST         R0,R0
    000010C4 8B0A                   BF          L1607
    000010C6 84E8                   MOV.B       @(8,R14),R0
    000010C8 2008                   TST         R0,R0
    000010CA 8B01                   BF          L1609
    000010CC A004                   BRA         L1614
    000010CE 54E1                   MOV.L       @(4,R14),R4
    000010D0              L1609:                            
    000010D0 9335                   MOV.W       L1915,R3   ; H'0570
    000010D2 D21B                   MOV.L       L1915+2,R2 ; _symtab
    000010D4 6422                   MOV.L       @R2,R4
    000010D6 343C                   ADD         R3,R4
    000010D8              L1614:                            
    000010D8 A004                   BRA         L1615
    000010DA 5441                   MOV.L       @(4,R4),R4
    000010DC              L1607:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010DC 932F                   MOV.W       L1915,R3   ; H'0570
    000010DE D218                   MOV.L       L1915+2,R2 ; _symtab
    000010E0 6422                   MOV.L       @R2,R4
    000010E2 343C                   ADD         R3,R4
    000010E4              L1615:                            
    000010E4 A004                   BRA         L1616
    000010E6 6442                   MOV.L       @R4,R4
    000010E8              L1603:                            
    000010E8 9329                   MOV.W       L1915,R3   ; H'0570
    000010EA D215                   MOV.L       L1915+2,R2 ; _symtab
    000010EC 6422                   MOV.L       @R2,R4
    000010EE 343C                   ADD         R3,R4
    000010F0              L1616:                            
    000010F0 D314                   MOV.L       L1915+6,R3 ; _isfraction
    000010F2 430B                   JSR         @R3
    000010F4 0009                   NOP
    000010F6 1F01                   MOV.L       R0,@(4,R15)
         print.c   339                            c = (isnum(caddr(p)) && lessp(caddr(p), zero));
    000010F8 84E8                   MOV.B       @(8,R14),R0
    000010FA 2008                   TST         R0,R0
    000010FC 8B01                   BF          L1621
    000010FE A004                   BRA         L1640
    00001100 50E1                   MOV.L       @(4,R14),R0
    00001102              L1621:                            
    00001102 931C                   MOV.W       L1915,R3   ; H'0570
    00001104 D20E                   MOV.L       L1915+2,R2 ; _symtab
    00001106 6022                   MOV.L       @R2,R0
    00001108 303C                   ADD         R3,R0
    0000110A              L1640:                            
    0000110A 8408                   MOV.B       @(8,R0),R0
    0000110C 2008                   TST         R0,R0
    0000110E 8B0A                   BF          L1620
    00001110 84E8                   MOV.B       @(8,R14),R0
    00001112 2008                   TST         R0,R0
    00001114 8B01                   BF          L1622
    00001116 A004                   BRA         L1641
    00001118 50E1                   MOV.L       @(4,R14),R0
    0000111A              L1622:                            
    0000111A 9310                   MOV.W       L1915,R3   ; H'0570
    0000111C D208                   MOV.L       L1915+2,R2 ; _symtab
    0000111E 6022                   MOV.L       @R2,R0
    00001120 303C                   ADD         R3,R0
    00001122              L1641:                            
    00001122 A004                   BRA         L1642
    00001124 5001                   MOV.L       @(4,R0),R0
    00001126              L1620:                            
    00001126 930A                   MOV.W       L1915,R3   ; H'0570
    00001128 D205                   MOV.L       L1915+2,R2 ; _symtab
    0000112A 6022                   MOV.L       @R2,R0
    0000112C 303C                   ADD         R3,R0
    0000112E              L1642:                            
    0000112E 8408                   MOV.B       @(8,R0),R0
    00001130 2008                   TST         R0,R0
    00001132 8B21                   BF          L1619
    00001134 84E8                   MOV.B       @(8,R14),R0
    00001136 2008                   TST         R0,R0
    00001138 8B06                   BF          L1624




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000113A A009                   BRA         L1643
    0000113C 50E1                   MOV.L       @(4,R14),R0
    0000113E              L1915:                            
    0000113E 0570                   .DATA.W     H'0570
    00001140 <00000000>             .DATA.L     _symtab
    00001144 <00000000>             .DATA.L     _isfraction
    00001148              L1624:                            
    00001148 9359                   MOV.W       L1916,R3   ; H'0570
    0000114A D22D                   MOV.L       L1916+2,R2 ; _symtab
    0000114C 6022                   MOV.L       @R2,R0
    0000114E 303C                   ADD         R3,R0
    00001150              L1643:                            
    00001150 8408                   MOV.B       @(8,R0),R0
    00001152 2008                   TST         R0,R0
    00001154 8B0A                   BF          L1623
    00001156 84E8                   MOV.B       @(8,R14),R0
    00001158 2008                   TST         R0,R0
    0000115A 8B01                   BF          L1625
    0000115C A004                   BRA         L1644
    0000115E 50E1                   MOV.L       @(4,R14),R0
    00001160              L1625:                            
    00001160 934D                   MOV.W       L1916,R3   ; H'0570
    00001162 D227                   MOV.L       L1916+2,R2 ; _symtab
    00001164 6022                   MOV.L       @R2,R0
    00001166 303C                   ADD         R3,R0
    00001168              L1644:                            
    00001168 A004                   BRA         L1645
    0000116A 5001                   MOV.L       @(4,R0),R0
    0000116C              L1623:                            
    0000116C 9347                   MOV.W       L1916,R3   ; H'0570
    0000116E D224                   MOV.L       L1916+2,R2 ; _symtab
    00001170 6022                   MOV.L       @R2,R0
    00001172 303C                   ADD         R3,R0
    00001174              L1645:                            
    00001174 A004                   BRA         L1646
    00001176 6002                   MOV.L       @R0,R0
    00001178              L1619:                            
    00001178 9341                   MOV.W       L1916,R3   ; H'0570
    0000117A D221                   MOV.L       L1916+2,R2 ; _symtab
    0000117C 6022                   MOV.L       @R2,R0
    0000117E 303C                   ADD         R3,R0
    00001180              L1646:                            
    00001180 8408                   MOV.B       @(8,R0),R0
    00001182 600C                   EXTU.B      R0,R0
    00001184 8801                   CMP/EQ      #1,R0
    00001186 8945                   BT          L1618
    00001188 84E8                   MOV.B       @(8,R14),R0
    0000118A 2008                   TST         R0,R0
    0000118C 8B01                   BF          L1628
    0000118E A004                   BRA         L1647
    00001190 50E1                   MOV.L       @(4,R14),R0
    00001192              L1628:                            
    00001192 9334                   MOV.W       L1916,R3   ; H'0570
    00001194 D21A                   MOV.L       L1916+2,R2 ; _symtab
    00001196 6022                   MOV.L       @R2,R0
    00001198 303C                   ADD         R3,R0
    0000119A              L1647:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000119A 8408                   MOV.B       @(8,R0),R0
    0000119C 2008                   TST         R0,R0
    0000119E 8B0A                   BF          L1627
    000011A0 84E8                   MOV.B       @(8,R14),R0
    000011A2 2008                   TST         R0,R0
    000011A4 8B01                   BF          L1629
    000011A6 A004                   BRA         L1648
    000011A8 50E1                   MOV.L       @(4,R14),R0
    000011AA              L1629:                            
    000011AA 9328                   MOV.W       L1916,R3   ; H'0570
    000011AC D214                   MOV.L       L1916+2,R2 ; _symtab
    000011AE 6022                   MOV.L       @R2,R0
    000011B0 303C                   ADD         R3,R0
    000011B2              L1648:                            
    000011B2 A004                   BRA         L1649
    000011B4 5001                   MOV.L       @(4,R0),R0
    000011B6              L1627:                            
    000011B6 9322                   MOV.W       L1916,R3   ; H'0570
    000011B8 D211                   MOV.L       L1916+2,R2 ; _symtab
    000011BA 6022                   MOV.L       @R2,R0
    000011BC 303C                   ADD         R3,R0
    000011BE              L1649:                            
    000011BE 8408                   MOV.B       @(8,R0),R0
    000011C0 2008                   TST         R0,R0
    000011C2 8B1F                   BF          L1626
    000011C4 84E8                   MOV.B       @(8,R14),R0
    000011C6 2008                   TST         R0,R0
    000011C8 8B01                   BF          L1631
    000011CA A004                   BRA         L1650
    000011CC 50E1                   MOV.L       @(4,R14),R0
    000011CE              L1631:                            
    000011CE 9316                   MOV.W       L1916,R3   ; H'0570
    000011D0 D20B                   MOV.L       L1916+2,R2 ; _symtab
    000011D2 6022                   MOV.L       @R2,R0
    000011D4 303C                   ADD         R3,R0
    000011D6              L1650:                            
    000011D6 8408                   MOV.B       @(8,R0),R0
    000011D8 2008                   TST         R0,R0
    000011DA 8B0A                   BF          L1630
    000011DC 84E8                   MOV.B       @(8,R14),R0
    000011DE 2008                   TST         R0,R0
    000011E0 8B01                   BF          L1632
    000011E2 A004                   BRA         L1651
    000011E4 50E1                   MOV.L       @(4,R14),R0
    000011E6              L1632:                            
    000011E6 930A                   MOV.W       L1916,R3   ; H'0570
    000011E8 D205                   MOV.L       L1916+2,R2 ; _symtab
    000011EA 6022                   MOV.L       @R2,R0
    000011EC 303C                   ADD         R3,R0
    000011EE              L1651:                            
    000011EE A004                   BRA         L1652
    000011F0 5001                   MOV.L       @(4,R0),R0
    000011F2              L1630:                            
    000011F2 9304                   MOV.W       L1916,R3   ; H'0570
    000011F4 D202                   MOV.L       L1916+2,R2 ; _symtab
    000011F6 6022                   MOV.L       @R2,R0
    000011F8 303C                   ADD         R3,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011FA              L1652:                            
    000011FA A007                   BRA         L1653
    000011FC 6002                   MOV.L       @R0,R0
    000011FE              L1916:                            
    000011FE 0570                   .DATA.W     H'0570
    00001200 <00000000>             .DATA.L     _symtab
    00001204              L1626:                            
    00001204 935F                   MOV.W       L1917,R3   ; H'0570
    00001206 D230                   MOV.L       L1917+2,R2 ; _symtab
    00001208 6022                   MOV.L       @R2,R0
    0000120A 303C                   ADD         R3,R0
    0000120C              L1653:                            
    0000120C 8408                   MOV.B       @(8,R0),R0
    0000120E 600C                   EXTU.B      R0,R0
    00001210 8802                   CMP/EQ      #2,R0
    00001212 8B47                   BF          L1617
    00001214              L1618:                            
    00001214 D22D                   MOV.L       L1917+6,R2 ; _zero
    00001216 84E8                   MOV.B       @(8,R14),R0
    00001218 2008                   TST         R0,R0
    0000121A 8F02                   BF/S        L1635
    0000121C 6522                   MOV.L       @R2,R5
    0000121E A004                   BRA         L1654
    00001220 54E1                   MOV.L       @(4,R14),R4
    00001222              L1635:                            
    00001222 9350                   MOV.W       L1917,R3   ; H'0570
    00001224 D128                   MOV.L       L1917+2,R1 ; _symtab
    00001226 6412                   MOV.L       @R1,R4
    00001228 343C                   ADD         R3,R4
    0000122A              L1654:                            
    0000122A 8448                   MOV.B       @(8,R4),R0
    0000122C 2008                   TST         R0,R0
    0000122E 8B0A                   BF          L1634
    00001230 84E8                   MOV.B       @(8,R14),R0
    00001232 2008                   TST         R0,R0
    00001234 8B01                   BF          L1636
    00001236 A004                   BRA         L1655
    00001238 54E1                   MOV.L       @(4,R14),R4
    0000123A              L1636:                            
    0000123A 9344                   MOV.W       L1917,R3   ; H'0570
    0000123C D222                   MOV.L       L1917+2,R2 ; _symtab
    0000123E 6422                   MOV.L       @R2,R4
    00001240 343C                   ADD         R3,R4
    00001242              L1655:                            
    00001242 A004                   BRA         L1656
    00001244 5441                   MOV.L       @(4,R4),R4
    00001246              L1634:                            
    00001246 933E                   MOV.W       L1917,R3   ; H'0570
    00001248 D21F                   MOV.L       L1917+2,R2 ; _symtab
    0000124A 6422                   MOV.L       @R2,R4
    0000124C 343C                   ADD         R3,R4
    0000124E              L1656:                            
    0000124E 8448                   MOV.B       @(8,R4),R0
    00001250 2008                   TST         R0,R0
    00001252 8B1C                   BF          L1633
    00001254 84E8                   MOV.B       @(8,R14),R0
    00001256 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001258 8B01                   BF          L1638
    0000125A A004                   BRA         L1657
    0000125C 54E1                   MOV.L       @(4,R14),R4
    0000125E              L1638:                            
    0000125E 9332                   MOV.W       L1917,R3   ; H'0570
    00001260 D219                   MOV.L       L1917+2,R2 ; _symtab
    00001262 6422                   MOV.L       @R2,R4
    00001264 343C                   ADD         R3,R4
    00001266              L1657:                            
    00001266 8448                   MOV.B       @(8,R4),R0
    00001268 2008                   TST         R0,R0
    0000126A 8B0A                   BF          L1637
    0000126C 84E8                   MOV.B       @(8,R14),R0
    0000126E 2008                   TST         R0,R0
    00001270 8B01                   BF          L1639
    00001272 A004                   BRA         L1658
    00001274 54E1                   MOV.L       @(4,R14),R4
    00001276              L1639:                            
    00001276 9326                   MOV.W       L1917,R3   ; H'0570
    00001278 D213                   MOV.L       L1917+2,R2 ; _symtab
    0000127A 6422                   MOV.L       @R2,R4
    0000127C 343C                   ADD         R3,R4
    0000127E              L1658:                            
    0000127E A004                   BRA         L1659
    00001280 5441                   MOV.L       @(4,R4),R4
    00001282              L1637:                            
    00001282 9320                   MOV.W       L1917,R3   ; H'0570
    00001284 D210                   MOV.L       L1917+2,R2 ; _symtab
    00001286 6422                   MOV.L       @R2,R4
    00001288 343C                   ADD         R3,R4
    0000128A              L1659:                            
    0000128A A004                   BRA         L1660
    0000128C 6442                   MOV.L       @R4,R4
    0000128E              L1633:                            
    0000128E 931A                   MOV.W       L1917,R3   ; H'0570
    00001290 D20D                   MOV.L       L1917+2,R2 ; _symtab
    00001292 6422                   MOV.L       @R2,R4
    00001294 343C                   ADD         R3,R4
    00001296              L1660:                            
    00001296 D30E                   MOV.L       L1917+10,R3; _lessp
    00001298 430B                   JSR         @R3
    0000129A 0009                   NOP
    0000129C 2008                   TST         R0,R0
    0000129E 8901                   BT          L1617
    000012A0 A001                   BRA         L1661
    000012A2 E401                   MOV         #1,R4
    000012A4              L1617:                            
    000012A4 E400                   MOV         #0,R4
    000012A6              L1661:                            
         print.c   340    
         print.c   341                            if ( a|| b || c) {
    000012A6 62F2                   MOV.L       @R15,R2
    000012A8 2228                   TST         R2,R2
    000012AA 8B04                   BF          L1663
    000012AC 53F1                   MOV.L       @(4,R15),R3
    000012AE 2338                   TST         R3,R3
    000012B0 8B01                   BF          L1663




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012B2 2448                   TST         R4,R4
    000012B4 894D                   BT          L1662
    000012B6              L1663:                            
         print.c   342                                    print_str("(");
    000012B6 64C3                   MOV         R12,R4
    000012B8              L1886:                            
    000012B8 B303                   BSR         _print_str
    000012BA 0009                   NOP
         print.c   343                                    print_expr(caddr(p));
    000012BC 84E8                   MOV.B       @(8,R14),R0
    000012BE 2008                   TST         R0,R0
    000012C0 8B08                   BF          L1666
    000012C2 A00B                   BRA         L1671
    000012C4 54E1                   MOV.L       @(4,R14),R4
    000012C6              L1917:                            
    000012C6 0570                   .DATA.W     H'0570
    000012C8 <00000000>             .DATA.L     _symtab
    000012CC <00000000>             .DATA.L     _zero
    000012D0 <00000000>             .DATA.L     _lessp
    000012D4              L1666:                            
    000012D4 9360                   MOV.W       L1918,R3   ; H'0570
    000012D6 D231                   MOV.L       L1918+4,R2 ; _symtab
    000012D8 6422                   MOV.L       @R2,R4
    000012DA 343C                   ADD         R3,R4
    000012DC              L1671:                            
    000012DC 8448                   MOV.B       @(8,R4),R0
    000012DE 2008                   TST         R0,R0
    000012E0 8B0A                   BF          L1665
    000012E2 84E8                   MOV.B       @(8,R14),R0
    000012E4 2008                   TST         R0,R0
    000012E6 8B01                   BF          L1667
    000012E8 A004                   BRA         L1672
    000012EA 54E1                   MOV.L       @(4,R14),R4
    000012EC              L1667:                            
    000012EC 9354                   MOV.W       L1918,R3   ; H'0570
    000012EE D22B                   MOV.L       L1918+4,R2 ; _symtab
    000012F0 6422                   MOV.L       @R2,R4
    000012F2 343C                   ADD         R3,R4
    000012F4              L1672:                            
    000012F4 A004                   BRA         L1673
    000012F6 5441                   MOV.L       @(4,R4),R4
    000012F8              L1665:                            
    000012F8 934E                   MOV.W       L1918,R3   ; H'0570
    000012FA D228                   MOV.L       L1918+4,R2 ; _symtab
    000012FC 6422                   MOV.L       @R2,R4
    000012FE 343C                   ADD         R3,R4
    00001300              L1673:                            
    00001300 8448                   MOV.B       @(8,R4),R0
    00001302 2008                   TST         R0,R0
    00001304 8B1C                   BF          L1664
    00001306 84E8                   MOV.B       @(8,R14),R0
    00001308 2008                   TST         R0,R0
    0000130A 8B01                   BF          L1669
    0000130C A004                   BRA         L1674
    0000130E 54E1                   MOV.L       @(4,R14),R4
    00001310              L1669:                            
    00001310 9342                   MOV.W       L1918,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001312 D222                   MOV.L       L1918+4,R2 ; _symtab
    00001314 6422                   MOV.L       @R2,R4
    00001316 343C                   ADD         R3,R4
    00001318              L1674:                            
    00001318 8448                   MOV.B       @(8,R4),R0
    0000131A 2008                   TST         R0,R0
    0000131C 8B0A                   BF          L1668
    0000131E 84E8                   MOV.B       @(8,R14),R0
    00001320 2008                   TST         R0,R0
    00001322 8B01                   BF          L1670
    00001324 A004                   BRA         L1675
    00001326 54E1                   MOV.L       @(4,R14),R4
    00001328              L1670:                            
    00001328 9336                   MOV.W       L1918,R3   ; H'0570
    0000132A D21C                   MOV.L       L1918+4,R2 ; _symtab
    0000132C 6422                   MOV.L       @R2,R4
    0000132E 343C                   ADD         R3,R4
    00001330              L1675:                            
    00001330 A004                   BRA         L1676
    00001332 5441                   MOV.L       @(4,R4),R4
    00001334              L1668:                            
    00001334 9330                   MOV.W       L1918,R3   ; H'0570
    00001336 D219                   MOV.L       L1918+4,R2 ; _symtab
    00001338 6422                   MOV.L       @R2,R4
    0000133A 343C                   ADD         R3,R4
    0000133C              L1676:                            
    0000133C A004                   BRA         L1677
    0000133E 6442                   MOV.L       @R4,R4
    00001340              L1664:                            
    00001340 932A                   MOV.W       L1918,R3   ; H'0570
    00001342 D216                   MOV.L       L1918+4,R2 ; _symtab
    00001344 6422                   MOV.L       @R2,R4
    00001346 343C                   ADD         R3,R4
    00001348              L1677:                            
    00001348 D315                   MOV.L       L1918+8,R3 ; _print_expr
    0000134A 430B                   JSR         @R3
    0000134C 0009                   NOP
    0000134E A0E5                   BRA         L1203
    00001350 0009                   NOP
    00001352              L1662:                            
         print.c   344                                    print_str(")");
         print.c   345                            } else
         print.c   346                                    print_factor(caddr(p));
    00001352 84E8                   MOV.B       @(8,R14),R0
    00001354 2008                   TST         R0,R0
    00001356 8B01                   BF          L1681
    00001358 A004                   BRA         L1686
    0000135A 53E1                   MOV.L       @(4,R14),R3
    0000135C              L1681:                            
    0000135C 921C                   MOV.W       L1918,R2   ; H'0570
    0000135E D10F                   MOV.L       L1918+4,R1 ; _symtab
    00001360 6312                   MOV.L       @R1,R3
    00001362 332C                   ADD         R2,R3
    00001364              L1686:                            
    00001364 8438                   MOV.B       @(8,R3),R0
    00001366 2008                   TST         R0,R0
    00001368 8B0A                   BF          L1680




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000136A 84E8                   MOV.B       @(8,R14),R0
    0000136C 2008                   TST         R0,R0
    0000136E 8B01                   BF          L1682
    00001370 A004                   BRA         L1687
    00001372 52E1                   MOV.L       @(4,R14),R2
    00001374              L1682:                            
    00001374 9310                   MOV.W       L1918,R3   ; H'0570
    00001376 D109                   MOV.L       L1918+4,R1 ; _symtab
    00001378 6212                   MOV.L       @R1,R2
    0000137A 323C                   ADD         R3,R2
    0000137C              L1687:                            
    0000137C A004                   BRA         L1688
    0000137E 5221                   MOV.L       @(4,R2),R2
    00001380              L1680:                            
    00001380 930A                   MOV.W       L1918,R3   ; H'0570
    00001382 D106                   MOV.L       L1918+4,R1 ; _symtab
    00001384 6212                   MOV.L       @R1,R2
    00001386 323C                   ADD         R3,R2
    00001388              L1688:                            
    00001388 8428                   MOV.B       @(8,R2),R0
    0000138A 2008                   TST         R0,R0
    0000138C 8B23                   BF          L1679
    0000138E 84E8                   MOV.B       @(8,R14),R0
    00001390 2008                   TST         R0,R0
    00001392 8B07                   BF          L1684
    00001394 A00A                   BRA         L1689
    00001396 53E1                   MOV.L       @(4,R14),R3
    00001398              L1918:                            
    00001398 0570                   .DATA.W     H'0570
    0000139A 0000                   .DATA.W     0
    0000139C <00000000>             .DATA.L     _symtab
    000013A0 <00000000>             .DATA.L     _print_expr
    000013A4              L1684:                            
    000013A4 9264                   MOV.W       L1919,R2   ; H'0570
    000013A6 D134                   MOV.L       L1919+8,R1 ; _symtab
    000013A8 6312                   MOV.L       @R1,R3
    000013AA 332C                   ADD         R2,R3
    000013AC              L1689:                            
    000013AC 8438                   MOV.B       @(8,R3),R0
    000013AE 2008                   TST         R0,R0
    000013B0 8B0A                   BF          L1683
    000013B2 84E8                   MOV.B       @(8,R14),R0
    000013B4 2008                   TST         R0,R0
    000013B6 8B01                   BF          L1685
    000013B8 A004                   BRA         L1690
    000013BA 52E1                   MOV.L       @(4,R14),R2
    000013BC              L1685:                            
    000013BC 9358                   MOV.W       L1919,R3   ; H'0570
    000013BE D12E                   MOV.L       L1919+8,R1 ; _symtab
    000013C0 6212                   MOV.L       @R1,R2
    000013C2 323C                   ADD         R3,R2
    000013C4              L1690:                            
    000013C4 A004                   BRA         L1691
    000013C6 5221                   MOV.L       @(4,R2),R2
    000013C8              L1683:                            
    000013C8 9352                   MOV.W       L1919,R3   ; H'0570
    000013CA D12B                   MOV.L       L1919+8,R1 ; _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013CC 6212                   MOV.L       @R1,R2
    000013CE 323C                   ADD         R3,R2
    000013D0              L1691:                            
    000013D0 6E22                   MOV.L       @R2,R14
    000013D2 AAD6                   BRA         L1430
    000013D4 0009                   NOP
    000013D6              L1679:                            
    000013D6 934B                   MOV.W       L1919,R3   ; H'0570
    000013D8 D127                   MOV.L       L1919+8,R1 ; _symtab
    000013DA 6E12                   MOV.L       @R1,R14
    000013DC AAD1                   BRA         L1430
    000013DE 3E3C                   ADD         R3,R14
    000013E0              L1442:                            
         print.c   347                    }
         print.c   348                    return;
         print.c   349            }
         print.c   350    
         print.c   351    //      if (car(p) == _list) {
         print.c   352    //              print_str("{");
         print.c   353    //              p = cdr(p);
         print.c   354    //              if (iscons(p)) {
         print.c   355    //                      print_expr(car(p));
         print.c   356    //                      p = cdr(p);
         print.c   357    //              }
         print.c   358    //              while (iscons(p)) {
         print.c   359    //                      print_str(",");
         print.c   360    //                      print_expr(car(p));
         print.c   361    //                      p = cdr(p);
         print.c   362    //              }
         print.c   363    //              print_str("}");
         print.c   364    //              return;
         print.c   365    //      }
         print.c   366    
         print.c   367            if (car(p) == symbol(INDEX) && issymbol(cadr(p))) {
    000013E0 84E8                   MOV.B       @(8,R14),R0
    000013E2 2008                   TST         R0,R0
    000013E4 8B01                   BF          L1694
    000013E6 A004                   BRA         L1698
    000013E8 62E2                   MOV.L       @R14,R2
    000013EA              L1694:                            
    000013EA 9341                   MOV.W       L1919,R3   ; H'0570
    000013EC D122                   MOV.L       L1919+8,R1 ; _symtab
    000013EE 6212                   MOV.L       @R1,R2
    000013F0 323C                   ADD         R3,R2
    000013F2              L1698:                            
    000013F2 933E                   MOV.W       L1919+2,R3 ; H'02DC
    000013F4 60D2                   MOV.L       @R13,R0
    000013F6 303C                   ADD         R3,R0
    000013F8 3200                   CMP/EQ      R0,R2
    000013FA 8B23                   BF          L1693
    000013FC 84E8                   MOV.B       @(8,R14),R0
    000013FE 2008                   TST         R0,R0
    00001400 8B01                   BF          L1696
    00001402 A003                   BRA         L1699
    00001404 50E1                   MOV.L       @(4,R14),R0
    00001406              L1696:                            
    00001406 9233                   MOV.W       L1919,R2   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001408 60D2                   MOV.L       @R13,R0
    0000140A 302C                   ADD         R2,R0
    0000140C              L1699:                            
    0000140C 8408                   MOV.B       @(8,R0),R0
    0000140E 2008                   TST         R0,R0
    00001410 8B09                   BF          L1695
    00001412 84E8                   MOV.B       @(8,R14),R0
    00001414 2008                   TST         R0,R0
    00001416 8B01                   BF          L1697
    00001418 A003                   BRA         L1700
    0000141A 50E1                   MOV.L       @(4,R14),R0
    0000141C              L1697:                            
    0000141C 9328                   MOV.W       L1919,R3   ; H'0570
    0000141E 60D2                   MOV.L       @R13,R0
    00001420 303C                   ADD         R3,R0
    00001422              L1700:                            
    00001422 A003                   BRA         L1701
    00001424 6002                   MOV.L       @R0,R0
    00001426              L1695:                            
    00001426 9323                   MOV.W       L1919,R3   ; H'0570
    00001428 60D2                   MOV.L       @R13,R0
    0000142A 303C                   ADD         R3,R0
    0000142C              L1701:                            
    0000142C 8408                   MOV.B       @(8,R0),R0
    0000142E 600C                   EXTU.B      R0,R0
    00001430 8805                   CMP/EQ      #5,R0
    00001432 8B07                   BF          L1693
         print.c   368                    print_index_function(p);
    00001434 64E3                   MOV         R14,R4
    00001436 7F08                   ADD         #8,R15
    00001438 4F26                   LDS.L       @R15+,PR
    0000143A 6BF6                   MOV.L       @R15+,R11
    0000143C 6CF6                   MOV.L       @R15+,R12
    0000143E 6DF6                   MOV.L       @R15+,R13
    00001440 A0A9                   BRA         _print_index_function
    00001442 6EF6                   MOV.L       @R15+,R14
    00001444              L1693:                            
         print.c   369                    return;
         print.c   370            }
         print.c   371    
         print.c   372            if (car(p) == symbol(FACTORIAL)) {
    00001444 84E8                   MOV.B       @(8,R14),R0
    00001446 2008                   TST         R0,R0
    00001448 8B01                   BF          L1703
    0000144A A004                   BRA         L1704
    0000144C 63E2                   MOV.L       @R14,R3
    0000144E              L1703:                            
    0000144E 920F                   MOV.W       L1919,R2   ; H'0570
    00001450 D109                   MOV.L       L1919+8,R1 ; _symtab
    00001452 6312                   MOV.L       @R1,R3
    00001454 332C                   ADD         R2,R3
    00001456              L1704:                            
    00001456 920D                   MOV.W       L1919+4,R2 ; H'0258
    00001458 60D2                   MOV.L       @R13,R0
    0000145A 302C                   ADD         R2,R0
    0000145C 3300                   CMP/EQ      R0,R3
    0000145E 8B0D                   BF          L1702




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   373                    print_factorial_function(p);
    00001460 64E3                   MOV         R14,R4
    00001462 7F08                   ADD         #8,R15
    00001464 4F26                   LDS.L       @R15+,PR
    00001466 6BF6                   MOV.L       @R15+,R11
    00001468 6CF6                   MOV.L       @R15+,R12
    0000146A 6DF6                   MOV.L       @R15+,R13
    0000146C A17A                   BRA         _print_factorial_function
    0000146E 6EF6                   MOV.L       @R15+,R14
    00001470              L1919:                            
    00001470 0570                   .DATA.W     H'0570
    00001472 02DC                   .DATA.W     H'02DC
    00001474 0258                   .DATA.W     H'0258
    00001476 0000                   .DATA.W     0
    00001478 <00000000>             .DATA.L     _symtab
    0000147C              L1702:                            
         print.c   374                    return;
         print.c   375            }
         print.c   376    
         print.c   377            if (iscons(p)) {
    0000147C 84E8                   MOV.B       @(8,R14),R0
    0000147E 2008                   TST         R0,R0
    00001480 8B54                   BF          L1705
         print.c   378                    //if (car(p) == symbol(FORMAL) && cadr(p)->k == SYM) {
         print.c   379                    //      print_str(((struct symbol *) cadr(p))->name);
         print.c   380                    //      return;
         print.c   381                    //}
         print.c   382                    print_factor(car(p));
    00001482 84E8                   MOV.B       @(8,R14),R0
    00001484 2008                   TST         R0,R0
    00001486 8B01                   BF          L1706
    00001488 A004                   BRA         L1707
    0000148A 64E2                   MOV.L       @R14,R4
    0000148C              L1706:                            
    0000148C 935B                   MOV.W       L1920,R3   ; H'0570
    0000148E D22F                   MOV.L       L1920+6,R2 ; _symtab
    00001490 6422                   MOV.L       @R2,R4
    00001492 343C                   ADD         R3,R4
    00001494              L1707:                            
    00001494 BA6C                   BSR         _print_factor
    00001496 0009                   NOP
         print.c   383                    p = cdr(p);
    00001498 84E8                   MOV.B       @(8,R14),R0
    0000149A 2008                   TST         R0,R0
    0000149C 8F02                   BF/S        L1708
         print.c   384                    print_str("(");
    0000149E 64C3                   MOV         R12,R4
    000014A0 A004                   BRA         L1709
    000014A2 5DE1                   MOV.L       @(4,R14),R13
    000014A4              L1708:                            
    000014A4 934F                   MOV.W       L1920,R3   ; H'0570
    000014A6 D229                   MOV.L       L1920+6,R2 ; _symtab
    000014A8 6D22                   MOV.L       @R2,R13
    000014AA 3D3C                   ADD         R3,R13
    000014AC              L1709:                            
    000014AC B209                   BSR         _print_str
    000014AE 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   385                    if (iscons(p)) {
    000014B0 84D8                   MOV.B       @(8,R13),R0
    000014B2 2008                   TST         R0,R0
    000014B4 8B32                   BF          L1203
         print.c   386                            print_expr(car(p));
    000014B6 84D8                   MOV.B       @(8,R13),R0
    000014B8 2008                   TST         R0,R0
    000014BA 8B01                   BF          L1711
    000014BC A004                   BRA         L1712
    000014BE 64D2                   MOV.L       @R13,R4
    000014C0              L1711:                            
    000014C0 9341                   MOV.W       L1920,R3   ; H'0570
    000014C2 D222                   MOV.L       L1920+6,R2 ; _symtab
    000014C4 6422                   MOV.L       @R2,R4
    000014C6 343C                   ADD         R3,R4
    000014C8              L1712:                            
    000014C8 D321                   MOV.L       L1920+10,R3; _print_expr
    000014CA 430B                   JSR         @R3
    000014CC 0009                   NOP
         print.c   387                            p = cdr(p);
    000014CE 84D8                   MOV.B       @(8,R13),R0
    000014D0 2008                   TST         R0,R0
    000014D2 8B01                   BF          L1713
    000014D4 A01F                   BRA         L1715
    000014D6 5ED1                   MOV.L       @(4,R13),R14
    000014D8              L1713:                            
    000014D8 9335                   MOV.W       L1920,R3   ; H'0570
    000014DA D21C                   MOV.L       L1920+6,R2 ; _symtab
    000014DC 6E22                   MOV.L       @R2,R14
         print.c   388                            while (iscons(p)) {
    000014DE A01A                   BRA         L1715
    000014E0 3E3C                   ADD         R3,R14
    000014E2              L1716:                            
         print.c   389                                    if (test_flag == 0)
    000014E2 61B2                   MOV.L       @R11,R1
         print.c   390                                            print_str(",");
         print.c   391                                    else
         print.c   392                                            print_str(",");
    000014E4 DD1B                   MOV.L       L1920+14,R13; L1140
    000014E6 2118                   TST         R1,R1
    000014E8 B1EB                   BSR         _print_str
    000014EA 64D3                   MOV         R13,R4
         print.c   393                                    print_expr(car(p));
    000014EC 84E8                   MOV.B       @(8,R14),R0
    000014EE 2008                   TST         R0,R0
    000014F0 8B01                   BF          L1719
    000014F2 A004                   BRA         L1720
    000014F4 64E2                   MOV.L       @R14,R4
    000014F6              L1719:                            
    000014F6 9326                   MOV.W       L1920,R3   ; H'0570
    000014F8 D214                   MOV.L       L1920+6,R2 ; _symtab
    000014FA 6422                   MOV.L       @R2,R4
    000014FC 343C                   ADD         R3,R4
    000014FE              L1720:                            
    000014FE D314                   MOV.L       L1920+10,R3; _print_expr
    00001500 430B                   JSR         @R3
    00001502 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   394                                    p = cdr(p);
    00001504 84E8                   MOV.B       @(8,R14),R0
    00001506 2008                   TST         R0,R0
    00001508 8B01                   BF          L1721
    0000150A A004                   BRA         L1715
    0000150C 5EE1                   MOV.L       @(4,R14),R14
    0000150E              L1721:                            
    0000150E 931A                   MOV.W       L1920,R3   ; H'0570
    00001510 D20E                   MOV.L       L1920+6,R2 ; _symtab
    00001512 6E22                   MOV.L       @R2,R14
    00001514 3E3C                   ADD         R3,R14
    00001516              L1715:                            
    00001516 84E8                   MOV.B       @(8,R14),R0
    00001518 2008                   TST         R0,R0
    0000151A 89E2                   BT          L1716
    0000151C              L1203:
         print.c   395                            }
         print.c   396                    }
         print.c   397                    print_str(")");
    0000151C D40E                   MOV.L       L1920+18,R4; L1120
         print.c   398                    return;
    0000151E              L1887:                            
    0000151E 7F08                   ADD         #8,R15
    00001520 4F26                   LDS.L       @R15+,PR
    00001522 6BF6                   MOV.L       @R15+,R11
    00001524 6CF6                   MOV.L       @R15+,R12
    00001526 6DF6                   MOV.L       @R15+,R13
    00001528 A1CB                   BRA         _print_str
    0000152A 6EF6                   MOV.L       @R15+,R14
    0000152C              L1705:                            
         print.c   399            }
         print.c   400    
         print.c   401            if (p == symbol(DERIVATIVE))
    0000152C 930C                   MOV.W       L1920+2,R3 ; H'0168
    0000152E 62D2                   MOV.L       @R13,R2
    00001530 323C                   ADD         R3,R2
    00001532 3E20                   CMP/EQ      R2,R14
    00001534 8B12                   BF          L1723
         print.c   402                    print_char('d');
    00001536 E464                   MOV         #100,R4
    00001538 7F08                   ADD         #8,R15
    0000153A 4F26                   LDS.L       @R15+,PR
    0000153C 6BF6                   MOV.L       @R15+,R11
    0000153E 6CF6                   MOV.L       @R15+,R12
    00001540 6DF6                   MOV.L       @R15+,R13
    00001542 A1DB                   BRA         _print_char
    00001544 6EF6                   MOV.L       @R15+,R14
    00001546              L1920:                            
    00001546 0570                   .DATA.W     H'0570
    00001548 0168                   .DATA.W     H'0168
    0000154A 0000                   .DATA.W     0
    0000154C <00000000>             .DATA.L     _symtab
    00001550 <00000000>             .DATA.L     _print_expr
    00001554 <00000000>             .DATA.L     L1140
    00001558 <00000000>             .DATA.L     L1120
    0000155C              L1723:                            
         print.c   403            else if (p == symbol(E))




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000155C 3E40                   CMP/EQ      R4,R14
    0000155E 8B02                   BF          L1725
         print.c   404    #ifdef ARM9
         print.c   405                    print_str("\235(1)");
         print.c   406    #else
         print.c   407                    print_str("exp(1)");
    00001560 D432                   MOV.L       L1921+6,R4 ; L1141
    00001562 A006                   BRA         L1888
    00001564 0009                   NOP
    00001566              L1725:                            
         print.c   408    #endif          
         print.c   409            else if (p == symbol(PI))
    00001566 925E                   MOV.W       L1921,R2   ; H'05F4
    00001568 61D2                   MOV.L       @R13,R1
    0000156A 312C                   ADD         R2,R1
    0000156C 3E10                   CMP/EQ      R1,R14
    0000156E 8B07                   BF          L1727
         print.c   410    #ifdef ARM9
         print.c   411                    print_str("\233");
         print.c   412    #else 
         print.c   413                    print_str("pi");
    00001570 D42F                   MOV.L       L1921+10,R4; L1142
    00001572              L1888:                            
    00001572 7F08                   ADD         #8,R15
    00001574 4F26                   LDS.L       @R15+,PR
    00001576 6BF6                   MOV.L       @R15+,R11
    00001578 6CF6                   MOV.L       @R15+,R12
    0000157A 6DF6                   MOV.L       @R15+,R13
    0000157C A1A1                   BRA         _print_str
    0000157E 6EF6                   MOV.L       @R15+,R14
    00001580              L1727:                            
         print.c   414    #endif
         print.c   415            else
         print.c   416                    print_str(get_printname(p));
    00001580 D12C                   MOV.L       L1921+14,R1; _get_printname
    00001582 410B                   JSR         @R1
    00001584 64E3                   MOV         R14,R4
    00001586 6403                   MOV         R0,R4
    00001588 7F08                   ADD         #8,R15
    0000158A 4F26                   LDS.L       @R15+,PR
    0000158C 6BF6                   MOV.L       @R15+,R11
    0000158E 6CF6                   MOV.L       @R15+,R12
    00001590 6DF6                   MOV.L       @R15+,R13
    00001592 A196                   BRA         _print_str
    00001594 6EF6                   MOV.L       @R15+,R14
         print.c   417    }
         print.c   418    
         print.c   419    void
         print.c   420    print_index_function(U *p)
    00001596              _print_index_function:           ; function: print_index_function
                                                           ; frame size=12
    00001596 2FE6                   MOV.L       R14,@-R15
    00001598 2FD6                   MOV.L       R13,@-R15
    0000159A 4F22                   STS.L       PR,@-R15
         print.c   421    {
         print.c   422            p = cdr(p);
    0000159C 8448                   MOV.B       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000159E 2008                   TST         R0,R0
    000015A0 8B01                   BF          L1729
    000015A2 A004                   BRA         L1730
    000015A4 5E41                   MOV.L       @(4,R4),R14
    000015A6              L1729:                            
    000015A6 933F                   MOV.W       L1921+2,R3 ; H'0570
    000015A8 D223                   MOV.L       L1921+18,R2; _symtab
    000015AA 6E22                   MOV.L       @R2,R14
    000015AC 3E3C                   ADD         R3,R14
    000015AE              L1730:                            
    000015AE D522                   MOV.L       L1921+18,R5; _symtab
    000015B0 84E8                   MOV.B       @(8,R14),R0
    000015B2 2008                   TST         R0,R0
    000015B4 8F02                   BF/S        L1734
    000015B6 6452                   MOV.L       @R5,R4
    000015B8 A003                   BRA         L1745
    000015BA 62E2                   MOV.L       @R14,R2
    000015BC              L1734:                            
    000015BC 9334                   MOV.W       L1921+2,R3 ; H'0570
    000015BE 6252                   MOV.L       @R5,R2
    000015C0 323C                   ADD         R3,R2
    000015C2              L1745:                            
    000015C2 8428                   MOV.B       @(8,R2),R0
    000015C4 2008                   TST         R0,R0
    000015C6 8B09                   BF          L1733
    000015C8 84E8                   MOV.B       @(8,R14),R0
    000015CA 2008                   TST         R0,R0
    000015CC 8B01                   BF          L1735
    000015CE A003                   BRA         L1746
    000015D0 62E2                   MOV.L       @R14,R2
    000015D2              L1735:                            
    000015D2 9329                   MOV.W       L1921+2,R3 ; H'0570
    000015D4 6252                   MOV.L       @R5,R2
    000015D6 323C                   ADD         R3,R2
    000015D8              L1746:                            
    000015D8 A003                   BRA         L1747
    000015DA 6322                   MOV.L       @R2,R3
    000015DC              L1733:                            
    000015DC 9224                   MOV.W       L1921+2,R2 ; H'0570
    000015DE 6352                   MOV.L       @R5,R3
    000015E0 332C                   ADD         R2,R3
    000015E2              L1747:                            
    000015E2 6043                   MOV         R4,R0
    000015E4 700C                   ADD         #12,R0
    000015E6 3300                   CMP/EQ      R0,R3
    000015E8 8955                   BT          L1732
    000015EA 84E8                   MOV.B       @(8,R14),R0
    000015EC 2008                   TST         R0,R0
    000015EE 8B01                   BF          L1737
    000015F0 A002                   BRA         L1748
    000015F2 63E2                   MOV.L       @R14,R3
    000015F4              L1737:                            
    000015F4 9318                   MOV.W       L1921+2,R3 ; H'0570
    000015F6 334C                   ADD         R4,R3
    000015F8              L1748:                            
    000015F8 8438                   MOV.B       @(8,R3),R0
    000015FA 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015FC 8B08                   BF          L1736
    000015FE 84E8                   MOV.B       @(8,R14),R0
    00001600 2008                   TST         R0,R0
    00001602 8B01                   BF          L1738
    00001604 A002                   BRA         L1749
    00001606 62E2                   MOV.L       @R14,R2
    00001608              L1738:                            
    00001608 920E                   MOV.W       L1921+2,R2 ; H'0570
    0000160A 324C                   ADD         R4,R2
    0000160C              L1749:                            
    0000160C A002                   BRA         L1750
    0000160E 6222                   MOV.L       @R2,R2
    00001610              L1736:                            
    00001610 920A                   MOV.W       L1921+2,R2 ; H'0570
    00001612 324C                   ADD         R4,R2
    00001614              L1750:                            
    00001614 9109                   MOV.W       L1921+4,R1 ; H'0384
    00001616 314C                   ADD         R4,R1
    00001618 3210                   CMP/EQ      R1,R2
    0000161A 893C                   BT          L1732
    0000161C 84E8                   MOV.B       @(8,R14),R0
    0000161E 2008                   TST         R0,R0
    00001620 8B0C                   BF          L1740
    00001622 A00D                   BRA         L1751
    00001624 63E2                   MOV.L       @R14,R3
    00001626              L1921:                            
    00001626 05F4                   .DATA.W     H'05F4
    00001628 0570                   .DATA.W     H'0570
    0000162A 0384                   .DATA.W     H'0384
    0000162C <00000000>             .DATA.L     L1141
    00001630 <00000000>             .DATA.L     L1142
    00001634 <00000000>             .DATA.L     _get_printname
    00001638 <00000000>             .DATA.L     _symtab
    0000163C              L1740:                            
    0000163C 9358                   MOV.W       L1922,R3   ; H'0570
    0000163E 334C                   ADD         R4,R3
    00001640              L1751:                            
    00001640 8438                   MOV.B       @(8,R3),R0
    00001642 2008                   TST         R0,R0
    00001644 8B08                   BF          L1739
    00001646 84E8                   MOV.B       @(8,R14),R0
    00001648 2008                   TST         R0,R0
    0000164A 8B01                   BF          L1741
    0000164C A002                   BRA         L1752
    0000164E 62E2                   MOV.L       @R14,R2
    00001650              L1741:                            
    00001650 924E                   MOV.W       L1922,R2   ; H'0570
    00001652 324C                   ADD         R4,R2
    00001654              L1752:                            
    00001654 A002                   BRA         L1753
    00001656 6222                   MOV.L       @R2,R2
    00001658              L1739:                            
    00001658 924A                   MOV.W       L1922,R2   ; H'0570
    0000165A 324C                   ADD         R4,R2
    0000165C              L1753:                            
    0000165C 9149                   MOV.W       L1922+2,R1 ; H'03F0
    0000165E 314C                   ADD         R4,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001660 3210                   CMP/EQ      R1,R2
    00001662 8918                   BT          L1732
    00001664 84E8                   MOV.B       @(8,R14),R0
    00001666 2008                   TST         R0,R0
    00001668 8B01                   BF          L1743
    0000166A A002                   BRA         L1754
    0000166C 63E2                   MOV.L       @R14,R3
    0000166E              L1743:                            
    0000166E 933F                   MOV.W       L1922,R3   ; H'0570
    00001670 334C                   ADD         R4,R3
    00001672              L1754:                            
    00001672 8438                   MOV.B       @(8,R3),R0
    00001674 2008                   TST         R0,R0
    00001676 8B08                   BF          L1742
    00001678 84E8                   MOV.B       @(8,R14),R0
    0000167A 2008                   TST         R0,R0
    0000167C 8B01                   BF          L1744
    0000167E A002                   BRA         L1755
    00001680 62E2                   MOV.L       @R14,R2
    00001682              L1744:                            
    00001682 9235                   MOV.W       L1922,R2   ; H'0570
    00001684 324C                   ADD         R4,R2
    00001686              L1755:                            
    00001686 A002                   BRA         L1756
    00001688 6222                   MOV.L       @R2,R2
    0000168A              L1742:                            
    0000168A 9231                   MOV.W       L1922,R2   ; H'0570
    0000168C 324C                   ADD         R4,R2
    0000168E              L1756:                            
    0000168E 9131                   MOV.W       L1922+4,R1 ; H'0258
    00001690 314C                   ADD         R4,R1
    00001692 3210                   CMP/EQ      R1,R2
    00001694 8B0D                   BF          L1731
    00001696              L1732:                            
         print.c   423            if (caar(p) == symbol(ADD) || caar(p) == symbol(MULTIPLY) || caar(p) == symbol(POWER) || caar(p) =
                         += symbol(FACTORIAL))
         print.c   424                    print_subexpr(car(p));
    00001696 84E8                   MOV.B       @(8,R14),R0
    00001698 2008                   TST         R0,R0
    0000169A 8B01                   BF          L1757
    0000169C A004                   BRA         L1758
    0000169E 64E2                   MOV.L       @R14,R4
    000016A0              L1757:                            
    000016A0 9326                   MOV.W       L1922,R3   ; H'0570
    000016A2 D215                   MOV.L       L1922+8,R2 ; _symtab
    000016A4 6422                   MOV.L       @R2,R4
    000016A6 343C                   ADD         R3,R4
    000016A8              L1758:                            
    000016A8 D314                   MOV.L       L1922+12,R3; _print_subexpr
    000016AA 430B                   JSR         @R3
    000016AC 0009                   NOP
    000016AE A00C                   BRA         L1759
    000016B0 0009                   NOP
    000016B2              L1731:                            
         print.c   425            else
         print.c   426                    print_expr(car(p));
    000016B2 84E8                   MOV.B       @(8,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016B4 2008                   TST         R0,R0
    000016B6 8B01                   BF          L1760
    000016B8 A004                   BRA         L1761
    000016BA 64E2                   MOV.L       @R14,R4
    000016BC              L1760:                            
    000016BC 9318                   MOV.W       L1922,R3   ; H'0570
    000016BE D20E                   MOV.L       L1922+8,R2 ; _symtab
    000016C0 6422                   MOV.L       @R2,R4
    000016C2 343C                   ADD         R3,R4
    000016C4              L1761:                            
    000016C4 D30E                   MOV.L       L1922+16,R3; _print_expr
    000016C6 430B                   JSR         @R3
    000016C8 0009                   NOP
    000016CA              L1759:                            
         print.c   427            print_char('[');
    000016CA B117                   BSR         _print_char
    000016CC E45B                   MOV         #91,R4
         print.c   428            p = cdr(p);
    000016CE 84E8                   MOV.B       @(8,R14),R0
    000016D0 2008                   TST         R0,R0
    000016D2 8B01                   BF          L1762
    000016D4 A004                   BRA         L1763
    000016D6 5DE1                   MOV.L       @(4,R14),R13
    000016D8              L1762:                            
    000016D8 930A                   MOV.W       L1922,R3   ; H'0570
    000016DA D207                   MOV.L       L1922+8,R2 ; _symtab
    000016DC 6D22                   MOV.L       @R2,R13
    000016DE 3D3C                   ADD         R3,R13
    000016E0              L1763:                            
         print.c   429            if (iscons(p)) {
    000016E0 84D8                   MOV.B       @(8,R13),R0
    000016E2 2008                   TST         R0,R0
    000016E4 8B39                   BF          L1764
         print.c   430                    print_expr(car(p));
    000016E6 84D8                   MOV.B       @(8,R13),R0
    000016E8 2008                   TST         R0,R0
    000016EA 8B0B                   BF          L1765
    000016EC A00E                   BRA         L1766
    000016EE 64D2                   MOV.L       @R13,R4
    000016F0              L1922:                            
    000016F0 0570                   .DATA.W     H'0570
    000016F2 03F0                   .DATA.W     H'03F0
    000016F4 0258                   .DATA.W     H'0258
    000016F6 0000                   .DATA.W     0
    000016F8 <00000000>             .DATA.L     _symtab
    000016FC <00000000>             .DATA.L     _print_subexpr
    00001700 <00000000>             .DATA.L     _print_expr
    00001704              L1765:                            
    00001704 935E                   MOV.W       L1923,R3   ; H'0570
    00001706 D230                   MOV.L       L1923+4,R2 ; _symtab
    00001708 6422                   MOV.L       @R2,R4
    0000170A 343C                   ADD         R3,R4
    0000170C              L1766:                            
    0000170C D32F                   MOV.L       L1923+8,R3 ; _print_expr
    0000170E 430B                   JSR         @R3
    00001710 0009                   NOP
         print.c   431                    p = cdr(p);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001712 84D8                   MOV.B       @(8,R13),R0
    00001714 2008                   TST         R0,R0
    00001716 8B01                   BF          L1767
    00001718 A01C                   BRA         L1769
    0000171A 5ED1                   MOV.L       @(4,R13),R14
    0000171C              L1767:                            
    0000171C 9352                   MOV.W       L1923,R3   ; H'0570
    0000171E D22A                   MOV.L       L1923+4,R2 ; _symtab
    00001720 6E22                   MOV.L       @R2,R14
         print.c   432                    while(iscons(p)) {
    00001722 A017                   BRA         L1769
    00001724 3E3C                   ADD         R3,R14
    00001726              L1770:                            
         print.c   433                            print_char(',');
    00001726 B0E9                   BSR         _print_char
    00001728 E42C                   MOV         #44,R4
         print.c   434                            print_expr(car(p));
    0000172A 84E8                   MOV.B       @(8,R14),R0
    0000172C 2008                   TST         R0,R0
    0000172E 8B01                   BF          L1771
    00001730 A004                   BRA         L1772
    00001732 64E2                   MOV.L       @R14,R4
    00001734              L1771:                            
    00001734 9346                   MOV.W       L1923,R3   ; H'0570
    00001736 D224                   MOV.L       L1923+4,R2 ; _symtab
    00001738 6422                   MOV.L       @R2,R4
    0000173A 343C                   ADD         R3,R4
    0000173C              L1772:                            
    0000173C D323                   MOV.L       L1923+8,R3 ; _print_expr
    0000173E 430B                   JSR         @R3
    00001740 0009                   NOP
         print.c   435                            p = cdr(p);
    00001742 84E8                   MOV.B       @(8,R14),R0
    00001744 2008                   TST         R0,R0
    00001746 8B01                   BF          L1773
    00001748 A004                   BRA         L1769
    0000174A 5EE1                   MOV.L       @(4,R14),R14
    0000174C              L1773:                            
    0000174C 933A                   MOV.W       L1923,R3   ; H'0570
    0000174E D21E                   MOV.L       L1923+4,R2 ; _symtab
    00001750 6E22                   MOV.L       @R2,R14
    00001752 3E3C                   ADD         R3,R14
    00001754              L1769:                            
    00001754 84E8                   MOV.B       @(8,R14),R0
    00001756 2008                   TST         R0,R0
    00001758 89E5                   BT          L1770
    0000175A              L1764:                            
         print.c   436                    }
         print.c   437            }
         print.c   438            print_char(']');
    0000175A E45D                   MOV         #93,R4
    0000175C 4F26                   LDS.L       @R15+,PR
    0000175E 6DF6                   MOV.L       @R15+,R13
    00001760 A0CC                   BRA         _print_char
    00001762 6EF6                   MOV.L       @R15+,R14
         print.c   439    }
         print.c   440    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   441    void
         print.c   442    print_factorial_function(U *p)
    00001764              _print_factorial_function:       ; function: print_factorial_function
                                                           ; frame size=4
    00001764 4F22                   STS.L       PR,@-R15
         print.c   443    {
         print.c   444            p = cadr(p);
    00001766 8448                   MOV.B       @(8,R4),R0
    00001768 2008                   TST         R0,R0
    0000176A 8B01                   BF          L1776
    0000176C A004                   BRA         L1778
    0000176E 5341                   MOV.L       @(4,R4),R3
    00001770              L1776:                            
    00001770 9228                   MOV.W       L1923,R2   ; H'0570
    00001772 D115                   MOV.L       L1923+4,R1 ; _symtab
    00001774 6312                   MOV.L       @R1,R3
    00001776 332C                   ADD         R2,R3
    00001778              L1778:                            
    00001778 8438                   MOV.B       @(8,R3),R0
    0000177A 2008                   TST         R0,R0
    0000177C 8B0B                   BF          L1775
    0000177E 8448                   MOV.B       @(8,R4),R0
    00001780 2008                   TST         R0,R0
    00001782 8B01                   BF          L1777
    00001784 A004                   BRA         L1779
    00001786 5241                   MOV.L       @(4,R4),R2
    00001788              L1777:                            
    00001788 931C                   MOV.W       L1923,R3   ; H'0570
    0000178A D10F                   MOV.L       L1923+4,R1 ; _symtab
    0000178C 6212                   MOV.L       @R1,R2
    0000178E 323C                   ADD         R3,R2
    00001790              L1779:                            
    00001790 6422                   MOV.L       @R2,R4
    00001792 A004                   BRA         L1780
    00001794 0009                   NOP
    00001796              L1775:                            
    00001796 9315                   MOV.W       L1923,R3   ; H'0570
    00001798 D10B                   MOV.L       L1923+4,R1 ; _symtab
    0000179A 6412                   MOV.L       @R1,R4
    0000179C 343C                   ADD         R3,R4
    0000179E              L1780:                            
    0000179E D60A                   MOV.L       L1923+4,R6 ; _symtab
    000017A0 8448                   MOV.B       @(8,R4),R0
    000017A2 2008                   TST         R0,R0
    000017A4 8F02                   BF/S        L1783
    000017A6 6562                   MOV.L       @R6,R5
    000017A8 A003                   BRA         L1787
    000017AA 6342                   MOV.L       @R4,R3
    000017AC              L1783:                            
    000017AC 920A                   MOV.W       L1923,R2   ; H'0570
    000017AE 6362                   MOV.L       @R6,R3
    000017B0 332C                   ADD         R2,R3
    000017B2              L1787:                            
    000017B2 6053                   MOV         R5,R0
    000017B4 700C                   ADD         #12,R0
    000017B6 3300                   CMP/EQ      R0,R3
    000017B8 8926                   BT          L1782




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017BA 8448                   MOV.B       @(8,R4),R0
    000017BC 2008                   TST         R0,R0
    000017BE 8B07                   BF          L1784
    000017C0 A008                   BRA         L1788
    000017C2 6242                   MOV.L       @R4,R2
    000017C4              L1923:                            
    000017C4 0570                   .DATA.W     H'0570
    000017C6 0000                   .DATA.W     0
    000017C8 <00000000>             .DATA.L     _symtab
    000017CC <00000000>             .DATA.L     _print_expr
    000017D0              L1784:                            
    000017D0 927B                   MOV.W       L1924,R2   ; H'0570
    000017D2 325C                   ADD         R5,R2
    000017D4              L1788:                            
    000017D4 937A                   MOV.W       L1924+2,R3 ; H'0384
    000017D6 335C                   ADD         R5,R3
    000017D8 3230                   CMP/EQ      R3,R2
    000017DA 8915                   BT          L1782
    000017DC 8448                   MOV.B       @(8,R4),R0
    000017DE 2008                   TST         R0,R0
    000017E0 8B01                   BF          L1785
    000017E2 A002                   BRA         L1789
    000017E4 6342                   MOV.L       @R4,R3
    000017E6              L1785:                            
    000017E6 9370                   MOV.W       L1924,R3   ; H'0570
    000017E8 335C                   ADD         R5,R3
    000017EA              L1789:                            
    000017EA 9170                   MOV.W       L1924+4,R1 ; H'03F0
    000017EC 315C                   ADD         R5,R1
    000017EE 3310                   CMP/EQ      R1,R3
    000017F0 890A                   BT          L1782
    000017F2 8448                   MOV.B       @(8,R4),R0
    000017F4 2008                   TST         R0,R0
    000017F6 8B01                   BF          L1786
    000017F8 A002                   BRA         L1790
    000017FA 6242                   MOV.L       @R4,R2
    000017FC              L1786:                            
    000017FC 9265                   MOV.W       L1924,R2   ; H'0570
    000017FE 325C                   ADD         R5,R2
    00001800              L1790:                            
    00001800 9366                   MOV.W       L1924+6,R3 ; H'0258
    00001802 335C                   ADD         R5,R3
    00001804 3230                   CMP/EQ      R3,R2
    00001806 8B04                   BF          L1781
    00001808              L1782:                            
         print.c   445            if (car(p) == symbol(ADD) || car(p) == symbol(MULTIPLY) || car(p) == symbol(POWER) || car(p) == sy
                         +mbol(FACTORIAL))
         print.c   446                    print_subexpr(p);
    00001808 D332                   MOV.L       L1924+10,R3; _print_subexpr
    0000180A 430B                   JSR         @R3
    0000180C 0009                   NOP
    0000180E A003                   BRA         L1791
    00001810 0009                   NOP
    00001812              L1781:                            
         print.c   447            else
         print.c   448                    print_expr(p);
    00001812 D331                   MOV.L       L1924+14,R3; _print_expr




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001814 430B                   JSR         @R3
    00001816 0009                   NOP
    00001818              L1791:                            
         print.c   449            print_char('!');
    00001818 E421                   MOV         #33,R4
    0000181A A06F                   BRA         _print_char
    0000181C 4F26                   LDS.L       @R15+,PR
         print.c   450    }
         print.c   451    
         print.c   452    void
         print.c   453    print_tensor(U *p)
    0000181E              _print_tensor:                   ; function: print_tensor
                                                           ; frame size=8
         print.c   454    {
         print.c   455            int k = 0;
    0000181E E300                   MOV         #0,R3
    00001820 4F22                   STS.L       PR,@-R15
         print.c   456            print_tensor_inner(p, 0, &k);
    00001822 6533                   MOV         R3,R5
    00001824 7FFC                   ADD         #-4,R15
    00001826 2F32                   MOV.L       R3,@R15
    00001828 B004                   BSR         _print_tensor_inner
    0000182A 66F3                   MOV         R15,R6
         print.c   457    }
    0000182C 7F04                   ADD         #4,R15
    0000182E 4F26                   LDS.L       @R15+,PR
    00001830 000B                   RTS
    00001832 0009                   NOP
         print.c   458    
         print.c   459    void
         print.c   460    print_tensor_inner(U *p, int j, int *k)
    00001834              _print_tensor_inner:             ; function: print_tensor_inner
                                                           ; frame size=32
    00001834 2FE6                   MOV.L       R14,@-R15
    00001836 6E43                   MOV         R4,R14
    00001838 2FD6                   MOV.L       R13,@-R15
    0000183A 2FC6                   MOV.L       R12,@-R15
    0000183C 2FB6                   MOV.L       R11,@-R15
    0000183E 2FA6                   MOV.L       R10,@-R15
    00001840 2F96                   MOV.L       R9,@-R15
    00001842 4F22                   STS.L       PR,@-R15
         print.c   461    {
         print.c   462            int i;
         print.c   463            print_str("(");
    00001844 D425                   MOV.L       L1924+18,R4; L1119
    00001846 7FFC                   ADD         #-4,R15
    00001848 2F52                   MOV.L       R5,@R15
    0000184A B03A                   BSR         _print_str
    0000184C 6D63                   MOV         R6,R13
         print.c   464            for (i = 0; i < p->u.tensor->dim[j]; i++) {
    0000184E EC00                   MOV         #0,R12
    00001850 6BF2                   MOV.L       @R15,R11
    00001852 4B08                   SHLL2       R11
    00001854 6AF2                   MOV.L       @R15,R10
    00001856 A024                   BRA         L1792
    00001858 7A01                   ADD         #1,R10
    0000185A              L1793:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   465                    if (j + 1 == p->u.tensor->ndim) {
    0000185A 62E2                   MOV.L       @R14,R2
    0000185C 6322                   MOV.L       @R2,R3
    0000185E 3A30                   CMP/EQ      R3,R10
    00001860 8B0B                   BF          L1794
         print.c   466                            print_expr(p->u.tensor->elem[*k]);
    00001862 63E2                   MOV.L       @R14,R3
    00001864 64D2                   MOV.L       @R13,R4
    00001866 7368                   ADD         #104,R3
    00001868 D21B                   MOV.L       L1924+14,R2; _print_expr
    0000186A 4408                   SHLL2       R4
    0000186C 343C                   ADD         R3,R4
    0000186E 420B                   JSR         @R2
    00001870 6442                   MOV.L       @R4,R4
         print.c   467                            *k = *k + 1;
    00001872 63D2                   MOV.L       @R13,R3
    00001874 7301                   ADD         #1,R3
    00001876 A004                   BRA         L1795
    00001878 2D32                   MOV.L       R3,@R13
    0000187A              L1794:                            
         print.c   468                    } else
         print.c   469                            print_tensor_inner(p, j + 1, k);
    0000187A 66D3                   MOV         R13,R6
    0000187C 65A3                   MOV         R10,R5
    0000187E BFD9                   BSR         _print_tensor_inner
    00001880 64E3                   MOV         R14,R4
    00001882              L1795:                            
         print.c   470                    if (i + 1 < p->u.tensor->dim[j]) {
    00001882 62C3                   MOV         R12,R2
    00001884 60E2                   MOV.L       @R14,R0
    00001886 7201                   ADD         #1,R2
    00001888 6303                   MOV         R0,R3
    0000188A 7304                   ADD         #4,R3
    0000188C 33BC                   ADD         R11,R3
    0000188E 6132                   MOV.L       @R3,R1
    00001890 3213                   CMP/GE      R1,R2
    00001892 8905                   BT          L1796
         print.c   471                            if (test_flag == 0)
    00001894 D412                   MOV.L       L1924+22,R4; _test_flag
    00001896 6242                   MOV.L       @R4,R2
         print.c   472                                    print_str(",");
         print.c   473                            else
         print.c   474                                    print_str(",");
    00001898 D912                   MOV.L       L1924+26,R9; L1140
    0000189A 2228                   TST         R2,R2
    0000189C B011                   BSR         _print_str
    0000189E 6493                   MOV         R9,R4
    000018A0              L1796:                            
    000018A0 7C01                   ADD         #1,R12
    000018A2              L1792:                            
    000018A2 60E2                   MOV.L       @R14,R0
    000018A4 6303                   MOV         R0,R3
    000018A6 7304                   ADD         #4,R3
    000018A8 33BC                   ADD         R11,R3
    000018AA 6232                   MOV.L       @R3,R2
    000018AC 3C23                   CMP/GE      R2,R12
    000018AE 8BD4                   BF          L1793




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   475                    }
         print.c   476            }
         print.c   477            print_str(")");
    000018B0 D40D                   MOV.L       L1924+30,R4; L1120
    000018B2 7F04                   ADD         #4,R15
    000018B4 4F26                   LDS.L       @R15+,PR
    000018B6 69F6                   MOV.L       @R15+,R9
    000018B8 6AF6                   MOV.L       @R15+,R10
    000018BA 6BF6                   MOV.L       @R15+,R11
    000018BC 6CF6                   MOV.L       @R15+,R12
    000018BE 6DF6                   MOV.L       @R15+,R13
    000018C0 6EF6                   MOV.L       @R15+,R14
         print.c   478    }
         print.c   479    
         print.c   480    void
         print.c   481    print_str(char *s)
    000018C2              _print_str:                      ; function: print_str
                                                           ; frame size=8
    000018C2 2FE6                   MOV.L       R14,@-R15
    000018C4 4F22                   STS.L       PR,@-R15
         print.c   482    {
         print.c   483            while (*s)
    000018C6 A013                   BRA         L1799
    000018C8 6E43                   MOV         R4,R14
    000018CA              L1924:                            
    000018CA 0570                   .DATA.W     H'0570
    000018CC 0384                   .DATA.W     H'0384
    000018CE 03F0                   .DATA.W     H'03F0
    000018D0 0258                   .DATA.W     H'0258
    000018D2 0000                   .DATA.W     0
    000018D4 <00000000>             .DATA.L     _print_subexpr
    000018D8 <00000000>             .DATA.L     _print_expr
    000018DC <00000000>             .DATA.L     L1119
    000018E0 <00000000>             .DATA.L     _test_flag
    000018E4 <00000000>             .DATA.L     L1140
    000018E8 <00000000>             .DATA.L     L1120
    000018EC              L1800:                            
         print.c   484                    print_char(*s++);
    000018EC B006                   BSR         _print_char
    000018EE 64E4                   MOV.B       @R14+,R4
    000018F0              L1799:                            
    000018F0 62E0                   MOV.B       @R14,R2
    000018F2 2228                   TST         R2,R2
    000018F4 8BFA                   BF          L1800
         print.c   485    }
    000018F6 4F26                   LDS.L       @R15+,PR
    000018F8 000B                   RTS
    000018FA 6EF6                   MOV.L       @R15+,R14
         print.c   486    
         print.c   487    void
         print.c   488    print_char(int c)
    000018FC              _print_char:                     ; function: print_char
                                                           ; frame size=0
         print.c   489    {
         print.c   490            last_char = c;
    000018FC D32E                   MOV.L       L1925+2,R3 ; __$last_char
    000018FE 2342                   MOV.L       R4,@R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   491            char_count++;
    00001900 D52E                   MOV.L       L1925+6,R5 ; __$char_count
    00001902 6252                   MOV.L       @R5,R2
         print.c   492    //      if (display_flag == 1)
         print.c   493    //              displaychar(c);
         print.c   494    //      else
         print.c   495                    printchar(c);
    00001904 D12E                   MOV.L       L1925+10,R1; _printchar
    00001906 7201                   ADD         #1,R2
    00001908 412B                   JMP         @R1
    0000190A 2522                   MOV.L       R2,@R5
         print.c   496    }
         print.c   497    
         print.c   498    void
         print.c   499    print_function_definition(U *p)
    0000190C              _print_function_definition:      ; function: print_function_definition
                                                           ; frame size=12
    0000190C 2FE6                   MOV.L       R14,@-R15
    0000190E 2FD6                   MOV.L       R13,@-R15
    00001910 4F22                   STS.L       PR,@-R15
         print.c   500    {
         print.c   501            print_str(get_printname(p));
    00001912 D32C                   MOV.L       L1925+14,R3; _get_printname
    00001914 430B                   JSR         @R3
    00001916 6E43                   MOV         R4,R14
    00001918 BFD3                   BSR         _print_str
    0000191A 6403                   MOV         R0,R4
         print.c   502            print_arg_list(cadr(get_binding(p)));
    0000191C DD2A                   MOV.L       L1925+18,R13; _get_binding
    0000191E 4D0B                   JSR         @R13
    00001920 64E3                   MOV         R14,R4
    00001922 8408                   MOV.B       @(8,R0),R0
    00001924 2008                   TST         R0,R0
    00001926 8B04                   BF          L1802
    00001928 4D0B                   JSR         @R13
    0000192A 64E3                   MOV         R14,R4
    0000192C 5301                   MOV.L       @(4,R0),R3
    0000192E A004                   BRA         L1804
    00001930 0009                   NOP
    00001932              L1802:                            
    00001932 9240                   MOV.W       L1925,R2   ; H'0570
    00001934 D125                   MOV.L       L1925+22,R1; _symtab
    00001936 6312                   MOV.L       @R1,R3
    00001938 332C                   ADD         R2,R3
    0000193A              L1804:                            
    0000193A 8438                   MOV.B       @(8,R3),R0
    0000193C 2008                   TST         R0,R0
    0000193E 8B10                   BF          L1801
    00001940 4D0B                   JSR         @R13
    00001942 64E3                   MOV         R14,R4
    00001944 8408                   MOV.B       @(8,R0),R0
    00001946 2008                   TST         R0,R0
    00001948 8B04                   BF          L1803
    0000194A 4D0B                   JSR         @R13
    0000194C 64E3                   MOV         R14,R4
    0000194E 5201                   MOV.L       @(4,R0),R2
    00001950 A004                   BRA         L1805




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001952 0009                   NOP
    00001954              L1803:                            
    00001954 932F                   MOV.W       L1925,R3   ; H'0570
    00001956 D11D                   MOV.L       L1925+22,R1; _symtab
    00001958 6212                   MOV.L       @R1,R2
    0000195A 323C                   ADD         R3,R2
    0000195C              L1805:                            
    0000195C 6422                   MOV.L       @R2,R4
    0000195E A004                   BRA         L1806
    00001960 0009                   NOP
    00001962              L1801:                            
    00001962 9328                   MOV.W       L1925,R3   ; H'0570
    00001964 D119                   MOV.L       L1925+22,R1; _symtab
    00001966 6412                   MOV.L       @R1,R4
    00001968 343C                   ADD         R3,R4
    0000196A              L1806:                            
    0000196A B06E                   BSR         _print_arg_list
    0000196C 0009                   NOP
         print.c   503            print_str("=");
    0000196E D418                   MOV.L       L1925+26,R4; L1166
    00001970 BFA7                   BSR         _print_str
    00001972 0009                   NOP
         print.c   504            print_expr(caddr(get_binding(p)));
    00001974 4D0B                   JSR         @R13
    00001976 64E3                   MOV         R14,R4
    00001978 8408                   MOV.B       @(8,R0),R0
    0000197A 2008                   TST         R0,R0
    0000197C 8B04                   BF          L1809
    0000197E 4D0B                   JSR         @R13
    00001980 64E3                   MOV         R14,R4
    00001982 5201                   MOV.L       @(4,R0),R2
    00001984 A004                   BRA         L1814
    00001986 0009                   NOP
    00001988              L1809:                            
    00001988 9315                   MOV.W       L1925,R3   ; H'0570
    0000198A D110                   MOV.L       L1925+22,R1; _symtab
    0000198C 6212                   MOV.L       @R1,R2
    0000198E 323C                   ADD         R3,R2
    00001990              L1814:                            
    00001990 8428                   MOV.B       @(8,R2),R0
    00001992 2008                   TST         R0,R0
    00001994 8B1E                   BF          L1808
    00001996 4D0B                   JSR         @R13
    00001998 64E3                   MOV         R14,R4
    0000199A 8408                   MOV.B       @(8,R0),R0
    0000199C 2008                   TST         R0,R0
    0000199E 8B04                   BF          L1810
    000019A0 4D0B                   JSR         @R13
    000019A2 64E3                   MOV         R14,R4
    000019A4 5201                   MOV.L       @(4,R0),R2
    000019A6 A004                   BRA         L1815
    000019A8 0009                   NOP
    000019AA              L1810:                            
    000019AA 9304                   MOV.W       L1925,R3   ; H'0570
    000019AC D107                   MOV.L       L1925+22,R1; _symtab
    000019AE 6212                   MOV.L       @R1,R2
    000019B0 323C                   ADD         R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000019B2              L1815:                            
    000019B2 A013                   BRA         L1816
    000019B4 5321                   MOV.L       @(4,R2),R3
    000019B6              L1925:                            
    000019B6 0570                   .DATA.W     H'0570
    000019B8 <00000000>             .DATA.L     __$last_char
    000019BC <00000000>             .DATA.L     __$char_count
    000019C0 <00000000>             .DATA.L     _printchar
    000019C4 <00000000>             .DATA.L     _get_printname
    000019C8 <00000000>             .DATA.L     _get_binding
    000019CC <00000000>             .DATA.L     _symtab
    000019D0 <00000000>             .DATA.L     L1166
    000019D4              L1808:                            
    000019D4 9265                   MOV.W       L1926,R2   ; H'0570
    000019D6 D133                   MOV.L       L1926+2,R1 ; _symtab
    000019D8 6312                   MOV.L       @R1,R3
    000019DA 332C                   ADD         R2,R3
    000019DC              L1816:                            
    000019DC 8438                   MOV.B       @(8,R3),R0
    000019DE 2008                   TST         R0,R0
    000019E0 8B27                   BF          L1807
    000019E2 4D0B                   JSR         @R13
    000019E4 64E3                   MOV         R14,R4
    000019E6 8408                   MOV.B       @(8,R0),R0
    000019E8 2008                   TST         R0,R0
    000019EA 8B04                   BF          L1812
    000019EC 4D0B                   JSR         @R13
    000019EE 64E3                   MOV         R14,R4
    000019F0 5301                   MOV.L       @(4,R0),R3
    000019F2 A004                   BRA         L1817
    000019F4 0009                   NOP
    000019F6              L1812:                            
    000019F6 9254                   MOV.W       L1926,R2   ; H'0570
    000019F8 D12A                   MOV.L       L1926+2,R1 ; _symtab
    000019FA 6312                   MOV.L       @R1,R3
    000019FC 332C                   ADD         R2,R3
    000019FE              L1817:                            
    000019FE 8438                   MOV.B       @(8,R3),R0
    00001A00 2008                   TST         R0,R0
    00001A02 8B0F                   BF          L1811
    00001A04 4D0B                   JSR         @R13
    00001A06 64E3                   MOV         R14,R4
    00001A08 8408                   MOV.B       @(8,R0),R0
    00001A0A 2008                   TST         R0,R0
    00001A0C 8B04                   BF          L1813
    00001A0E 4D0B                   JSR         @R13
    00001A10 64E3                   MOV         R14,R4
    00001A12 5201                   MOV.L       @(4,R0),R2
    00001A14 A004                   BRA         L1818
    00001A16 0009                   NOP
    00001A18              L1813:                            
    00001A18 9343                   MOV.W       L1926,R3   ; H'0570
    00001A1A D122                   MOV.L       L1926+2,R1 ; _symtab
    00001A1C 6212                   MOV.L       @R1,R2
    00001A1E 323C                   ADD         R3,R2
    00001A20              L1818:                            
    00001A20 A004                   BRA         L1819




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A22 5221                   MOV.L       @(4,R2),R2
    00001A24              L1811:                            
    00001A24 933D                   MOV.W       L1926,R3   ; H'0570
    00001A26 D11F                   MOV.L       L1926+2,R1 ; _symtab
    00001A28 6212                   MOV.L       @R1,R2
    00001A2A 323C                   ADD         R3,R2
    00001A2C              L1819:                            
    00001A2C 6422                   MOV.L       @R2,R4
    00001A2E A004                   BRA         L1820
    00001A30 0009                   NOP
    00001A32              L1807:                            
    00001A32 9336                   MOV.W       L1926,R3   ; H'0570
    00001A34 D11B                   MOV.L       L1926+2,R1 ; _symtab
    00001A36 6412                   MOV.L       @R1,R4
    00001A38 343C                   ADD         R3,R4
    00001A3A              L1820:                            
    00001A3A D31B                   MOV.L       L1926+6,R3 ; _print_expr
    00001A3C 430B                   JSR         @R3
    00001A3E 0009                   NOP
         print.c   505            print_str("\n");
    00001A40 D41A                   MOV.L       L1926+10,R4; L1167
    00001A42 4F26                   LDS.L       @R15+,PR
    00001A44 6DF6                   MOV.L       @R15+,R13
    00001A46 AF3C                   BRA         _print_str
    00001A48 6EF6                   MOV.L       @R15+,R14
         print.c   506    }
         print.c   507    
         print.c   508    void
         print.c   509    print_arg_list(U *p)
    00001A4A              _print_arg_list:                 ; function: print_arg_list
                                                           ; frame size=16
    00001A4A 2FE6                   MOV.L       R14,@-R15
    00001A4C 2FD6                   MOV.L       R13,@-R15
    00001A4E 6D43                   MOV         R4,R13
    00001A50 2FC6                   MOV.L       R12,@-R15
    00001A52 4F22                   STS.L       PR,@-R15
         print.c   510    {
         print.c   511            print_str("(");
    00001A54 D416                   MOV.L       L1926+14,R4; L1119
    00001A56 BF34                   BSR         _print_str
    00001A58 0009                   NOP
         print.c   512            if (iscons(p)) {
    00001A5A 84D8                   MOV.B       @(8,R13),R0
    00001A5C 2008                   TST         R0,R0
    00001A5E 8B41                   BF          L1821
         print.c   513                    print_str(get_printname(car(p)));
    00001A60 DC14                   MOV.L       L1926+18,R12; _get_printname
    00001A62 84D8                   MOV.B       @(8,R13),R0
    00001A64 2008                   TST         R0,R0
    00001A66 8B01                   BF          L1822
    00001A68 A004                   BRA         L1823
    00001A6A 64D2                   MOV.L       @R13,R4
    00001A6C              L1822:                            
    00001A6C 9319                   MOV.W       L1926,R3   ; H'0570
    00001A6E D20D                   MOV.L       L1926+2,R2 ; _symtab
    00001A70 6422                   MOV.L       @R2,R4
    00001A72 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A74              L1823:                            
    00001A74 4C0B                   JSR         @R12
    00001A76 0009                   NOP
    00001A78 BF23                   BSR         _print_str
    00001A7A 6403                   MOV         R0,R4
         print.c   514                    p = cdr(p);
    00001A7C 84D8                   MOV.B       @(8,R13),R0
    00001A7E 2008                   TST         R0,R0
    00001A80 8B01                   BF          L1824
    00001A82 A004                   BRA         L1825
    00001A84 5ED1                   MOV.L       @(4,R13),R14
    00001A86              L1824:                            
    00001A86 930C                   MOV.W       L1926,R3   ; H'0570
    00001A88 D206                   MOV.L       L1926+2,R2 ; _symtab
    00001A8A 6E22                   MOV.L       @R2,R14
    00001A8C 3E3C                   ADD         R3,R14
    00001A8E              L1825:                            
    00001A8E DD0A                   MOV.L       L1926+22,R13; L1140
         print.c   515                    while (iscons(p)) {
    00001A90 A025                   BRA         L1826
    00001A92 0009                   NOP
    00001A94              L1827:                            
         print.c   516                            print_str(",");
    00001A94 BF15                   BSR         _print_str
    00001A96 64D3                   MOV         R13,R4
         print.c   517                            print_str(get_printname(car(p)));
    00001A98 84E8                   MOV.B       @(8,R14),R0
    00001A9A 2008                   TST         R0,R0
    00001A9C 8B0E                   BF          L1828
    00001A9E A011                   BRA         L1829
    00001AA0 64E2                   MOV.L       @R14,R4
    00001AA2              L1926:                            
    00001AA2 0570                   .DATA.W     H'0570
    00001AA4 <00000000>             .DATA.L     _symtab
    00001AA8 <00000000>             .DATA.L     _print_expr
    00001AAC <00000000>             .DATA.L     L1167
    00001AB0 <00000000>             .DATA.L     L1119
    00001AB4 <00000000>             .DATA.L     _get_printname
    00001AB8 <00000000>             .DATA.L     L1140
    00001ABC              L1828:                            
    00001ABC 935C                   MOV.W       L1927,R3   ; H'0570
    00001ABE D22F                   MOV.L       L1927+4,R2 ; _symtab
    00001AC0 6422                   MOV.L       @R2,R4
    00001AC2 343C                   ADD         R3,R4
    00001AC4              L1829:                            
    00001AC4 4C0B                   JSR         @R12
    00001AC6 0009                   NOP
    00001AC8 BEFB                   BSR         _print_str
    00001ACA 6403                   MOV         R0,R4
         print.c   518                            p = cdr(p);
    00001ACC 84E8                   MOV.B       @(8,R14),R0
    00001ACE 2008                   TST         R0,R0
    00001AD0 8B01                   BF          L1830
    00001AD2 A004                   BRA         L1826
    00001AD4 5EE1                   MOV.L       @(4,R14),R14
    00001AD6              L1830:                            
    00001AD6 934F                   MOV.W       L1927,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001AD8 D228                   MOV.L       L1927+4,R2 ; _symtab
    00001ADA 6E22                   MOV.L       @R2,R14
    00001ADC 3E3C                   ADD         R3,R14
    00001ADE              L1826:                            
    00001ADE 84E8                   MOV.B       @(8,R14),R0
    00001AE0 2008                   TST         R0,R0
    00001AE2 89D7                   BT          L1827
    00001AE4              L1821:                            
         print.c   519                    }
         print.c   520            }
         print.c   521            print_str(")");
    00001AE4 D426                   MOV.L       L1927+8,R4 ; L1120
    00001AE6 4F26                   LDS.L       @R15+,PR
    00001AE8 6CF6                   MOV.L       @R15+,R12
    00001AEA 6DF6                   MOV.L       @R15+,R13
    00001AEC AEE9                   BRA         _print_str
    00001AEE 6EF6                   MOV.L       @R15+,R14
         print.c   522    }
         print.c   523    
         print.c   524    void
         print.c   525    print_lisp(U *p)
    00001AF0              _print_lisp:                     ; function: print_lisp
                                                           ; frame size=4
    00001AF0 4F22                   STS.L       PR,@-R15
         print.c   526    {
         print.c   527            print1(p);
    00001AF2 B003                   BSR         _print1
    00001AF4 0009                   NOP
         print.c   528            print_str("\n");
    00001AF6 D423                   MOV.L       L1927+12,R4; L1167
    00001AF8 AEE3                   BRA         _print_str
    00001AFA 4F26                   LDS.L       @R15+,PR
         print.c   529    }
         print.c   530    
         print.c   531    void
         print.c   532    print1(U *p)
    00001AFC              _print1:                         ; function: print1
                                                           ; frame size=12
    00001AFC 2FE6                   MOV.L       R14,@-R15
    00001AFE 2FD6                   MOV.L       R13,@-R15
    00001B00 4F22                   STS.L       PR,@-R15
    00001B02 6D43                   MOV         R4,R13
         print.c   533    {
         print.c   534            switch (p->k) {
    00001B04 84D8                   MOV.B       @(8,R13),R0
    00001B06 600C                   EXTU.B      R0,R0
    00001B08 8800                   CMP/EQ      #0,R0
    00001B0A 8909                   BT          L1224
    00001B0C 8803                   CMP/EQ      #3,R0
    00001B0E 8954                   BT          L1227
    00001B10 8801                   CMP/EQ      #1,R0
    00001B12 8957                   BT          L1228
    00001B14 8802                   CMP/EQ      #2,R0
    00001B16 8955                   BT          L1229
    00001B18 8805                   CMP/EQ      #5,R0
    00001B1A 8959                   BT          L1230
    00001B1C A05D                   BRA         L1231




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B1E 0009                   NOP
    00001B20              L1224:                           ; case label 
         print.c   535            case CONS:
         print.c   536                    print_str("(");
    00001B20 D419                   MOV.L       L1927+16,R4; L1119
    00001B22 BECE                   BSR         _print_str
    00001B24 0009                   NOP
         print.c   537                    print1(car(p));
    00001B26 84D8                   MOV.B       @(8,R13),R0
    00001B28 2008                   TST         R0,R0
    00001B2A 8B01                   BF          L1833
    00001B2C A004                   BRA         L1834
    00001B2E 64D2                   MOV.L       @R13,R4
    00001B30              L1833:                            
    00001B30 9322                   MOV.W       L1927,R3   ; H'0570
    00001B32 D212                   MOV.L       L1927+4,R2 ; _symtab
    00001B34 6422                   MOV.L       @R2,R4
    00001B36 343C                   ADD         R3,R4
    00001B38              L1834:                            
    00001B38 BFE0                   BSR         _print1
    00001B3A 0009                   NOP
         print.c   538                    p = cdr(p);
    00001B3C 84D8                   MOV.B       @(8,R13),R0
    00001B3E 2008                   TST         R0,R0
    00001B40 8B01                   BF          L1835
    00001B42 A004                   BRA         L1836
    00001B44 5ED1                   MOV.L       @(4,R13),R14
    00001B46              L1835:                            
    00001B46 9317                   MOV.W       L1927,R3   ; H'0570
    00001B48 D20C                   MOV.L       L1927+4,R2 ; _symtab
    00001B4A 6E22                   MOV.L       @R2,R14
    00001B4C 3E3C                   ADD         R3,R14
    00001B4E              L1836:                            
    00001B4E DD0F                   MOV.L       L1927+20,R13; L1178
         print.c   539                    while (iscons(p)) {
    00001B50 A022                   BRA         L1837
    00001B52 0009                   NOP
    00001B54              L1838:                            
         print.c   540                            print_str(" ");
    00001B54 BEB5                   BSR         _print_str
    00001B56 64D3                   MOV         R13,R4
         print.c   541                            print1(car(p));
    00001B58 84E8                   MOV.B       @(8,R14),R0
    00001B5A 2008                   TST         R0,R0
    00001B5C 8B01                   BF          L1839
    00001B5E A004                   BRA         L1840
    00001B60 64E2                   MOV.L       @R14,R4
    00001B62              L1839:                            
    00001B62 9309                   MOV.W       L1927,R3   ; H'0570
    00001B64 D205                   MOV.L       L1927+4,R2 ; _symtab
    00001B66 6422                   MOV.L       @R2,R4
    00001B68 343C                   ADD         R3,R4
    00001B6A              L1840:                            
    00001B6A BFC7                   BSR         _print1
    00001B6C 0009                   NOP
         print.c   542                            p = cdr(p);
    00001B6E 84E8                   MOV.B       @(8,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B70 2008                   TST         R0,R0
    00001B72 8B0D                   BF          L1841
    00001B74 A010                   BRA         L1837
    00001B76 5EE1                   MOV.L       @(4,R14),R14
    00001B78              L1927:                            
    00001B78 0570                   .DATA.W     H'0570
    00001B7A 0000                   .DATA.W     0
    00001B7C <00000000>             .DATA.L     _symtab
    00001B80 <00000000>             .DATA.L     L1120
    00001B84 <00000000>             .DATA.L     L1167
    00001B88 <00000000>             .DATA.L     L1119
    00001B8C <00000000>             .DATA.L     L1178
    00001B90              L1841:                            
    00001B90 935B                   MOV.W       L1928,R3   ; H'0570
    00001B92 D22F                   MOV.L       L1928+6,R2 ; _symtab
    00001B94 6E22                   MOV.L       @R2,R14
    00001B96 3E3C                   ADD         R3,R14
    00001B98              L1837:                            
    00001B98 84E8                   MOV.B       @(8,R14),R0
    00001B9A 2008                   TST         R0,R0
    00001B9C 89DA                   BT          L1838
         print.c   543                    }
         print.c   544                    if (p != symbol(NIL)) {
    00001B9E 9354                   MOV.W       L1928,R3   ; H'0570
    00001BA0 D12B                   MOV.L       L1928+6,R1 ; _symtab
    00001BA2 6212                   MOV.L       @R1,R2
    00001BA4 323C                   ADD         R3,R2
    00001BA6 3E20                   CMP/EQ      R2,R14
    00001BA8 8904                   BT          L1843
         print.c   545                            print_str(" . ");
    00001BAA D42A                   MOV.L       L1928+10,R4; L1180
    00001BAC BE89                   BSR         _print_str
    00001BAE 0009                   NOP
         print.c   546                            print1(p);
    00001BB0 BFA4                   BSR         _print1
    00001BB2 64E3                   MOV         R14,R4
    00001BB4              L1843:                            
         print.c   547                    }
         print.c   548                    print_str(")");
    00001BB4 D428                   MOV.L       L1928+14,R4; L1120
         print.c   549                    break;
    00001BB6 A001                   BRA         L1889
    00001BB8 0009                   NOP
    00001BBA              L1227:                           ; case label 
         print.c   550            case STR:
         print.c   551                    //print_str("\"");
         print.c   552                    print_str(p->u.str);
    00001BBA 64D2                   MOV.L       @R13,R4
         print.c   553                    //print_str("\"");
         print.c   554                    break;
    00001BBC              L1889:                            
    00001BBC 4F26                   LDS.L       @R15+,PR
    00001BBE 6DF6                   MOV.L       @R15+,R13
    00001BC0 AE7F                   BRA         _print_str
    00001BC2 6EF6                   MOV.L       @R15+,R14
    00001BC4              L1228:                           ; case label 
         print.c   555            case NUM:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         print.c   556            case DOUBLE:
    00001BC4              L1229:                           ; case label 
         print.c   557                    print_number(p);
    00001BC4 4F26                   LDS.L       @R15+,PR
    00001BC6 64D3                   MOV         R13,R4
    00001BC8 D224                   MOV.L       L1928+18,R2; _print_number
    00001BCA 6DF6                   MOV.L       @R15+,R13
    00001BCC 422B                   JMP         @R2
    00001BCE 6EF6                   MOV.L       @R15+,R14
    00001BD0              L1230:                           ; case label 
         print.c   558                    break;
         print.c   559            case SYM:
         print.c   560                    print_str(get_printname(p));
    00001BD0 D223                   MOV.L       L1928+22,R2; _get_printname
    00001BD2 420B                   JSR         @R2
    00001BD4 64D3                   MOV         R13,R4
         print.c   561                    break;
    00001BD6 A001                   BRA         L1890
    00001BD8 6403                   MOV         R0,R4
    00001BDA              L1231:                           ; default label 
         print.c   562            default:
         print.c   563                    print_str("<tensor>");
    00001BDA D422                   MOV.L       L1928+26,R4; L1181
         print.c   564                    break;
    00001BDC              L1890:                            
    00001BDC 4F26                   LDS.L       @R15+,PR
    00001BDE 6DF6                   MOV.L       @R15+,R13
    00001BE0 AE6F                   BRA         _print_str
    00001BE2 6EF6                   MOV.L       @R15+,R14
         print.c   565            }
         print.c   566    }
         print.c   567    
         print.c   568    void
         print.c   569    print_multiply_sign(void)
    00001BE4              _print_multiply_sign:            ; function: print_multiply_sign
                                                           ; frame size=0
         print.c   570    {
         print.c   571            if (test_flag == 0)
    00001BE4 D220                   MOV.L       L1928+30,R2; _test_flag
    00001BE6 6322                   MOV.L       @R2,R3
    00001BE8 2338                   TST         R3,R3
    00001BEA 8B02                   BF          L1844
         print.c   572                    print_str(" ");
    00001BEC D41F                   MOV.L       L1928+34,R4; L1178
    00001BEE A001                   BRA         L1891
    00001BF0 0009                   NOP
    00001BF2              L1844:                            
         print.c   573            else
         print.c   574                    print_str("*");
    00001BF2 D41F                   MOV.L       L1928+38,R4; L1183
    00001BF4              L1891:                            
    00001BF4 AE65                   BRA         _print_str
    00001BF6 0009                   NOP
         print.c   575    }
         print.c   576    
         print.c   577    int
         print.c   578    is_denominator(U *p)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001BF8              _is_denominator:                 ; function: is_denominator
                                                           ; frame size=12
    00001BF8 2FE6                   MOV.L       R14,@-R15
    00001BFA 6E43                   MOV         R4,R14
    00001BFC 2FD6                   MOV.L       R13,@-R15
    00001BFE 4F22                   STS.L       PR,@-R15
         print.c   579    {
         print.c   580            if (car(p) == symbol(POWER) && cadr(p) != symbol(E) && isnegativeterm(caddr(p)))
    00001C00 DD13                   MOV.L       L1928+6,R13; _symtab
    00001C02 84E8                   MOV.B       @(8,R14),R0
    00001C04 2008                   TST         R0,R0
    00001C06 8B01                   BF          L1847
    00001C08 A004                   BRA         L1858
    00001C0A 63E2                   MOV.L       @R14,R3
    00001C0C              L1847:                            
    00001C0C 921D                   MOV.W       L1928,R2   ; H'0570
    00001C0E D110                   MOV.L       L1928+6,R1 ; _symtab
    00001C10 6312                   MOV.L       @R1,R3
    00001C12 332C                   ADD         R2,R3
    00001C14              L1858:                            
    00001C14 921A                   MOV.W       L1928+2,R2 ; H'03F0
    00001C16 60D2                   MOV.L       @R13,R0
    00001C18 302C                   ADD         R2,R0
    00001C1A 3300                   CMP/EQ      R0,R3
    00001C1C 8B71                   BF          L1846
    00001C1E 84E8                   MOV.B       @(8,R14),R0
    00001C20 2008                   TST         R0,R0
    00001C22 8B01                   BF          L1849
    00001C24 A003                   BRA         L1859
    00001C26 53E1                   MOV.L       @(4,R14),R3
    00001C28              L1849:                            
    00001C28 910F                   MOV.W       L1928,R1   ; H'0570
    00001C2A 63D2                   MOV.L       @R13,R3
    00001C2C 331C                   ADD         R1,R3
    00001C2E              L1859:                            
    00001C2E 8438                   MOV.B       @(8,R3),R0
    00001C30 2008                   TST         R0,R0
    00001C32 8B1F                   BF          L1848
    00001C34 84E8                   MOV.B       @(8,R14),R0
    00001C36 2008                   TST         R0,R0
    00001C38 8B01                   BF          L1850
    00001C3A A003                   BRA         L1860
    00001C3C 52E1                   MOV.L       @(4,R14),R2
    00001C3E              L1850:                            
    00001C3E 9304                   MOV.W       L1928,R3   ; H'0570
    00001C40 62D2                   MOV.L       @R13,R2
    00001C42 323C                   ADD         R3,R2
    00001C44              L1860:                            
    00001C44 6122                   MOV.L       @R2,R1
    00001C46 A018                   BRA         L1861
    00001C48 0009                   NOP
    00001C4A              L1928:                            
    00001C4A 0570                   .DATA.W     H'0570
    00001C4C 03F0                   .DATA.W     H'03F0
    00001C4E 0000                   .DATA.W     0
    00001C50 <00000000>             .DATA.L     _symtab
    00001C54 <00000000>             .DATA.L     L1180




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C58 <00000000>             .DATA.L     L1120
    00001C5C <00000000>             .DATA.L     _print_number
    00001C60 <00000000>             .DATA.L     _get_printname
    00001C64 <00000000>             .DATA.L     L1181
    00001C68 <00000000>             .DATA.L     _test_flag
    00001C6C <00000000>             .DATA.L     L1178
    00001C70 <00000000>             .DATA.L     L1183
    00001C74              L1848:                            
    00001C74 9365                   MOV.W       L1929,R3   ; H'0570
    00001C76 61D2                   MOV.L       @R13,R1
    00001C78 313C                   ADD         R3,R1
    00001C7A              L1861:                            
    00001C7A 9363                   MOV.W       L1929+2,R3 ; H'05AC
    00001C7C 62D2                   MOV.L       @R13,R2
    00001C7E 323C                   ADD         R3,R2
    00001C80 3120                   CMP/EQ      R2,R1
    00001C82 893E                   BT          L1846
    00001C84 84E8                   MOV.B       @(8,R14),R0
    00001C86 2008                   TST         R0,R0
    00001C88 8B01                   BF          L1853
    00001C8A A003                   BRA         L1862
    00001C8C 54E1                   MOV.L       @(4,R14),R4
    00001C8E              L1853:                            
    00001C8E 9258                   MOV.W       L1929,R2   ; H'0570
    00001C90 64D2                   MOV.L       @R13,R4
    00001C92 342C                   ADD         R2,R4
    00001C94              L1862:                            
    00001C94 8448                   MOV.B       @(8,R4),R0
    00001C96 2008                   TST         R0,R0
    00001C98 8B09                   BF          L1852
    00001C9A 84E8                   MOV.B       @(8,R14),R0
    00001C9C 2008                   TST         R0,R0
    00001C9E 8B01                   BF          L1854
    00001CA0 A003                   BRA         L1863
    00001CA2 54E1                   MOV.L       @(4,R14),R4
    00001CA4              L1854:                            
    00001CA4 934D                   MOV.W       L1929,R3   ; H'0570
    00001CA6 64D2                   MOV.L       @R13,R4
    00001CA8 343C                   ADD         R3,R4
    00001CAA              L1863:                            
    00001CAA A003                   BRA         L1864
    00001CAC 5441                   MOV.L       @(4,R4),R4
    00001CAE              L1852:                            
    00001CAE 9348                   MOV.W       L1929,R3   ; H'0570
    00001CB0 64D2                   MOV.L       @R13,R4
    00001CB2 343C                   ADD         R3,R4
    00001CB4              L1864:                            
    00001CB4 8448                   MOV.B       @(8,R4),R0
    00001CB6 2008                   TST         R0,R0
    00001CB8 8B19                   BF          L1851
    00001CBA 84E8                   MOV.B       @(8,R14),R0
    00001CBC 2008                   TST         R0,R0
    00001CBE 8B01                   BF          L1856
    00001CC0 A003                   BRA         L1865
    00001CC2 54E1                   MOV.L       @(4,R14),R4
    00001CC4              L1856:                            
    00001CC4 933D                   MOV.W       L1929,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001CC6 64D2                   MOV.L       @R13,R4
    00001CC8 343C                   ADD         R3,R4
    00001CCA              L1865:                            
    00001CCA 8448                   MOV.B       @(8,R4),R0
    00001CCC 2008                   TST         R0,R0
    00001CCE 8B09                   BF          L1855
    00001CD0 84E8                   MOV.B       @(8,R14),R0
    00001CD2 2008                   TST         R0,R0
    00001CD4 8B01                   BF          L1857
    00001CD6 A003                   BRA         L1866
    00001CD8 54E1                   MOV.L       @(4,R14),R4
    00001CDA              L1857:                            
    00001CDA 9332                   MOV.W       L1929,R3   ; H'0570
    00001CDC 64D2                   MOV.L       @R13,R4
    00001CDE 343C                   ADD         R3,R4
    00001CE0              L1866:                            
    00001CE0 A003                   BRA         L1867
    00001CE2 5441                   MOV.L       @(4,R4),R4
    00001CE4              L1855:                            
    00001CE4 932D                   MOV.W       L1929,R3   ; H'0570
    00001CE6 64D2                   MOV.L       @R13,R4
    00001CE8 343C                   ADD         R3,R4
    00001CEA              L1867:                            
    00001CEA A003                   BRA         L1868
    00001CEC 6442                   MOV.L       @R4,R4
    00001CEE              L1851:                            
    00001CEE 9328                   MOV.W       L1929,R3   ; H'0570
    00001CF0 64D2                   MOV.L       @R13,R4
    00001CF2 343C                   ADD         R3,R4
    00001CF4              L1868:                            
    00001CF4 D314                   MOV.L       L1929+6,R3 ; _isnegativeterm
    00001CF6 430B                   JSR         @R3
    00001CF8 0009                   NOP
    00001CFA 2008                   TST         R0,R0
    00001CFC 8901                   BT          L1846
         print.c   581                    return 1;
    00001CFE A001                   BRA         L1869
    00001D00 E001                   MOV         #1,R0
    00001D02              L1846:                            
         print.c   582            else
         print.c   583                    return 0;
    00001D02 E000                   MOV         #0,R0
         print.c   584    }
    00001D04              L1869:                            
    00001D04 4F26                   LDS.L       @R15+,PR
    00001D06 6DF6                   MOV.L       @R15+,R13
    00001D08 000B                   RTS
    00001D0A 6EF6                   MOV.L       @R15+,R14
         print.c   585    
         print.c   586    // don't consider the leading fraction
         print.c   587    
         print.c   588    // we want 2/3*a*b*c instead of 2*a*b*c/3
         print.c   589    
         print.c   590    int
         print.c   591    any_denominators(U *p)
    00001D0C              _any_denominators:               ; function: any_denominators
                                                           ; frame size=8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D0C 2FE6                   MOV.L       R14,@-R15
    00001D0E 4F22                   STS.L       PR,@-R15
         print.c   592    {
         print.c   593            U *q;
         print.c   594            p = cdr(p);
    00001D10 8448                   MOV.B       @(8,R4),R0
    00001D12 2008                   TST         R0,R0
    00001D14 8B01                   BF          L1871
    00001D16 A024                   BRA         L1873
    00001D18 5E41                   MOV.L       @(4,R4),R14
    00001D1A              L1871:                            
    00001D1A 9312                   MOV.W       L1929,R3   ; H'0570
    00001D1C D20B                   MOV.L       L1929+10,R2; _symtab
    00001D1E 6E22                   MOV.L       @R2,R14
         print.c   595    //      if (isfraction(car(p)))
         print.c   596    //              return 1;
         print.c   597            while (iscons(p)) {
    00001D20 A01F                   BRA         L1873
    00001D22 3E3C                   ADD         R3,R14
    00001D24              L1874:                            
         print.c   598                    q = car(p);
    00001D24 8B01                   BF          L1875
    00001D26 A004                   BRA         L1876
    00001D28 64E2                   MOV.L       @R14,R4
    00001D2A              L1875:                            
    00001D2A 930A                   MOV.W       L1929,R3   ; H'0570
    00001D2C D207                   MOV.L       L1929+10,R2; _symtab
    00001D2E 6422                   MOV.L       @R2,R4
    00001D30 343C                   ADD         R3,R4
    00001D32              L1876:                            
         print.c   599                    if (is_denominator(q))
    00001D32 BF61                   BSR         _is_denominator
    00001D34 0009                   NOP
    00001D36 2008                   TST         R0,R0
    00001D38 890A                   BT          L1877
         print.c   600                            return 1;
    00001D3A E001                   MOV         #1,R0
    00001D3C 4F26                   LDS.L       @R15+,PR
    00001D3E 000B                   RTS
    00001D40 6EF6                   MOV.L       @R15+,R14
    00001D42              L1929:                            
    00001D42 0570                   .DATA.W     H'0570
    00001D44 05AC                   .DATA.W     H'05AC
    00001D46 0000                   .DATA.W     0
    00001D48 <00000000>             .DATA.L     _isnegativeterm
    00001D4C <00000000>             .DATA.L     _symtab
    00001D50              L1877:                            
         print.c   601                    p = cdr(p);
    00001D50 84E8                   MOV.B       @(8,R14),R0
    00001D52 2008                   TST         R0,R0
    00001D54 8B01                   BF          L1879
    00001D56 A004                   BRA         L1873
    00001D58 5EE1                   MOV.L       @(4,R14),R14
    00001D5A              L1879:                            
    00001D5A 9309                   MOV.W       L1930,R3   ; H'0570
    00001D5C D205                   MOV.L       L1930+4,R2 ; _symtab
    00001D5E 6E22                   MOV.L       @R2,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D60 3E3C                   ADD         R3,R14
    00001D62              L1873:                            
    00001D62 84E8                   MOV.B       @(8,R14),R0
    00001D64 2008                   TST         R0,R0
    00001D66 89DD                   BT          L1874
         print.c   602            }
         print.c   603            return 0;
    00001D68 E000                   MOV         #0,R0
         print.c   604    }
    00001D6A              L1878:                            
    00001D6A 4F26                   LDS.L       @R15+,PR
    00001D6C 000B                   RTS
    00001D6E 6EF6                   MOV.L       @R15+,R14
    00001D70              L1930:                            
    00001D70 0570                   .DATA.W     H'0570
    00001D72 0000                   .DATA.W     0
    00001D74 <00000000>             .DATA.L     _symtab
D   00000000              _power_str:                      ; static: power_str
    00000000 <00000000>             .DATA.L     L1064
C   00000000              L1074:
    00000000 2D                     .SDATA      "-"
    00000001 00                     .DATA.B     H'00
    00000002 00000002               .RES.W      1
    00000004              L1076:
    00000004 202B20                 .SDATA      " + "
    00000007 00                     .DATA.B     H'00
    00000008              L1077:
    00000008 2B                     .SDATA      "+"
    00000009 00                     .DATA.B     H'00
    0000000A 00000002               .RES.W      1
    0000000C              L1078:
    0000000C 202D20                 .SDATA      " - "
    0000000F 00                     .DATA.B     H'00
    00000010              L1096:
    00000010 202F20                 .SDATA      " / "
    00000013 00                     .DATA.B     H'00
    00000014              L1097:
    00000014 2F                     .SDATA      "/"
    00000015 00                     .DATA.B     H'00
    00000016 00000002               .RES.W      1
    00000018              L1119:
    00000018 28                     .SDATA      "("
    00000019 00                     .DATA.B     H'00
    0000001A 00000002               .RES.W      1
    0000001C              L1120:
    0000001C 29                     .SDATA      ")"
    0000001D 00                     .DATA.B     H'00
    0000001E 00000002               .RES.W      1
    00000020              L1123:
    00000020 65787028               .SDATA      "exp("
    00000024 00                     .DATA.B     H'00
    00000025 00000001               .RES.B      1
    00000026 00000002               .RES.W      1
    00000028              L1125:
    00000028 31202F20               .SDATA      "1 / "
    0000002C 00                     .DATA.B     H'00
    0000002D 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000002E 00000002               .RES.W      1
    00000030              L1126:
    00000030 312F                   .SDATA      "1/"
    00000032 00                     .DATA.B     H'00
    00000033 00000001               .RES.B      1
    00000034              L1140:
    00000034 2C                     .SDATA      ","
    00000035 00                     .DATA.B     H'00
    00000036 00000002               .RES.W      1
    00000038              L1141:
    00000038 6578702831             .SDATA      "exp(1)"
             29           
    0000003E 00                     .DATA.B     H'00
    0000003F 00000001               .RES.B      1
    00000040              L1142:
    00000040 7069                   .SDATA      "pi"
    00000042 00                     .DATA.B     H'00
    00000043 00000001               .RES.B      1
    00000044              L1166:
    00000044 3D                     .SDATA      "="
    00000045 00                     .DATA.B     H'00
    00000046 00000002               .RES.W      1
    00000048              L1167:
    00000048 0A00                   .DATA.B     H'0A,H'00
    0000004A 00000002               .RES.W      1
    0000004C              L1178:
    0000004C 20                     .SDATA      " "
    0000004D 00                     .DATA.B     H'00
    0000004E 00000002               .RES.W      1
    00000050              L1180:
    00000050 202E20                 .SDATA      " . "
    00000053 00                     .DATA.B     H'00
    00000054              L1181:
    00000054 3C74656E73             .SDATA      "<tensor>"
             6F723E       
    0000005C 00                     .DATA.B     H'00
    0000005D 00000001               .RES.B      1
    0000005E 00000002               .RES.W      1
    00000060              L1183:
    00000060 2A                     .SDATA      "*"
    00000061 00                     .DATA.B     H'00
    00000062 00000002               .RES.W      1
    00000064              L1064:
    00000064 5E                     .SDATA      "^"
    00000065 00                     .DATA.B     H'00
B   00000000              _out_index:                      ; static: out_index
    00000000 00000004               .RES.L      1
    00000004              _out_length:                     ; static: out_length
    00000004 00000004               .RES.L      1
    00000008              _out_str:                        ; static: out_str
    00000008 00000004               .RES.L      1
    0000000C              __$char_count:                   ; static: char_count
    0000000C 00000004               .RES.L      1
    00000010              __$last_char:                    ; static: last_char
    00000010 00000004               .RES.L      1






SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:23  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      604



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00001D78 Byte(s)
CONSTANT SECTION (C):                               00000066 Byte(s)
DATA     SECTION (D):                               00000004 Byte(s)
BSS      SECTION (B):                               00000014 Byte(s)

 TOTAL PROGRAM SIZE: 00001DF6 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           26
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          26
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           715






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkC4B3.tmp 

