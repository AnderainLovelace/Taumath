SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:24  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\qdiv.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          qdiv.c     1    //      Divide rational numbers
          qdiv.c     2    //
          qdiv.c     3    //      Input:          tos-2           dividend
          qdiv.c     4    //
          qdiv.c     5    //                      tos-1           divisor
          qdiv.c     6    //
          qdiv.c     7    //      Output:         quotient on stack
          qdiv.c     8    
          qdiv.c     9    #include "stdafx.h"
          qdiv.c    10    #include "defs.h"
          qdiv.c    11    
          qdiv.c    12    void
          qdiv.c    13    qdiv(void)
P   00000000              _qdiv:                           ; function: qdiv
                                                           ; frame size=24
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2F86                   MOV.L       R8,@-R15
    0000000A 4F22                   STS.L       PR,@-R15
          qdiv.c    14    {
          qdiv.c    15            unsigned int *aa, *bb, *c;
          qdiv.c    16    
          qdiv.c    17            save();
    0000000C D332                   MOV.L       L1070,R3   ; _save
    0000000E 430B                   JSR         @R3
    00000010 0009                   NOP
          qdiv.c    18    
          qdiv.c    19            p2 = pop();
    00000012 DD32                   MOV.L       L1070+4,R13; _p2
    00000014 D232                   MOV.L       L1070+8,R2 ; _pop
    00000016 420B                   JSR         @R2
    00000018 0009                   NOP
          qdiv.c    20            p1 = pop();
    0000001A DE32                   MOV.L       L1070+12,R14; _p1
    0000001C D330                   MOV.L       L1070+8,R3 ; _pop
    0000001E 430B                   JSR         @R3
    00000020 2D02                   MOV.L       R0,@R13
    00000022 2E02                   MOV.L       R0,@R14
          qdiv.c    21    
          qdiv.c    22            // zero?
          qdiv.c    23    
          qdiv.c    24            if (MZERO(p2->u.q.a))
    00000024 64D2                   MOV.L       @R13,R4
    00000026 6442                   MOV.L       @R4,R4
    00000028 6043                   MOV         R4,R0
    0000002A 70FC                   ADD         #-4,R0
    0000002C 6002                   MOV.L       @R0,R0
    0000002E 8801                   CMP/EQ      #1,R0
    00000030 8B06                   BF          L1067
    00000032 6242                   MOV.L       @R4,R2
    00000034 2228                   TST         R2,R2
    00000036 8B03                   BF          L1067




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:24  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          qdiv.c    25                    stop("divide by zero");
    00000038 D42B                   MOV.L       L1070+16,R4; L1062
    0000003A D32C                   MOV.L       L1070+20,R3; _stop
    0000003C 430B                   JSR         @R3
    0000003E 0009                   NOP
    00000040              L1067:                            
    00000040 6CE2                   MOV.L       @R14,R12
    00000042 64C2                   MOV.L       @R12,R4
    00000044 6043                   MOV         R4,R0
    00000046 70FC                   ADD         #-4,R0
    00000048 6002                   MOV.L       @R0,R0
    0000004A 8801                   CMP/EQ      #1,R0
    0000004C 8B08                   BF          L1068
    0000004E 6242                   MOV.L       @R4,R2
    00000050 2228                   TST         R2,R2
    00000052 8B05                   BF          L1068
          qdiv.c    26    
          qdiv.c    27            if (MZERO(p1->u.q.a)) {
          qdiv.c    28                    push(zero);
    00000054 D326                   MOV.L       L1070+24,R3; _zero
    00000056 D227                   MOV.L       L1070+28,R2; _push
    00000058 420B                   JSR         @R2
    0000005A 6432                   MOV.L       @R3,R4
    0000005C A034                   BRA         L1064
    0000005E 0009                   NOP
    00000060              L1068:                            
          qdiv.c    29                    restore();
          qdiv.c    30                    return;
          qdiv.c    31            }
          qdiv.c    32    
          qdiv.c    33            aa = mmul(p1->u.q.a, p2->u.q.b);
    00000060 65D2                   MOV.L       @R13,R5
    00000062 5551                   MOV.L       @(4,R5),R5
    00000064 D324                   MOV.L       L1070+32,R3; _mmul
    00000066 430B                   JSR         @R3
    00000068 64C2                   MOV.L       @R12,R4
    0000006A 6C03                   MOV         R0,R12
          qdiv.c    34            bb = mmul(p1->u.q.b, p2->u.q.a);
    0000006C 65D2                   MOV.L       @R13,R5
    0000006E 6552                   MOV.L       @R5,R5
    00000070 64E2                   MOV.L       @R14,R4
    00000072 D321                   MOV.L       L1070+32,R3; _mmul
    00000074 430B                   JSR         @R3
    00000076 5441                   MOV.L       @(4,R4),R4
          qdiv.c    35    
          qdiv.c    36            c = mgcd(aa, bb);
    00000078 D220                   MOV.L       L1070+36,R2; _mgcd
    0000007A 6D03                   MOV         R0,R13
    0000007C 6503                   MOV         R0,R5
    0000007E 420B                   JSR         @R2
    00000080 64C3                   MOV         R12,R4
          qdiv.c    37    
          qdiv.c    38            MSIGN(c) = MSIGN(bb);
    00000082 6303                   MOV         R0,R3
    00000084 73F8                   ADD         #-8,R3
    00000086 62D3                   MOV         R13,R2
    00000088 72F8                   ADD         #-8,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:24  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000008A 6122                   MOV.L       @R2,R1
    0000008C 2312                   MOV.L       R1,@R3
          qdiv.c    39    
          qdiv.c    40            p1 = alloc();
    0000008E D31C                   MOV.L       L1070+40,R3; _alloc
    00000090 430B                   JSR         @R3
    00000092 6B03                   MOV         R0,R11
    00000094 2E02                   MOV.L       R0,@R14
          qdiv.c    41    
          qdiv.c    42            p1->k = NUM;
    00000096 6203                   MOV         R0,R2
    00000098 E001                   MOV         #1,R0
          qdiv.c    43    
          qdiv.c    44            p1->u.q.a = mdiv(aa, c);
    0000009A 65B3                   MOV         R11,R5
    0000009C 8028                   MOV.B       R0,@(8,R2)
    0000009E 68E2                   MOV.L       @R14,R8
    000000A0 D218                   MOV.L       L1070+44,R2; _mdiv
    000000A2 420B                   JSR         @R2
    000000A4 64C3                   MOV         R12,R4
          qdiv.c    45            p1->u.q.b = mdiv(bb, c);
    000000A6 65B3                   MOV         R11,R5
    000000A8 D216                   MOV.L       L1070+44,R2; _mdiv
    000000AA 2802                   MOV.L       R0,@R8
    000000AC 68E2                   MOV.L       @R14,R8
    000000AE 7804                   ADD         #4,R8
    000000B0 420B                   JSR         @R2
    000000B2 64D3                   MOV         R13,R4
    000000B4 2802                   MOV.L       R0,@R8
          qdiv.c    46    
          qdiv.c    47            mfree(aa);
    000000B6 D314                   MOV.L       L1070+48,R3; _mfree
    000000B8 430B                   JSR         @R3
    000000BA 64C3                   MOV         R12,R4
          qdiv.c    48            mfree(bb);
    000000BC D212                   MOV.L       L1070+48,R2; _mfree
    000000BE 420B                   JSR         @R2
    000000C0 64D3                   MOV         R13,R4
          qdiv.c    49    
          qdiv.c    50            push(p1);
    000000C2 D30C                   MOV.L       L1070+28,R3; _push
    000000C4 430B                   JSR         @R3
    000000C6 64E2                   MOV.L       @R14,R4
    000000C8              L1064:
          qdiv.c    51    
          qdiv.c    52            restore();
    000000C8 4F26                   LDS.L       @R15+,PR
    000000CA 68F6                   MOV.L       @R15+,R8
    000000CC D20F                   MOV.L       L1070+52,R2; _restore
    000000CE 6BF6                   MOV.L       @R15+,R11
    000000D0 6CF6                   MOV.L       @R15+,R12
    000000D2 6DF6                   MOV.L       @R15+,R13
    000000D4 422B                   JMP         @R2
    000000D6 6EF6                   MOV.L       @R15+,R14
    000000D8              L1070:                            
    000000D8 <00000000>             .DATA.L     _save
    000000DC <00000000>             .DATA.L     _p2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:24  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000E0 <00000000>             .DATA.L     _pop
    000000E4 <00000000>             .DATA.L     _p1
    000000E8 <00000000>             .DATA.L     L1062
    000000EC <00000000>             .DATA.L     _stop
    000000F0 <00000000>             .DATA.L     _zero
    000000F4 <00000000>             .DATA.L     _push
    000000F8 <00000000>             .DATA.L     _mmul
    000000FC <00000000>             .DATA.L     _mgcd
    00000100 <00000000>             .DATA.L     _alloc
    00000104 <00000000>             .DATA.L     _mdiv
    00000108 <00000000>             .DATA.L     _mfree
    0000010C <00000000>             .DATA.L     _restore
          qdiv.c    53    }
C   00000000              L1062:
    00000000 6469766964             .SDATA      "divide by zero"
             6520627920   
             7A65726F     
    0000000E 00                     .DATA.B     H'00











































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:24  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       53



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000110 Byte(s)
CONSTANT SECTION (C):                               0000000F Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000011F Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           13
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           1
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            19






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkC8FA.tmp 

