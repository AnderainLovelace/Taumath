SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\rationalize.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      rationaliz     1    #include "stdafx.h"
      rationaliz     2    #include "defs.h"
      rationaliz     3    #define DEBUG 0
      rationaliz     4    static void __rationalize_tensor(void);
      rationaliz     5    static void multiply_denominators(U *);
      rationaliz     6    static void multiply_denominators_term(U *);
      rationaliz     7    static void multiply_denominators_factor(U *);
      rationaliz     8    static void __lcm(void);
      rationaliz     9    
      rationaliz    10    void
      rationaliz    11    eval_rationalize(void)
P   00000000              _eval_rationalize:               ; function: eval_rationalize
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
      rationaliz    12    {
      rationaliz    13            push(cadr(p1));
    00000004 DE34                   MOV.L       L1172+2,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1098
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1100
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1098:                            
    00000014 935F                   MOV.W       L1172,R3   ; H'0570
    00000016 D231                   MOV.L       L1172+6,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1100:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1097
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1099
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1101
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1099:                            
    00000030 9351                   MOV.W       L1172,R3   ; H'0570
    00000032 D22A                   MOV.L       L1172+6,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1101:                            
    00000038 A004                   BRA         L1102
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1097:                            
    0000003C 934B                   MOV.W       L1172,R3   ; H'0570
    0000003E D227                   MOV.L       L1172+6,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000044              L1102:                            
    00000044 D326                   MOV.L       L1172+10,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
      rationaliz    14            eval();
    0000004A D226                   MOV.L       L1172+14,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
      rationaliz    15            rationalize();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
      rationaliz    16    }
      rationaliz    17    
      rationaliz    18    void
      rationaliz    19    rationalize(void)
    00000054              _rationalize:                    ; function: rationalize
                                                           ; frame size=8
    00000054 4F22                   STS.L       PR,@-R15
    00000056 7FFC                   ADD         #-4,R15
      rationaliz    20    {
      rationaliz    21            int x = expanding;
    00000058 D223                   MOV.L       L1172+18,R2; _expanding
    0000005A 6322                   MOV.L       @R2,R3
      rationaliz    22            save();
    0000005C D123                   MOV.L       L1172+22,R1; _save
    0000005E 410B                   JSR         @R1
    00000060 2F32                   MOV.L       R3,@R15
      rationaliz    23            yyrationalize();
    00000062 B00A                   BSR         _yyrationalize
    00000064 0009                   NOP
      rationaliz    24            restore();
    00000066 D122                   MOV.L       L1172+26,R1; _restore
    00000068 410B                   JSR         @R1
    0000006A 0009                   NOP
      rationaliz    25            expanding = x;
    0000006C 63F2                   MOV.L       @R15,R3
    0000006E D11E                   MOV.L       L1172+18,R1; _expanding
    00000070 2132                   MOV.L       R3,@R1
      rationaliz    26    }
    00000072 7F04                   ADD         #4,R15
    00000074 4F26                   LDS.L       @R15+,PR
    00000076 000B                   RTS
    00000078 0009                   NOP
      rationaliz    27    
      rationaliz    28    void
      rationaliz    29    yyrationalize(void)
    0000007A              _yyrationalize:                  ; function: yyrationalize
                                                           ; frame size=24
    0000007A 2FE6                   MOV.L       R14,@-R15
    0000007C 2FD6                   MOV.L       R13,@-R15
    0000007E 2FC6                   MOV.L       R12,@-R15
    00000080 2FB6                   MOV.L       R11,@-R15
    00000082 2FA6                   MOV.L       R10,@-R15
    00000084 4F22                   STS.L       PR,@-R15
      rationaliz    30    {
      rationaliz    31            p1 = pop();
    00000086 DC14                   MOV.L       L1172+2,R12; _p1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000088 D31A                   MOV.L       L1172+30,R3; _pop
    0000008A 430B                   JSR         @R3
    0000008C 0009                   NOP
    0000008E 2C02                   MOV.L       R0,@R12
      rationaliz    32    
      rationaliz    33            if (istensor(p1)) {
    00000090 8408                   MOV.B       @(8,R0),R0
    00000092 600C                   EXTU.B      R0,R0
    00000094 8804                   CMP/EQ      #4,R0
    00000096 8B06                   BF          L1103
      rationaliz    34                    __rationalize_tensor();
    00000098 4F26                   LDS.L       @R15+,PR
    0000009A 6AF6                   MOV.L       @R15+,R10
    0000009C 6BF6                   MOV.L       @R15+,R11
    0000009E 6CF6                   MOV.L       @R15+,R12
    000000A0 6DF6                   MOV.L       @R15+,R13
    000000A2 A1A1                   BRA         __$__rationalize_tensor
    000000A4 6EF6                   MOV.L       @R15+,R14
    000000A6              L1103:                            
      rationaliz    35                    return;
      rationaliz    36            }
      rationaliz    37    
      rationaliz    38            expanding = 0;
    000000A6 E300                   MOV         #0,R3
    000000A8 D20F                   MOV.L       L1172+18,R2; _expanding
    000000AA 2232                   MOV.L       R3,@R2
      rationaliz    39    
      rationaliz    40            if (car(p1) != symbol(ADD)) {
    000000AC DD0C                   MOV.L       L1172+10,R13; _push
    000000AE 61C2                   MOV.L       @R12,R1
    000000B0 8418                   MOV.B       @(8,R1),R0
    000000B2 2008                   TST         R0,R0
    000000B4 8B02                   BF          L1106
    000000B6 61C2                   MOV.L       @R12,R1
    000000B8 A004                   BRA         L1107
    000000BA 6312                   MOV.L       @R1,R3
    000000BC              L1106:                            
    000000BC 910B                   MOV.W       L1172,R1   ; H'0570
    000000BE D007                   MOV.L       L1172+6,R0 ; _symtab
    000000C0 6302                   MOV.L       @R0,R3
    000000C2 331C                   ADD         R1,R3
    000000C4              L1107:                            
    000000C4 D105                   MOV.L       L1172+6,R1 ; _symtab
    000000C6 6212                   MOV.L       @R1,R2
    000000C8 720C                   ADD         #12,R2
    000000CA 3320                   CMP/EQ      R2,R3
    000000CC 8914                   BT          L1105
      rationaliz    41                    push(p1);
    000000CE 4D0B                   JSR         @R13
    000000D0 64C2                   MOV.L       @R12,R4
      rationaliz    42                    return;
    000000D2 A05E                   BRA         L1104
    000000D4 0009                   NOP
    000000D6              L1172:                            
    000000D6 0570                   .DATA.W     H'0570
    000000D8 <00000000>             .DATA.L     _p1
    000000DC <00000000>             .DATA.L     _symtab




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000E0 <00000000>             .DATA.L     _push
    000000E4 <00000000>             .DATA.L     _eval
    000000E8 <00000000>             .DATA.L     _expanding
    000000EC <00000000>             .DATA.L     _save
    000000F0 <00000000>             .DATA.L     _restore
    000000F4 <00000000>             .DATA.L     _pop
    000000F8              L1105:                            
      rationaliz    43            }
      rationaliz    44    
      rationaliz    45    #if DEBUG
      rationaliz    46            printf("rationalize: this is the input expr:\n");
      rationaliz    47            printline(p1);
      rationaliz    48    #endif
      rationaliz    49    
      rationaliz    50            // get common denominator
      rationaliz    51    
      rationaliz    52            push(one);
    000000F8 D237                   MOV.L       L1173+2,R2 ; _one
    000000FA 4D0B                   JSR         @R13
    000000FC 6422                   MOV.L       @R2,R4
      rationaliz    53            multiply_denominators(p1);
    000000FE B04F                   BSR         __$multiply_denominators
    00000100 64C2                   MOV.L       @R12,R4
      rationaliz    54            p2 = pop();
    00000102 DB36                   MOV.L       L1173+6,R11; _p2
    00000104 D236                   MOV.L       L1173+10,R2; _pop
    00000106 420B                   JSR         @R2
    00000108 0009                   NOP
    0000010A 2B02                   MOV.L       R0,@R11
      rationaliz    55    
      rationaliz    56    #if DEBUG
      rationaliz    57            printf("rationalize: this is the common denominator:\n");
      rationaliz    58            printline(p2);
      rationaliz    59    #endif
      rationaliz    60    
      rationaliz    61            // multiply each term by common denominator
      rationaliz    62    
      rationaliz    63            push(zero);
    0000010C D335                   MOV.L       L1173+14,R3; _zero
    0000010E 4D0B                   JSR         @R13
    00000110 6432                   MOV.L       @R3,R4
      rationaliz    64            p3 = cdr(p1);
    00000112 DE35                   MOV.L       L1173+18,R14; _p3
    00000114 63C2                   MOV.L       @R12,R3
    00000116 8438                   MOV.B       @(8,R3),R0
    00000118 2008                   TST         R0,R0
    0000011A 8B02                   BF          L1108
    0000011C 62C2                   MOV.L       @R12,R2
    0000011E A004                   BRA         L1109
    00000120 5221                   MOV.L       @(4,R2),R2
    00000122              L1108:                            
    00000122 9358                   MOV.W       L1173,R3   ; H'0570
    00000124 D131                   MOV.L       L1173+22,R1; _symtab
    00000126 6212                   MOV.L       @R1,R2
    00000128 323C                   ADD         R3,R2
    0000012A              L1109:                            
    0000012A DA31                   MOV.L       L1173+26,R10; _add




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000012C DC31                   MOV.L       L1173+30,R12; _multiply
      rationaliz    65            while (iscons(p3)) {
    0000012E A01F                   BRA         L1110
    00000130 2E22                   MOV.L       R2,@R14
    00000132              L1111:                            
      rationaliz    66                    push(p2);
    00000132 4D0B                   JSR         @R13
    00000134 64B2                   MOV.L       @R11,R4
      rationaliz    67                    push(car(p3));
    00000136 64E2                   MOV.L       @R14,R4
    00000138 8448                   MOV.B       @(8,R4),R0
    0000013A 2008                   TST         R0,R0
    0000013C 8B02                   BF          L1112
    0000013E 64E2                   MOV.L       @R14,R4
    00000140 A004                   BRA         L1113
    00000142 6442                   MOV.L       @R4,R4
    00000144              L1112:                            
    00000144 9347                   MOV.W       L1173,R3   ; H'0570
    00000146 D229                   MOV.L       L1173+22,R2; _symtab
    00000148 6422                   MOV.L       @R2,R4
    0000014A 343C                   ADD         R3,R4
    0000014C              L1113:                            
    0000014C 4D0B                   JSR         @R13
    0000014E 0009                   NOP
      rationaliz    68                    multiply();
    00000150 4C0B                   JSR         @R12
    00000152 0009                   NOP
      rationaliz    69                    add();
    00000154 4A0B                   JSR         @R10
    00000156 0009                   NOP
      rationaliz    70                    p3 = cdr(p3);
    00000158 62E2                   MOV.L       @R14,R2
    0000015A 8428                   MOV.B       @(8,R2),R0
    0000015C 2008                   TST         R0,R0
    0000015E 8B02                   BF          L1114
    00000160 62E2                   MOV.L       @R14,R2
    00000162 A004                   BRA         L1115
    00000164 5321                   MOV.L       @(4,R2),R3
    00000166              L1114:                            
    00000166 9236                   MOV.W       L1173,R2   ; H'0570
    00000168 D120                   MOV.L       L1173+22,R1; _symtab
    0000016A 6312                   MOV.L       @R1,R3
    0000016C 332C                   ADD         R2,R3
    0000016E              L1115:                            
    0000016E 2E32                   MOV.L       R3,@R14
    00000170              L1110:                            
    00000170 62E2                   MOV.L       @R14,R2
    00000172 8428                   MOV.B       @(8,R2),R0
    00000174 2008                   TST         R0,R0
    00000176 89DC                   BT          L1111
      rationaliz    71            }
      rationaliz    72    
      rationaliz    73    #if DEBUG
      rationaliz    74            printf("rationalize: original expr times common denominator:\n");
      rationaliz    75            printline(stack[tos - 1]);
      rationaliz    76    #endif
      rationaliz    77    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      rationaliz    78            // collect common factors
      rationaliz    79    
      rationaliz    80            Condense();
    00000178 D21F                   MOV.L       L1173+34,R2; _Condense
    0000017A 420B                   JSR         @R2
    0000017C 0009                   NOP
      rationaliz    81    
      rationaliz    82    #if DEBUG
      rationaliz    83            printf("rationalize: after factoring:\n");
      rationaliz    84            printline(stack[tos - 1]);
      rationaliz    85    #endif
      rationaliz    86    
      rationaliz    87            // divide by common denominator
      rationaliz    88    
      rationaliz    89            push(p2);
    0000017E 4D0B                   JSR         @R13
    00000180 64B2                   MOV.L       @R11,R4
      rationaliz    90            divide();
    00000182 4F26                   LDS.L       @R15+,PR
    00000184 D31D                   MOV.L       L1173+38,R3; _divide
    00000186 6AF6                   MOV.L       @R15+,R10
    00000188 6BF6                   MOV.L       @R15+,R11
    0000018A 6CF6                   MOV.L       @R15+,R12
    0000018C 6DF6                   MOV.L       @R15+,R13
    0000018E 432B                   JMP         @R3
    00000190 6EF6                   MOV.L       @R15+,R14
    00000192              L1104:                            
      rationaliz    91    
      rationaliz    92    #if DEBUG
      rationaliz    93            printf("rationalize: after dividing by common denom. (and we're done):\n");
      rationaliz    94            printline(stack[tos - 1]);
      rationaliz    95    #endif
      rationaliz    96    }
    00000192 4F26                   LDS.L       @R15+,PR
    00000194 6AF6                   MOV.L       @R15+,R10
    00000196 6BF6                   MOV.L       @R15+,R11
    00000198 6CF6                   MOV.L       @R15+,R12
    0000019A 6DF6                   MOV.L       @R15+,R13
    0000019C 000B                   RTS
    0000019E 6EF6                   MOV.L       @R15+,R14
      rationaliz    97    
      rationaliz    98    static void
      rationaliz    99    multiply_denominators(U *p)
    000001A0              __$multiply_denominators:        ; function: multiply_denominators
                                                           ; frame size=8
    000001A0 2FE6                   MOV.L       R14,@-R15
    000001A2 4F22                   STS.L       PR,@-R15
    000001A4 D511                   MOV.L       L1173+22,R5; _symtab
    000001A6 8448                   MOV.B       @(8,R4),R0
    000001A8 2008                   TST         R0,R0
    000001AA 8F02                   BF/S        L1117
    000001AC 6652                   MOV.L       @R5,R6
    000001AE A003                   BRA         L1118
    000001B0 6342                   MOV.L       @R4,R3
    000001B2              L1117:                            
    000001B2 9210                   MOV.W       L1173,R2   ; H'0570
    000001B4 6352                   MOV.L       @R5,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001B6 332C                   ADD         R2,R3
    000001B8              L1118:                            
    000001B8 6063                   MOV         R6,R0
    000001BA 700C                   ADD         #12,R0
    000001BC 3300                   CMP/EQ      R0,R3
    000001BE 8B33                   BF          L1116
      rationaliz   100    {
      rationaliz   101            if (car(p) == symbol(ADD)) {
      rationaliz   102                    p = cdr(p);
    000001C0 8448                   MOV.B       @(8,R4),R0
    000001C2 2008                   TST         R0,R0
    000001C4 8B01                   BF          L1119
    000001C6 A02A                   BRA         L1121
    000001C8 5E41                   MOV.L       @(4,R4),R14
    000001CA              L1119:                            
    000001CA 9E04                   MOV.W       L1173,R14  ; H'0570
      rationaliz   103                    while (iscons(p)) {
    000001CC A027                   BRA         L1121
    000001CE 3E6C                   ADD         R6,R14
    000001D0              L1122:                            
      rationaliz   104                            multiply_denominators_term(car(p));
    000001D0 8B16                   BF          L1123
    000001D2 A019                   BRA         L1124
    000001D4 64E2                   MOV.L       @R14,R4
    000001D6              L1173:                            
    000001D6 0570                   .DATA.W     H'0570
    000001D8 <00000000>             .DATA.L     _one
    000001DC <00000000>             .DATA.L     _p2
    000001E0 <00000000>             .DATA.L     _pop
    000001E4 <00000000>             .DATA.L     _zero
    000001E8 <00000000>             .DATA.L     _p3
    000001EC <00000000>             .DATA.L     _symtab
    000001F0 <00000000>             .DATA.L     _add
    000001F4 <00000000>             .DATA.L     _multiply
    000001F8 <00000000>             .DATA.L     _Condense
    000001FC <00000000>             .DATA.L     _divide
    00000200              L1123:                            
    00000200 9357                   MOV.W       L1174,R3   ; H'0570
    00000202 D22D                   MOV.L       L1174+6,R2 ; _symtab
    00000204 6422                   MOV.L       @R2,R4
    00000206 343C                   ADD         R3,R4
    00000208              L1124:                            
    00000208 B014                   BSR         __$multiply_denominators_term
    0000020A 0009                   NOP
      rationaliz   105                            p = cdr(p);
    0000020C 84E8                   MOV.B       @(8,R14),R0
    0000020E 2008                   TST         R0,R0
    00000210 8B01                   BF          L1125
    00000212 A004                   BRA         L1121
    00000214 5EE1                   MOV.L       @(4,R14),R14
    00000216              L1125:                            
    00000216 934C                   MOV.W       L1174,R3   ; H'0570
    00000218 D227                   MOV.L       L1174+6,R2 ; _symtab
    0000021A 6E22                   MOV.L       @R2,R14
    0000021C 3E3C                   ADD         R3,R14
    0000021E              L1121:                            
    0000021E 84E8                   MOV.B       @(8,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000220 2008                   TST         R0,R0
    00000222 89D5                   BT          L1122
    00000224 A003                   BRA         L1127
    00000226 0009                   NOP
    00000228              L1116:                            
      rationaliz   106                    }
      rationaliz   107            } else
      rationaliz   108                    multiply_denominators_term(p);
    00000228 4F26                   LDS.L       @R15+,PR
    0000022A A003                   BRA         __$multiply_denominators_term
    0000022C 6EF6                   MOV.L       @R15+,R14
    0000022E              L1127:                            
      rationaliz   109    }
    0000022E 4F26                   LDS.L       @R15+,PR
    00000230 000B                   RTS
    00000232 6EF6                   MOV.L       @R15+,R14
      rationaliz   110    
      rationaliz   111    static void
      rationaliz   112    multiply_denominators_term(U *p)
    00000234              __$multiply_denominators_term:   ; function: multiply_denominators_term
                                                           ; frame size=8
    00000234 2FE6                   MOV.L       R14,@-R15
    00000236 4F22                   STS.L       PR,@-R15
    00000238 D51F                   MOV.L       L1174+6,R5 ; _symtab
    0000023A 8448                   MOV.B       @(8,R4),R0
    0000023C 2008                   TST         R0,R0
    0000023E 8F02                   BF/S        L1129
    00000240 6652                   MOV.L       @R5,R6
    00000242 A003                   BRA         L1130
    00000244 6342                   MOV.L       @R4,R3
    00000246              L1129:                            
    00000246 9234                   MOV.W       L1174,R2   ; H'0570
    00000248 6352                   MOV.L       @R5,R3
    0000024A 332C                   ADD         R2,R3
    0000024C              L1130:                            
    0000024C 9032                   MOV.W       L1174+2,R0 ; H'0384
    0000024E 306C                   ADD         R6,R0
    00000250 3300                   CMP/EQ      R0,R3
    00000252 8B1E                   BF          L1128
      rationaliz   113    {
      rationaliz   114            if (car(p) == symbol(MULTIPLY)) {
      rationaliz   115                    p = cdr(p);
    00000254 8448                   MOV.B       @(8,R4),R0
    00000256 2008                   TST         R0,R0
    00000258 8B01                   BF          L1131
    0000025A A015                   BRA         L1133
    0000025C 5E41                   MOV.L       @(4,R4),R14
    0000025E              L1131:                            
    0000025E 9E28                   MOV.W       L1174,R14  ; H'0570
      rationaliz   116                    while (iscons(p)) {
    00000260 A012                   BRA         L1133
    00000262 3E6C                   ADD         R6,R14
    00000264              L1134:                            
      rationaliz   117                            multiply_denominators_factor(car(p));
    00000264 8B01                   BF          L1135
    00000266 A004                   BRA         L1136
    00000268 64E2                   MOV.L       @R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000026A              L1135:                            
    0000026A 9322                   MOV.W       L1174,R3   ; H'0570
    0000026C D212                   MOV.L       L1174+6,R2 ; _symtab
    0000026E 6422                   MOV.L       @R2,R4
    00000270 343C                   ADD         R3,R4
    00000272              L1136:                            
    00000272 B014                   BSR         __$multiply_denominators_factor
    00000274 0009                   NOP
      rationaliz   118                            p = cdr(p);
    00000276 84E8                   MOV.B       @(8,R14),R0
    00000278 2008                   TST         R0,R0
    0000027A 8B01                   BF          L1137
    0000027C A004                   BRA         L1133
    0000027E 5EE1                   MOV.L       @(4,R14),R14
    00000280              L1137:                            
    00000280 9317                   MOV.W       L1174,R3   ; H'0570
    00000282 D20D                   MOV.L       L1174+6,R2 ; _symtab
    00000284 6E22                   MOV.L       @R2,R14
    00000286 3E3C                   ADD         R3,R14
    00000288              L1133:                            
    00000288 84E8                   MOV.B       @(8,R14),R0
    0000028A 2008                   TST         R0,R0
    0000028C 89EA                   BT          L1134
    0000028E A003                   BRA         L1139
    00000290 0009                   NOP
    00000292              L1128:                            
      rationaliz   119                    }
      rationaliz   120            } else
      rationaliz   121                    multiply_denominators_factor(p);
    00000292 4F26                   LDS.L       @R15+,PR
    00000294 A003                   BRA         __$multiply_denominators_factor
    00000296 6EF6                   MOV.L       @R15+,R14
    00000298              L1139:                            
      rationaliz   122    }
    00000298 4F26                   LDS.L       @R15+,PR
    0000029A 000B                   RTS
    0000029C 6EF6                   MOV.L       @R15+,R14
      rationaliz   123    
      rationaliz   124    static void
      rationaliz   125    multiply_denominators_factor(U *p)
    0000029E              __$multiply_denominators_factor: ; function: multiply_denominators_factor
                                                           ; frame size=12
    0000029E 2FE6                   MOV.L       R14,@-R15
    000002A0 2FD6                   MOV.L       R13,@-R15
    000002A2 6E43                   MOV         R4,R14
    000002A4 4F22                   STS.L       PR,@-R15
      rationaliz   126    {
      rationaliz   127            if (car(p) != symbol(POWER))
    000002A6 DD04                   MOV.L       L1174+6,R13; _symtab
    000002A8 84E8                   MOV.B       @(8,R14),R0
    000002AA 2008                   TST         R0,R0
    000002AC 8B06                   BF          L1141
    000002AE A009                   BRA         L1142
    000002B0 63E2                   MOV.L       @R14,R3
    000002B2              L1174:                            
    000002B2 0570                   .DATA.W     H'0570
    000002B4 0384                   .DATA.W     H'0384




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002B6 0000                   .DATA.W     0
    000002B8 <00000000>             .DATA.L     _symtab
    000002BC              L1141:                            
    000002BC 9256                   MOV.W       L1175,R2   ; H'0570
    000002BE D12C                   MOV.L       L1175+4,R1 ; _symtab
    000002C0 6312                   MOV.L       @R1,R3
    000002C2 332C                   ADD         R2,R3
    000002C4              L1142:                            
    000002C4 9253                   MOV.W       L1175+2,R2 ; H'03F0
    000002C6 60D2                   MOV.L       @R13,R0
    000002C8 302C                   ADD         R2,R0
    000002CA 3300                   CMP/EQ      R0,R3
    000002CC 8901                   BT          L1176
    000002CE A087                   BRA         L1143
    000002D0 0009                   NOP
    000002D2              L1176:                            
      rationaliz   128                    return;
      rationaliz   129    
      rationaliz   130            push(p);
    000002D2 D228                   MOV.L       L1175+8,R2 ; _push
    000002D4 420B                   JSR         @R2
    000002D6 64E3                   MOV         R14,R4
      rationaliz   131    
      rationaliz   132            p = caddr(p);
    000002D8 84E8                   MOV.B       @(8,R14),R0
    000002DA 2008                   TST         R0,R0
    000002DC 8B01                   BF          L1146
    000002DE A004                   BRA         L1151
    000002E0 52E1                   MOV.L       @(4,R14),R2
    000002E2              L1146:                            
    000002E2 9343                   MOV.W       L1175,R3   ; H'0570
    000002E4 D122                   MOV.L       L1175+4,R1 ; _symtab
    000002E6 6212                   MOV.L       @R1,R2
    000002E8 323C                   ADD         R3,R2
    000002EA              L1151:                            
    000002EA 8428                   MOV.B       @(8,R2),R0
    000002EC 2008                   TST         R0,R0
    000002EE 8B0A                   BF          L1145
    000002F0 84E8                   MOV.B       @(8,R14),R0
    000002F2 2008                   TST         R0,R0
    000002F4 8B01                   BF          L1147
    000002F6 A004                   BRA         L1152
    000002F8 52E1                   MOV.L       @(4,R14),R2
    000002FA              L1147:                            
    000002FA 9337                   MOV.W       L1175,R3   ; H'0570
    000002FC D11C                   MOV.L       L1175+4,R1 ; _symtab
    000002FE 6212                   MOV.L       @R1,R2
    00000300 323C                   ADD         R3,R2
    00000302              L1152:                            
    00000302 A004                   BRA         L1153
    00000304 5321                   MOV.L       @(4,R2),R3
    00000306              L1145:                            
    00000306 9231                   MOV.W       L1175,R2   ; H'0570
    00000308 D119                   MOV.L       L1175+4,R1 ; _symtab
    0000030A 6312                   MOV.L       @R1,R3
    0000030C 332C                   ADD         R2,R3
    0000030E              L1153:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000030E 8438                   MOV.B       @(8,R3),R0
    00000310 2008                   TST         R0,R0
    00000312 8B1D                   BF          L1144
    00000314 84E8                   MOV.B       @(8,R14),R0
    00000316 2008                   TST         R0,R0
    00000318 8B01                   BF          L1149
    0000031A A004                   BRA         L1154
    0000031C 53E1                   MOV.L       @(4,R14),R3
    0000031E              L1149:                            
    0000031E 9225                   MOV.W       L1175,R2   ; H'0570
    00000320 D113                   MOV.L       L1175+4,R1 ; _symtab
    00000322 6312                   MOV.L       @R1,R3
    00000324 332C                   ADD         R2,R3
    00000326              L1154:                            
    00000326 8438                   MOV.B       @(8,R3),R0
    00000328 2008                   TST         R0,R0
    0000032A 8B0A                   BF          L1148
    0000032C 84E8                   MOV.B       @(8,R14),R0
    0000032E 2008                   TST         R0,R0
    00000330 8B01                   BF          L1150
    00000332 A004                   BRA         L1155
    00000334 52E1                   MOV.L       @(4,R14),R2
    00000336              L1150:                            
    00000336 9319                   MOV.W       L1175,R3   ; H'0570
    00000338 D10D                   MOV.L       L1175+4,R1 ; _symtab
    0000033A 6212                   MOV.L       @R1,R2
    0000033C 323C                   ADD         R3,R2
    0000033E              L1155:                            
    0000033E A004                   BRA         L1156
    00000340 5221                   MOV.L       @(4,R2),R2
    00000342              L1148:                            
    00000342 9313                   MOV.W       L1175,R3   ; H'0570
    00000344 D10A                   MOV.L       L1175+4,R1 ; _symtab
    00000346 6212                   MOV.L       @R1,R2
    00000348 323C                   ADD         R3,R2
    0000034A              L1156:                            
    0000034A 6E22                   MOV.L       @R2,R14
    0000034C A004                   BRA         L1157
    0000034E 0009                   NOP
    00000350              L1144:                            
    00000350 930C                   MOV.W       L1175,R3   ; H'0570
    00000352 D107                   MOV.L       L1175+4,R1 ; _symtab
    00000354 6E12                   MOV.L       @R1,R14
    00000356 3E3C                   ADD         R3,R14
    00000358              L1157:                            
      rationaliz   133    
      rationaliz   134            // like x^(-2) ?
      rationaliz   135    
      rationaliz   136            if (isnegativenumber(p)) {
    00000358 D307                   MOV.L       L1175+12,R3; _isnegativenumber
    0000035A 430B                   JSR         @R3
    0000035C 64E3                   MOV         R14,R4
    0000035E 2008                   TST         R0,R0
    00000360 8B32                   BF          L1088
      rationaliz   137                    inverse();
      rationaliz   138                    __lcm();
      rationaliz   139                    return;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      rationaliz   140            }
      rationaliz   141    
      rationaliz   142            // like x^(-a) ?
      rationaliz   143    
      rationaliz   144            if (car(p) == symbol(MULTIPLY) && isnegativenumber(cadr(p))) {
    00000362 84E8                   MOV.B       @(8,R14),R0
    00000364 2008                   TST         R0,R0
    00000366 8B09                   BF          L1160
    00000368 A00C                   BRA         L1164
    0000036A 62E2                   MOV.L       @R14,R2
    0000036C              L1175:                            
    0000036C 0570                   .DATA.W     H'0570
    0000036E 03F0                   .DATA.W     H'03F0
    00000370 <00000000>             .DATA.L     _symtab
    00000374 <00000000>             .DATA.L     _push
    00000378 <00000000>             .DATA.L     _isnegativenumber
    0000037C              L1160:                            
    0000037C 9372                   MOV.W       L1177,R3   ; H'0570
    0000037E D13A                   MOV.L       L1177+4,R1 ; _symtab
    00000380 6212                   MOV.L       @R1,R2
    00000382 323C                   ADD         R3,R2
    00000384              L1164:                            
    00000384 936F                   MOV.W       L1177+2,R3 ; H'0384
    00000386 60D2                   MOV.L       @R13,R0
    00000388 303C                   ADD         R3,R0
    0000038A 3200                   CMP/EQ      R0,R2
    0000038C 8B23                   BF          L1159
    0000038E 84E8                   MOV.B       @(8,R14),R0
    00000390 2008                   TST         R0,R0
    00000392 8B01                   BF          L1162
    00000394 A003                   BRA         L1165
    00000396 54E1                   MOV.L       @(4,R14),R4
    00000398              L1162:                            
    00000398 9264                   MOV.W       L1177,R2   ; H'0570
    0000039A 64D2                   MOV.L       @R13,R4
    0000039C 342C                   ADD         R2,R4
    0000039E              L1165:                            
    0000039E 8448                   MOV.B       @(8,R4),R0
    000003A0 2008                   TST         R0,R0
    000003A2 8B09                   BF          L1161
    000003A4 84E8                   MOV.B       @(8,R14),R0
    000003A6 2008                   TST         R0,R0
    000003A8 8B01                   BF          L1163
    000003AA A003                   BRA         L1166
    000003AC 54E1                   MOV.L       @(4,R14),R4
    000003AE              L1163:                            
    000003AE 9359                   MOV.W       L1177,R3   ; H'0570
    000003B0 64D2                   MOV.L       @R13,R4
    000003B2 343C                   ADD         R3,R4
    000003B4              L1166:                            
    000003B4 A003                   BRA         L1167
    000003B6 6442                   MOV.L       @R4,R4
    000003B8              L1161:                            
    000003B8 9354                   MOV.W       L1177,R3   ; H'0570
    000003BA 64D2                   MOV.L       @R13,R4
    000003BC 343C                   ADD         R3,R4
    000003BE              L1167:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003BE D32B                   MOV.L       L1177+8,R3 ; _isnegativenumber
    000003C0 430B                   JSR         @R3
    000003C2 0009                   NOP
    000003C4 2008                   TST         R0,R0
    000003C6 8906                   BT          L1159
    000003C8              L1088:
      rationaliz   145                    inverse();
    000003C8 D329                   MOV.L       L1177+12,R3; _inverse
    000003CA 430B                   JSR         @R3
    000003CC 0009                   NOP
      rationaliz   146                    __lcm();
    000003CE 4F26                   LDS.L       @R15+,PR
    000003D0 6DF6                   MOV.L       @R15+,R13
    000003D2 A057                   BRA         __$__lcm
    000003D4 6EF6                   MOV.L       @R15+,R14
    000003D6              L1159:                            
      rationaliz   147                    return;
      rationaliz   148            }
      rationaliz   149    
      rationaliz   150            // no match
      rationaliz   151    
      rationaliz   152            pop();
    000003D6 4F26                   LDS.L       @R15+,PR
    000003D8 D326                   MOV.L       L1177+16,R3; _pop
    000003DA 6DF6                   MOV.L       @R15+,R13
    000003DC 432B                   JMP         @R3
    000003DE 6EF6                   MOV.L       @R15+,R14
    000003E0              L1143:                            
      rationaliz   153    }
    000003E0 4F26                   LDS.L       @R15+,PR
    000003E2 6DF6                   MOV.L       @R15+,R13
    000003E4 000B                   RTS
    000003E6 6EF6                   MOV.L       @R15+,R14
      rationaliz   154    
      rationaliz   155    static void
      rationaliz   156    __rationalize_tensor(void)
    000003E8              __$__rationalize_tensor:         ; function: __rationalize_tensor
                                                           ; frame size=32
    000003E8 2FE6                   MOV.L       R14,@-R15
    000003EA 2FD6                   MOV.L       R13,@-R15
    000003EC 2FC6                   MOV.L       R12,@-R15
    000003EE 2FB6                   MOV.L       R11,@-R15
    000003F0 2FA6                   MOV.L       R10,@-R15
    000003F2 2F96                   MOV.L       R9,@-R15
    000003F4 2F86                   MOV.L       R8,@-R15
    000003F6 4F22                   STS.L       PR,@-R15
      rationaliz   157    {
      rationaliz   158            int i, n;
      rationaliz   159    
      rationaliz   160            push(p1);
    000003F8 DC1F                   MOV.L       L1177+20,R12; _push
    000003FA DE20                   MOV.L       L1177+24,R14; _p1
    000003FC 4C0B                   JSR         @R12
    000003FE 64E2                   MOV.L       @R14,R4
      rationaliz   161    
      rationaliz   162            eval(); // makes a copy
    00000400 D31F                   MOV.L       L1177+28,R3; _eval




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000402 430B                   JSR         @R3
    00000404 0009                   NOP
      rationaliz   163    
      rationaliz   164            p1 = pop();
    00000406 D91B                   MOV.L       L1177+16,R9; _pop
    00000408 490B                   JSR         @R9
    0000040A 0009                   NOP
    0000040C 2E02                   MOV.L       R0,@R14
      rationaliz   165    
      rationaliz   166            if (!istensor(p1)) { // might be zero
    0000040E 8408                   MOV.B       @(8,R0),R0
    00000410 600C                   EXTU.B      R0,R0
    00000412 8804                   CMP/EQ      #4,R0
    00000414 8B1B                   BF          L1089
      rationaliz   167                    push(p1);
      rationaliz   168                    return;
      rationaliz   169            }
      rationaliz   170    
      rationaliz   171            n = p1->u.tensor->nelem;
    00000416 E064                   MOV         #100,R0
    00000418 6AE2                   MOV.L       @R14,R10
      rationaliz   172    
      rationaliz   173            for (i = 0; i < n; i++) {
    0000041A E400                   MOV         #0,R4
    0000041C 6AA2                   MOV.L       @R10,R10
    0000041E 6B43                   MOV         R4,R11
    00000420 0AAE                   MOV.L       @(R0,R10),R10
    00000422 4A15                   CMP/PL      R10
    00000424 8F13                   BF/S        L1089
    00000426 6D43                   MOV         R4,R13
    00000428              L1171:                            
      rationaliz   174                    push(p1->u.tensor->elem[i]);
    00000428 60E2                   MOV.L       @R14,R0
    0000042A 6402                   MOV.L       @R0,R4
    0000042C 7468                   ADD         #104,R4
    0000042E 34DC                   ADD         R13,R4
    00000430 4C0B                   JSR         @R12
    00000432 6442                   MOV.L       @R4,R4
      rationaliz   175                    rationalize();
    00000434 BE0E                   BSR         _rationalize
    00000436 0009                   NOP
      rationaliz   176                    p1->u.tensor->elem[i] = pop();
    00000438 62E2                   MOV.L       @R14,R2
    0000043A 6122                   MOV.L       @R2,R1
    0000043C 7168                   ADD         #104,R1
    0000043E 31DC                   ADD         R13,R1
    00000440 490B                   JSR         @R9
    00000442 6813                   MOV         R1,R8
    00000444 2802                   MOV.L       R0,@R8
    00000446 7B01                   ADD         #1,R11
    00000448 3BA3                   CMP/GE      R10,R11
    0000044A 8FED                   BF/S        L1171
    0000044C 7D04                   ADD         #4,R13
    0000044E              L1089:
      rationaliz   177            }
      rationaliz   178    
      rationaliz   179            push(p1);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000044E 4C0B                   JSR         @R12
    00000450 64E2                   MOV.L       @R14,R4
      rationaliz   180    }
    00000452 4F26                   LDS.L       @R15+,PR
    00000454 68F6                   MOV.L       @R15+,R8
    00000456 69F6                   MOV.L       @R15+,R9
    00000458 6AF6                   MOV.L       @R15+,R10
    0000045A 6BF6                   MOV.L       @R15+,R11
    0000045C 6CF6                   MOV.L       @R15+,R12
    0000045E 6DF6                   MOV.L       @R15+,R13
    00000460 000B                   RTS
    00000462 6EF6                   MOV.L       @R15+,R14
    00000464              L1177:                            
    00000464 0570                   .DATA.W     H'0570
    00000466 0384                   .DATA.W     H'0384
    00000468 <00000000>             .DATA.L     _symtab
    0000046C <00000000>             .DATA.L     _isnegativenumber
    00000470 <00000000>             .DATA.L     _inverse
    00000474 <00000000>             .DATA.L     _pop
    00000478 <00000000>             .DATA.L     _push
    0000047C <00000000>             .DATA.L     _p1
    00000480 <00000000>             .DATA.L     _eval
      rationaliz   181    
      rationaliz   182    
      rationaliz   183    static void
      rationaliz   184    __lcm(void)
    00000484              __$__lcm:                        ; function: __lcm
                                                           ; frame size=16
    00000484 2FE6                   MOV.L       R14,@-R15
    00000486 2FD6                   MOV.L       R13,@-R15
    00000488 2FC6                   MOV.L       R12,@-R15
    0000048A 4F22                   STS.L       PR,@-R15
      rationaliz   185    {
      rationaliz   186            save();
    0000048C D311                   MOV.L       L1178,R3   ; _save
    0000048E 430B                   JSR         @R3
    00000490 0009                   NOP
      rationaliz   187    
      rationaliz   188            p1 = pop();
    00000492 DD11                   MOV.L       L1178+4,R13; _p1
    00000494 D211                   MOV.L       L1178+8,R2 ; _pop
    00000496 420B                   JSR         @R2
    00000498 0009                   NOP
      rationaliz   189            p2 = pop();
    0000049A DC11                   MOV.L       L1178+12,R12; _p2
    0000049C D30F                   MOV.L       L1178+8,R3 ; _pop
    0000049E 430B                   JSR         @R3
    000004A0 2D02                   MOV.L       R0,@R13
    000004A2 2C02                   MOV.L       R0,@R12
      rationaliz   190    
      rationaliz   191            push(p1);
    000004A4 DE0F                   MOV.L       L1178+16,R14; _push
    000004A6 4E0B                   JSR         @R14
    000004A8 64D2                   MOV.L       @R13,R4
      rationaliz   192            push(p2);
    000004AA 4E0B                   JSR         @R14
    000004AC 64C2                   MOV.L       @R12,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      rationaliz   193            multiply();
    000004AE D20E                   MOV.L       L1178+20,R2; _multiply
    000004B0 420B                   JSR         @R2
    000004B2 0009                   NOP
      rationaliz   194            push(p1);
    000004B4 4E0B                   JSR         @R14
    000004B6 64D2                   MOV.L       @R13,R4
      rationaliz   195            push(p2);
    000004B8 4E0B                   JSR         @R14
    000004BA 64C2                   MOV.L       @R12,R4
      rationaliz   196            gcd();
    000004BC D30B                   MOV.L       L1178+24,R3; _gcd
    000004BE 430B                   JSR         @R3
    000004C0 0009                   NOP
      rationaliz   197            divide();
    000004C2 D20B                   MOV.L       L1178+28,R2; _divide
    000004C4 420B                   JSR         @R2
    000004C6 0009                   NOP
      rationaliz   198    
      rationaliz   199            restore();
    000004C8 4F26                   LDS.L       @R15+,PR
    000004CA 6CF6                   MOV.L       @R15+,R12
    000004CC D309                   MOV.L       L1178+32,R3; _restore
    000004CE 6DF6                   MOV.L       @R15+,R13
    000004D0 432B                   JMP         @R3
    000004D2 6EF6                   MOV.L       @R15+,R14
    000004D4              L1178:                            
    000004D4 <00000000>             .DATA.L     _save
    000004D8 <00000000>             .DATA.L     _p1
    000004DC <00000000>             .DATA.L     _pop
    000004E0 <00000000>             .DATA.L     _p2
    000004E4 <00000000>             .DATA.L     _push
    000004E8 <00000000>             .DATA.L     _multiply
    000004EC <00000000>             .DATA.L     _gcd
    000004F0 <00000000>             .DATA.L     _divide
    000004F4 <00000000>             .DATA.L     _restore
      rationaliz   200    }
























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:26  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      200



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000004F8 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000004F8 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           19
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            97






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkD0FC.tmp 

