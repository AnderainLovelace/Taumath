SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:27  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\rect.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          rect.c     1    /* Convert complex z to rectangular form
          rect.c     2    
          rect.c     3            Input:          push    z
          rect.c     4    
          rect.c     5            Output:         Result on stack
          rect.c     6    */
          rect.c     7    
          rect.c     8    #include "stdafx.h"
          rect.c     9    #include "defs.h"
          rect.c    10    
          rect.c    11    void
          rect.c    12    eval_rect(void)
P   00000000              _eval_rect:                      ; function: eval_rect
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
          rect.c    13    {
          rect.c    14            push(cadr(p1));
    00000004 DE37                   MOV.L       L1081+4,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1064
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1066
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1064:                            
    00000014 9364                   MOV.W       L1081,R3   ; H'0570
    00000016 D234                   MOV.L       L1081+8,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1066:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1063
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1065
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1067
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1065:                            
    00000030 9356                   MOV.W       L1081,R3   ; H'0570
    00000032 D22D                   MOV.L       L1081+8,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1067:                            
    00000038 A004                   BRA         L1068
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1063:                            
    0000003C 9350                   MOV.W       L1081,R3   ; H'0570
    0000003E D22A                   MOV.L       L1081+8,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:27  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000042 343C                   ADD         R3,R4
    00000044              L1068:                            
    00000044 D329                   MOV.L       L1081+12,R3; _push
    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
          rect.c    15            eval();
    0000004A D229                   MOV.L       L1081+16,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
          rect.c    16            rect();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
          rect.c    17    }
          rect.c    18    
          rect.c    19    void
          rect.c    20    rect(void)
    00000054              _rect:                           ; function: rect
                                                           ; frame size=16
    00000054 2FE6                   MOV.L       R14,@-R15
    00000056 2FD6                   MOV.L       R13,@-R15
    00000058 2FC6                   MOV.L       R12,@-R15
    0000005A 4F22                   STS.L       PR,@-R15
          rect.c    21    {
          rect.c    22            save();
    0000005C D325                   MOV.L       L1081+20,R3; _save
    0000005E 430B                   JSR         @R3
    00000060 0009                   NOP
          rect.c    23            p1 = pop();
    00000062 DE20                   MOV.L       L1081+4,R14; _p1
    00000064 D224                   MOV.L       L1081+24,R2; _pop
    00000066 420B                   JSR         @R2
    00000068 0009                   NOP
    0000006A 6403                   MOV         R0,R4
    0000006C 2E02                   MOV.L       R0,@R14
    0000006E DC23                   MOV.L       L1081+28,R12; _add
    00000070 DD1E                   MOV.L       L1081+12,R13; _push
    00000072 8448                   MOV.B       @(8,R4),R0
    00000074 2008                   TST         R0,R0
    00000076 8B02                   BF          L1070
    00000078 62E2                   MOV.L       @R14,R2
    0000007A A004                   BRA         L1071
    0000007C 6322                   MOV.L       @R2,R3
    0000007E              L1070:                            
    0000007E 922F                   MOV.W       L1081,R2   ; H'0570
    00000080 D119                   MOV.L       L1081+8,R1 ; _symtab
    00000082 6312                   MOV.L       @R1,R3
    00000084 332C                   ADD         R2,R3
    00000086              L1071:                            
    00000086 D018                   MOV.L       L1081+8,R0 ; _symtab
    00000088 6202                   MOV.L       @R0,R2
    0000008A 720C                   ADD         #12,R2
    0000008C 3320                   CMP/EQ      R2,R3
    0000008E 8B44                   BF          L1069
          rect.c    24            if (car(p1) == symbol(ADD)) {
          rect.c    25                    push_integer(0);
    00000090 D21B                   MOV.L       L1081+32,R2; _push_integer
    00000092 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:27  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000094 E400                   MOV         #0,R4
          rect.c    26                    p1 = cdr(p1);
    00000096 62E2                   MOV.L       @R14,R2
    00000098 8428                   MOV.B       @(8,R2),R0
    0000009A 2008                   TST         R0,R0
    0000009C 8B02                   BF          L1072
    0000009E 62E2                   MOV.L       @R14,R2
    000000A0 A004                   BRA         L1073
    000000A2 5321                   MOV.L       @(4,R2),R3
    000000A4              L1072:                            
    000000A4 921C                   MOV.W       L1081,R2   ; H'0570
    000000A6 D110                   MOV.L       L1081+8,R1 ; _symtab
    000000A8 6312                   MOV.L       @R1,R3
    000000AA 332C                   ADD         R2,R3
    000000AC              L1073:                            
          rect.c    27                    while (iscons(p1)) {
    000000AC A02F                   BRA         L1074
    000000AE 2E32                   MOV.L       R3,@R14
    000000B0              L1075:                            
          rect.c    28                            push(car(p1));
    000000B0 64E2                   MOV.L       @R14,R4
    000000B2 8448                   MOV.B       @(8,R4),R0
    000000B4 2008                   TST         R0,R0
    000000B6 8B02                   BF          L1076
    000000B8 64E2                   MOV.L       @R14,R4
    000000BA A004                   BRA         L1077
    000000BC 6442                   MOV.L       @R4,R4
    000000BE              L1076:                            
    000000BE 930F                   MOV.W       L1081,R3   ; H'0570
    000000C0 D209                   MOV.L       L1081+8,R2 ; _symtab
    000000C2 6422                   MOV.L       @R2,R4
    000000C4 343C                   ADD         R3,R4
    000000C6              L1077:                            
    000000C6 4D0B                   JSR         @R13
    000000C8 0009                   NOP
          rect.c    29                            rect();
    000000CA BFC3                   BSR         _rect
    000000CC 0009                   NOP
          rect.c    30                            add();
    000000CE 4C0B                   JSR         @R12
    000000D0 0009                   NOP
          rect.c    31                            p1 = cdr(p1);
    000000D2 63E2                   MOV.L       @R14,R3
    000000D4 8438                   MOV.B       @(8,R3),R0
    000000D6 2008                   TST         R0,R0
    000000D8 8B14                   BF          L1078
    000000DA 62E2                   MOV.L       @R14,R2
    000000DC A016                   BRA         L1079
    000000DE 5221                   MOV.L       @(4,R2),R2
    000000E0              L1081:                            
    000000E0 0570                   .DATA.W     H'0570
    000000E2 0000                   .DATA.W     0
    000000E4 <00000000>             .DATA.L     _p1
    000000E8 <00000000>             .DATA.L     _symtab
    000000EC <00000000>             .DATA.L     _push
    000000F0 <00000000>             .DATA.L     _eval
    000000F4 <00000000>             .DATA.L     _save




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:27  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000F8 <00000000>             .DATA.L     _pop
    000000FC <00000000>             .DATA.L     _add
    00000100 <00000000>             .DATA.L     _push_integer
    00000104              L1078:                            
    00000104 9332                   MOV.W       L1082,R3   ; H'0570
    00000106 D11A                   MOV.L       L1082+4,R1 ; _symtab
    00000108 6212                   MOV.L       @R1,R2
    0000010A 323C                   ADD         R3,R2
    0000010C              L1079:                            
    0000010C 2E22                   MOV.L       R2,@R14
    0000010E              L1074:                            
    0000010E 63E2                   MOV.L       @R14,R3
    00000110 8438                   MOV.B       @(8,R3),R0
    00000112 2008                   TST         R0,R0
    00000114 89CC                   BT          L1075
    00000116 A023                   BRA         L1080
    00000118 0009                   NOP
    0000011A              L1069:                            
          rect.c    32                    }
          rect.c    33            } else {
          rect.c    34                    push(p1);       // mag(z) * (cos(arg(z)) + i sin(arg(z)))
    0000011A 4D0B                   JSR         @R13
    0000011C 0009                   NOP
          rect.c    35                    mag();
    0000011E D315                   MOV.L       L1082+8,R3 ; _mag
    00000120 430B                   JSR         @R3
    00000122 0009                   NOP
          rect.c    36                    push(p1);
    00000124 4D0B                   JSR         @R13
    00000126 64E2                   MOV.L       @R14,R4
          rect.c    37                    arg();
    00000128 D213                   MOV.L       L1082+12,R2; _arg
    0000012A 420B                   JSR         @R2
    0000012C 0009                   NOP
          rect.c    38                    p1 = pop();
    0000012E D313                   MOV.L       L1082+16,R3; _pop
    00000130 430B                   JSR         @R3
    00000132 0009                   NOP
    00000134 2E02                   MOV.L       R0,@R14
          rect.c    39                    push(p1);
    00000136 4D0B                   JSR         @R13
    00000138 6403                   MOV         R0,R4
          rect.c    40                    cosine();
    0000013A D211                   MOV.L       L1082+20,R2; _cosine
    0000013C 420B                   JSR         @R2
    0000013E 0009                   NOP
          rect.c    41                    push(imaginaryunit);
    00000140 D310                   MOV.L       L1082+24,R3; _imaginaryunit
    00000142 4D0B                   JSR         @R13
    00000144 6432                   MOV.L       @R3,R4
          rect.c    42                    push(p1);
    00000146 4D0B                   JSR         @R13
    00000148 64E2                   MOV.L       @R14,R4
          rect.c    43                    sine();
    0000014A D20F                   MOV.L       L1082+28,R2; _sine
    0000014C 420B                   JSR         @R2
    0000014E 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:27  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          rect.c    44                    multiply();
    00000150 D30E                   MOV.L       L1082+32,R3; _multiply
    00000152 430B                   JSR         @R3
    00000154 0009                   NOP
          rect.c    45                    add();
    00000156 4C0B                   JSR         @R12
    00000158 0009                   NOP
          rect.c    46                    multiply();
    0000015A D20C                   MOV.L       L1082+32,R2; _multiply
    0000015C 420B                   JSR         @R2
    0000015E 0009                   NOP
    00000160              L1080:                            
          rect.c    47            }
          rect.c    48            restore();
    00000160 4F26                   LDS.L       @R15+,PR
    00000162 6CF6                   MOV.L       @R15+,R12
    00000164 D30A                   MOV.L       L1082+36,R3; _restore
    00000166 6DF6                   MOV.L       @R15+,R13
    00000168 432B                   JMP         @R3
    0000016A 6EF6                   MOV.L       @R15+,R14
    0000016C              L1082:                            
    0000016C 0570                   .DATA.W     H'0570
    0000016E 0000                   .DATA.W     0
    00000170 <00000000>             .DATA.L     _symtab
    00000174 <00000000>             .DATA.L     _mag
    00000178 <00000000>             .DATA.L     _arg
    0000017C <00000000>             .DATA.L     _pop
    00000180 <00000000>             .DATA.L     _cosine
    00000184 <00000000>             .DATA.L     _imaginaryunit
    00000188 <00000000>             .DATA.L     _sine
    0000018C <00000000>             .DATA.L     _multiply
    00000190 <00000000>             .DATA.L     _restore
          rect.c    49    }




























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:27  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       49



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000194 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000194 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           15
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            37






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkD39C.tmp 

