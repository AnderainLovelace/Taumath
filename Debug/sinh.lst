SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:30  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\sinh.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          sinh.c     1    //                exp(x) - exp(-x)
          sinh.c     2    //      sinh(x) = ----------------
          sinh.c     3    //                       2
          sinh.c     4    
          sinh.c     5    #include "stdafx.h"
          sinh.c     6    #include "defs.h"
          sinh.c     7    
          sinh.c     8    void
          sinh.c     9    eval_sinh(void)
P   00000000              _eval_sinh:                      ; function: eval_sinh
                                                           ; frame size=8
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
          sinh.c    10    {
          sinh.c    11            push(cadr(p1));
    00000004 DE36                   MOV.L       L1085+4,R14; _p1
    00000006 64E2                   MOV.L       @R14,R4
    00000008 8448                   MOV.B       @(8,R4),R0
    0000000A 2008                   TST         R0,R0
    0000000C 8B02                   BF          L1066
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 A004                   BRA         L1068
    00000012 5441                   MOV.L       @(4,R4),R4
    00000014              L1066:                            
    00000014 9362                   MOV.W       L1085,R3   ; H'0570
    00000016 D233                   MOV.L       L1085+8,R2 ; _symtab
    00000018 6422                   MOV.L       @R2,R4
    0000001A 343C                   ADD         R3,R4
    0000001C              L1068:                            
    0000001C 8448                   MOV.B       @(8,R4),R0
    0000001E 2008                   TST         R0,R0
    00000020 8B0C                   BF          L1065
    00000022 64E2                   MOV.L       @R14,R4
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B02                   BF          L1067
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C A004                   BRA         L1069
    0000002E 5441                   MOV.L       @(4,R4),R4
    00000030              L1067:                            
    00000030 9354                   MOV.W       L1085,R3   ; H'0570
    00000032 D22C                   MOV.L       L1085+8,R2 ; _symtab
    00000034 6422                   MOV.L       @R2,R4
    00000036 343C                   ADD         R3,R4
    00000038              L1069:                            
    00000038 A004                   BRA         L1070
    0000003A 6442                   MOV.L       @R4,R4
    0000003C              L1065:                            
    0000003C 934E                   MOV.W       L1085,R3   ; H'0570
    0000003E D229                   MOV.L       L1085+8,R2 ; _symtab
    00000040 6422                   MOV.L       @R2,R4
    00000042 343C                   ADD         R3,R4
    00000044              L1070:                            
    00000044 D328                   MOV.L       L1085+12,R3; _push




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:30  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000046 430B                   JSR         @R3
    00000048 0009                   NOP
          sinh.c    12            eval();
    0000004A D228                   MOV.L       L1085+16,R2; _eval
    0000004C 420B                   JSR         @R2
    0000004E 0009                   NOP
          sinh.c    13            ysinh();
    00000050 4F26                   LDS.L       @R15+,PR
    00000052 6EF6                   MOV.L       @R15+,R14
          sinh.c    14    }
          sinh.c    15    
          sinh.c    16    void
          sinh.c    17    ysinh(void)
    00000054              _ysinh:                          ; function: ysinh
                                                           ; frame size=4
    00000054 4F22                   STS.L       PR,@-R15
          sinh.c    18    {
          sinh.c    19            save();
    00000056 D326                   MOV.L       L1085+20,R3; _save
    00000058 430B                   JSR         @R3
    0000005A 0009                   NOP
          sinh.c    20            yysinh();
    0000005C B003                   BSR         _yysinh
    0000005E 0009                   NOP
          sinh.c    21            restore();
    00000060 D324                   MOV.L       L1085+24,R3; _restore
    00000062 432B                   JMP         @R3
    00000064 4F26                   LDS.L       @R15+,PR
          sinh.c    22    }
          sinh.c    23    
          sinh.c    24    void
          sinh.c    25    yysinh(void)
    00000066              _yysinh:                         ; function: yysinh
                                                           ; frame size=44
                                                           ; used runtime library name:
                                                           ; __ltd
    00000066 2FE6                   MOV.L       R14,@-R15
    00000068 2FD6                   MOV.L       R13,@-R15
    0000006A 2FC6                   MOV.L       R12,@-R15
    0000006C 4F22                   STS.L       PR,@-R15
    0000006E 7FF8                   ADD         #-8,R15
          sinh.c    26    {
          sinh.c    27            double d;
          sinh.c    28            p1 = pop();
    00000070 DE1B                   MOV.L       L1085+4,R14; _p1
    00000072 D321                   MOV.L       L1085+28,R3; _pop
    00000074 430B                   JSR         @R3
    00000076 0009                   NOP
    00000078 2E02                   MOV.L       R0,@R14
    0000007A 6D03                   MOV         R0,R13
    0000007C DC1A                   MOV.L       L1085+12,R12; _push
    0000007E 84D8                   MOV.B       @(8,R13),R0
    00000080 2008                   TST         R0,R0
    00000082 8B02                   BF          L1072
    00000084 62E2                   MOV.L       @R14,R2
    00000086 A004                   BRA         L1073
    00000088 6222                   MOV.L       @R2,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:30  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000008A              L1072:                            
    0000008A 9327                   MOV.W       L1085,R3   ; H'0570
    0000008C D115                   MOV.L       L1085+8,R1 ; _symtab
    0000008E 6212                   MOV.L       @R1,R2
    00000090 323C                   ADD         R3,R2
    00000092              L1073:                            
    00000092 D014                   MOV.L       L1085+8,R0 ; _symtab
    00000094 6302                   MOV.L       @R0,R3
    00000096 7354                   ADD         #84,R3
    00000098 3230                   CMP/EQ      R3,R2
    0000009A 8B2F                   BF          L1071
          sinh.c    29            if (car(p1) == symbol(ARCSINH)) {
          sinh.c    30                    push(cadr(p1));
    0000009C 64E2                   MOV.L       @R14,R4
    0000009E 8448                   MOV.B       @(8,R4),R0
    000000A0 2008                   TST         R0,R0
    000000A2 8B02                   BF          L1075
    000000A4 64E2                   MOV.L       @R14,R4
    000000A6 A004                   BRA         L1077
    000000A8 5441                   MOV.L       @(4,R4),R4
    000000AA              L1075:                            
    000000AA 9317                   MOV.W       L1085,R3   ; H'0570
    000000AC D20D                   MOV.L       L1085+8,R2 ; _symtab
    000000AE 6422                   MOV.L       @R2,R4
    000000B0 343C                   ADD         R3,R4
    000000B2              L1077:                            
    000000B2 8448                   MOV.B       @(8,R4),R0
    000000B4 2008                   TST         R0,R0
    000000B6 8B0C                   BF          L1074
    000000B8 64E2                   MOV.L       @R14,R4
    000000BA 8448                   MOV.B       @(8,R4),R0
    000000BC 2008                   TST         R0,R0
    000000BE 8B02                   BF          L1076
    000000C0 64E2                   MOV.L       @R14,R4
    000000C2 A004                   BRA         L1078
    000000C4 5441                   MOV.L       @(4,R4),R4
    000000C6              L1076:                            
    000000C6 9309                   MOV.W       L1085,R3   ; H'0570
    000000C8 D206                   MOV.L       L1085+8,R2 ; _symtab
    000000CA 6422                   MOV.L       @R2,R4
    000000CC 343C                   ADD         R3,R4
    000000CE              L1078:                            
    000000CE A048                   BRA         L1084
    000000D0 6442                   MOV.L       @R4,R4
    000000D2              L1074:                            
    000000D2 9303                   MOV.W       L1085,R3   ; H'0570
    000000D4 D203                   MOV.L       L1085+8,R2 ; _symtab
    000000D6 6422                   MOV.L       @R2,R4
          sinh.c    31                    return;
    000000D8 A043                   BRA         L1084
    000000DA 343C                   ADD         R3,R4
    000000DC              L1085:                            
    000000DC 0570                   .DATA.W     H'0570
    000000DE 0000                   .DATA.W     0
    000000E0 <00000000>             .DATA.L     _p1
    000000E4 <00000000>             .DATA.L     _symtab
    000000E8 <00000000>             .DATA.L     _push




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:30  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000EC <00000000>             .DATA.L     _eval
    000000F0 <00000000>             .DATA.L     _save
    000000F4 <00000000>             .DATA.L     _restore
    000000F8 <00000000>             .DATA.L     _pop
    000000FC              L1071:                            
          sinh.c    32            }
          sinh.c    33            if (isdouble(p1)) {
    000000FC 84D8                   MOV.B       @(8,R13),R0
    000000FE 600C                   EXTU.B      R0,R0
    00000100 8802                   CMP/EQ      #2,R0
    00000102 8B27                   BF          L1081
          sinh.c    34                    d = sinh(p1->u.d);
    00000104 52D1                   MOV.L       @(4,R13),R2
    00000106 2F26                   MOV.L       R2,@-R15
    00000108 62D2                   MOV.L       @R13,R2
    0000010A 2F26                   MOV.L       R2,@-R15
    0000010C D120                   MOV.L       L1086,R1   ; _sinh
    0000010E 63F3                   MOV         R15,R3
    00000110 7308                   ADD         #8,R3
    00000112 410B                   JSR         @R1
    00000114 2F36                   MOV.L       R3,@-R15
          sinh.c    35                    if (fabs(d) < 1e-10)
    00000116 7F04                   ADD         #4,R15
    00000118 D11E                   MOV.L       L1086+4,R1 ; _fabs
    0000011A E208                   MOV         #8,R2
    0000011C 53F3                   MOV.L       @(12,R15),R3
    0000011E 2F36                   MOV.L       R3,@-R15
    00000120 53F3                   MOV.L       @(12,R15),R3
    00000122 2F36                   MOV.L       R3,@-R15
    00000124 32FC                   ADD         R15,R2
    00000126 410B                   JSR         @R1
    00000128 2F26                   MOV.L       R2,@-R15
    0000012A 7F0C                   ADD         #12,R15
    0000012C D21A                   MOV.L       L1086+8,R2 ; H'D9D7BDBB
    0000012E 2F26                   MOV.L       R2,@-R15
    00000130 D21A                   MOV.L       L1086+12,R2; H'3DDB7CDF
    00000132 D31B                   MOV.L       L1086+16,R3; __ltd
    00000134 430B                   JSR         @R3
    00000136 2F26                   MOV.L       R2,@-R15
    00000138 8800                   CMP/EQ      #0,R0
    0000013A 8903                   BT          L1082
          sinh.c    36                            d = 0.0;
    0000013C 62F3                   MOV         R15,R2
    0000013E E100                   MOV         #0,R1
    00000140 2212                   MOV.L       R1,@R2
    00000142 1211                   MOV.L       R1,@(4,R2)
    00000144              L1082:                            
          sinh.c    37                    push_double(d);
    00000144 53F1                   MOV.L       @(4,R15),R3
    00000146 2F36                   MOV.L       R3,@-R15
    00000148 53F1                   MOV.L       @(4,R15),R3
    0000014A D216                   MOV.L       L1086+20,R2; _push_double
    0000014C 420B                   JSR         @R2
    0000014E 2F36                   MOV.L       R3,@-R15
          sinh.c    38                    return;
    00000150 A018                   BRA         L1080
    00000152 7F08                   ADD         #8,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:30  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000154              L1081:                            
          sinh.c    39            }
          sinh.c    40            if (iszero(p1)) {
    00000154 D314                   MOV.L       L1086+24,R3; _iszero
    00000156 430B                   JSR         @R3
    00000158 64D3                   MOV         R13,R4
    0000015A 2008                   TST         R0,R0
    0000015C 8905                   BT          L1083
          sinh.c    41                    push(zero);
    0000015E D313                   MOV.L       L1086+28,R3; _zero
    00000160 6432                   MOV.L       @R3,R4
          sinh.c    42                    return;
    00000162              L1084:                            
    00000162 4C0B                   JSR         @R12
    00000164 0009                   NOP
    00000166 A00D                   BRA         L1080
    00000168 0009                   NOP
    0000016A              L1083:                            
          sinh.c    43            }
          sinh.c    44            push_symbol(SINH);
    0000016A D211                   MOV.L       L1086+32,R2; _push_symbol
    0000016C 420B                   JSR         @R2
    0000016E E463                   MOV         #99,R4
          sinh.c    45            push(p1);
    00000170 4C0B                   JSR         @R12
    00000172 64E2                   MOV.L       @R14,R4
          sinh.c    46            list(2);
    00000174 D30F                   MOV.L       L1086+36,R3; _list
    00000176 E402                   MOV         #2,R4
    00000178 7F08                   ADD         #8,R15
    0000017A 4F26                   LDS.L       @R15+,PR
    0000017C 6CF6                   MOV.L       @R15+,R12
    0000017E 6DF6                   MOV.L       @R15+,R13
    00000180 432B                   JMP         @R3
    00000182 6EF6                   MOV.L       @R15+,R14
    00000184              L1080:                            
          sinh.c    47    }
    00000184 7F08                   ADD         #8,R15
    00000186 4F26                   LDS.L       @R15+,PR
    00000188 6CF6                   MOV.L       @R15+,R12
    0000018A 6DF6                   MOV.L       @R15+,R13
    0000018C 000B                   RTS
    0000018E 6EF6                   MOV.L       @R15+,R14
    00000190              L1086:                            
    00000190 <00000000>             .DATA.L     _sinh
    00000194 <00000000>             .DATA.L     _fabs
    00000198 D9D7BDBB               .DATA.L     H'D9D7BDBB
    0000019C 3DDB7CDF               .DATA.L     H'3DDB7CDF
    000001A0 <00000000>             .DATA.L     __ltd
    000001A4 <00000000>             .DATA.L     _push_double
    000001A8 <00000000>             .DATA.L     _iszero
    000001AC <00000000>             .DATA.L     _zero
    000001B0 <00000000>             .DATA.L     _push_symbol
    000001B4 <00000000>             .DATA.L     _list







SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:30  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       47



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000001B8 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000001B8 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           15
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           3
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            39






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkDEAD.tmp 

