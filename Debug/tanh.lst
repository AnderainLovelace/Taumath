SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:32  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\tanh.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          tanh.c     1    //                 exp(2 x) - 1
          tanh.c     2    //      tanh(x) = --------------
          tanh.c     3    //                 exp(2 x) + 1
          tanh.c     4    
          tanh.c     5    #include "stdafx.h"
          tanh.c     6    #include "defs.h"
          tanh.c     7    
          tanh.c     8    void
          tanh.c     9    eval_tanh(void)
P   00000000              _eval_tanh:                      ; function: eval_tanh
                                                           ; frame size=44
                                                           ; used runtime library name:
                                                           ; __ltd
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 4F22                   STS.L       PR,@-R15
          tanh.c    10    {
          tanh.c    11            double d;
          tanh.c    12            push(cadr(p1));
    00000008 DC2D                   MOV.L       L1083+2,R12; _push
    0000000A 7FF8                   ADD         #-8,R15
    0000000C DE2D                   MOV.L       L1083+6,R14; _p1
    0000000E 64E2                   MOV.L       @R14,R4
    00000010 8448                   MOV.B       @(8,R4),R0
    00000012 2008                   TST         R0,R0
    00000014 8B02                   BF          L1064
    00000016 64E2                   MOV.L       @R14,R4
    00000018 A004                   BRA         L1066
    0000001A 5441                   MOV.L       @(4,R4),R4
    0000001C              L1064:                            
    0000001C 934F                   MOV.W       L1083,R3   ; H'0570
    0000001E D22A                   MOV.L       L1083+10,R2; _symtab
    00000020 6422                   MOV.L       @R2,R4
    00000022 343C                   ADD         R3,R4
    00000024              L1066:                            
    00000024 8448                   MOV.B       @(8,R4),R0
    00000026 2008                   TST         R0,R0
    00000028 8B0C                   BF          L1063
    0000002A 64E2                   MOV.L       @R14,R4
    0000002C 8448                   MOV.B       @(8,R4),R0
    0000002E 2008                   TST         R0,R0
    00000030 8B02                   BF          L1065
    00000032 64E2                   MOV.L       @R14,R4
    00000034 A004                   BRA         L1067
    00000036 5441                   MOV.L       @(4,R4),R4
    00000038              L1065:                            
    00000038 9341                   MOV.W       L1083,R3   ; H'0570
    0000003A D223                   MOV.L       L1083+10,R2; _symtab
    0000003C 6422                   MOV.L       @R2,R4
    0000003E 343C                   ADD         R3,R4
    00000040              L1067:                            
    00000040 A004                   BRA         L1068
    00000042 6442                   MOV.L       @R4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:32  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000044              L1063:                            
    00000044 933B                   MOV.W       L1083,R3   ; H'0570
    00000046 D220                   MOV.L       L1083+10,R2; _symtab
    00000048 6422                   MOV.L       @R2,R4
    0000004A 343C                   ADD         R3,R4
    0000004C              L1068:                            
    0000004C 4C0B                   JSR         @R12
    0000004E 0009                   NOP
          tanh.c    13            eval();
    00000050 D31E                   MOV.L       L1083+14,R3; _eval
    00000052 430B                   JSR         @R3
    00000054 0009                   NOP
          tanh.c    14            p1 = pop();
    00000056 D21E                   MOV.L       L1083+18,R2; _pop
    00000058 420B                   JSR         @R2
    0000005A 0009                   NOP
    0000005C 2E02                   MOV.L       R0,@R14
          tanh.c    15            if (car(p1) == symbol(ARCTANH)) {
    0000005E 6203                   MOV         R0,R2
    00000060 8428                   MOV.B       @(8,R2),R0
    00000062 2008                   TST         R0,R0
    00000064 8B02                   BF          L1070
    00000066 62E2                   MOV.L       @R14,R2
    00000068 A004                   BRA         L1071
    0000006A 6322                   MOV.L       @R2,R3
    0000006C              L1070:                            
    0000006C 9227                   MOV.W       L1083,R2   ; H'0570
    0000006E D116                   MOV.L       L1083+10,R1; _symtab
    00000070 6312                   MOV.L       @R1,R3
    00000072 332C                   ADD         R2,R3
    00000074              L1071:                            
    00000074 D014                   MOV.L       L1083+10,R0; _symtab
    00000076 6202                   MOV.L       @R0,R2
    00000078 726C                   ADD         #108,R2
    0000007A 3320                   CMP/EQ      R2,R3
    0000007C 8B2A                   BF          L1069
          tanh.c    16                    push(cadr(p1));
    0000007E 64E2                   MOV.L       @R14,R4
    00000080 8448                   MOV.B       @(8,R4),R0
    00000082 2008                   TST         R0,R0
    00000084 8B02                   BF          L1073
    00000086 64E2                   MOV.L       @R14,R4
    00000088 A004                   BRA         L1075
    0000008A 5441                   MOV.L       @(4,R4),R4
    0000008C              L1073:                            
    0000008C 9317                   MOV.W       L1083,R3   ; H'0570
    0000008E D20E                   MOV.L       L1083+10,R2; _symtab
    00000090 6422                   MOV.L       @R2,R4
    00000092 343C                   ADD         R3,R4
    00000094              L1075:                            
    00000094 8448                   MOV.B       @(8,R4),R0
    00000096 2008                   TST         R0,R0
    00000098 8B0C                   BF          L1072
    0000009A 64E2                   MOV.L       @R14,R4
    0000009C 8448                   MOV.B       @(8,R4),R0
    0000009E 2008                   TST         R0,R0
    000000A0 8B02                   BF          L1074




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:32  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000A2 64E2                   MOV.L       @R14,R4
    000000A4 A004                   BRA         L1076
    000000A6 5441                   MOV.L       @(4,R4),R4
    000000A8              L1074:                            
    000000A8 9309                   MOV.W       L1083,R3   ; H'0570
    000000AA D207                   MOV.L       L1083+10,R2; _symtab
    000000AC 6422                   MOV.L       @R2,R4
    000000AE 343C                   ADD         R3,R4
    000000B0              L1076:                            
    000000B0 A044                   BRA         L1082
    000000B2 6442                   MOV.L       @R4,R4
    000000B4              L1072:                            
    000000B4 9303                   MOV.W       L1083,R3   ; H'0570
    000000B6 D204                   MOV.L       L1083+10,R2; _symtab
    000000B8 6422                   MOV.L       @R2,R4
          tanh.c    17                    return;
    000000BA A03F                   BRA         L1082
    000000BC 343C                   ADD         R3,R4
    000000BE              L1083:                            
    000000BE 0570                   .DATA.W     H'0570
    000000C0 <00000000>             .DATA.L     _push
    000000C4 <00000000>             .DATA.L     _p1
    000000C8 <00000000>             .DATA.L     _symtab
    000000CC <00000000>             .DATA.L     _eval
    000000D0 <00000000>             .DATA.L     _pop
    000000D4              L1069:                            
    000000D4 6DE2                   MOV.L       @R14,R13
    000000D6 84D8                   MOV.B       @(8,R13),R0
    000000D8 600C                   EXTU.B      R0,R0
    000000DA 8802                   CMP/EQ      #2,R0
    000000DC 8B27                   BF          L1079
          tanh.c    18            }
          tanh.c    19            if (isdouble(p1)) {
          tanh.c    20                    d = tanh(p1->u.d);
    000000DE 52D1                   MOV.L       @(4,R13),R2
    000000E0 D122                   MOV.L       L1084+2,R1 ; _tanh
    000000E2 2F26                   MOV.L       R2,@-R15
    000000E4 62D2                   MOV.L       @R13,R2
    000000E6 2F26                   MOV.L       R2,@-R15
    000000E8 63F3                   MOV         R15,R3
    000000EA 7308                   ADD         #8,R3
    000000EC 410B                   JSR         @R1
    000000EE 2F36                   MOV.L       R3,@-R15
          tanh.c    21                    if (fabs(d) < 1e-10)
    000000F0 D11F                   MOV.L       L1084+6,R1 ; _fabs
    000000F2 7F04                   ADD         #4,R15
    000000F4 53F3                   MOV.L       @(12,R15),R3
    000000F6 E208                   MOV         #8,R2
    000000F8 2F36                   MOV.L       R3,@-R15
    000000FA 53F3                   MOV.L       @(12,R15),R3
    000000FC 2F36                   MOV.L       R3,@-R15
    000000FE 32FC                   ADD         R15,R2
    00000100 410B                   JSR         @R1
    00000102 2F26                   MOV.L       R2,@-R15
    00000104 D21B                   MOV.L       L1084+10,R2; H'D9D7BDBB
    00000106 7F0C                   ADD         #12,R15
    00000108 D31C                   MOV.L       L1084+18,R3; __ltd




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:32  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000010A 2F26                   MOV.L       R2,@-R15
    0000010C D21A                   MOV.L       L1084+14,R2; H'3DDB7CDF
    0000010E 430B                   JSR         @R3
    00000110 2F26                   MOV.L       R2,@-R15
    00000112 8800                   CMP/EQ      #0,R0
    00000114 8903                   BT          L1080
          tanh.c    22                            d = 0.0;
    00000116 62F3                   MOV         R15,R2
    00000118 E100                   MOV         #0,R1
    0000011A 2212                   MOV.L       R1,@R2
    0000011C 1211                   MOV.L       R1,@(4,R2)
    0000011E              L1080:                            
          tanh.c    23                    push_double(d);
    0000011E 53F1                   MOV.L       @(4,R15),R3
    00000120 D217                   MOV.L       L1084+22,R2; _push_double
    00000122 2F36                   MOV.L       R3,@-R15
    00000124 53F1                   MOV.L       @(4,R15),R3
    00000126 420B                   JSR         @R2
    00000128 2F36                   MOV.L       R3,@-R15
          tanh.c    24                    return;
    0000012A A018                   BRA         L1078
    0000012C 7F08                   ADD         #8,R15
    0000012E              L1079:                            
          tanh.c    25            }
          tanh.c    26            if (iszero(p1)) {
    0000012E D315                   MOV.L       L1084+26,R3; _iszero
    00000130 430B                   JSR         @R3
    00000132 64D3                   MOV         R13,R4
    00000134 2008                   TST         R0,R0
    00000136 8905                   BT          L1081
          tanh.c    27                    push(zero);
    00000138 D313                   MOV.L       L1084+30,R3; _zero
    0000013A 6432                   MOV.L       @R3,R4
          tanh.c    28                    return;
    0000013C              L1082:                            
    0000013C 4C0B                   JSR         @R12
    0000013E 0009                   NOP
    00000140 A00D                   BRA         L1078
    00000142 0009                   NOP
    00000144              L1081:                            
          tanh.c    29            }
          tanh.c    30            push_symbol(TANH);
    00000144 D211                   MOV.L       L1084+34,R2; _push_symbol
    00000146 420B                   JSR         @R2
    00000148 E469                   MOV         #105,R4
          tanh.c    31            push(p1);
    0000014A 4C0B                   JSR         @R12
    0000014C 64E2                   MOV.L       @R14,R4
          tanh.c    32            list(2);
    0000014E E402                   MOV         #2,R4
    00000150 D30F                   MOV.L       L1084+38,R3; _list
    00000152 7F08                   ADD         #8,R15
    00000154 4F26                   LDS.L       @R15+,PR
    00000156 6CF6                   MOV.L       @R15+,R12
    00000158 6DF6                   MOV.L       @R15+,R13
    0000015A 432B                   JMP         @R3
    0000015C 6EF6                   MOV.L       @R15+,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:32  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000015E              L1078:                            
          tanh.c    33    }
    0000015E 7F08                   ADD         #8,R15
    00000160 4F26                   LDS.L       @R15+,PR
    00000162 6CF6                   MOV.L       @R15+,R12
    00000164 6DF6                   MOV.L       @R15+,R13
    00000166 000B                   RTS
    00000168 6EF6                   MOV.L       @R15+,R14
    0000016A              L1084:                            
    0000016A 0000                   .DATA.W     0
    0000016C <00000000>             .DATA.L     _tanh
    00000170 <00000000>             .DATA.L     _fabs
    00000174 D9D7BDBB               .DATA.L     H'D9D7BDBB
    00000178 3DDB7CDF               .DATA.L     H'3DDB7CDF
    0000017C <00000000>             .DATA.L     __ltd
    00000180 <00000000>             .DATA.L     _push_double
    00000184 <00000000>             .DATA.L     _iszero
    00000188 <00000000>             .DATA.L     _zero
    0000018C <00000000>             .DATA.L     _push_symbol
    00000190 <00000000>             .DATA.L     _list









































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:32  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       33



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000194 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000194 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           13
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           1
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            35






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkE661.tmp 

