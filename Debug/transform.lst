SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\transform.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      transform.     1    /* Transform an expression using table look-up
      transform.     2    
      transform.     3    The expression and free variable are on the stack.
      transform.     4    
      transform.     5    The argument s is a null terminated list of transform rules.
      transform.     6    
      transform.     7    For example, see itab.cpp
      transform.     8    
      transform.     9    Internally, the following symbols are used:
      transform.    10    
      transform.    11            F       input expression
      transform.    12    
      transform.    13            X       free variable, i.e. F of X
      transform.    14    
      transform.    15            A       template expression
      transform.    16    
      transform.    17            B       result expression
      transform.    18    
      transform.    19            C       list of conditional expressions
      transform.    20    */
      transform.    21    
      transform.    22    #include "stdafx.h"
      transform.    23    #include "defs.h"
      transform.    24    
      transform.    25    // p1 and p2 are tmps
      transform.    26    
      transform.    27    #define F p3
      transform.    28    #define X p4
      transform.    29    #define A p5
      transform.    30    #define B p6
      transform.    31    #define C p7
      transform.    32    
      transform.    33    void
      transform.    34    transform(char **s)
P   00000000              _transform:                      ; function: transform
                                                           ; frame size=36
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A 2F96                   MOV.L       R9,@-R15
    0000000C 2F86                   MOV.L       R8,@-R15
    0000000E 4F22                   STS.L       PR,@-R15
      transform.    35    {
      transform.    36            int h;
      transform.    37    
      transform.    38            save();
    00000010 D33D                   MOV.L       L1128+8,R3 ; _save
    00000012 7FFC                   ADD         #-4,R15
    00000014 430B                   JSR         @R3
    00000016 6A43                   MOV         R4,R10
      transform.    39    
      transform.    40            X = pop();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000018 DE3C                   MOV.L       L1128+12,R14; _p4
    0000001A DD3D                   MOV.L       L1128+16,R13; _pop
    0000001C 4D0B                   JSR         @R13
    0000001E 0009                   NOP
      transform.    41            F = pop();
    00000020 4D0B                   JSR         @R13
    00000022 2E02                   MOV.L       R0,@R14
    00000024 D23B                   MOV.L       L1128+20,R2; _p3
    00000026 2202                   MOV.L       R0,@R2
      transform.    42    
      transform.    43            // save symbol context in case eval(B) below calls transform
      transform.    44    
      transform.    45            push(get_binding(symbol(METAA)));
    00000028 D93B                   MOV.L       L1128+24,R9; _get_binding
    0000002A DB3C                   MOV.L       L1128+28,R11; _symtab
    0000002C DC3C                   MOV.L       L1128+32,R12; _push
    0000002E 9367                   MOV.W       L1128,R3   ; H'05C4
    00000030 64B2                   MOV.L       @R11,R4
    00000032 490B                   JSR         @R9
    00000034 343C                   ADD         R3,R4
    00000036 4C0B                   JSR         @R12
    00000038 6403                   MOV         R0,R4
      transform.    46            push(get_binding(symbol(METAB)));
    0000003A 9362                   MOV.W       L1128+2,R3 ; H'05D0
    0000003C 64B2                   MOV.L       @R11,R4
    0000003E 490B                   JSR         @R9
    00000040 343C                   ADD         R3,R4
    00000042 4C0B                   JSR         @R12
    00000044 6403                   MOV         R0,R4
      transform.    47            push(get_binding(symbol(METAX)));
    00000046 985D                   MOV.W       L1128+4,R8 ; H'05DC
    00000048 64B2                   MOV.L       @R11,R4
    0000004A 490B                   JSR         @R9
    0000004C 348C                   ADD         R8,R4
    0000004E 4C0B                   JSR         @R12
    00000050 6403                   MOV         R0,R4
      transform.    48    
      transform.    49            set_binding(symbol(METAX), X);
    00000052 D934                   MOV.L       L1128+36,R9; _set_binding
    00000054 65E2                   MOV.L       @R14,R5
    00000056 64B2                   MOV.L       @R11,R4
    00000058 490B                   JSR         @R9
    0000005A 348C                   ADD         R8,R4
      transform.    50    
      transform.    51            // put constants in F(X) on the stack
      transform.    52    
      transform.    53            h = tos;
    0000005C D332                   MOV.L       L1128+40,R3; _tos
    0000005E 6232                   MOV.L       @R3,R2
    00000060 2F22                   MOV.L       R2,@R15
      transform.    54            push_integer(1);
    00000062 D232                   MOV.L       L1128+44,R2; _push_integer
    00000064 420B                   JSR         @R2
    00000066 E401                   MOV         #1,R4
      transform.    55            push(F);
    00000068 D32A                   MOV.L       L1128+20,R3; _p3
    0000006A 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000006C 6432                   MOV.L       @R3,R4
      transform.    56            push(X);
    0000006E 4C0B                   JSR         @R12
    00000070 64E2                   MOV.L       @R14,R4
      transform.    57            polyform(); // collect coefficients of x, x^2, etc.
    00000072 D22F                   MOV.L       L1128+48,R2; _polyform
    00000074 420B                   JSR         @R2
    00000076 0009                   NOP
      transform.    58            push(X);
    00000078 4C0B                   JSR         @R12
    0000007A 64E2                   MOV.L       @R14,R4
      transform.    59            decomp();
    0000007C D32D                   MOV.L       L1128+52,R3; _decomp
    0000007E 430B                   JSR         @R3
    00000080 0009                   NOP
    00000082 DE2D                   MOV.L       L1128+56,R14; _p1
      transform.    60    
      transform.    61            while (*s) {
    00000084 A0E9                   BRA         L1070
    00000086 0009                   NOP
    00000088              L1071:                            
      transform.    62    
      transform.    63                    scan_meta(*s);
    00000088 D32C                   MOV.L       L1128+60,R3; _scan_meta
    0000008A 430B                   JSR         @R3
    0000008C 64A2                   MOV.L       @R10,R4
      transform.    64                    p1 = pop();
    0000008E 4D0B                   JSR         @R13
    00000090 0009                   NOP
      transform.    65    
      transform.    66                    A = cadr(p1);
    00000092 6203                   MOV         R0,R2
    00000094 2E02                   MOV.L       R0,@R14
    00000096 8428                   MOV.B       @(8,R2),R0
    00000098 2008                   TST         R0,R0
    0000009A 8B02                   BF          L1073
    0000009C 62E2                   MOV.L       @R14,R2
    0000009E A004                   BRA         L1075
    000000A0 5321                   MOV.L       @(4,R2),R3
    000000A2              L1073:                            
    000000A2 9230                   MOV.W       L1128+6,R2 ; H'0570
    000000A4 D11D                   MOV.L       L1128+28,R1; _symtab
    000000A6 6312                   MOV.L       @R1,R3
    000000A8 332C                   ADD         R2,R3
    000000AA              L1075:                            
    000000AA 8438                   MOV.B       @(8,R3),R0
    000000AC 2008                   TST         R0,R0
    000000AE 8B0C                   BF          L1072
    000000B0 63E2                   MOV.L       @R14,R3
    000000B2 8438                   MOV.B       @(8,R3),R0
    000000B4 2008                   TST         R0,R0
    000000B6 8B02                   BF          L1074
    000000B8 62E2                   MOV.L       @R14,R2
    000000BA A004                   BRA         L1076
    000000BC 5221                   MOV.L       @(4,R2),R2
    000000BE              L1074:                            
    000000BE 9322                   MOV.W       L1128+6,R3 ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000C0 D116                   MOV.L       L1128+28,R1; _symtab
    000000C2 6212                   MOV.L       @R1,R2
    000000C4 323C                   ADD         R3,R2
    000000C6              L1076:                            
    000000C6 A004                   BRA         L1077
    000000C8 6222                   MOV.L       @R2,R2
    000000CA              L1072:                            
    000000CA 931C                   MOV.W       L1128+6,R3 ; H'0570
    000000CC D113                   MOV.L       L1128+28,R1; _symtab
    000000CE 6212                   MOV.L       @R1,R2
    000000D0 323C                   ADD         R3,R2
    000000D2              L1077:                            
    000000D2 D31B                   MOV.L       L1128+64,R3; _p5
    000000D4 2322                   MOV.L       R2,@R3
      transform.    67                    B = caddr(p1);
    000000D6 60E2                   MOV.L       @R14,R0
    000000D8 8408                   MOV.B       @(8,R0),R0
    000000DA 2008                   TST         R0,R0
    000000DC 8B02                   BF          L1080
    000000DE 61E2                   MOV.L       @R14,R1
    000000E0 A004                   BRA         L1085
    000000E2 5111                   MOV.L       @(4,R1),R1
    000000E4              L1080:                            
    000000E4 920F                   MOV.W       L1128+6,R2 ; H'0570
    000000E6 D00D                   MOV.L       L1128+28,R0; _symtab
    000000E8 6102                   MOV.L       @R0,R1
    000000EA 312C                   ADD         R2,R1
    000000EC              L1085:                            
    000000EC 8418                   MOV.B       @(8,R1),R0
    000000EE 2008                   TST         R0,R0
    000000F0 8B2F                   BF          L1079
    000000F2 63E2                   MOV.L       @R14,R3
    000000F4 8438                   MOV.B       @(8,R3),R0
    000000F6 2008                   TST         R0,R0
    000000F8 8B24                   BF          L1081
    000000FA 62E2                   MOV.L       @R14,R2
    000000FC A026                   BRA         L1086
    000000FE 5221                   MOV.L       @(4,R2),R2
    00000100              L1128:                            
    00000100 05C4                   .DATA.W     H'05C4
    00000102 05D0                   .DATA.W     H'05D0
    00000104 05DC                   .DATA.W     H'05DC
    00000106 0570                   .DATA.W     H'0570
    00000108 <00000000>             .DATA.L     _save
    0000010C <00000000>             .DATA.L     _p4
    00000110 <00000000>             .DATA.L     _pop
    00000114 <00000000>             .DATA.L     _p3
    00000118 <00000000>             .DATA.L     _get_binding
    0000011C <00000000>             .DATA.L     _symtab
    00000120 <00000000>             .DATA.L     _push
    00000124 <00000000>             .DATA.L     _set_binding
    00000128 <00000000>             .DATA.L     _tos
    0000012C <00000000>             .DATA.L     _push_integer
    00000130 <00000000>             .DATA.L     _polyform
    00000134 <00000000>             .DATA.L     _decomp
    00000138 <00000000>             .DATA.L     _p1
    0000013C <00000000>             .DATA.L     _scan_meta




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000140 <00000000>             .DATA.L     _p5
    00000144              L1081:                            
    00000144 935E                   MOV.W       L1129,R3   ; H'0570
    00000146 D130                   MOV.L       L1129+4,R1 ; _symtab
    00000148 6212                   MOV.L       @R1,R2
    0000014A 323C                   ADD         R3,R2
    0000014C              L1086:                            
    0000014C 5021                   MOV.L       @(4,R2),R0
    0000014E A004                   BRA         L1087
    00000150 0009                   NOP
    00000152              L1079:                            
    00000152 9357                   MOV.W       L1129,R3   ; H'0570
    00000154 D12C                   MOV.L       L1129+4,R1 ; _symtab
    00000156 6012                   MOV.L       @R1,R0
    00000158 303C                   ADD         R3,R0
    0000015A              L1087:                            
    0000015A 8408                   MOV.B       @(8,R0),R0
    0000015C 2008                   TST         R0,R0
    0000015E 8B21                   BF          L1078
    00000160 62E2                   MOV.L       @R14,R2
    00000162 8428                   MOV.B       @(8,R2),R0
    00000164 2008                   TST         R0,R0
    00000166 8B02                   BF          L1083
    00000168 62E2                   MOV.L       @R14,R2
    0000016A A004                   BRA         L1088
    0000016C 5321                   MOV.L       @(4,R2),R3
    0000016E              L1083:                            
    0000016E 9249                   MOV.W       L1129,R2   ; H'0570
    00000170 D125                   MOV.L       L1129+4,R1 ; _symtab
    00000172 6312                   MOV.L       @R1,R3
    00000174 332C                   ADD         R2,R3
    00000176              L1088:                            
    00000176 8438                   MOV.B       @(8,R3),R0
    00000178 2008                   TST         R0,R0
    0000017A 8B0C                   BF          L1082
    0000017C 63E2                   MOV.L       @R14,R3
    0000017E 8438                   MOV.B       @(8,R3),R0
    00000180 2008                   TST         R0,R0
    00000182 8B02                   BF          L1084
    00000184 62E2                   MOV.L       @R14,R2
    00000186 A004                   BRA         L1089
    00000188 5221                   MOV.L       @(4,R2),R2
    0000018A              L1084:                            
    0000018A 933B                   MOV.W       L1129,R3   ; H'0570
    0000018C D11E                   MOV.L       L1129+4,R1 ; _symtab
    0000018E 6212                   MOV.L       @R1,R2
    00000190 323C                   ADD         R3,R2
    00000192              L1089:                            
    00000192 A004                   BRA         L1090
    00000194 5221                   MOV.L       @(4,R2),R2
    00000196              L1082:                            
    00000196 9335                   MOV.W       L1129,R3   ; H'0570
    00000198 D11B                   MOV.L       L1129+4,R1 ; _symtab
    0000019A 6212                   MOV.L       @R1,R2
    0000019C 323C                   ADD         R3,R2
    0000019E              L1090:                            
    0000019E 6122                   MOV.L       @R2,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001A0 A004                   BRA         L1091
    000001A2 0009                   NOP
    000001A4              L1078:                            
    000001A4 932E                   MOV.W       L1129,R3   ; H'0570
    000001A6 D018                   MOV.L       L1129+4,R0 ; _symtab
    000001A8 6102                   MOV.L       @R0,R1
    000001AA 313C                   ADD         R3,R1
    000001AC              L1091:                            
    000001AC D317                   MOV.L       L1129+8,R3 ; _p6
    000001AE 2312                   MOV.L       R1,@R3
      transform.    68                    C = cdddr(p1);
    000001B0 60E2                   MOV.L       @R14,R0
    000001B2 8408                   MOV.B       @(8,R0),R0
    000001B4 2008                   TST         R0,R0
    000001B6 8B02                   BF          L1094
    000001B8 61E2                   MOV.L       @R14,R1
    000001BA A004                   BRA         L1099
    000001BC 5211                   MOV.L       @(4,R1),R2
    000001BE              L1094:                            
    000001BE 9121                   MOV.W       L1129,R1   ; H'0570
    000001C0 D011                   MOV.L       L1129+4,R0 ; _symtab
    000001C2 6202                   MOV.L       @R0,R2
    000001C4 321C                   ADD         R1,R2
    000001C6              L1099:                            
    000001C6 8428                   MOV.B       @(8,R2),R0
    000001C8 2008                   TST         R0,R0
    000001CA 8B0D                   BF          L1093
    000001CC 63E2                   MOV.L       @R14,R3
    000001CE 8438                   MOV.B       @(8,R3),R0
    000001D0 2008                   TST         R0,R0
    000001D2 8B02                   BF          L1095
    000001D4 62E2                   MOV.L       @R14,R2
    000001D6 A004                   BRA         L1100
    000001D8 5221                   MOV.L       @(4,R2),R2
    000001DA              L1095:                            
    000001DA 9313                   MOV.W       L1129,R3   ; H'0570
    000001DC D10A                   MOV.L       L1129+4,R1 ; _symtab
    000001DE 6212                   MOV.L       @R1,R2
    000001E0 323C                   ADD         R3,R2
    000001E2              L1100:                            
    000001E2 5021                   MOV.L       @(4,R2),R0
    000001E4 A004                   BRA         L1101
    000001E6 0009                   NOP
    000001E8              L1093:                            
    000001E8 930C                   MOV.W       L1129,R3   ; H'0570
    000001EA D107                   MOV.L       L1129+4,R1 ; _symtab
    000001EC 6012                   MOV.L       @R1,R0
    000001EE 303C                   ADD         R3,R0
    000001F0              L1101:                            
    000001F0 8408                   MOV.B       @(8,R0),R0
    000001F2 2008                   TST         R0,R0
    000001F4 8B26                   BF          L1092
    000001F6 62E2                   MOV.L       @R14,R2
    000001F8 8428                   MOV.B       @(8,R2),R0
    000001FA 2008                   TST         R0,R0
    000001FC 8B08                   BF          L1097
    000001FE 62E2                   MOV.L       @R14,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000200 A00A                   BRA         L1102
    00000202 5321                   MOV.L       @(4,R2),R3
    00000204              L1129:                            
    00000204 0570                   .DATA.W     H'0570
    00000206 0000                   .DATA.W     0
    00000208 <00000000>             .DATA.L     _symtab
    0000020C <00000000>             .DATA.L     _p6
    00000210              L1097:                            
    00000210 927E                   MOV.W       L1130,R2   ; H'0570
    00000212 D141                   MOV.L       L1130+8,R1 ; _symtab
    00000214 6312                   MOV.L       @R1,R3
    00000216 332C                   ADD         R2,R3
    00000218              L1102:                            
    00000218 8438                   MOV.B       @(8,R3),R0
    0000021A 2008                   TST         R0,R0
    0000021C 8B0C                   BF          L1096
    0000021E 63E2                   MOV.L       @R14,R3
    00000220 8438                   MOV.B       @(8,R3),R0
    00000222 2008                   TST         R0,R0
    00000224 8B02                   BF          L1098
    00000226 62E2                   MOV.L       @R14,R2
    00000228 A004                   BRA         L1103
    0000022A 5221                   MOV.L       @(4,R2),R2
    0000022C              L1098:                            
    0000022C 9370                   MOV.W       L1130,R3   ; H'0570
    0000022E D13A                   MOV.L       L1130+8,R1 ; _symtab
    00000230 6212                   MOV.L       @R1,R2
    00000232 323C                   ADD         R3,R2
    00000234              L1103:                            
    00000234 A004                   BRA         L1104
    00000236 5221                   MOV.L       @(4,R2),R2
    00000238              L1096:                            
    00000238 936A                   MOV.W       L1130,R3   ; H'0570
    0000023A D137                   MOV.L       L1130+8,R1 ; _symtab
    0000023C 6212                   MOV.L       @R1,R2
    0000023E 323C                   ADD         R3,R2
    00000240              L1104:                            
    00000240 A004                   BRA         L1105
    00000242 5221                   MOV.L       @(4,R2),R2
    00000244              L1092:                            
    00000244 9364                   MOV.W       L1130,R3   ; H'0570
    00000246 D134                   MOV.L       L1130+8,R1 ; _symtab
    00000248 6212                   MOV.L       @R1,R2
    0000024A 323C                   ADD         R3,R2
    0000024C              L1105:                            
    0000024C D333                   MOV.L       L1130+12,R3; _p7
    0000024E 2322                   MOV.L       R2,@R3
      transform.    69    
      transform.    70                    if (f_equals_a(h))
    00000250 B03D                   BSR         _f_equals_a
    00000252 64F2                   MOV.L       @R15,R4
    00000254 2008                   TST         R0,R0
    00000256 8B05                   BF          L1107
      transform.    71                            break;
      transform.    72    
      transform.    73                    s++;
    00000258 7A04                   ADD         #4,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000025A              L1070:                            
    0000025A 63A2                   MOV.L       @R10,R3
    0000025C 2338                   TST         R3,R3
    0000025E 8901                   BT          L1131
    00000260 AF12                   BRA         L1071
    00000262 0009                   NOP
    00000264              L1131:                            
    00000264              L1107:                            
      transform.    74            }
      transform.    75    
      transform.    76            tos = h;
    00000264 63F2                   MOV.L       @R15,R3
    00000266 D22E                   MOV.L       L1130+16,R2; _tos
    00000268 2232                   MOV.L       R3,@R2
      transform.    77    
      transform.    78            if (*s) {
    0000026A 61A2                   MOV.L       @R10,R1
    0000026C 2118                   TST         R1,R1
    0000026E 8909                   BT          L1108
      transform.    79                    push(B);
    00000270 D12C                   MOV.L       L1130+20,R1; _p6
    00000272 4C0B                   JSR         @R12
    00000274 6412                   MOV.L       @R1,R4
      transform.    80                    eval();
    00000276 D32C                   MOV.L       L1130+24,R3; _eval
    00000278 430B                   JSR         @R3
    0000027A 0009                   NOP
      transform.    81                    p1 = pop();
    0000027C 4D0B                   JSR         @R13
    0000027E 0009                   NOP
    00000280 A004                   BRA         L1109
    00000282 2E02                   MOV.L       R0,@R14
    00000284              L1108:                            
      transform.    82            } else
      transform.    83                    p1 = symbol(NIL);
    00000284 9344                   MOV.W       L1130,R3   ; H'0570
    00000286 61B2                   MOV.L       @R11,R1
    00000288 313C                   ADD         R3,R1
    0000028A 2E12                   MOV.L       R1,@R14
    0000028C              L1109:                            
      transform.    84    
      transform.    85            set_binding(symbol(METAX), pop());
    0000028C 4D0B                   JSR         @R13
    0000028E 0009                   NOP
    00000290 64B2                   MOV.L       @R11,R4
    00000292 6503                   MOV         R0,R5
    00000294 490B                   JSR         @R9
    00000296 348C                   ADD         R8,R4
      transform.    86            set_binding(symbol(METAB), pop());
    00000298 4D0B                   JSR         @R13
    0000029A 0009                   NOP
    0000029C 9339                   MOV.W       L1130+2,R3 ; H'05D0
    0000029E 6503                   MOV         R0,R5
    000002A0 64B2                   MOV.L       @R11,R4
    000002A2 490B                   JSR         @R9
    000002A4 343C                   ADD         R3,R4
      transform.    87            set_binding(symbol(METAA), pop());




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002A6 4D0B                   JSR         @R13
    000002A8 0009                   NOP
    000002AA 6503                   MOV         R0,R5
    000002AC 9332                   MOV.W       L1130+4,R3 ; H'05C4
    000002AE 64B2                   MOV.L       @R11,R4
    000002B0 490B                   JSR         @R9
    000002B2 343C                   ADD         R3,R4
      transform.    88    
      transform.    89            push(p1);
    000002B4 4C0B                   JSR         @R12
    000002B6 64E2                   MOV.L       @R14,R4
      transform.    90    
      transform.    91            restore();
    000002B8 D21C                   MOV.L       L1130+28,R2; _restore
    000002BA 7F04                   ADD         #4,R15
    000002BC 4F26                   LDS.L       @R15+,PR
    000002BE 68F6                   MOV.L       @R15+,R8
    000002C0 69F6                   MOV.L       @R15+,R9
    000002C2 6AF6                   MOV.L       @R15+,R10
    000002C4 6BF6                   MOV.L       @R15+,R11
    000002C6 6CF6                   MOV.L       @R15+,R12
    000002C8 6DF6                   MOV.L       @R15+,R13
    000002CA 422B                   JMP         @R2
    000002CC 6EF6                   MOV.L       @R15+,R14
      transform.    92    }
      transform.    93    
      transform.    94    // search for a METAA and METAB such that F = A
      transform.    95    
      transform.    96    int
      transform.    97    f_equals_a(int h)
    000002CE              _f_equals_a:                     ; function: f_equals_a
                                                           ; frame size=44
      transform.    98    {
      transform.    99            int i, j;
      transform.   100            for (i = h; i < tos; i++) {
    000002CE 6343                   MOV         R4,R3
    000002D0 2FE6                   MOV.L       R14,@-R15
    000002D2 2FD6                   MOV.L       R13,@-R15
    000002D4 2FC6                   MOV.L       R12,@-R15
    000002D6 2FB6                   MOV.L       R11,@-R15
    000002D8 2FA6                   MOV.L       R10,@-R15
    000002DA 2F96                   MOV.L       R9,@-R15
    000002DC 2F86                   MOV.L       R8,@-R15
    000002DE 4F22                   STS.L       PR,@-R15
    000002E0 D811                   MOV.L       L1130+24,R8; _eval
    000002E2 7FF4                   ADD         #-12,R15
    000002E4 D912                   MOV.L       L1130+32,R9; _iszero
    000002E6 1F42                   MOV.L       R4,@(8,R15)
    000002E8 2F32                   MOV.L       R3,@R15
    000002EA DB12                   MOV.L       L1130+36,R11; _p2
    000002EC DD12                   MOV.L       L1130+40,R13; _push
    000002EE DE13                   MOV.L       L1130+44,R14; _p1
    000002F0 A081                   BRA         L1127
    000002F2 4308                   SHLL2       R3
    000002F4              L1111:                            
      transform.   101                    set_binding(symbol(METAA), stack[i]);
    000002F4 D212                   MOV.L       L1130+48,R2; _stack




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002F6 6122                   MOV.L       @R2,R1
    000002F8 50F1                   MOV.L       @(4,R15),R0
    000002FA 051E                   MOV.L       @(R0,R1),R5
    000002FC 930A                   MOV.W       L1130+4,R3 ; H'05C4
    000002FE D206                   MOV.L       L1130+8,R2 ; _symtab
    00000300 D110                   MOV.L       L1130+52,R1; _set_binding
    00000302 6422                   MOV.L       @R2,R4
    00000304 410B                   JSR         @R1
    00000306 343C                   ADD         R3,R4
      transform.   102                    for (j = h; j < tos; j++) {
    00000308 5AF2                   MOV.L       @(8,R15),R10
    0000030A 6CA3                   MOV         R10,R12
    0000030C A06A                   BRA         L1112
    0000030E 4C08                   SHLL2       R12
    00000310              L1130:                            
    00000310 0570                   .DATA.W     H'0570
    00000312 05D0                   .DATA.W     H'05D0
    00000314 05C4                   .DATA.W     H'05C4
    00000316 0000                   .DATA.W     0
    00000318 <00000000>             .DATA.L     _symtab
    0000031C <00000000>             .DATA.L     _p7
    00000320 <00000000>             .DATA.L     _tos
    00000324 <00000000>             .DATA.L     _p6
    00000328 <00000000>             .DATA.L     _eval
    0000032C <00000000>             .DATA.L     _restore
    00000330 <00000000>             .DATA.L     _iszero
    00000334 <00000000>             .DATA.L     _p2
    00000338 <00000000>             .DATA.L     _push
    0000033C <00000000>             .DATA.L     _p1
    00000340 <00000000>             .DATA.L     _stack
    00000344 <00000000>             .DATA.L     _set_binding
    00000348              L1113:                            
      transform.   103                            set_binding(symbol(METAB), stack[j]);
    00000348 D335                   MOV.L       L1132+4,R3 ; _stack
    0000034A 6032                   MOV.L       @R3,R0
    0000034C 9266                   MOV.W       L1132,R2   ; H'05D0
    0000034E 05CE                   MOV.L       @(R0,R12),R5
    00000350 D334                   MOV.L       L1132+8,R3 ; _symtab
    00000352 6432                   MOV.L       @R3,R4
    00000354 D334                   MOV.L       L1132+12,R3; _set_binding
    00000356 430B                   JSR         @R3
    00000358 342C                   ADD         R2,R4
      transform.   104                            p1 = C;                         // are conditions ok?
    0000035A D334                   MOV.L       L1132+16,R3; _p7
      transform.   105                            while (iscons(p1)) {
    0000035C A022                   BRA         L1126
    0000035E 6232                   MOV.L       @R3,R2
    00000360              L1115:                            
      transform.   106                                    push(car(p1));
    00000360 64E2                   MOV.L       @R14,R4
    00000362 8448                   MOV.B       @(8,R4),R0
    00000364 2008                   TST         R0,R0
    00000366 8B02                   BF          L1116
    00000368 64E2                   MOV.L       @R14,R4
    0000036A A004                   BRA         L1117
    0000036C 6442                   MOV.L       @R4,R4
    0000036E              L1116:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000036E 9356                   MOV.W       L1132+2,R3 ; H'0570
    00000370 D22C                   MOV.L       L1132+8,R2 ; _symtab
    00000372 6422                   MOV.L       @R2,R4
    00000374 343C                   ADD         R3,R4
    00000376              L1117:                            
    00000376 4D0B                   JSR         @R13
    00000378 0009                   NOP
      transform.   107                                    eval();
    0000037A 480B                   JSR         @R8
    0000037C 0009                   NOP
      transform.   108                                    p2 = pop();
    0000037E D32C                   MOV.L       L1132+20,R3; _pop
    00000380 430B                   JSR         @R3
    00000382 0009                   NOP
    00000384 2B02                   MOV.L       R0,@R11
      transform.   109                                    if (iszero(p2))
    00000386 490B                   JSR         @R9
    00000388 6403                   MOV         R0,R4
    0000038A 2008                   TST         R0,R0
    0000038C 8B0F                   BF          L1119
      transform.   110                                            break;
      transform.   111                                    p1 = cdr(p1);
    0000038E 63E2                   MOV.L       @R14,R3
    00000390 8438                   MOV.B       @(8,R3),R0
    00000392 2008                   TST         R0,R0
    00000394 8B02                   BF          L1120
    00000396 62E2                   MOV.L       @R14,R2
    00000398 A004                   BRA         L1126
    0000039A 5221                   MOV.L       @(4,R2),R2
    0000039C              L1120:                            
    0000039C 933F                   MOV.W       L1132+2,R3 ; H'0570
    0000039E D121                   MOV.L       L1132+8,R1 ; _symtab
    000003A0 6212                   MOV.L       @R1,R2
    000003A2 323C                   ADD         R3,R2
    000003A4              L1126:                            
    000003A4 2E22                   MOV.L       R2,@R14
    000003A6 6323                   MOV         R2,R3
    000003A8 8438                   MOV.B       @(8,R3),R0
    000003AA 2008                   TST         R0,R0
    000003AC 89D8                   BT          L1115
    000003AE              L1119:                            
      transform.   112                            }
      transform.   113                            if (iscons(p1))                 // no, try next j
    000003AE 62E2                   MOV.L       @R14,R2
    000003B0 8428                   MOV.B       @(8,R2),R0
    000003B2 2008                   TST         R0,R0
    000003B4 8914                   BT          L1123
      transform.   114                                    continue;
      transform.   115                            push(F);                        // F = A?
    000003B6 D31F                   MOV.L       L1132+24,R3; _p3
    000003B8 4D0B                   JSR         @R13
    000003BA 6432                   MOV.L       @R3,R4
      transform.   116                            push(A);
    000003BC D21E                   MOV.L       L1132+28,R2; _p5
    000003BE 4D0B                   JSR         @R13
    000003C0 6422                   MOV.L       @R2,R4
      transform.   117                            eval();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003C2 480B                   JSR         @R8
    000003C4 0009                   NOP
      transform.   118                            subtract();
    000003C6 D31D                   MOV.L       L1132+32,R3; _subtract
    000003C8 430B                   JSR         @R3
    000003CA 0009                   NOP
      transform.   119                            p1 = pop();
    000003CC D118                   MOV.L       L1132+20,R1; _pop
    000003CE 410B                   JSR         @R1
    000003D0 0009                   NOP
    000003D2 2E02                   MOV.L       R0,@R14
      transform.   120                            if (iszero(p1))
    000003D4 490B                   JSR         @R9
    000003D6 6403                   MOV         R0,R4
    000003D8 2008                   TST         R0,R0
    000003DA 8901                   BT          L1123
      transform.   121                                    return 1;               // yes
    000003DC A014                   BRA         L1125
    000003DE E001                   MOV         #1,R0
    000003E0              L1123:                            
    000003E0 7A01                   ADD         #1,R10
    000003E2 7C04                   ADD         #4,R12
    000003E4              L1112:                            
    000003E4 D316                   MOV.L       L1132+36,R3; _tos
    000003E6 6232                   MOV.L       @R3,R2
    000003E8 3A23                   CMP/GE      R2,R10
    000003EA 8BAD                   BF          L1113
    000003EC 60F2                   MOV.L       @R15,R0
    000003EE 7001                   ADD         #1,R0
    000003F0 2F02                   MOV.L       R0,@R15
    000003F2 53F1                   MOV.L       @(4,R15),R3
    000003F4 7304                   ADD         #4,R3
    000003F6              L1127:                            
    000003F6 1F31                   MOV.L       R3,@(4,R15)
    000003F8 D311                   MOV.L       L1132+36,R3; _tos
    000003FA 6232                   MOV.L       @R3,R2
    000003FC 61F2                   MOV.L       @R15,R1
    000003FE 3123                   CMP/GE      R2,R1
    00000400 8901                   BT          L1133
    00000402 AF77                   BRA         L1111
    00000404 0009                   NOP
    00000406              L1133:                            
      transform.   122                    }
      transform.   123            }
      transform.   124            return 0;                                       // no
    00000406 E000                   MOV         #0,R0
      transform.   125    }
    00000408              L1125:                            
    00000408 7F0C                   ADD         #12,R15
    0000040A 4F26                   LDS.L       @R15+,PR
    0000040C 68F6                   MOV.L       @R15+,R8
    0000040E 69F6                   MOV.L       @R15+,R9
    00000410 6AF6                   MOV.L       @R15+,R10
    00000412 6BF6                   MOV.L       @R15+,R11
    00000414 6CF6                   MOV.L       @R15+,R12
    00000416 6DF6                   MOV.L       @R15+,R13
    00000418 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000041A 6EF6                   MOV.L       @R15+,R14
    0000041C              L1132:                            
    0000041C 05D0                   .DATA.W     H'05D0
    0000041E 0570                   .DATA.W     H'0570
    00000420 <00000000>             .DATA.L     _stack
    00000424 <00000000>             .DATA.L     _symtab
    00000428 <00000000>             .DATA.L     _set_binding
    0000042C <00000000>             .DATA.L     _p7
    00000430 <00000000>             .DATA.L     _pop
    00000434 <00000000>             .DATA.L     _p3
    00000438 <00000000>             .DATA.L     _p5
    0000043C <00000000>             .DATA.L     _subtract
    00000440 <00000000>             .DATA.L     _tos
















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:33  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      125



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000444 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000444 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           23
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            82






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkECBC.tmp 

