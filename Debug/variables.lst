SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:34  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\fxTaumath\variables.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      variables.     1    //-----------------------------------------------------------------------------
      variables.     2    //
      variables.     3    //      Scan expr for vars, return in vector
      variables.     4    //
      variables.     5    //      Input:          Expression on stack
      variables.     6    //
      variables.     7    //      Output:         Vector
      variables.     8    //
      variables.     9    //-----------------------------------------------------------------------------
      variables.    10    
      variables.    11    #include "stdafx.h"
      variables.    12    #include "defs.h"
      variables.    13    
      variables.    14    static void scan_U(U *);
      variables.    15    static int __cmp(const void *, const void *);
      variables.    16    static int h;
      variables.    17    
      variables.    18    void
      variables.    19    variables(void)
P   00000000              _variables:                      ; function: variables
                                                           ; frame size=28
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A 4F22                   STS.L       PR,@-R15
      variables.    20    {
      variables.    21            int i, n;
      variables.    22            save();
    0000000C D337                   MOV.L       L1095+2,R3 ; _save
    0000000E 7FFC                   ADD         #-4,R15
    00000010 430B                   JSR         @R3
    00000012 0009                   NOP
      variables.    23            p1 = pop();
    00000014 DE36                   MOV.L       L1095+6,R14; _p1
    00000016 D237                   MOV.L       L1095+10,R2; _pop
    00000018 420B                   JSR         @R2
    0000001A 0009                   NOP
    0000001C 2E02                   MOV.L       R0,@R14
      variables.    24            h = tos;
    0000001E DA36                   MOV.L       L1095+14,R10; _tos
    00000020 DB36                   MOV.L       L1095+18,R11; __$h
    00000022 63A2                   MOV.L       @R10,R3
    00000024 2B32                   MOV.L       R3,@R11
      variables.    25            scan_U(p1);
    00000026 B03A                   BSR         __$scan_U
    00000028 64E2                   MOV.L       @R14,R4
      variables.    26            n = tos - h;
    0000002A 63B2                   MOV.L       @R11,R3
      variables.    27            if (n > 1)
    0000002C DC34                   MOV.L       L1095+22,R12; _stack
    0000002E 2F32                   MOV.L       R3,@R15
    00000030 6DA2                   MOV.L       @R10,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:34  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000032 3D38                   SUB         R3,R13
    00000034 E301                   MOV         #1,R3
    00000036 3D37                   CMP/GT      R3,R13
    00000038 8B08                   BF          L1076
      variables.    28                    qsort(stack + h, n, sizeof (U *), __cmp);
    0000003A E604                   MOV         #4,R6
    0000003C 64F2                   MOV.L       @R15,R4
    0000003E 65D3                   MOV         R13,R5
    00000040 62C2                   MOV.L       @R12,R2
    00000042 4408                   SHLL2       R4
    00000044 D130                   MOV.L       L1095+30,R1; _qsort
    00000046 D72F                   MOV.L       L1095+26,R7; __$__cmp
    00000048 410B                   JSR         @R1
    0000004A 342C                   ADD         R2,R4
    0000004C              L1076:                            
      variables.    29            p1 = alloc_tensor(n);
    0000004C D32F                   MOV.L       L1095+34,R3; _alloc_tensor
    0000004E 430B                   JSR         @R3
    00000050 64D3                   MOV         R13,R4
      variables.    30            p1->u.tensor->ndim = 1;
    00000052 6203                   MOV         R0,R2
    00000054 2E02                   MOV.L       R0,@R14
    00000056 E101                   MOV         #1,R1
    00000058 6322                   MOV.L       @R2,R3
      variables.    31            p1->u.tensor->dim[0] = n;
      variables.    32            for (i = 0; i < n; i++)
    0000005A E600                   MOV         #0,R6
    0000005C 2312                   MOV.L       R1,@R3
    0000005E 4D15                   CMP/PL      R13
    00000060 63E2                   MOV.L       @R14,R3
    00000062 6563                   MOV         R6,R5
    00000064 6232                   MOV.L       @R3,R2
    00000066 12D1                   MOV.L       R13,@(4,R2)
    00000068 8F0B                   BF/S        L1077
    0000006A 6463                   MOV         R6,R4
    0000006C              L1078:                            
      variables.    33                    p1->u.tensor->elem[i] = stack[i];
    0000006C 60E2                   MOV.L       @R14,R0
    0000006E 7501                   ADD         #1,R5
    00000070 6302                   MOV.L       @R0,R3
    00000072 35D3                   CMP/GE      R13,R5
    00000074 60C2                   MOV.L       @R12,R0
    00000076 7368                   ADD         #104,R3
    00000078 024E                   MOV.L       @(R0,R4),R2
    0000007A 334C                   ADD         R4,R3
    0000007C 2322                   MOV.L       R2,@R3
    0000007E 8FF5                   BF/S        L1078
    00000080 7404                   ADD         #4,R4
    00000082              L1077:                            
      variables.    34            tos = h;
    00000082 62B2                   MOV.L       @R11,R2
      variables.    35            push(p1);
    00000084 D322                   MOV.L       L1095+38,R3; _push
    00000086 2A22                   MOV.L       R2,@R10
    00000088 430B                   JSR         @R3
    0000008A 64E2                   MOV.L       @R14,R4
      variables.    36            restore();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:34  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000008C D221                   MOV.L       L1095+42,R2; _restore
    0000008E 7F04                   ADD         #4,R15
    00000090 4F26                   LDS.L       @R15+,PR
    00000092 6AF6                   MOV.L       @R15+,R10
    00000094 6BF6                   MOV.L       @R15+,R11
    00000096 6CF6                   MOV.L       @R15+,R12
    00000098 6DF6                   MOV.L       @R15+,R13
    0000009A 422B                   JMP         @R2
    0000009C 6EF6                   MOV.L       @R15+,R14
      variables.    37    }
      variables.    38    
      variables.    39    static void
      variables.    40    scan_U(U *p)
    0000009E              __$scan_U:                       ; function: scan_U
                                                           ; frame size=8
    0000009E 2FE6                   MOV.L       R14,@-R15
    000000A0 4F22                   STS.L       PR,@-R15
      variables.    41    {
      variables.    42            int i;
      variables.    43            if (iscons(p)) {
    000000A2 8448                   MOV.B       @(8,R4),R0
    000000A4 2008                   TST         R0,R0
    000000A6 8B39                   BF          L1079
      variables.    44                    p = cdr(p);
    000000A8 8448                   MOV.B       @(8,R4),R0
    000000AA 2008                   TST         R0,R0
    000000AC 8B01                   BF          L1080
    000000AE A017                   BRA         L1082
    000000B0 5E41                   MOV.L       @(4,R4),R14
    000000B2              L1080:                            
    000000B2 931A                   MOV.W       L1095,R3   ; H'0570
    000000B4 D218                   MOV.L       L1095+46,R2; _symtab
    000000B6 6E22                   MOV.L       @R2,R14
      variables.    45                    while (iscons(p)) {
    000000B8 A012                   BRA         L1082
    000000BA 3E3C                   ADD         R3,R14
    000000BC              L1083:                            
      variables.    46                            scan_U(car(p));
    000000BC 8B01                   BF          L1084
    000000BE A004                   BRA         L1085
    000000C0 64E2                   MOV.L       @R14,R4
    000000C2              L1084:                            
    000000C2 9312                   MOV.W       L1095,R3   ; H'0570
    000000C4 D214                   MOV.L       L1095+46,R2; _symtab
    000000C6 6422                   MOV.L       @R2,R4
    000000C8 343C                   ADD         R3,R4
    000000CA              L1085:                            
    000000CA BFE8                   BSR         __$scan_U
    000000CC 0009                   NOP
      variables.    47                            p = cdr(p);
    000000CE 84E8                   MOV.B       @(8,R14),R0
    000000D0 2008                   TST         R0,R0
    000000D2 8B01                   BF          L1086
    000000D4 A004                   BRA         L1082
    000000D6 5EE1                   MOV.L       @(4,R14),R14
    000000D8              L1086:                            
    000000D8 9307                   MOV.W       L1095,R3   ; H'0570




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:34  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000DA D20F                   MOV.L       L1095+46,R2; _symtab
    000000DC 6E22                   MOV.L       @R2,R14
    000000DE 3E3C                   ADD         R3,R14
    000000E0              L1082:                            
    000000E0 84E8                   MOV.B       @(8,R14),R0
    000000E2 2008                   TST         R0,R0
    000000E4 89EA                   BT          L1083
    000000E6 A036                   BRA         L1093
    000000E8 0009                   NOP
    000000EA              L1095:                            
    000000EA 0570                   .DATA.W     H'0570
    000000EC <00000000>             .DATA.L     _save
    000000F0 <00000000>             .DATA.L     _p1
    000000F4 <00000000>             .DATA.L     _pop
    000000F8 <00000000>             .DATA.L     _tos
    000000FC <00000000>             .DATA.L     __$h
    00000100 <00000000>             .DATA.L     _stack
    00000104 <00000000>             .DATA.L     __$__cmp
    00000108 <00000000>             .DATA.L     _qsort
    0000010C <00000000>             .DATA.L     _alloc_tensor
    00000110 <00000000>             .DATA.L     _push
    00000114 <00000000>             .DATA.L     _restore
    00000118 <00000000>             .DATA.L     _symtab
    0000011C              L1079:                            
      variables.    48                    }
      variables.    49            } else if (issymbol(p) && p != symbol(E)) {
    0000011C 600C                   EXTU.B      R0,R0
    0000011E 8805                   CMP/EQ      #5,R0
    00000120 8B19                   BF          L1093
    00000122 9324                   MOV.W       L1096,R3   ; H'05AC
    00000124 D112                   MOV.L       L1096+2,R1 ; _symtab
    00000126 6212                   MOV.L       @R1,R2
    00000128 323C                   ADD         R3,R2
    0000012A 3420                   CMP/EQ      R2,R4
    0000012C 8913                   BT          L1093
      variables.    50                    for (i = h; i < tos; i++)
    0000012E D311                   MOV.L       L1096+6,R3 ; __$h
    00000130 DE11                   MOV.L       L1096+10,R14; _tos
    00000132 6632                   MOV.L       @R3,R6
    00000134 D711                   MOV.L       L1096+14,R7; _stack
    00000136 6563                   MOV         R6,R5
    00000138 A006                   BRA         L1090
    0000013A 4508                   SHLL2       R5
    0000013C              L1091:                            
      variables.    51                            if (stack[i] == p)
    0000013C 6072                   MOV.L       @R7,R0
    0000013E 035E                   MOV.L       @(R0,R5),R3
    00000140 3340                   CMP/EQ      R4,R3
    00000142 8908                   BT          L1093
    00000144 7601                   ADD         #1,R6
    00000146 7504                   ADD         #4,R5
    00000148              L1090:                            
    00000148 63E2                   MOV.L       @R14,R3
    0000014A 3633                   CMP/GE      R3,R6
    0000014C 8BF6                   BF          L1091
      variables.    52                                    return;
      variables.    53                    push(p);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:34  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000014E 4F26                   LDS.L       @R15+,PR
    00000150 D30B                   MOV.L       L1096+18,R3; _push
    00000152 432B                   JMP         @R3
    00000154 6EF6                   MOV.L       @R15+,R14
    00000156              L1093:                            
      variables.    54            }
      variables.    55    }
    00000156 4F26                   LDS.L       @R15+,PR
    00000158 000B                   RTS
    0000015A 6EF6                   MOV.L       @R15+,R14
      variables.    56    
      variables.    57    static int
      variables.    58    __cmp(const void *p1, const void *p2)
    0000015C              __$__cmp:                        ; function: __cmp
                                                           ; frame size=8
      variables.    59    {
      variables.    60            return cmp_expr(*((U **) p1), *((U **) p2));
    0000015C D309                   MOV.L       L1096+22,R3; _cmp_expr
    0000015E 7FF8                   ADD         #-8,R15
    00000160 2F42                   MOV.L       R4,@R15
    00000162 1F51                   MOV.L       R5,@(4,R15)
    00000164 6552                   MOV.L       @R5,R5
    00000166 64F2                   MOV.L       @R15,R4
    00000168 6442                   MOV.L       @R4,R4
    0000016A 432B                   JMP         @R3
    0000016C 7F08                   ADD         #8,R15
    0000016E              L1096:                            
    0000016E 05AC                   .DATA.W     H'05AC
    00000170 <00000000>             .DATA.L     _symtab
    00000174 <00000000>             .DATA.L     __$h
    00000178 <00000000>             .DATA.L     _tos
    0000017C <00000000>             .DATA.L     _stack
    00000180 <00000000>             .DATA.L     _push
    00000184 <00000000>             .DATA.L     _cmp_expr
      variables.    61    }
B   00000000              __$h:                            ; static: h
    00000000 00000004               .RES.L      1
























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jul-2013 13:37:34  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       61



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000188 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000004 Byte(s)

 TOTAL PROGRAM SIZE: 0000018C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           11
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           1
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            27






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmkF038.tmp 

